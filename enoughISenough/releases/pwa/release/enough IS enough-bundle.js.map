{
    "version": 3,
    "sources": [
        "components/node_modules/gl-matrix/cjs/common.js",
        "components/node_modules/gl-matrix/cjs/mat2.js",
        "components/node_modules/gl-matrix/cjs/mat2d.js",
        "components/node_modules/gl-matrix/cjs/mat3.js",
        "components/node_modules/gl-matrix/cjs/mat4.js",
        "components/node_modules/gl-matrix/cjs/vec3.js",
        "components/node_modules/gl-matrix/cjs/vec4.js",
        "components/node_modules/gl-matrix/cjs/quat.js",
        "components/node_modules/gl-matrix/cjs/quat2.js",
        "components/node_modules/gl-matrix/cjs/vec2.js",
        "components/node_modules/gl-matrix/cjs/index.js",
        "components/8thwall-camera.js",
        "components/cursor-target.js",
        "components/cursor.js",
        "components/debug-object.js",
        "components/device-orientation-look.js",
        "components/finger-cursor.js",
        "components/fixed-foveation.js",
        "components/hand-tracking.js",
        "components/hit-test-location.js",
        "components/node_modules/howler/dist/howler.js",
        "components/howler-audio-listener.js",
        "components/howler-audio-source.js",
        "components/image-texture.js",
        "components/mouse-look.js",
        "components/target-framerate.js",
        "components/teleport.js",
        "components/two-joint-ik-solver.js",
        "components/video-texture.js",
        "components/vr-mode-active-switch.js",
        "components/wasd-controls.js",
        "components/wonderleap-ad.js",
        "components/index.js",
        "js/pp/pp.js",
        "js/pp/gameplay/grab_throw/grabbable.js",
        "js/pp/gameplay/grab_throw/grabber_hand.js",
        "js/pp/input/cauldron/finger_cursor.js",
        "js/pp/input/cauldron/hand_pose.js",
        "js/pp/input/cauldron/head_pose.js",
        "js/pp/input/cauldron/input_types.js",
        "js/pp/input/cauldron/input_utils.js",
        "js/pp/input/gamepad/gamepad.js",
        "js/pp/input/gamepad/gamepad_animator.js",
        "js/pp/input/gamepad/gamepad_manager.js",
        "js/pp/input/gamepad/gamepad_manager_component.js",
        "js/pp/input/gamepad/gamepad_utils.js",
        "js/test/test_add_rotation.js",
        "js/test/test_audio.js",
        "js/test/test_clone_mesh.js",
        "js/test/test_print_forward.js",
        "js/test/test_prototype.js",
        "js/test/test_rotate_object.js",
        "js/test/test_set_alpha.js",
        "js/test/test_trigger.js",
        "js/pp/cauldron/components/clear_console_on_session.js",
        "js/pp/cauldron/components/player_height.js",
        "js/pp/cauldron/components/set_hand_transform.js",
        "js/pp/cauldron/components/set_head_transform.js",
        "js/pp/cauldron/components/set_hierarchy_active.js",
        "js/pp/cauldron/utils/ca_utils.js",
        "js/pp/cauldron/utils/color_utils.js",
        "js/pp/cauldron/utils/mesh_utils.js",
        "js/pp/cauldron/utils/save_utils.js",
        "js/pp/cauldron/utils/text_utils.js",
        "js/pp/cauldron/utils/xr_utils.js",
        "js/pp/debug/debug_axes.js",
        "js/pp/debug/debug_global_data.js",
        "js/pp/debug/debug_line.js",
        "js/pp/cauldron/fsm/fsm.js",
        "js/pp/cauldron/fsm/state.js",
        "js/pp/cauldron/fsm/transition.js",
        "js/enoughISenough/enoughISenough.js",
        "js/enoughISenough/enoughISenough_gateway.js",
        "js/pp/tool/cauldron/components/tool_cursor.js",
        "js/pp/plugin/extensions/array_extension.js",
        "js/pp/plugin/extensions/float32array_extension.js",
        "js/pp/plugin/extensions/math_extension.js",
        "js/pp/plugin/extensions/object_extension.js",
        "js/pp/cauldron/cauldron/number_over_value.js",
        "js/pp/cauldron/cauldron/object_pool_manager.js",
        "js/pp/cauldron/cauldron/physx_collision_collector.js",
        "js/pp/cauldron/cauldron/save_manager.js",
        "js/pp/cauldron/cauldron/timer.js",
        "js/pp/audio/audio_listener.js",
        "js/pp/audio/audio_manager.js",
        "js/pp/audio/audio_manager_component.js",
        "js/pp/audio/audio_player.js",
        "js/pp/audio/audio_setup.js",
        "js/pp/audio/mute_all.js",
        "js/enoughISenough/cauldron/activate_on_select.js",
        "js/enoughISenough/cauldron/adjust_materials.js",
        "js/enoughISenough/cauldron/clear_console_on_session.js",
        "js/enoughISenough/cauldron/color_on_select.js",
        "js/enoughISenough/cauldron/credits_visualizer.js",
        "js/enoughISenough/cauldron/deactivate_on_first_update.js",
        "js/enoughISenough/cauldron/display_leaderboard.js",
        "js/enoughISenough/cauldron/eie_ca_dummy_server.js",
        "js/enoughISenough/cauldron/enable_debug_shortcuts.js",
        "js/enoughISenough/cauldron/evidence_objects.js",
        "js/enoughISenough/cauldron/fireworks.js",
        "js/enoughISenough/cauldron/game_object.js",
        "js/enoughISenough/cauldron/get_player_transform.js",
        "js/enoughISenough/cauldron/hand_animator.js",
        "js/enoughISenough/cauldron/light_fade_in.js",
        "js/enoughISenough/cauldron/material_container.js",
        "js/enoughISenough/cauldron/menu_objects.js",
        "js/enoughISenough/cauldron/mr_NOT_object.js",
        "js/enoughISenough/cauldron/mr_not_mirror.js",
        "js/enoughISenough/cauldron/not_enough.js",
        "js/enoughISenough/cauldron/palette_visualizer.js",
        "js/enoughISenough/cauldron/particles_manager.js",
        "js/enoughISenough/cauldron/physx_collector_component.js",
        "js/enoughISenough/cauldron/pulse_on_grab.js",
        "js/enoughISenough/cauldron/random_material.js",
        "js/enoughISenough/cauldron/ring_animator.js",
        "js/enoughISenough/cauldron/ring_sfx_on_collision.js",
        "js/enoughISenough/cauldron/set_fog_color.js",
        "js/enoughISenough/cauldron/set_specular_color.js",
        "js/enoughISenough/cauldron/statistics_manager.js",
        "js/enoughISenough/cauldron/statistics_text_displayer.js",
        "js/enoughISenough/cauldron/text_color_fog.js",
        "js/enoughISenough/cauldron/toggle_active.js",
        "js/enoughISenough/cauldron/top_down_view.js",
        "js/pp/tool/cauldron/cauldron/tool_types.js",
        "js/enoughISenough/main_fsm/arcade_state.js",
        "js/enoughISenough/main_fsm/intro_state.js",
        "js/enoughISenough/main_fsm/main_fsm.js",
        "js/enoughISenough/main_fsm/menu_state.js",
        "js/enoughISenough/main_fsm/show_title_state.js",
        "js/enoughISenough/main_fsm/trial_state.js",
        "js/pp/plugin/component_mods/clone_mod.js",
        "js/pp/plugin/component_mods/cursor_mod.js",
        "js/pp/plugin/component_mods/cursor_target_mod.js",
        "js/pp/tool/console_vr/console_vr.js",
        "js/pp/tool/console_vr/console_vr_widget.js",
        "js/pp/tool/console_vr/console_vr_widget_setup.js",
        "js/pp/tool/console_vr/console_vr_widget_ui.js",
        "js/pp/tool/widget_frame/widget_frame.js",
        "js/pp/tool/widget_frame/widget_frame_setup.js",
        "js/pp/tool/widget_frame/widget_frame_ui.js",
        "js/pp/tool/easy_tune/easy_object_tuner.js",
        "js/pp/tool/easy_tune/easy_tune.js",
        "js/pp/tool/easy_tune/easy_tune_variables.js",
        "js/pp/cauldron/fsm/states/timer_state.js",
        "js/enoughISenough/vent/arcade_result_state.js",
        "js/enoughISenough/vent/blather_state.js",
        "js/enoughISenough/vent/evidence.js",
        "js/enoughISenough/vent/evidence_component.js",
        "js/enoughISenough/vent/evidence_manager.js",
        "js/enoughISenough/vent/mr_NOT.js",
        "js/enoughISenough/vent/mr_NOT_clone.js",
        "js/enoughISenough/vent/mr_NOT_vent.js",
        "js/enoughISenough/vent/mr_NOT_vent_state.js",
        "js/enoughISenough/vent/pulse_radar.js",
        "js/enoughISenough/vent/timer_component.js",
        "js/enoughISenough/vent/vent.js",
        "js/enoughISenough/vent/vent_state.js",
        "js/plugin/zesty-wonderland-sdk-compat.js",
        "js/pp/tool/easy_tune/easy_object_tuners/easy_light_attenuation.js",
        "js/pp/tool/easy_tune/easy_object_tuners/easy_light_color.js",
        "js/pp/tool/easy_tune/easy_object_tuners/easy_mesh_color.js",
        "js/pp/tool/easy_tune/easy_object_tuners/easy_scale.js",
        "js/pp/tool/easy_tune/easy_object_tuners/easy_set_tune_target_child_number.js",
        "js/pp/tool/easy_tune/easy_object_tuners/easy_set_tune_target_grab.js",
        "js/pp/tool/easy_tune/easy_object_tuners/easy_text_color.js",
        "js/pp/tool/easy_tune/easy_object_tuners/easy_transform.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_bool_array_widget.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_bool_array_widget_setup.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_bool_array_widget_ui.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_bool_widget.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_none_widget.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_none_widget_setup.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_none_widget_ui.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_number_array_widget.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_number_array_widget_setup.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_number_array_widget_ui.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_number_widget.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_simple_transform_widget.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_simple_transform_widget_setup.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_simple_transform_widget_ui.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget.js",
        "js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget_setup.js",
        "js/pp/debug/components/debug_axes_component.js",
        "js/enoughISenough/vent/wave/i_am_here_wave.js",
        "js/enoughISenough/vent/wave/next_wave_chance_booster.js",
        "js/enoughISenough/vent/wave/next_wave_setup.js",
        "js/enoughISenough/vent/wave/value_over_time.js",
        "js/enoughISenough/vent/wave/wave_of_waves.js",
        "js/enoughISenough/vent/wave/zero_wave.js",
        "js/enoughISenough/vent/wave/sub/give_us_a_hug.js",
        "js/enoughISenough/vent/wave/sub/i_am_everywhere.js",
        "js/enoughISenough/vent/wave/sub/man_in_the_middle.js",
        "js/enoughISenough/vent/wave/sub/merry_go_round.js",
        "js/enoughISenough/vent/wave/sub/queue_for_you.js",
        "js/enoughISenough/vent/vent_setup/chat_vent_setup.js",
        "js/enoughISenough/vent/vent_setup/dispute_vent_setup.js",
        "js/enoughISenough/vent/vent_setup/first_trial_vent_setup.js",
        "js/enoughISenough/vent/vent_setup/second_trial_vent_setup.js",
        "js/enoughISenough/vent/vent_setup/third_trial_vent_setup.js"
    ],
    "sourcesContent": [
        "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\nexports.RANDOM = exports.ARRAY_TYPE = exports.EPSILON = void 0;\n\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nexports.EPSILON = EPSILON;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexports.ARRAY_TYPE = ARRAY_TYPE;\nvar RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexports.RANDOM = RANDOM;\n\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};",
        "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.str = str;\nexports.frob = frob;\nexports.LDU = LDU;\nexports.add = add;\nexports.subtract = subtract;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\n\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\n\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\n\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {ReadonlyMat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {ReadonlyMat2} L the lower triangular matrix\r\n * @param {ReadonlyMat2} D the diagonal matrix\r\n * @param {ReadonlyMat2} U the upper triangular matrix\r\n * @param {ReadonlyMat2} a the input matrix to factorize\r\n */\n\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;",
        "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.invert = invert;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.translate = translate;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromTranslation = fromTranslation;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b,\r\n *  c, d,\r\n *  tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\n\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\n\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\n\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;",
        "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.fromMat4 = fromMat4;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromMat2d = fromMat2d;\nexports.fromQuat = fromQuat;\nexports.normalFromMat4 = normalFromMat4;\nexports.projection = projection;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;",
        "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.fromTranslation = fromTranslation;\nexports.fromScaling = fromScaling;\nexports.fromRotation = fromRotation;\nexports.fromXRotation = fromXRotation;\nexports.fromYRotation = fromYRotation;\nexports.fromZRotation = fromZRotation;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromQuat2 = fromQuat2;\nexports.getTranslation = getTranslation;\nexports.getScaling = getScaling;\nexports.getRotation = getRotation;\nexports.fromRotationTranslationScale = fromRotationTranslationScale;\nexports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\nexports.fromQuat = fromQuat;\nexports.frustum = frustum;\nexports.perspective = perspective;\nexports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\nexports.ortho = ortho;\nexports.lookAt = lookAt;\nexports.targetTo = targetTo;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sub = exports.mul = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\n\nfunction fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\n\nfunction getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\n\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\n\nfunction str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar sub = subtract;\nexports.sub = sub;",
        "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;",
        "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformQuat = transformQuat;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\n\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;",
        "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.identity = identity;\nexports.setAxisAngle = setAxisAngle;\nexports.getAxisAngle = getAxisAngle;\nexports.getAngle = getAngle;\nexports.multiply = multiply;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.calculateW = calculateW;\nexports.exp = exp;\nexports.ln = ln;\nexports.pow = pow;\nexports.slerp = slerp;\nexports.random = random;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.fromMat3 = fromMat3;\nexports.fromEuler = fromEuler;\nexports.str = str;\nexports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\n\nfunction getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\n\nvar clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexports.clone = clone;\nvar fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.fromValues = fromValues;\nvar copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.copy = copy;\nvar set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.set = set;\nvar add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexports.add = add;\nvar mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.mul = mul;\nvar scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexports.scale = scale;\nvar dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.dot = dot;\nvar lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexports.lerp = lerp;\nvar length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\nvar normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.normalize = normalize;\nvar exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.exactEquals = exactEquals;\nvar equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexports.equals = equals;\n\nvar rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nexports.rotationTo = rotationTo;\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\n\nexports.sqlerp = sqlerp;\n\nvar setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\nexports.setAxes = setAxes;",
        "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.fromRotationTranslationValues = fromRotationTranslationValues;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromMat4 = fromMat4;\nexports.copy = copy;\nexports.identity = identity;\nexports.set = set;\nexports.getDual = getDual;\nexports.setDual = setDual;\nexports.getTranslation = getTranslation;\nexports.translate = translate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotateByQuatAppend = rotateByQuatAppend;\nexports.rotateByQuatPrepend = rotateByQuatPrepend;\nexports.rotateAroundAxis = rotateAroundAxis;\nexports.add = add;\nexports.multiply = multiply;\nexports.scale = scale;\nexports.lerp = lerp;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.normalize = normalize;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.dot = exports.mul = exports.setReal = exports.getReal = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\nfunction create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q a normalized quaternion\r\n * @param {ReadonlyVec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyVec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {ReadonlyMat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\n\nvar getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexports.getReal = getReal;\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nvar setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.setReal = setReal;\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\n\nvar mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.mul = mul;\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\n\nvar dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexports.dot = dot;\n\nfunction lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\n\nfunction invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\n\nvar length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nfunction normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\n\nfunction str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quaternion.\r\n * @param {ReadonlyQuat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quat.\r\n * @param {ReadonlyQuat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}",
        "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.rotate = rotate;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\n\nvar len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexports.len = len;\nvar sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;",
        "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vec4 = exports.vec3 = exports.vec2 = exports.quat2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nexports.glMatrix = glMatrix;\n\nvar mat2 = _interopRequireWildcard(require(\"./mat2.js\"));\n\nexports.mat2 = mat2;\n\nvar mat2d = _interopRequireWildcard(require(\"./mat2d.js\"));\n\nexports.mat2d = mat2d;\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nexports.mat3 = mat3;\n\nvar mat4 = _interopRequireWildcard(require(\"./mat4.js\"));\n\nexports.mat4 = mat4;\n\nvar quat = _interopRequireWildcard(require(\"./quat.js\"));\n\nexports.quat = quat;\n\nvar quat2 = _interopRequireWildcard(require(\"./quat2.js\"));\n\nexports.quat2 = quat2;\n\nvar vec2 = _interopRequireWildcard(require(\"./vec2.js\"));\n\nexports.vec2 = vec2;\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nexports.vec3 = vec3;\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nexports.vec4 = vec4;\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }",
        "/**\r\n * Sets up the 8thwall pipeline and retrieves tracking events to place an\r\n * object at the location of the tracked AR camera / mobile device.\r\n *\r\n * Use this for SLAM tracking based on 8thwall.\r\n *\r\n * Make sure to enable 8thwall in \"Project Settings\" > \"AR\". See also the\r\n * [AR Getting Started Guide](/getting-started/quick-start-ar). */\r\nWL.registerComponent('8thwall-camera', {\r\n    /** Choose front/back camera */\r\n    camera: {type: WL.Type.Enum, values: ['auto', 'back', 'front'], default: 'auto'},\r\n}, {\r\n    name: 'wonderland-engine',\r\n\r\n    init: function() {\r\n        this.position = [0, 0, 0, 0];\r\n        this.rotation = [0, 0, 0, 0];\r\n        this.started = false;\r\n\r\n        const vals = ['auto', 'back', 'front'];\r\n        this.camera = vals[this.camera];\r\n        if(this.camera == 'auto') {\r\n            this.camera = 'back';\r\n        }\r\n\r\n        this.onStart = this.onStart.bind(this);\r\n        this.onUpdate = this.onUpdate.bind(this);\r\n\r\n        XR8.addCameraPipelineModules([\r\n            /* Draw the camera feed */\r\n            XR8.GlTextureRenderer.pipelineModule(),\r\n            XR8.XrController.pipelineModule(),\r\n            this,\r\n        ]);\r\n\r\n        if(this.camera == 'back') {\r\n            XR8.run({canvas: Module['canvas'], ownRunLoop: false});\r\n\r\n        } else if(this.camera == 'back') {\r\n            XR8.XrController.configure({disableWorldTracking: true});\r\n            XR8.run({canvas: Module['canvas'], ownRunLoop: false, cameraConfig: {\r\n                direction: XR8.XrConfig.camera().FRONT\r\n            }});\r\n        } else {\r\n            console.error(\"[8thwall-camera] Invalid camera setting:\", this.camera);\r\n        }\r\n    },\r\n\r\n    update: function() {\r\n        if(this.started) {\r\n            if(WL.scene.onPostRender.length == 0) {\r\n                WL.scene.onPreRender.push(function() {\r\n                    XR8.runPreRender(Date.now());\r\n                    _wl_reset_context();\r\n                });\r\n                WL.scene.onPostRender.push(function() {\r\n                    XR8.runPostRender(Date.now());\r\n                    //_wl_reset_context();\r\n                });\r\n            }\r\n\r\n            if(this.rotation[0] == 0 && this.rotation[1] == 0 &&\r\n                this.rotation[2] == 0 && this.rotation[3] == 0) {\r\n                return;\r\n            }\r\n\r\n            /* Apply the transform retrieved from 8thwall */\r\n            this.object.resetTransform();\r\n            this.object.rotate(this.rotation);\r\n            this.object.translate(this.position);\r\n        }\r\n    },\r\n\r\n    /* XR8 CameraPipelineModule functions\r\n     * See: https://www.8thwall.com/docs/web/#camerapipelinemodule */\r\n    onUpdate: function(data) {\r\n        if (!data.processCpuResult.reality) return;\r\n        let r = data.processCpuResult.reality.rotation;\r\n        this.rotation[0] = r.x;\r\n        this.rotation[1] = r.y;\r\n        this.rotation[2] = r.z;\r\n        this.rotation[3] = r.w;\r\n        let p = data.processCpuResult.reality.position;\r\n        this.position[0] = p.x;\r\n        this.position[1] = p.y;\r\n        this.position[2] = p.z;\r\n    },\r\n\r\n    onStart: function() {\r\n        this.started = true;\r\n    }\r\n});\r\n",
        "/**\r\n * Click/hover/move/button target for [cursor](#cursor).\r\n *\r\n * To trigger code when clicking, hovering, unhovering, moving cursor, pressing\r\n * cursor button or releasing cursor button, use `.addClickFunction(f)`,\r\n * `.addHoverFunction(f)`, `.addUnHoverFunction(f)`,\r\n * `.addMoveFunction(f)`, `.addDownFunction(f)` and\r\n * `.addUpFunction(f)` respectively with any `function f() {}`.\r\n *\r\n * To call members on a different component, you can set up a cursor target like\r\n * so:\r\n *\r\n * ```js\r\n * start: function() {\r\n *   let target = this.object.addComponent('cursor-target');\r\n *   target.addClickFunction(this.onClick.bind(this));\r\n * },\r\n * onClick: function() {\r\n *   console.log(this.object.name, \"was clicked!\");\r\n * }\r\n * ```\r\n * **Functions:**\r\n *\r\n * ```js\r\n * callback = function(object, cursorComponent) {};\r\n *\r\n * addHoverFunction(callback);\r\n * removeHoverFunction(callback);\r\n *\r\n * addUnHoverFunction(callback);\r\n * removeUnHoverFunction(callback);\r\n *\r\n * addClickFunction(callback);\r\n * removeClickFunction(callback);\r\n *\r\n * addMoveFunction(callback);\r\n * removeMoveFunction(callback);\r\n *\r\n * addDownFunction(callback);\r\n * removeDownFunction(callback);\r\n *\r\n * addUpFunction(callback);\r\n * removeUpFunction(callback);\r\n * ```\r\n *\r\n * **Requirements:**\r\n * - a `collision` component to be attached to the same object.\r\n *\r\n * See [Animation Example](/showcase/animation).\r\n */\r\nWL.registerComponent(\"cursor-target\", {\r\n  }, {\r\n    init: function () {\r\n      this.hoverFunctions = [];\r\n      this.unHoverFunctions = [];\r\n      this.clickFunctions = [];\r\n      this.moveFunctions = [];\r\n      this.downFunctions = [];\r\n      this.upFunctions = [];\r\n    },\r\n    onHover: function(object, cursor) {\r\n        for(let f of this.hoverFunctions) f(object, cursor);\r\n    },\r\n    onUnhover: function(object, cursor) {\r\n        for(let f of this.unHoverFunctions) f(object, cursor);\r\n    },\r\n    onClick: function(object, cursor) {\r\n        for(let f of this.clickFunctions) f(object, cursor);\r\n    },\r\n    onMove: function(object, cursor) {\r\n        for(let f of this.moveFunctions) f(object, cursor);\r\n    },\r\n    onDown: function(object, cursor) {\r\n        for(let f of this.downFunctions) f(object, cursor);\r\n    },\r\n    onUp: function(object, cursor) {\r\n        for(let f of this.upFunctions) f(object, cursor);\r\n    },\r\n    addHoverFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this.hoverFunctions.push(f);\r\n    },\r\n    removeHoverFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.hoverFunctions, f);\r\n    },\r\n    addUnHoverFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this.unHoverFunctions.push(f);\r\n    },\r\n    removeUnHoverFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.unHoverFunctions, f);\r\n    },\r\n    addClickFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this.clickFunctions.push(f);\r\n    },\r\n    removeClickFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.clickFunctions, f);\r\n    },\r\n    addMoveFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this.moveFunctions.push(f);\r\n    },\r\n    removeMoveFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.moveFunctions, f);\r\n    },\r\n    addDownFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this.downFunctions.push(f);\r\n    },\r\n    removeDownFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.downFunctions, f);\r\n    },\r\n    addUpFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this.upFunctions.push(f);\r\n    },\r\n    removeUpFunction: function(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.upFunctions, f);\r\n    },\r\n\r\n    _removeItemOnce: function(arr, value) {\r\n        var index = arr.indexOf(value);\r\n        if(index > -1) arr.splice(index, 1);\r\n        return arr;\r\n    },\r\n    _validateCallback: function(f) {\r\n        if(typeof f !== \"function\") {\r\n            throw new TypeError(this.object.name\r\n                + \".cursor-target: Argument needs to be a function\");\r\n        }\r\n    },\r\n});\r\n\r\n",
        "import {vec3, mat4} from 'gl-matrix';\r\n/**\r\n * 3D cursor for desktop/mobile/VR.\r\n *\r\n * Implements a ray-casting cursor into the scene. To react to\r\n * clicking/hover/unhover/cursor down/cursor up/move use a\r\n * [cursor-target](#cursor-target).\r\n *\r\n * For VR, the ray is cast in direction of\r\n * [this.object.getForward()](/jsapi/object/#getforward). For desktop and mobile, the\r\n * forward vector is inverse-projected to account for where on screen the user clicked.\r\n *\r\n * `.globalTarget` can be used to call callbacks for all objects, even those that\r\n * do not have a cursor target attached, but match the collision group.\r\n *\r\n * See [Animation Example](/showcase/animation).\r\n */\r\nWL.registerComponent('cursor', {\r\n    /** Collision group for the ray cast. Only objects in this group will be affected by this cursor. */\r\n    collisionGroup: {type: WL.Type.Int, default: 1},\r\n    /** (optional) Object that visualizes the cursor's ray. */\r\n    cursorRayObject: {type: WL.Type.Object},\r\n    /** Axis along which to scale the `cursorRayObject`. */\r\n    cursorRayScalingAxis: {type: WL.Type.Enum, values: ['x', 'y', 'z', 'none'], default: 'z'},\r\n    /** (optional) Object that visualizes the cursor's hit location. */\r\n    cursorObject: {type: WL.Type.Object},\r\n    /** Handedness for VR cursors to accept trigger events only from respective controller. */\r\n    handedness: {type: WL.Type.Enum, values: ['input component', 'left', 'right', 'none'], default: 'input component'},\r\n    /** Mode for raycasting, whether to use PhysX or simple collision components */\r\n    rayCastMode: {type: WL.Type.Enum, values: ['collision', 'physx'], default: 'collision'},\r\n    /** Whether to set the CSS style of the mouse cursor on desktop */\r\n    styleCursor: {type: WL.Type.Bool, default: true},\r\n  }, {\r\n    init: function() {\r\n        /* VR session cache, in case in VR */\r\n        this.session = null;\r\n        this.collisionMask = (1 << this.collisionGroup);\r\n        this.maxDistance = 100;\r\n    },\r\n    start: function() {\r\n        if(this.handedness == 0) {\r\n            const inputComp = this.object.getComponent('input');\r\n            if(!inputComp) {\r\n                console.warn('cursor component on object', this.object.name,\r\n                    'was configured with handedness \"input component\", ' +\r\n                    'but object has no input component.');\r\n            } else {\r\n                this.handedness = inputComp.handedness;\r\n                this.input = inputComp;\r\n            }\r\n        } else {\r\n            this.handedness = ['left', 'right'][this.handedness - 1];\r\n        }\r\n\r\n        this.globalTarget = this.object.addComponent('cursor-target');\r\n\r\n        this.origin = new Float32Array(3);\r\n        this.cursorObjScale = new Float32Array(3);\r\n        this.direction = [0, 0, 0];\r\n        this.tempQuat = new Float32Array(4);\r\n        this.viewComponent = this.object.getComponent(\"view\");\r\n        /* If this object also has a view component, we will enable inverse-projected mouse clicks,\r\n         * otherwise just use the objects transformation */\r\n        if(this.viewComponent != null) {\r\n            WL.canvas.addEventListener(\"click\", this.onClick.bind(this));\r\n            WL.canvas.addEventListener(\"pointermove\", this.onPointerMove.bind(this));\r\n            WL.canvas.addEventListener(\"pointerdown\", this.onPointerDown.bind(this));\r\n            WL.canvas.addEventListener(\"pointerup\", this.onPointerUp.bind(this));\r\n\r\n            this.projectionMatrix = new Float32Array(16);\r\n            mat4.invert(this.projectionMatrix, this.viewComponent.projectionMatrix);\r\n            window.addEventListener(\"resize\", this.onViewportResize.bind(this));\r\n        }\r\n        this.isHovering = false;\r\n        this.visible = true;\r\n        this.isDown = false;\r\n        this.lastIsDown = false;\r\n\r\n        this.cursorPos = new Float32Array(3);\r\n        this.hoveringObject = null;\r\n\r\n        WL.onXRSessionStart.push(this.setupVREvents.bind(this));\r\n\r\n        if(this.cursorRayObject) {\r\n            this.cursorRayScale = new Float32Array(3);\r\n            this.cursorRayScale.set(this.cursorRayObject.scalingLocal);\r\n\r\n            /* Set ray to a good default distance of the cursor of 1m */\r\n            this.object.getTranslationWorld(this.origin);\r\n            this.object.getForward(this.direction);\r\n            this._setCursorRayTransform([\r\n                this.origin[0] + this.direction[0],\r\n                this.origin[1] + this.direction[1],\r\n                this.origin[2] + this.direction[2]]);\r\n        }\r\n    },\r\n    onViewportResize: function() {\r\n        if(!this.viewComponent) return;\r\n        /* Projection matrix will change if the viewport is resized, which will affect the\r\n         * projection matrix because of the aspect ratio. */\r\n        mat4.invert(this.projectionMatrix, this.viewComponent.projectionMatrix);\r\n    },\r\n\r\n    _setCursorRayTransform: function(hitPosition) {\r\n        if(!this.cursorRayObject) return;\r\n        const dist = vec3.dist(this.origin, hitPosition);\r\n        this.cursorRayObject.setTranslationLocal([0.0, 0.0, -dist / 2]);\r\n        if(this.cursorRayScalingAxis != 4) {\r\n            this.cursorRayObject.resetScaling();\r\n            this.cursorRayScale[this.cursorRayScalingAxis] = dist/2;\r\n            this.cursorRayObject.scale(this.cursorRayScale);\r\n        }\r\n    },\r\n\r\n    _setCursorVisibility: function(visible) {\r\n        if(this.visible == visible) return;\r\n        this.visible = visible;\r\n        if(!this.cursorObject) return;\r\n\r\n        if(visible) {\r\n            this.cursorObject.resetScaling();\r\n            this.cursorObject.scale(this.cursorObjScale);\r\n        } else {\r\n            this.cursorObjScale.set(this.cursorObject.scalingLocal);\r\n            this.cursorObject.scale([0, 0, 0]);\r\n        }\r\n    },\r\n\r\n    update: function() {\r\n        this.doUpdate(false);\r\n    },\r\n\r\n    doUpdate: function(doClick) {\r\n        /* If in VR, set the cursor ray based on object transform */\r\n        if(this.session) {\r\n            /* Since Google Cardboard tap is registered as arTouchDown without a gamepad, we need to check for gamepad presence */\r\n            if(this.arTouchDown && this.input && WL.xrSession.inputSources[0].handedness === 'none' && WL.xrSession.inputSources[0].gamepad) {\r\n                const p = WL.xrSession.inputSources[0].gamepad.axes;\r\n                /* Screenspace Y is inverted */\r\n                this.direction = [p[0], -p[1], -1.0];\r\n                this.updateDirection();\r\n            } else {\r\n                this.object.getTranslationWorld(this.origin);\r\n                this.object.getForward(this.direction);\r\n            }\r\n            const rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n                WL.scene.rayCast(this.origin, this.direction, this.collisionMask) :\r\n                WL.physics.rayCast(this.origin, this.direction, this.collisionMask, this.maxDistance);\r\n\r\n            if(rayHit.hitCount > 0) {\r\n                this.cursorPos.set(rayHit.locations[0]);\r\n            } else {\r\n                this.cursorPos.fill(0);\r\n            }\r\n\r\n            this.hoverBehaviour(rayHit, doClick);\r\n        }\r\n\r\n        if(this.cursorObject) {\r\n            if(this.hoveringObject && (this.cursorPos[0] != 0 || this.cursorPos[1] != 0 || this.cursorPos[2] != 0)) {\r\n                this._setCursorVisibility(true);\r\n                this.cursorObject.setTranslationWorld(this.cursorPos);\r\n                this._setCursorRayTransform(this.cursorPos);\r\n            } else {\r\n                this._setCursorVisibility(false);\r\n            }\r\n        }\r\n    },\r\n\r\n    hoverBehaviour: function(rayHit, doClick) {\r\n        if(rayHit.hitCount > 0) {\r\n            if(!this.hoveringObject || !this.hoveringObject.equals(rayHit.objects[0])) {\r\n                /* Unhover previous, if exists */\r\n                if(this.hoveringObject) {\r\n                    const cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n                    if(cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n                    this.globalTarget.onUnhover(this.hoveringObject, this);\r\n                }\r\n\r\n                /* Hover new object */\r\n                this.hoveringObject = rayHit.objects[0];\r\n                if(this.styleCursor) WL.canvas.style.cursor = \"pointer\";\r\n\r\n                let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n                if(cursorTarget) {\r\n                    this.hoveringObjectTarget = cursorTarget;\r\n                    cursorTarget.onHover(this.hoveringObject, this);\r\n                }\r\n                this.globalTarget.onHover(this.hoveringObject, this);\r\n            }\r\n\r\n            if(this.hoveringObjectTarget) {\r\n                this.hoveringObjectTarget.onMove(this.hoveringObject, this);\r\n            }\r\n\r\n            /* Cursor up/down */\r\n            const cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n            if(this.isDown !== this.lastIsDown) {\r\n                if(this.isDown) {\r\n                    /* Down */\r\n                    if(cursorTarget) cursorTarget.onDown(this.hoveringObject, this);\r\n                    this.globalTarget.onDown(this.hoveringObject, this);\r\n                } else {\r\n                    /* Up */\r\n                    if(cursorTarget) cursorTarget.onUp(this.hoveringObject, this);\r\n                    this.globalTarget.onUp(this.hoveringObject, this);\r\n                }\r\n            }\r\n\r\n            /* Click */\r\n            if(doClick) {\r\n                if(cursorTarget) cursorTarget.onClick(this.hoveringObject, this);\r\n                this.globalTarget.onClick(this.hoveringObject, this);\r\n            }\r\n        } else if(this.hoveringObject && rayHit.hitCount == 0) {\r\n            const cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n            if(cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n            this.globalTarget.onUnhover(this.hoveringObject, this);\r\n            this.hoveringObject = null;\r\n            this.hoveringObjectTarget = null;\r\n            if(this.styleCursor) WL.canvas.style.cursor = \"default\";\r\n        }\r\n\r\n        this.lastIsDown = this.isDown;\r\n    },\r\n\r\n    /**\r\n     * Setup event listeners on session object\r\n     * @param s WebXR session\r\n     *\r\n     * Sets up 'select' and 'end' events and caches the session to avoid\r\n     * Module object access.\r\n     */\r\n    setupVREvents: function(s) {\r\n        /* If in VR, one-time bind the listener */\r\n        this.session = s;\r\n        s.addEventListener('end', function(e) {\r\n            /* Reset cache once the session ends to rebind select etc, in case\r\n             * it starts again */\r\n            this.session = null;\r\n        }.bind(this));\r\n\r\n        s.addEventListener('select', this.onSelect.bind(this));\r\n        s.addEventListener('selectstart', this.onSelectStart.bind(this));\r\n        s.addEventListener('selectend', this.onSelectEnd.bind(this));\r\n\r\n        /* After AR session was entered, the projection matrix changed */\r\n        this.onViewportResize();\r\n    },\r\n\r\n    /** 'select' event listener */\r\n    onSelect: function(e) {\r\n        if(e.inputSource.handedness != this.handedness) return;\r\n        this.doUpdate(true);\r\n    },\r\n\r\n    /** 'selectstart' event listener */\r\n    onSelectStart: function(e) {\r\n        this.arTouchDown = true;\r\n        if(e.inputSource.handedness == this.handedness) this.isDown = true;\r\n    },\r\n\r\n    /** 'selectend' event listener */\r\n    onSelectEnd: function(e) {\r\n        this.arTouchDown = false;\r\n        if(e.inputSource.handedness == this.handedness) this.isDown = false;\r\n    },\r\n\r\n    /** 'pointermove' event listener */\r\n    onPointerMove: function (e) {\r\n        /* Don't care about secondary pointers */\r\n        if(!e.isPrimary) return;\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n\r\n        this.hoverBehaviour(rayHit, false);\r\n    },\r\n\r\n    /** 'click' event listener */\r\n    onClick: function (e) {\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n        this.hoverBehaviour(rayHit, true);\r\n    },\r\n\r\n    /** 'pointerdown' event listener */\r\n    onPointerDown: function (e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if(!e.isPrimary || e.button !== 0) return;\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n        this.isDown = true;\r\n\r\n        this.hoverBehaviour(rayHit, false);\r\n    },\r\n\r\n    /** 'pointerup' event listener */\r\n    onPointerUp: function (e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if(!e.isPrimary || e.button !== 0) return;\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n        this.isDown = false;\r\n\r\n        this.hoverBehaviour(rayHit, false);\r\n    },\r\n\r\n    /**\r\n     * Update mouse position in non-VR mode and raycast for new position\r\n     * @returns @ref WL.RayHit for new position.\r\n     */\r\n    updateMousePos: function(clientX, clientY, w, h) {\r\n        /* Get direction in normalized device coordinate space from mouse position */\r\n        const left = clientX/w;\r\n        const top = clientY/h;\r\n        this.direction = [left*2 - 1, -top*2 + 1, -1.0];\r\n        return this.updateDirection();\r\n    },\r\n\r\n    updateDirection: function() {\r\n        this.object.getTranslationWorld(this.origin);\r\n\r\n        /* Reverse-project the direction into view space */\r\n        vec3.transformMat4(this.direction, this.direction,\r\n            this.projectionMatrix);\r\n        vec3.normalize(this.direction, this.direction);\r\n        vec3.transformQuat(this.direction, this.direction, this.object.transformWorld);\r\n        const rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n            WL.scene.rayCast(this.origin, this.direction, this.collisionMask) :\r\n            WL.physics.rayCast(this.origin, this.direction, this.collisionMask, this.maxDistance);\r\n\r\n        if(rayHit.hitCount > 0) {\r\n            this.cursorPos.set(rayHit.locations[0]);\r\n        } else {\r\n            this.cursorPos.fill(0);\r\n        }\r\n\r\n        return rayHit;\r\n    },\r\n\r\n    onDeactivate: function() {\r\n        this._setCursorVisibility(false);\r\n        if(this.hoveringObject) {\r\n            const target = this.hoveringObject.getComponent('cursor-target');\r\n            if(target) target.onUnhover(this.hoveringObject, this);\r\n            this.globalTarget.onUnhover(this.hoveringObject, this);\r\n        }\r\n        if(this.cursorRayObject) this.cursorRayObject.scale([0, 0, 0]);\r\n    },\r\n\r\n    onActivate: function() {\r\n        this._setCursorVisibility(true);\r\n    },\r\n});\r\n",
        "/**\r\n * Prints some limited debug information about the object.\r\n *\r\n * Information consists of: This object's name, an object parameter's name,\r\n * the object's world translation, world transform and local transform.\r\n *\r\n * Mainly used by engine developers for debug purposes or as example code.\r\n */\r\nWL.registerComponent('debug-object', {\r\n    /** A second object to print the name of */\r\n    obj: {type: WL.Type.Object}\r\n}, {\r\n    start: function() {\r\n    },\r\n    init: function() {\r\n        let origin = [0, 0, 0];\r\n        glMatrix.quat2.getTranslation(origin, this.object.transformWorld);\r\n        console.log(\"Debug Object:\", this.object.name);\r\n        console.log(\"Other object:\", this.obj.name);\r\n        console.log(\"\\ttranslation\", origin);\r\n        console.log(\"\\ttransformWorld\", this.object.transformWorld);\r\n        console.log(\"\\ttransformLocal\", this.object.transformLocal);\r\n    },\r\n    update: function() {}\r\n});\r\n",
        "/**\r\n * Function to convert a Euler in YXZ order to a quaternion\r\n */\r\nfunction quatFromEulerYXZ (out, x, y, z) {\r\n    const c1 = Math.cos(x/2);\r\n    const c2 = Math.cos(y/2);\r\n    const c3 = Math.cos(z/2);\r\n\r\n    const s1 = Math.sin(x/2);\r\n    const s2 = Math.sin(y/2);\r\n    const s3 = Math.sin(z/2);\r\n\r\n    out[0] = s1*c2*c3 + c1*s2*s3;\r\n    out[1] = c1*s2*c3 - s1*c2*s3;\r\n    out[2] = c1*c2*s3 - s1*s2*c3;\r\n    out[3] = c1*c2*c3 + s1*s2*s3;\r\n};\r\n\r\n/**\r\n * Retrieve device orientation from a mobile device and set the object's\r\n * orientation accordingly.\r\n *\r\n * Useful for magic window experiences.\r\n */\r\nWL.registerComponent('device-orientation-look', {\r\n}, {\r\n    start: function() {\r\n        this.rotationX = 0;\r\n        this.rotationY = 0;\r\n\r\n        this.lastClientX = -1;\r\n        this.lastClientY = -1;\r\n    },\r\n    init: function() {\r\n        /* Initialize device orientation with Identity Quaternion */\r\n        this.deviceOrientation = [0, 0, 0, 1];\r\n        this.screenOrientation = 0;\r\n        this._origin = [0, 0, 0];\r\n\r\n        window.addEventListener('deviceorientation',function(e) {\r\n            let alpha = e.alpha || 0;\r\n            let beta = e.beta || 0;\r\n            let gamma = e.gamma || 0;\r\n            const toRad = Math.PI/180;\r\n            quatFromEulerYXZ(this.deviceOrientation, beta*toRad, alpha*toRad, -gamma*toRad);\r\n        }.bind(this));\r\n\r\n        window.addEventListener('orientationchange', function(e) {\r\n            this.screenOrientation = window.orientation || 0;\r\n        }.bind(this), false);\r\n    },\r\n\r\n    update: function() {\r\n        /* Don't use device orientation in VR */\r\n        if(Module['webxr_session'] != null) return;\r\n\r\n        glMatrix.quat2.getTranslation(this._origin, this.object.transformLocal);\r\n\r\n        this.object.resetTransform();\r\n        if(this.screenOrientation != 0) {\r\n            this.object.rotateAxisAngleDeg([0, 0, 1], this.screenOrientation);\r\n        }\r\n        this.object.rotate([-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)]);\r\n        this.object.rotate(this.deviceOrientation);\r\n        this.object.translate(this._origin);\r\n    }\r\n});\r\n",
        "/**\r\n * Enables interaction with cursor-targets through collision overlaps,\r\n * e.g. on the tip of a finger on a tracked hand.\r\n *\r\n * **Requirements:**\r\n *  - A collision component (usually a sphere with `0.05` radius) on the same object\r\n *\r\n * @since 0.8.5\r\n */\r\nWL.registerComponent('finger-cursor', {\r\n}, {\r\n    init: function() {\r\n        this.lastTarget = null;\r\n    },\r\n    start: function() {\r\n        this.tip = this.object.getComponent('collision');\r\n    },\r\n    update: function() {\r\n        const overlaps = this.tip.queryOverlaps();\r\n\r\n        let overlapFound = null;\r\n        for(let i = 0; i < overlaps.length; ++i) {\r\n            const o = overlaps[i].object;\r\n            const target = o.getComponent('cursor-target');\r\n            if(target) {\r\n                if(!target.equals(this.lastTarget)) {\r\n                    target.onHover(o, this);\r\n                    target.onClick(o, this);\r\n                }\r\n                overlapFound = target;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!overlapFound) {\r\n            if(this.lastTarget) this.lastTarget.onUnhover(this.lastTarget.object, this);\r\n            this.lastTarget = null;\r\n            return;\r\n        } else {\r\n            this.lastTarget = overlapFound;\r\n        }\r\n    },\r\n});\r\n",
        "/**\r\n * Applies [fixed foveation](https://www.w3.org/TR/webxrlayers-1/#dom-xrcompositionlayer-fixedfoveation)\r\n * once a WebXR session is started\r\n *\r\n * Fixed foveation reduces shading cost at the periphery by rendering at lower resolutions at the\r\n * edges of the users vision.\r\n */\r\nWL.registerComponent('fixed-foveation', {\r\n    /** Amount to apply from 0 (none) to 1 (full) */\r\n    fixedFoveation: {type: WL.Type.Float, default: 0.5},\r\n}, {\r\n    start: function() {\r\n        if(WL.xrSession) {\r\n            this.setFixedFoveation();\r\n        } else {\r\n            WL.onXRSessionStart.push(this.setFixedFoveation.bind(this));\r\n        }\r\n    },\r\n    setFixedFoveation: function() {\r\n        if('webxr_baseLayer' in Module) {\r\n            Module.webxr_baseLayer.fixedFoveation = this.fixedFoveation;\r\n        }\r\n    },\r\n});\r\n",
        "import {vec3,quat,quat2} from 'gl-matrix';\r\n/**\r\n * Easy hand tracking through the WebXR Device API\r\n * [\"Hand Input\" API](https://immersive-web.github.io/webxr-hand-input/).\r\n *\r\n * Allows displaying hands either as sphere-joints or skinned mesh.\r\n *\r\n * To react to grabbing, use `this.isGrabbing()`. For other gestures, refer\r\n * to `this.joints` - an array of [WL.Object](/jsapi/object) and use the joint\r\n * indices listed [in the WebXR Hand Input specification](https://immersive-web.github.io/webxr-hand-input/#skeleton-joints-section).\r\n *\r\n * It is often desired to use either hand tracking or controllers, not both.\r\n * This component provides `deactivateChildrenWithoutPose` to hide the hand\r\n * tracking visualization if no pose is available and `controllerToDeactivate`\r\n * for disabling another object once a hand tracking pose *is* available.\r\n * Outside of XR sessions, tracking or controllers are neither enabled nor disabled\r\n * to play well with the [vr-mode-active-switch](#vr-mode-active-switch) component.\r\n *\r\n * **Requirements:**\r\n *  - To use hand-tracking, enable \"joint tracking\" in `chrome://flags` on\r\n *    Oculus Browser for Oculus Quest/Oculus Quest 2.\r\n *\r\n * See [Hand Tracking Example](/showcase/hand-tracking).\r\n */\r\nWL.registerComponent('hand-tracking', {\r\n    /** Handedness determining whether to receive tracking input from right or left hand */\r\n    handedness: {type: WL.Type.Enum, default: 'left', values: ['left', 'right']},\r\n    /** (optional) Mesh to use to visualize joints */\r\n    jointMesh: {type: WL.Type.Mesh, default: null},\r\n    /** Material to use for display. Applied to either the spawned skinned mesh or the joint spheres. */\r\n    jointMaterial: {type: WL.Type.Material, default: null},\r\n    /** (optional) Skin to apply tracked joint poses to. If not present, joint spheres will be used for display instead. */\r\n    handSkin: {type: WL.Type.Skin, default: null},\r\n    /** Deactivate children if no pose was tracked */\r\n    deactivateChildrenWithoutPose: {type: WL.Type.Bool, default: true},\r\n    /** Controller objects to activate including children if no pose is available */\r\n    controllerToDeactivate: {type: WL.Type.Object},\r\n}, {\r\n    ORDERED_JOINTS: [\r\n        \"wrist\",\r\n        \"thumb-metacarpal\", \"thumb-phalanx-proximal\", \"thumb-phalanx-distal\", \"thumb-tip\",\r\n        \"index-finger-metacarpal\", \"index-finger-phalanx-proximal\", \"index-finger-phalanx-intermediate\", \"index-finger-phalanx-distal\", \"index-finger-tip\",\r\n        \"middle-finger-metacarpal\", \"middle-finger-phalanx-proximal\", \"middle-finger-phalanx-intermediate\", \"middle-finger-phalanx-distal\", \"middle-finger-tip\",\r\n        \"ring-finger-metacarpal\", \"ring-finger-phalanx-proximal\", \"ring-finger-phalanx-intermediate\", \"ring-finger-phalanx-distal\", \"ring-finger-tip\",\r\n        \"pinky-finger-metacarpal\", \"pinky-finger-phalanx-proximal\", \"pinky-finger-phalanx-intermediate\", \"pinky-finger-phalanx-distal\", \"pinky-finger-tip\"\r\n    ],\r\n    init: function() {\r\n        this.handedness = ['left', 'right'][this.handedness];\r\n    },\r\n    start: function() {\r\n        this.joints = [];\r\n        this.session = null;\r\n        /* Whether last update had a hand pose */\r\n        this.hasPose = false;\r\n        this._childrenActive = true;\r\n\r\n        if(!('XRHand' in window)) {\r\n            console.warn(\"WebXR Hand Tracking not supported by this browser.\");\r\n            this.active = false;\r\n            return;\r\n        }\r\n\r\n        if(this.handSkin) {\r\n            let skin = this.handSkin;\r\n            let jointIds = skin.jointIds;\r\n            /* Map the wrist */\r\n            this.joints[this.ORDERED_JOINTS[0]] = new WL.Object(jointIds[0]);\r\n\r\n            /* Index in ORDERED_JOINTS that we are mapping to our joints */\r\n            /* Skip thumb0 joint, start at thumb1 */\r\n            for(let j = 0; j < jointIds.length; ++j) {\r\n                let joint = new WL.Object(jointIds[j]);\r\n                /* tip joints are only needed for joint rendering, so we skip those while mapping */\r\n                this.joints[joint.name] = joint;\r\n            }\r\n\r\n            /* If we have a hand skin, no need to spawn the joints-based one */\r\n            return;\r\n        }\r\n\r\n        /* Spawn joints */\r\n        for(let j = 0; j <= this.ORDERED_JOINTS.length; ++j) {\r\n            let joint = WL.scene.addObject(this.object.parent);\r\n            let mesh = joint.addComponent('mesh');\r\n\r\n            mesh.mesh = this.jointMesh;\r\n            mesh.material = this.jointMaterial;\r\n\r\n            this.joints[this.ORDERED_JOINTS[j]] = joint;\r\n        }\r\n    },\r\n\r\n    update: function(dt) {\r\n        if(!this.session) {\r\n            if(WL.xrSession) this.setupVREvents(WL.xrSession);\r\n        }\r\n\r\n        if(!this.session) return;\r\n\r\n        this.hasPose = false;\r\n        if(this.session && this.session.inputSources) {\r\n            for(let i = 0; i <= this.session.inputSources.length; ++i) {\r\n                const inputSource = this.session.inputSources[i];\r\n                if(!inputSource || !inputSource.hand || inputSource.handedness != this.handedness) continue;\r\n                this.hasPose = true;\r\n\r\n                if(inputSource.hand.get('wrist') !== null) {\r\n                    const p = Module['webxr_frame'].getJointPose(inputSource.hand.get('wrist'), WebXR.refSpaces[WebXR.refSpace]);\r\n                    if(p) {\r\n                        this.object.resetTranslationRotation();\r\n                        this.object.transformLocal.set([\r\n                            p.transform.orientation.x,\r\n                            p.transform.orientation.y,\r\n                            p.transform.orientation.z,\r\n                            p.transform.orientation.w]);\r\n                        this.object.translate([\r\n                            p.transform.position.x,\r\n                            p.transform.position.y,\r\n                            p.transform.position.z]);\r\n                    }\r\n                }\r\n\r\n                let invTranslation = new Float32Array(3);\r\n                let invRotation = new Float32Array(4);\r\n                quat.invert(invRotation, this.object.transformLocal);\r\n                this.object.getTranslationLocal(invTranslation);\r\n\r\n                for(let j = 0; j < this.ORDERED_JOINTS.length; ++j) {\r\n                    const jointName = this.ORDERED_JOINTS[j];\r\n                    const joint = this.joints[jointName];\r\n                    if(joint == null) continue;\r\n\r\n                    let jointPose = null;\r\n                    if(inputSource.hand.get(jointName) !== null) {\r\n                        jointPose = Module['webxr_frame'].getJointPose(inputSource.hand.get(jointName), WebXR.refSpaces[WebXR.refSpace]);\r\n                    }\r\n                    if(jointPose !== null) {\r\n                        if(this.handSkin) {\r\n                            joint.resetTranslationRotation();\r\n\r\n                            joint.translate([\r\n                                (jointPose.transform.position.x - invTranslation[0]),\r\n                                (jointPose.transform.position.y - invTranslation[1]),\r\n                                (jointPose.transform.position.z - invTranslation[2])]);\r\n                            joint.rotate(invRotation);\r\n                            joint.rotateObject([\r\n                                jointPose.transform.orientation.x,\r\n                                jointPose.transform.orientation.y,\r\n                                jointPose.transform.orientation.z,\r\n                                jointPose.transform.orientation.w]);\r\n                        } else {\r\n                            joint.resetTransform();\r\n                            joint.transformLocal.set([\r\n                                jointPose.transform.orientation.x,\r\n                                jointPose.transform.orientation.y,\r\n                                jointPose.transform.orientation.z,\r\n                                jointPose.transform.orientation.w]);\r\n                            joint.translate([\r\n                                jointPose.transform.position.x,\r\n                                jointPose.transform.position.y,\r\n                                jointPose.transform.position.z]);\r\n\r\n                            /* Last joint radius of each finger is null */\r\n                            const r = jointPose.radius || 0.007;\r\n                            joint.scale([r, r, r]);\r\n                        }\r\n                    } else {\r\n                        /* Hack to hide the object */\r\n                        if(!this.handSkin) joint.scale([0, 0, 0]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!this.hasPose && this._childrenActive) {\r\n            this._childrenActive = false;\r\n\r\n            if(this.deactivateChildrenWithoutPose) {\r\n                this.setChildrenActive(false);\r\n            }\r\n\r\n            if(this.controllerToDeactivate) {\r\n                this.controllerToDeactivate.active = true;\r\n                this.setChildrenActive(true, this.controllerToDeactivate);\r\n            }\r\n        } else if(this.hasPose && !this._childrenActive) {\r\n            this._childrenActive = true;\r\n\r\n            if(this.deactivateChildrenWithoutPose) {\r\n                this.setChildrenActive(true);\r\n            }\r\n\r\n            if(this.controllerToDeactivate) {\r\n                this.controllerToDeactivate.active = false;\r\n                this.setChildrenActive(false, this.controllerToDeactivate);\r\n            }\r\n        }\r\n    },\r\n\r\n    setChildrenActive: function(active, object) {\r\n        object = object || this.object;\r\n\r\n        const children = object.children;\r\n        for(const o of children) {\r\n            o.active = active;\r\n            this.setChildrenActive(active, o);\r\n        }\r\n    },\r\n\r\n    isGrabbing: function() {\r\n        const indexTipPos = [0, 0, 0];\r\n        quat2.getTranslation(indexTipPos, this.joints['index-finger-tip'].transformLocal);\r\n        const thumbTipPos = [0, 0, 0];\r\n        quat2.getTranslation(thumbTipPos, this.joints['thumb-tip'].transformLocal);\r\n\r\n        return vec3.sqrDist(thumbTipPos, indexTipPos) < 0.001;\r\n    },\r\n\r\n    setupVREvents: function(s) {\r\n        this.session = s;\r\n    },\r\n});\r\n",
        "import {quat2} from 'gl-matrix';\r\n/**\r\n * Sets up a [WebXR Device API \"Hit Test\"](https://immersive-web.github.io/hit-test/)\r\n * and places the object to the hit location.\r\n *\r\n * **Requirements:**\r\n *  - Specify `'hit-test'` in the required or optional features on the AR button in your html file.\r\n *    See [Wastepaperbin AR](/showcase/wpb-ar) as an example.\r\n */\r\nWL.registerComponent('hit-test-location', {\r\n}, {\r\n    init: function() {\r\n        WL.onXRSessionStart.push(this.xrSessionStart.bind(this));\r\n        WL.onXRSessionStart.push(this.xrSessionEnd.bind(this));\r\n\r\n        this.tempScaling = new Float32Array(3);\r\n        this.tempScaling.set(this.object.scalingLocal);\r\n        this.visible = false;\r\n        this.object.scale([0, 0, 0]);\r\n    },\r\n    update: function(dt) {\r\n        const wasVisible = this.visible;\r\n        if(this.xrHitTestSource) {\r\n            const frame = Module['webxr_frame'];\r\n            if(!frame) return;\r\n            let hitTestResults = frame.getHitTestResults(this.xrHitTestSource);\r\n            if(hitTestResults.length > 0) {\r\n                let pose = hitTestResults[0].getPose(this.xrViewerSpace);\r\n                this.visible = true;\r\n                quat2.fromMat4(this.object.transformLocal, pose.transform.matrix);\r\n                this.object.setDirty();\r\n            } else {\r\n                this.visible = false;\r\n            }\r\n        }\r\n\r\n        if(this.visible != wasVisible) {\r\n            if(!this.visible) {\r\n                this.tempScaling.set(this.object.scalingLocal);\r\n                this.object.scale([0, 0, 0]);\r\n            } else {\r\n                this.object.scalingLocal.set(this.tempScaling);\r\n                this.object.setDirty();\r\n            }\r\n        }\r\n    },\r\n    xrSessionStart: function(session) {\r\n        session.requestReferenceSpace('viewer').then(function(refSpace) {\r\n            this.xrViewerSpace = refSpace;\r\n            session.requestHitTestSource({space: this.xrViewerSpace}).then(function(hitTestSource) {\r\n                this.xrHitTestSource = hitTestSource;\r\n            }.bind(this)).catch(console.error);\r\n        }.bind(this)).catch(console.error);\r\n    },\r\n    xrSessionEnd: function() {\r\n        if(!this.xrHitTestSource) return;\r\n        this.xrHitTestSource.cancel();\r\n        this.xrHitTestSource = null;\r\n    },\r\n});\r\n",
        "/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n",
        "import 'howler';\r\n/**\r\n * (Spatial) audio listener based on [Howler.js](https://howlerjs.com/).\r\n *\r\n * Retrieves the location and orientation of the object and passes it\r\n * to [Howler.pos()](https://github.com/goldfire/howler.js#posx-y-z-id)\r\n * and [Howler.orientation()](https://github.com/goldfire/howler.js#orientationx-y-z-id).\r\n */\r\nWL.registerComponent(\"howler-audio-listener\", {\r\n  /** Whether audio should be spatialized/positional. */\r\n  spatial: {type: WL.Type.Bool, default: true},\r\n}, {\r\n  init: function() {\r\n    this.origin = new Float32Array(3);\r\n    this.fwd = new Float32Array(3);\r\n    this.up = new Float32Array(3);\r\n  },\r\n  update: function() {\r\n    if(!this.spatial) return\r\n    this.object.getTranslationWorld(this.origin);\r\n    this.object.getForward(this.fwd);\r\n    this.object.getUp(this.up);\r\n\r\n    Howler.pos(this.origin[0], this.origin[1], this.origin[2]);\r\n    Howler.orientation(this.fwd[0], this.fwd[1], this.fwd[2],\r\n      this.up[0], this.up[1], this.up[2]);\r\n  },\r\n});\r\n",
        "import {Howl} from 'howler';\r\n/**\r\n * (Spatial) audio source based on [Howler.js](https://howlerjs.com/).\r\n *\r\n * Creates a Howler audio source, plays an audio file on it and updates\r\n * its position.\r\n *\r\n * Optimizes the position update to only update if the difference to last\r\n * position is larger than half a centimeter. To force updates (e.g. if\r\n * the sound source is _very_ close to the listener),\r\n * use `.updatePosition()`.\r\n */\r\nWL.registerComponent(\"howler-audio-source\", {\r\n  /** Volume */\r\n  volume: {type: WL.Type.Float, default: 1.0},\r\n  /** Whether audio should be spatialized/positional */\r\n  spatial: {type: WL.Type.Bool, default: true},\r\n  /** Whether to loop the sound */\r\n  loop: {type: WL.Type.Bool, default: false},\r\n  /** Whether to start playing automatically */\r\n  autoplay: {type: WL.Type.Bool, default: false},\r\n  /** URL to a sound file to play */\r\n  src: {type: WL.Type.String, default: \"\"}\r\n}, {\r\n  start: function() {\r\n    this.audio = new Howl({\r\n      src: [this.src],\r\n      loop: this.loop,\r\n      volume: this.volume,\r\n      autoplay: this.autoplay\r\n    });\r\n\r\n    this.lastPlayedAudioId = null;\r\n    this.origin = new Float32Array(3);\r\n    this.lastOrigin = new Float32Array(3);\r\n\r\n    if(this.spatial && this.autoplay) {\r\n      this.updatePosition();\r\n      this.play();\r\n    }\r\n\r\n    /* Stop sound after switching scenes */\r\n    const callback = () => {\r\n        this.stop();\r\n        const idx = WL.onSceneLoaded.indexOf(callback);\r\n        if(idx >= 0) WL.onSceneLoaded.splice(idx, 1);\r\n    };\r\n    WL.onSceneLoaded.push(callback);\r\n  },\r\n\r\n  update: function() {\r\n    if(!this.spatial || !this.lastPlayedAudioId) return;\r\n\r\n    this.object.getTranslationWorld(this.origin);\r\n    /* Only call pos() if the position moved more than half a centimeter\r\n     * otherwise this gets very performance heavy.\r\n     * Smaller movement should only be perceivable if close to the\r\n     * ear anyway. */\r\n    if(Math.abs(this.lastOrigin[0] - this.origin[0]) > 0.005 ||\r\n       Math.abs(this.lastOrigin[1] - this.origin[1]) > 0.005 ||\r\n       Math.abs(this.lastOrigin[2] - this.origin[2]) > 0.005)\r\n    {\r\n      this.updatePosition();\r\n    }\r\n  },\r\n\r\n  updatePosition: function() {\r\n      this.audio.pos(this.origin[0], this.origin[1], this.origin[2],\r\n        this.lastPlayedAudioId);\r\n      this.lastOrigin.set(this.origin);\r\n  },\r\n\r\n  play: function() {\r\n    if(this.lastPlayedAudioId) this.audio.stop(this.lastPlayedAudioId);\r\n    this.lastPlayedAudioId = this.audio.play();\r\n    if(this.spatial) this.updatePosition();\r\n  },\r\n\r\n  stop: function() {\r\n    if(!this.lastPlayedAudioId) return;\r\n    this.audio.stop(this.lastPlayedAudioId);\r\n    this.lastPlayedAudioId = null;\r\n  }\r\n});\r\n",
        "/**\r\n * Downloads an image from URL and applies it as `diffuseTexture` or `flatTexture`\r\n * to an attached mesh component.\r\n * Only \"Phong Opaque Textured\" and \"Flat Opaque Textured\" materials are supported.\r\n *\r\n * **Warning:** This component will soon be changed to be consistent with\r\n *   [video-texture](#video-texture) and change a material rather than mesh.\r\n *   To keep backwards compatibility, please copy the source of this component\r\n *   into your project.\r\n */\r\nWL.registerComponent('image-texture', {\r\n    /** URL to download the image from */\r\n    url: {type: WL.Type.String, default: \"\"},\r\n    /** 0-based mesh component index on this object (e.g. 1 for \"second mesh\") */\r\n    meshIndex: {type: WL.Type.Int, default: 0}\r\n}, {\r\n    init: function() {\r\n        let obj = this.object;\r\n        WL.textures.load(this.url, 'anonymous')\r\n            .then(function(texture) {\r\n                const mat = obj.getComponent(\"mesh\", this.meshIndex).material;\r\n                if(mat.shader == \"Flat Opaque Textured\") {\r\n                    mat.flatTexture = texture;\r\n                } else if(mat.shader == \"Phong Opaque Textured\") {\r\n                    mat.diffuseTexture = texture;\r\n                } else {\r\n                    console.error(\"Shader\", mat.shader, \"not supported by image-texture\");\r\n                }\r\n            }).catch(console.err);\r\n    }\r\n});\r\n",
        "import {vec3} from 'gl-matrix';\r\n/**\r\n * Controls the camera through mouse movement.\r\n *\r\n * Efficiently implemented to affect object orientation only\r\n * when the mouse moves.\r\n */\r\nWL.registerComponent('mouse-look', {\r\n    /** Mouse look sensitivity */\r\n    sensitity: {type: WL.Type.Float, default: 0.25},\r\n    /** Require a mouse button to be pressed to control view.\r\n     * Otherwise view will allways follow mouse movement */\r\n    requireMouseDown: {type: WL.Type.Bool, default: true},\r\n    /** If \"moveOnClick\" is enabled, mouse button which should\r\n     * be held down to control view */\r\n    mouseButtonIndex: {type: WL.Type.Int, default: 0},\r\n}, {\r\n    init: function() {\r\n        this.currentRotationY = 0;\r\n        this.currentRotationX = 0;\r\n        this.origin = new Float32Array(3);\r\n        this.parentOrigin = new Float32Array(3);\r\n        document.addEventListener('mousemove', function(e) {\r\n            if(this.active && (this.mouseDown || !this.requireMouseDown)) {\r\n                this.rotationY = -this.sensitity*e.movementX/100;\r\n                this.rotationX = -this.sensitity*e.movementY/100;\r\n\r\n                this.currentRotationX += this.rotationX;\r\n                this.currentRotationY += this.rotationY;\r\n\r\n                /* 1.507 = PI/2 = 90° */\r\n                this.currentRotationX = Math.min(1.507, this.currentRotationX);\r\n                this.currentRotationX = Math.max(-1.507, this.currentRotationX);\r\n\r\n                this.object.getTranslationWorld(this.origin);\r\n                this.object.parent.getTranslationWorld(this.parentOrigin);\r\n                vec3.sub(this.origin, this.origin, this.parentOrigin);\r\n\r\n                this.object.resetTranslationRotation();\r\n                this.object.rotateAxisAngleRad([1, 0, 0], this.currentRotationX);\r\n                this.object.rotateAxisAngleRad([0, 1, 0], this.currentRotationY);\r\n                this.object.translate(this.origin);\r\n            }\r\n        }.bind(this));\r\n\r\n        if(this.requireMouseDown) {\r\n            if(this.mouseButtonIndex == 2) {\r\n                WL.canvas.addEventListener(\"contextmenu\", function(e) {\r\n                    e.preventDefault();\r\n                }, false);\r\n            }\r\n            WL.canvas.addEventListener('mousedown', function(e) {\r\n                if(e.button == this.mouseButtonIndex) {\r\n                    this.mouseDown = true;\r\n                    document.body.style.cursor = \"grabbing\";\r\n                    if(e.button == 1) {\r\n                        e.preventDefault();\r\n                        /* Prevent scrolling */\r\n                        return false;\r\n                    }\r\n                }\r\n            }.bind(this));\r\n            WL.canvas.addEventListener('mouseup', function(e) {\r\n                if(e.button == this.mouseButtonIndex) {\r\n                    this.mouseDown = false;\r\n                    document.body.style.cursor = \"initial\";\r\n                }\r\n            }.bind(this));\r\n        }\r\n    },\r\n    start: function() {\r\n        this.rotationX = 0;\r\n        this.rotationY = 0;\r\n    }\r\n});\r\n",
        "/**\r\n * Sets the target framerate\r\n *\r\n * [Updates the target framerate](https://immersive-web.github.io/webxr/#dom-xrsession-updatetargetframerate)\r\n * to the closest [supported target framerate](https://immersive-web.github.io/webxr/#dom-xrsession-supportedFrameRates)\r\n * to the given `framerate`.\r\n *\r\n * The target framerate is used for the device's VR compositor as an indication of how often to refresh the\r\n * screen with new images. This means the app will be asked to produce frames in more regular intervals,\r\n * potentially spending less time on frames that are likely to be dropped.\r\n *\r\n * For apps with heavy load, setting a well matching target framerate can improve the apps rendering stability\r\n * and reduce stutter.\r\n *\r\n * Likewise, the target framerate can be used to enable 120Hz refresh rates on Oculus Quest 2 on simpler apps.\r\n */\r\nWL.registerComponent('target-framerate', {\r\n    framerate: {type: WL.Type.Float, default: 90.0},\r\n}, {\r\n    start: function() {\r\n        if(WL.xrSession) {\r\n            this.setTargetFramerate(WL.xrSession);\r\n        } else {\r\n            WL.onXRSessionStart.push(this.setTargetFramerate.bind(this));\r\n        }\r\n    },\r\n\r\n    setTargetFramerate: function(s) {\r\n        if(s.supportedFrameRates && s.updateTargetFrameRate) {\r\n            const a = WL.xrSession.supportedFrameRates;\r\n            a.sort((a, b) => Math.abs(a - this.framerate) - Math.abs(b - this.framerate));\r\n            WL.xrSession.updateTargetFrameRate(a[0]);\r\n        }\r\n    },\r\n});\r\n",
        "import {vec3,quat2} from 'gl-matrix';\r\n/**\r\n * Teleport VR locomotion.\r\n *\r\n * See [Teleport Example](/showcase/teleport).\r\n */\r\nWL.registerComponent('teleport', {\r\n    /** Object that will be placed as indiciation forwhere the player will teleport to. */\r\n    teleportIndicatorMeshObject: { type: WL.Type.Object },\r\n    /** Root of the player, the object that will be positioned on teleportation. */\r\n    camRoot: { type: WL.Type.Object },\r\n    /** Non-vr camera for use outside of VR */\r\n    cam: { type: WL.Type.Object },\r\n    /** Left eye for use in VR*/\r\n    eyeLeft: { type: WL.Type.Object },\r\n    /** Right eye for use in VR*/\r\n    eyeRight: { type: WL.Type.Object },\r\n    /** Handedness for VR cursors to accept trigger events only from respective controller. */\r\n    handedness: {type: WL.Type.Enum, values: ['input component', 'left', 'right', 'none'], default: 'input component'},\r\n    /** Collision group of valid \"floor\" objects that can be teleported on */\r\n    floorGroup: { type: WL.Type.Int, default: 1 },\r\n    /** How far the thumbstick needs to be pushed to have the teleport target indicator show up */\r\n    thumbstickActivationThreshhold: { type: WL.Type.Float, default: -0.7 },\r\n    /** How far the thumbstick needs to be released to execute the teleport */\r\n    thumbstickDeactivationThreshhold: { type: WL.Type.Float, default: 0.3 },\r\n    /** Offset to apply to the indicator object, e.g. to avoid it from Z-fighting with the floor */\r\n    indicatorYOffset: { type: WL.Type.Float, default: 0.01 },\r\n\r\n    /** Mode for raycasting, whether to use PhysX or simple collision components */\r\n    rayCastMode: {type: WL.Type.Enum, values: ['collision', 'physx'], default: 'collision'},\r\n    /** Max distance for PhysX raycast */\r\n    maxDistance: { type: WL.Type.Float, default: 100.0 },\r\n}, {\r\n    init: function() {\r\n        this._prevThumbstickAxis = new Float32Array(2);\r\n        this._tempVec = new Float32Array(3);\r\n        this._tempVec0 = new Float32Array(3);\r\n        this._currentIndicatorRotation = 0;\r\n\r\n        this.input = this.object.getComponent('input');\r\n        if(!this.input) {\r\n            console.error(this.object.name, \"generic-teleport-component.js: input component is required on the object\")\r\n            return;\r\n        }\r\n        if(!this.teleportIndicatorMeshObject) {\r\n            console.error(this.object.name, 'generic-teleport-component.js: Teleport indicator mesh is missing');\r\n            return;\r\n        }\r\n        if(!this.camRoot) {\r\n            console.error(this.object.name, 'generic-teleport-component.js: camRoot not set');\r\n            return;\r\n        }\r\n        this.isIndicating = false;\r\n\r\n        if(this.cam) {\r\n            this.isMouseIndicating = false;\r\n            WL.canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n            WL.canvas.addEventListener('mouseup', this.onMouseUp.bind(this));\r\n        }\r\n\r\n        this.indicatorHidden = true;\r\n        this.hitSpot = new Float32Array(3);\r\n        this._hasHit = false;\r\n\r\n        this._extraRotation = 0;\r\n        this._currentStickAxes = new Float32Array(2);\r\n    },\r\n\r\n    start: function() {\r\n        if(this.handedness == 0) {\r\n            const inputComp = this.object.getComponent('input');\r\n            if(!inputComp) {\r\n                console.warn('teleport component on object', this.object.name,\r\n                    'was configured with handedness \"input component\", ' +\r\n                    'but object has no input component.');\r\n            } else {\r\n                this.handedness = inputComp.handedness;\r\n                this.input = inputComp;\r\n            }\r\n        } else {\r\n            this.handedness = ['left', 'right'][this.handedness - 1];\r\n        }\r\n\r\n        WL.onXRSessionStart.push(this.setupVREvents.bind(this));\r\n        this.teleportIndicatorMeshObject.active = false;\r\n    },\r\n\r\n    /* Get current camera Y rotation */\r\n    _getCamRotation: function() {\r\n        this.eyeLeft.getForward(this._tempVec);\r\n        this._tempVec[1] = 0;\r\n        vec3.normalize(this._tempVec, this._tempVec);\r\n        return Math.atan2(this._tempVec[0], this._tempVec[2]);\r\n    },\r\n\r\n    update: function() {\r\n        let inputLength = 0;\r\n        if(this.gamepad && this.gamepad.axes) {\r\n            this._currentStickAxes[0] = this.gamepad.axes[2];\r\n            this._currentStickAxes[1] = this.gamepad.axes[3];\r\n            inputLength = Math.abs(this._currentStickAxes[0]) + Math.abs(this._currentStickAxes[1]);\r\n        }\r\n\r\n        if(!this.isIndicating && this._prevThumbstickAxis[1] >= this.thumbstickActivationThreshhold && this._currentStickAxes[1] < this.thumbstickActivationThreshhold) {\r\n            this.isIndicating = true;\r\n        } else if(this.isIndicating && inputLength < this.thumbstickDeactivationThreshhold) {\r\n            this.isIndicating = false;\r\n            this.teleportIndicatorMeshObject.active = false;\r\n\r\n            if(this._hasHit) {\r\n                this._teleportPlayer(this.hitSpot, this._extraRotation);\r\n            }\r\n        }\r\n\r\n        if(this.isIndicating && this.teleportIndicatorMeshObject && this.input) {\r\n            const origin = this._tempVec0;\r\n            quat2.getTranslation(origin, this.object.transformWorld);\r\n\r\n            const direction = this.object.getForward(this._tempVec)\r\n            let rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n                WL.scene.rayCast(origin, direction, 1 << this.floorGroup) :\r\n                WL.physics.rayCast(origin, direction, 1 << this.floorGroup, this.maxDistance);\r\n            if(rayHit.hitCount > 0) {\r\n                this.indicatorHidden = false;\r\n\r\n                this._extraRotation = Math.PI + Math.atan2(this._currentStickAxes[0], this._currentStickAxes[1]);\r\n                this._currentIndicatorRotation = this._getCamRotation() + (this._extraRotation - Math.PI);\r\n                this.teleportIndicatorMeshObject.resetTranslationRotation();\r\n                this.teleportIndicatorMeshObject.rotateAxisAngleRad([0, 1, 0], this._currentIndicatorRotation);\r\n\r\n                this.teleportIndicatorMeshObject.translate(rayHit.locations[0]);\r\n                this.teleportIndicatorMeshObject.translate([0.0, this.indicatorYOffset, 0.0]);\r\n                this.teleportIndicatorMeshObject.active = true;\r\n\r\n                this.hitSpot.set(rayHit.locations[0]);\r\n                this._hasHit = true;\r\n            } else {\r\n                if(!this.indicatorHidden) {\r\n                    this.teleportIndicatorMeshObject.active = false;\r\n                    this.indicatorHidden = true;\r\n                }\r\n                this._hasHit = false;\r\n            }\r\n        } else if(this.teleportIndicatorMeshObject && this.isMouseIndicating) {\r\n            this.onMousePressed();\r\n        }\r\n\r\n        this._prevThumbstickAxis.set(this._currentStickAxes);\r\n    },\r\n    setupVREvents: function(s) {\r\n        /* If in VR, one-time bind the listener */\r\n        this.session = s;\r\n        s.addEventListener('end', function() {\r\n            /* Reset cache once the session ends to rebind select etc, in case\r\n             * it starts again */\r\n            this.gamepad = null;\r\n            this.session = null;\r\n        }.bind(this));\r\n\r\n        if(s.inputSources && s.inputSources.length) {\r\n            for(let i = 0; i < s.inputSources.length; i++) {\r\n                let inputSource = s.inputSources[i];\r\n\r\n                if(inputSource.handedness == this.handedness) {\r\n                    this.gamepad = inputSource.gamepad;\r\n                }\r\n            }\r\n        }\r\n\r\n        s.addEventListener('inputsourceschange', function(e) {\r\n            if(e.added && e.added.length) {\r\n                for(let i = 0; i < e.added.length; i++) {\r\n                    let inputSource = e.added[i];\r\n                    if(inputSource.handedness == this.handedness) {\r\n                        this.gamepad = inputSource.gamepad;\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n    },\r\n    onMouseDown: function() {\r\n        this.isMouseIndicating = true;\r\n    },\r\n    onMouseUp: function() {\r\n        this.isMouseIndicating = false;\r\n        this.teleportIndicatorMeshObject.active = false;\r\n        if(this._hasHit) {\r\n            this._teleportPlayer(this.hitSpot, 0.0);\r\n        }\r\n    },\r\n    onMousePressed: function() {\r\n        let origin = [0, 0, 0];\r\n        quat2.getTranslation(origin, this.cam.transformWorld);\r\n\r\n        const direction = this.cam.getForward(this._tempVec);\r\n        let rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n            WL.scene.rayCast(origin, direction, 1 << this.floorGroup) :\r\n            WL.physics.rayCast(origin, direction, 1 << this.floorGroup, this.maxDistance);\r\n        if(rayHit.hitCount > 0) {\r\n            this.indicatorHidden = false;\r\n\r\n            direction[1] = 0;\r\n            vec3.normalize(direction, direction);\r\n\r\n            this._currentIndicatorRotation = -Math.sign(direction[2])*Math.acos(direction[0]) - Math.PI*0.5;\r\n\r\n            this.teleportIndicatorMeshObject.resetTranslationRotation();\r\n            this.teleportIndicatorMeshObject.rotateAxisAngleRad([0, 1, 0], this._currentIndicatorRotation);\r\n            this.teleportIndicatorMeshObject.translate(rayHit.locations[0]);\r\n            this.teleportIndicatorMeshObject.active = true;\r\n\r\n            this.hitSpot = rayHit.locations[0];\r\n            this._hasHit = true;\r\n        } else {\r\n            if(!this.indicatorHidden) {\r\n                this.teleportIndicatorMeshObject.active = false;\r\n                this.indicatorHidden = true;\r\n            }\r\n            this._hasHit = false;\r\n        }\r\n    },\r\n\r\n    _teleportPlayer: function(newPosition, rotationToAdd) {\r\n        this.camRoot.rotateAxisAngleRad([0, 1, 0], rotationToAdd);\r\n\r\n        const p = this._tempVec;\r\n        const p1 = this._tempVec0;\r\n\r\n        if(this.session) {\r\n            this.eyeLeft.getTranslationWorld(p);\r\n            this.eyeRight.getTranslationWorld(p1);\r\n\r\n            vec3.add(p, p, p1);\r\n            vec3.scale(p, p, 0.5);\r\n        } else {\r\n            this.cam.getTranslationWorld(p);\r\n        }\r\n\r\n        this.camRoot.getTranslationWorld(p1);\r\n        vec3.sub(p, p1, p);\r\n        p[0] += newPosition[0];\r\n        p[1] = newPosition[1];\r\n        p[2] += newPosition[2];\r\n\r\n        this.camRoot.setTranslationWorld(p);\r\n    },\r\n});\r\n\r\nWL.registerComponent('player-height', {\r\n    height: { type: WL.Type.Float, default: 1.75 }\r\n}, {\r\n    init: function() {\r\n        WL.onXRSessionStart.push(this.onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this.onXRSessionEnd.bind(this));\r\n    },\r\n\r\n    start: function() {\r\n        this.object.resetTranslationRotation();\r\n        this.object.translate([0.0, this.height, 0.0]);\r\n    },\r\n\r\n    onXRSessionStart: function() {\r\n        if(!['local', 'viewer'].includes(WebXR.refSpace)) {\r\n            this.object.resetTranslationRotation();\r\n        }\r\n    },\r\n\r\n    onXRSessionEnd: function() {\r\n        if(!['local', 'viewer'].includes(WebXR.refSpace)) {\r\n            this.object.resetTranslationRotation();\r\n            this.object.translate([0.0, this.height, 0.0]);\r\n        }\r\n    }\r\n});\r\n",
        "import {vec3, quat} from 'gl-matrix';\r\n\r\nMath.clamp = function(v, a, b) {\r\n    return Math.max(a, Math.min(v, b));\r\n}\r\n\r\n// From http://theorangeduck.com/page/simple-two-joint\r\nconst twoJointIK = (function() {\r\n    let ta = new Float32Array(3);\r\n    let ca = new Float32Array(3);\r\n    let ba = new Float32Array(3);\r\n    let ab = new Float32Array(3);\r\n    let cb = new Float32Array(3);\r\n\r\n    let axis0 = new Float32Array(3);\r\n    let axis1 = new Float32Array(3);\r\n\r\n    let temp = new Float32Array(4);\r\n\r\n    let r0 = new Float32Array(4);\r\n    let r1 = new Float32Array(4);\r\n    let r2 = new Float32Array(4);\r\n\r\n    return function(a_lr, b_lr, a, b, c, t, eps, a_gr, b_gr, helper) {\r\n        vec3.sub(ba, b, a);\r\n        const lab = vec3.length(ba);\r\n        vec3.sub(ta, b, c);\r\n        const lcb = vec3.length(ta);\r\n        vec3.sub(ta, t, a);\r\n        const lat = Math.clamp(vec3.length(ta), eps, lab + lcb - eps);\r\n\r\n        vec3.sub(ca, c, a);\r\n        vec3.sub(ab, a, b);\r\n        vec3.sub(cb, c, b);\r\n\r\n        vec3.normalize(ca, ca);\r\n        vec3.normalize(ba, ba);\r\n        vec3.normalize(ab, ab);\r\n        vec3.normalize(cb, cb);\r\n        vec3.normalize(ta, ta);\r\n\r\n        const ac_ab_0 = Math.acos(Math.clamp(vec3.dot(ca, ba), -1, 1));\r\n        const ba_bc_0 = Math.acos(Math.clamp(vec3.dot(ab, cb), -1, 1));\r\n        const ac_at_0 = Math.acos(Math.clamp(vec3.dot(ca, ta), -1, 1));\r\n\r\n        const ac_ab_1 = Math.acos(Math.clamp((lcb*lcb-lab*lab-lat*lat) / (-2*lab*lat), -1, 1));\r\n        const ba_bc_1 = Math.acos(Math.clamp((lat*lat-lab*lab-lcb*lcb) / (-2*lab*lcb), -1, 1));\r\n\r\n        vec3.sub(ca, c, a);\r\n        vec3.sub(ba, b, a);\r\n        vec3.sub(ta, t, a);\r\n\r\n        vec3.cross(axis0, ca, ba);\r\n        vec3.cross(axis1, ca, ta);\r\n\r\n        if(helper) {\r\n            vec3.sub(ba, helper, b);\r\n            vec3.transformQuat(ba, [0, 0, -1], b_gr);\r\n        } else {\r\n            vec3.sub(ba, b, a);\r\n        }\r\n\r\n        const l = vec3.length(axis0);\r\n        if(l == 0) {\r\n            axis0.set([1, 0, 0]);\r\n        } else {\r\n            vec3.scale(axis0, axis0, 1/l);\r\n        }\r\n        vec3.normalize(axis1, axis1);\r\n\r\n        quat.conjugate(a_gr, a_gr);\r\n        quat.setAxisAngle(r0, vec3.transformQuat(temp, axis0, a_gr), (ac_ab_1 - ac_ab_0));\r\n        quat.setAxisAngle(r2, vec3.transformQuat(temp, axis1, a_gr), (ac_at_0));\r\n        quat.mul(a_lr, a_lr, quat.mul(temp, r0, r2));\r\n        quat.normalize(a_lr, a_lr);\r\n\r\n        quat.conjugate(b_gr, b_gr);\r\n        quat.setAxisAngle(r1, vec3.transformQuat(temp, axis0, b_gr), (ba_bc_1 - ba_bc_0));\r\n        quat.mul(b_lr, b_lr, r1);\r\n        quat.normalize(b_lr, b_lr);\r\n    }\r\n})();\r\n\r\n/**\r\n * Inverse Kinematics for two-joint chains (e.g. knees or ellbows)\r\n */\r\nWL.registerComponent('two-joint-ik-solver', {\r\n    /** Root bone, never moves */\r\n    root: {type: WL.Type.Object},\r\n    /** Bone attached to the root */\r\n    middle: {type: WL.Type.Object},\r\n    /** Bone attached to the middle */\r\n    end: {type: WL.Type.Object},\r\n    /** Target the joins should reach for */\r\n    target: {type: WL.Type.Object},\r\n    /** Helper object to use to determine joint rotation axis */\r\n    helper: {type: WL.Type.Object},\r\n}, {\r\n    init: function() {\r\n        this.pos = new Float32Array(3*7);\r\n        this.p = [\r\n            this.pos.subarray(0, 3),\r\n            this.pos.subarray(3, 6),\r\n            this.pos.subarray(6, 9),\r\n            this.pos.subarray(9, 12),\r\n            this.pos.subarray(12, 15),\r\n            this.pos.subarray(15, 18),\r\n            this.pos.subarray(18, 21)];\r\n    },\r\n    update: function() {\r\n        const p = this.p;\r\n        this.root.getTranslationWorld(p[0]);\r\n        this.middle.getTranslationWorld(p[1]);\r\n        this.end.getTranslationWorld(p[2]);\r\n        this.target.getTranslationWorld(p[3]);\r\n        const tla = p[4];\r\n        const tlb = p[5];\r\n        this.root.getTranslationLocal(tla);\r\n        this.middle.getTranslationLocal(tlb);\r\n        if(this.helper) this.helper.getTranslationWorld(p[6]);\r\n\r\n        twoJointIK(this.root.transformLocal, this.middle.transformLocal,\r\n            p[0], p[1], p[2], p[3], 0.01,\r\n            this.root.transformWorld.subarray(0, 4),\r\n            this.middle.transformWorld.subarray(0, 4),\r\n            this.helper ? p[6] : null\r\n        );\r\n\r\n        this.root.setTranslationLocal(tla);\r\n        this.middle.setTranslationLocal(tlb);\r\n\r\n        this.root.setDirty();\r\n        this.middle.setDirty();\r\n    },\r\n});\r\n",
        "/**\r\n * Downloads a video from URL and applies it as `diffuseTexture` or `flatTexture` on given material.\r\n *\r\n * Video textures need to be updated reqularly whenever\r\n * a new frame is available. This component handles the\r\n * detection of a new frame and updates the texture to\r\n * reflect the video's current frame.\r\n * Only \"Phong Opaque Textured\" and \"Flat Opaque Textured\" materials are supported.\r\n *\r\n * The video can be accessed through `this.video`.\r\n *\r\n * See [Video Example](/showcase/video).\r\n */\r\nWL.registerComponent('video-texture', {\r\n    /** URL to download video from */\r\n    url: {type: WL.Type.String, default: \"\"},\r\n    /** Material to apply the video texture to */\r\n    material: {type: WL.Type.Material},\r\n    /** Whether to loop the video */\r\n    loop: {type: WL.Type.Bool, default: true},\r\n    /** Whether to automatically start playing the video */\r\n    autoplay: {type: WL.Type.Bool, default: true},\r\n    /** Whether to mute sound */\r\n    muted: {type: WL.Type.Bool, default: true},\r\n}, {\r\n    init: function() {\r\n        if(!this.material) {\r\n            console.error(\"video-texture: material property not set\");\r\n            return;\r\n        }\r\n        this.loaded = false;\r\n        this.frameUpdateRequested = true;\r\n\r\n        this.video = document.createElement('video');\r\n        this.video.src = this.url;\r\n        this.video.crossorigin = 'anonymous';\r\n        this.video.autoplay = this.autoplay;\r\n        this.video.loop = this.loop;\r\n        this.video.muted = this.muted;\r\n        this.video.addEventListener('playing', function() { this.loaded = true; }.bind(this));\r\n        this.video.play();\r\n    },\r\n\r\n    applyTexture: function() {\r\n        const mat = this.material;\r\n        this.texture = new WL.Texture(this.video);\r\n        if(mat.shader == \"Flat Opaque Textured\") {\r\n            mat.flatTexture = this.texture;\r\n        } else if(mat.shader == \"Phong Opaque Textured\") {\r\n            mat.diffuseTexture = this.texture;\r\n        } else {\r\n            console.error(\"Shader\", mat.shader, \"not supported by video-texture\");\r\n        }\r\n\r\n        if('requestVideoFrameCallback' in this.video) {\r\n            this.video.requestVideoFrameCallback(this.updateVideo.bind(this));\r\n        } else {\r\n            this.video.addEventListener('timeupdate', function() { this.frameUpdateRequested = true; }.bind(this));\r\n        }\r\n    },\r\n\r\n    update: function(dt) {\r\n        if(this.loaded && this.frameUpdateRequested) {\r\n            if(this.texture) {\r\n                this.texture.update();\r\n            } else {\r\n                /* Apply texture on first frame update request */\r\n                this.applyTexture();\r\n            }\r\n            this.frameUpdateRequested = false;\r\n        }\r\n    },\r\n\r\n    updateVideo: function() {\r\n        this.frameUpdateRequested = true;\r\n        this.video.requestVideoFrameCallback(this.updateVideo.bind(this));\r\n    }\r\n});\r\n",
        "/**\r\n * Allows switching all other components on an object to active/inactive\r\n * depending on whether a VR/AR session is active.\r\n *\r\n * Useful for hiding controllers until the user enters VR for example.\r\n */\r\nWL.registerComponent(\"vr-mode-active-switch\", {\r\n    /** When components should be active: In VR or when not in VR */\r\n    activateComponents: {type: WL.Type.Enum, values: [\"in VR\", \"in non-VR\"], default: \"in VR\"},\r\n    /** Whether child object's components should be affected */\r\n    affectChildren: {type: WL.Type.Bool, default: true},\r\n}, {\r\n    start: function() {\r\n        this.components = [];\r\n        this.getComponents(this.object);\r\n\r\n        /* Initial activation/deactivation */\r\n        this.onXRSessionEnd();\r\n\r\n        WL.onXRSessionStart.push(this.onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this.onXRSessionEnd.bind(this));\r\n    },\r\n\r\n    getComponents: function(obj) {\r\n        const comps = obj.getComponents().filter(c => c.type != \"vr-mode-active-switch\");\r\n        this.components = this.components.concat(comps);\r\n\r\n        if(this.affectChildren) {\r\n            let children = obj.children;\r\n            for(let i = 0; i < children.length; ++i) {\r\n                this.getComponents(children[i]);\r\n            }\r\n        }\r\n    },\r\n\r\n    setComponentsActive: function(active) {\r\n        const comps = this.components;\r\n        for (let i = 0; i < comps.length; ++i) {\r\n            comps[i].active = active;\r\n        }\r\n    },\r\n\r\n    onXRSessionStart: function() {\r\n        if(!this.active) return;\r\n        this.setComponentsActive(this.activateComponents == 0);\r\n    },\r\n\r\n    onXRSessionEnd: function() {\r\n        if(!this.active) return;\r\n        this.setComponentsActive(this.activateComponents != 0);\r\n    },\r\n}\r\n);\r\n",
        "import {vec3} from 'gl-matrix';\r\n/**\r\n * Basic movement with W/A/S/D keys.\r\n */\r\nWL.registerComponent('wasd-controls', {\r\n    /** Movement speed in m/s. */\r\n    speed: { type: WL.Type.Float, default: 0.1 },\r\n    /** Object of which the orientation is used to determine forward direction */\r\n    headObject: { type: WL.Type.Object }\r\n}, {\r\n    init: function() {\r\n        this.up = false;\r\n        this.right = false;\r\n        this.down = false;\r\n        this.left = false;\r\n\r\n        window.addEventListener('keydown', this.press.bind(this));\r\n        window.addEventListener('keyup', this.release.bind(this));\r\n    },\r\n\r\n    start: function() {\r\n        this.headObject = this.headObject || this.object;\r\n    },\r\n\r\n    update: function() {\r\n        let direction = [0, 0, 0];\r\n\r\n        if (this.up) direction[2] -= 1.0;\r\n        if (this.down) direction[2] += 1.0;\r\n        if (this.left) direction[0] -= 1.0;\r\n        if (this.right) direction[0] += 1.0;\r\n\r\n        vec3.normalize(direction, direction);\r\n        direction[0] *= this.speed;\r\n        direction[2] *= this.speed;\r\n        vec3.transformQuat(direction, direction, this.headObject.transformWorld);\r\n        this.object.translate(direction);\r\n    },\r\n\r\n    press: function(e) {\r\n        if (e.keyCode === 38 /* up */ || e.keyCode === 87 /* w */ || e.keyCode === 90 /* z */ ) {\r\n            this.up = true\r\n        } else if (e.keyCode === 39 /* right */ || e.keyCode === 68 /* d */ ) {\r\n            this.right = true\r\n        } else if (e.keyCode === 40 /* down */ || e.keyCode === 83 /* s */ ) {\r\n            this.down = true\r\n        } else if (e.keyCode === 37 /* left */ || e.keyCode === 65 /* a */ || e.keyCode === 81 /* q */ ) {\r\n            this.left = true\r\n        }\r\n    },\r\n\r\n    release: function(e) {\r\n        if (e.keyCode === 38 /* up */ || e.keyCode === 87 /* w */ || e.keyCode === 90 /* z */ ) {\r\n            this.up = false\r\n        } else if (e.keyCode === 39 /* right */ || e.keyCode === 68 /* d */ ) {\r\n            this.right = false\r\n        } else if (e.keyCode === 40 /* down */ || e.keyCode === 83 /* s */ ) {\r\n            this.down = false\r\n        } else if (e.keyCode === 37 /* left */ || e.keyCode === 65 /* a */ || e.keyCode === 81 /* q */ ) {\r\n            this.left = false\r\n        }\r\n    }\r\n});\r\n",
        "import {vec3,quat2} from 'gl-matrix';\r\n/**\r\n * [Wonderleap](https://wonderleap.co/) Ad Space\r\n *\r\n * To serve ads using this component, contact Wonderleap for\r\n * an Ad User and Ad ID via their website.\r\n *\r\n * See [Wonderleap Ad Example](/showcase/wonderleap-ad).\r\n */\r\nWL.registerComponent('wonderleap-ad', {\r\n    /** Ad user id */\r\n    auId: {type: WL.Type.String, default: 'ce6f68fc-4809-4409-8f57-c631283ce5a3'},\r\n    /** Ad id */\r\n    adId: {type: WL.Type.String}\r\n}, {\r\n    init: function() {\r\n        // TODO: Better let the ad create the correct mesh:\r\n        // this.mesh = this.object.addComponent('mesh');\r\n        // this.mesh.mesh = ...;\r\n        //\r\n        // Missing features:\r\n        //  - [ ] Create Material from shader\r\n        //  - [ ] Reference plane mesh (could create one instead)\r\n        this.mesh = this.object.getComponent('mesh', 0);\r\n\r\n        this.collision = this.object.addComponent('collision');\r\n        this.collision.collider = WL.Collider.Box;\r\n        this.collision.group = 0x2;\r\n\r\n        this.cursorTarget = this.object.addComponent('cursor-target');\r\n\r\n        this.timeSinceLastVizCheck = 0;\r\n        this.visibleDuration = 0;\r\n\r\n        /* 10 Seconds min vizibility threshold */\r\n        this.durationThreshold = 10.0;\r\n    },\r\n    start: function() {\r\n        Wonderleap.fetchAd(this.auId).then(function(ad) {\r\n            this.ad = ad;\r\n            WL.textures.load(ad.asset, '')\r\n                .then(function(texture) {\r\n                    const image = WL._images[texture._imageIndex];\r\n                    /* Make ad always 1 meter height, adjust width according to ad aspect ratio */\r\n                    this.collision.extents = [image.width/image.height, 1.0, 0.1];\r\n                    this.object.scale([image.width/image.height, 1.0, 1.0]);\r\n                    if(this.mesh.material.shader == 'Phong Textured') {\r\n                        this.mesh.material.diffuseTexture = texture;\r\n                    } else {\r\n                        this.mesh.material.flatTexture = texture;\r\n                    }\r\n                }.bind(this))\r\n                .catch(console.err);\r\n        }.bind(this));\r\n\r\n        this.cursorTarget.addClickFunction(this.click.bind(this));\r\n    },\r\n    update: function(dt) {\r\n        this.timeSinceLastVizCheck += dt;\r\n\r\n        /* visibility check */\r\n        if(this.timeSinceLastVizCheck > 0.5) {\r\n            const isVisible = this.isVisible();\r\n\r\n            if(isVisible) {\r\n                this.visibleDuration += this.timeSinceLastVizCheck;\r\n            }\r\n            this.timeSinceLastVizCheck = 0;\r\n\r\n            if((!isVisible && this.visibleDuration > 0) ||\r\n                this.visibleDuration > this.durationThreshold)\r\n            {\r\n                Wonderleap.sendMetric('gaze', this.visibleDuration, this.ad.adId, this.ad.auId);\r\n                this.visibleDuration = 0;\r\n            }\r\n        }\r\n    },\r\n\r\n    isVisible: function() {\r\n        /* Ensure there is a view and it's active */\r\n        const view = WL.scene.activeViews[0];\r\n        if(!view || !view.active) {\r\n            console.warn(\"wonderleap-ad: camera object does not have an active view\");\r\n            return false;\r\n        }\r\n\r\n        const transform = view.object.transformWorld;\r\n        const rayOrigin = [0, 0, 0];\r\n        quat2.getTranslation(rayOrigin, transform);\r\n        const rayDir = [0, 0, -1];\r\n        vec3.transformQuat(rayDir, rayDir, transform);\r\n\r\n        let hits = WL.scene.rayCast(rayOrigin, rayDir, 0x2);\r\n        for(let i = 0; i < hits.hitCount; ++i) {\r\n            const obj = hits.objects[i];\r\n            if(obj.objectId == this.object.objectId) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    click: function() {\r\n        /* Exit VR, in case active, then open link, otherwise open directly */\r\n        const s = Module['webxr_session'];\r\n        if(s) {\r\n            /* Try calling click again once the session ended,\r\n             * this time, the session will be null */\r\n            s.end().then(this.click.bind(this));\r\n            return;\r\n        }\r\n\r\n        Wonderleap.sendMetric('click', 0, this.ad.adId, this.ad.auId);\r\n        if(this.ad.url) {\r\n            window.open(this.ad.url, '_blank');\r\n        }\r\n    }\r\n});\r\n",
        "/* Backwards compatiblity for pre 0.8.5 */\r\nwindow.glMatrix = require('gl-matrix');\r\n\r\nrequire('./8thwall-camera.js');\r\nrequire('./cursor-target.js');\r\nrequire('./cursor.js');\r\nrequire('./debug-object.js');\r\nrequire('./device-orientation-look.js');\r\nrequire('./finger-cursor.js');\r\nrequire('./fixed-foveation.js');\r\nrequire('./hand-tracking.js');\r\nrequire('./hit-test-location.js');\r\nrequire('./howler-audio-listener.js');\r\nrequire('./howler-audio-source.js');\r\nrequire('./image-texture.js');\r\nrequire('./mouse-look.js');\r\nrequire('./target-framerate.js');\r\nrequire('./teleport.js');\r\nrequire('./two-joint-ik-solver.js');\r\nrequire('./video-texture.js');\r\nrequire('./vr-mode-active-switch.js');\r\nrequire('./wasd-controls.js');\r\nrequire('./wonderleap-ad.js');\r\n",
        "if (!PP) {\r\n    var PP = {};\r\n}",
        "WL.registerComponent('pp-grabbable', {\n    _myThrowLinearVelocityMultiplier: { type: WL.Type.Float, default: 1 },\n    _myThrowAngularVelocityMultiplier: { type: WL.Type.Float, default: 1 },\n    _myKinematicValueOnRelease: { type: WL.Type.Enum, values: ['true', 'false', 'keep'], default: 'false' },\n}, {\n    init: function () {\n        this._myIsGrabbed = false;\n\n        this._myGrabber = null;\n\n        this._myGrabCallbacks = new Map();      // Signature: callback(grabber, grabbable)\n        this._myThrowCallbacks = new Map();     // Signature: callback(grabber, grabbable)\n        this._myReleaseCallbacks = new Map();   // Signature: callback(grabber, grabbable, isThrow)\n    },\n    start: function () {\n        this._myOldParent = this.object.parent;\n        this._myPhysX = this.object.pp_getComponent('physx');\n        this._myOldKinematicValue = null;\n    },\n    onDeactivate: function () {\n        this.release();\n    },\n    grab: function (grabber) {\n        if (!this.isGrabbed()) {\n            this._myOldKinematicValue = this._myPhysX.kinematic;\n        }\n\n        this.release();\n\n        this._myPhysX.kinematic = true;\n\n        this._myOldParent = this.object.parent;\n        this.object.pp_setParent(grabber);\n\n        this._myIsGrabbed = true;\n\n        this._myGrabCallbacks.forEach(function (callback) { callback(grabber, this); }.bind(this));\n    },\n    throw: function (linearVelocity, angularVelocity) {\n        if (this._myIsGrabbed) {\n            let grabber = this._myGrabber;\n\n            this._release();\n\n            //#TODO for now kinematic is not updated instantly, add the if as soon as it is\n            //if (!this._myPhysX.kinematic) {\n            this._myPhysX.linearVelocity = linearVelocity.vec3_scale(this._myThrowLinearVelocityMultiplier);\n            this._myPhysX.angularVelocity = angularVelocity.vec3_scale(this._myThrowAngularVelocityMultiplier);\n            //}\n\n            this._myThrowCallbacks.forEach(function (callback) { callback(grabber, this); }.bind(this));\n            this._myReleaseCallbacks.forEach(function (callback) { callback(grabber, this, true); }.bind(this));\n        }\n    },\n    release() {\n        if (this._myIsGrabbed) {\n            let grabber = this._myGrabber;\n\n            this._release();\n\n            this._myReleaseCallbacks.forEach(function (callback) { callback(grabber, this, false); }.bind(this));\n        }\n    },\n    getLinearVelocity() {\n        let linearVelocity = vec3_create();\n\n        this._myPhysX.linearVelocity.vec3_clone(linearVelocity);\n\n        return linearVelocity;\n    },\n    getAngularVelocity() {\n        return this.getAngularVelocityDegrees();\n    },\n    getAngularVelocityDegrees() {\n        let angularVelocityDegrees = vec3_create();\n\n        this._myPhysX.angularVelocity.vec3_toDegrees(angularVelocityDegrees);\n\n        return angularVelocityDegrees;\n    },\n    getAngularVelocityRadians() {\n        let angularVelocityRadians = vec3_create();\n\n        this._myPhysX.angularVelocity.vec3_clone(angularVelocityRadians);\n\n        return angularVelocityRadians;\n    },\n    isGrabbed() {\n        return this._myIsGrabbed;\n    },\n    getGrabber() {\n        return this._myGrabber;\n    },\n    registerGrabEventListener(id, callback) {\n        this._myGrabCallbacks.set(id, callback);\n    },\n    unregisterGrabEventListener(id) {\n        this._myGrabCallbacks.delete(id);\n    },\n    registerThrowEventListener(id, callback) {\n        this._myThrowCallbacks.set(id, callback);\n    },\n    unregisterThrowEventListener(id) {\n        this._myThrowCallbacks.delete(id);\n    },\n    registerReleaseEventListener(id, callback) {\n        this._myReleaseCallbacks.set(id, callback);\n    },\n    unregisterReleaseEventListener(id) {\n        this._myReleaseCallbacks.delete(id);\n    },\n    _release() {\n        this.object.pp_setParent(this._myOldParent);\n        this._myIsGrabbed = false;\n        this._myGrabber = null;\n\n        if (this._myKinematicValueOnRelease == 0) {\n            this._myPhysX.kinematic = true;\n        } else if (this._myKinematicValueOnRelease == 1) {\n            this._myPhysX.kinematic = false;\n        } else if (this._myOldKinematicValue != null) {\n            this._myPhysX.kinematic = this._myOldKinematicValue;\n        }\n\n        if (this._myPhysX.kinematic) {\n            this._myPhysX.linearVelocity = [0, 0, 0];\n            this._myPhysX.angularVelocity = [0, 0, 0];\n        }\n    }\n});",
        "WL.registerComponent('pp-grabber-hand', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myGrabButton: { type: WL.Type.Enum, values: ['select', 'squeeze', 'both', 'both_exclusive'], default: 'squeeze' }, // both_exclusive means u can use both buttons but you have to use the same button you grabbed with to throw\r\n    _mySnapOnPivot: { type: WL.Type.Bool, default: false },\r\n    _myMaxNumberOfObjects: { type: WL.Type.Int, default: 1 }, // how many objects you can grab at the same time\r\n    // ADVANCED SETTINGS\r\n    _myThrowVelocitySource: { type: WL.Type.Enum, values: ['hand', 'grabbable'], default: 'hand' },\r\n    _myThrowLinearVelocityMultiplier: { type: WL.Type.Float, default: 1 }, // multiply the overall throw speed, so slow throws will be multiplied too\r\n    _myThrowMaxLinearSpeed: { type: WL.Type.Float, default: 15 },\r\n    _myThrowAngularVelocityMultiplier: { type: WL.Type.Float, default: 0.5 },\r\n    _myThrowMaxAngularSpeed: { type: WL.Type.Float, default: 1080 }, // degrees\r\n    _myThrowLinearVelocityBoost: { type: WL.Type.Float, default: 1.75 },   // this boost is applied from 0% to 100% based on how fast you throw, so slow throws are not affected\r\n    _myThrowLinearVelocityBoostMinSpeedThreshold: { type: WL.Type.Float, default: 0.6 },   // 0% boost is applied if plain throw speed is under this value\r\n    _myThrowLinearVelocityBoostMaxSpeedThreshold: { type: WL.Type.Float, default: 2.5 },   // 100% boost is applied if plain throw speed is over this value\r\n}, {\r\n    init: function () {\r\n        this._myHandPose = new PP.HandPose(PP.InputUtils.getHandednessByIndex(this._myHandedness));\r\n\r\n        this._myGrabbables = [];\r\n\r\n        this._myGamepad = null;\r\n\r\n        this._myActiveGrabButton = null;\r\n\r\n        this._myLinearVelocityHistorySize = 5;\r\n        this._myLinearVelocityHistorySpeedAverageSamplesFromStart = 1;\r\n        this._myLinearVelocityHistoryDirectionAverageSamplesFromStart = 3;\r\n        this._myLinearVelocityHistoryDirectionAverageSkipFromStart = 0;\r\n\r\n        this._myHandLinearVelocityHistory = new Array(this._myLinearVelocityHistorySize);\r\n        this._myHandLinearVelocityHistory.fill([0, 0, 0]);\r\n\r\n        this._myAngularVelocityHistorySize = 1;\r\n        this._myHandAngularVelocityHistory = new Array(this._myAngularVelocityHistorySize);\r\n        this._myHandAngularVelocityHistory.fill([0, 0, 0]);\r\n\r\n        this._myThrowMaxAngularSpeedRadians = Math.pp_toRadians(this._myThrowMaxAngularSpeed);\r\n\r\n        this._myGrabCallbacks = new Map();      // Signature: callback(grabber, grabbable)\r\n        this._myThrowCallbacks = new Map();     // Signature: callback(grabber, grabbable)\r\n\r\n        this._myDebugActive = false;\r\n    },\r\n    start: function () {\r\n        if (this._myHandedness == PP.HandednessIndex.LEFT) {\r\n            this._myGamepad = PP.myLeftGamepad;\r\n        } else {\r\n            this._myGamepad = PP.myRightGamepad;\r\n        }\r\n\r\n        this._myPhysX = this.object.pp_getComponent('physx');\r\n        this._myCollisionsCollector = new PP.PhysXCollisionCollector(this._myPhysX, true);\r\n\r\n        this._myHandPose.start();\r\n\r\n        if (this._myDebugActive) {\r\n            this._myDebugLines = [];\r\n            for (let i = 0; i < this._myLinearVelocityHistorySize; i++) {\r\n                let line = new PP.DebugLine();\r\n                line.setVisible(false);\r\n                this._myDebugLines.push(line);\r\n            }\r\n        }\r\n\r\n        this._myLastInputSourceType = PP.InputUtils.getInputSourceType(this._myHandPose._myHandedness);\r\n    },\r\n    update: function (dt) {\r\n        this._myCollisionsCollector.update(dt);\r\n        this._myHandPose.update(dt);\r\n\r\n        if (this._myGrabbables.length > 0) {\r\n            this._updateLinearVelocityHistory();\r\n            this._updateAngularVelocityHistory();\r\n        }\r\n\r\n        if (this._myLastInputSourceType != PP.InputUtils.getInputSourceType(this._myHandPose._myHandedness)) {\r\n            this._myLastInputSourceType = PP.InputUtils.getInputSourceType(this._myHandPose._myHandedness);\r\n            this.throw();\r\n        }\r\n\r\n        if (!this._myHandPose.isValid()) {\r\n            this.throw();\r\n        } else {\r\n            if (PP.InputUtils.getInputSourceType(this._myHandPose._myHandedness) != PP.InputSourceType.GAMEPAD) {\r\n                if (this._myGamepad.getButtonInfo(PP.ButtonType.SELECT).isPressStart()) {\r\n                    this._grab(PP.ButtonType.SELECT);\r\n                } else if (this._myGamepad.getButtonInfo(PP.ButtonType.SELECT).isPressEnd()) {\r\n                    this._throw(PP.ButtonType.SELECT);\r\n                }\r\n\r\n                if (this._myGamepad.getButtonInfo(PP.ButtonType.SQUEEZE).isPressStart()) {\r\n                    this._grab(PP.ButtonType.SQUEEZE);\r\n                } else if (this._myGamepad.getButtonInfo(PP.ButtonType.SQUEEZE).isPressEnd()) {\r\n                    this._throw(PP.ButtonType.SQUEEZE);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    grab: function (grabButton = null) {\r\n        this._grab(grabButton);\r\n    },\r\n    throw: function (throwButton = null) {\r\n        this._throw(throwButton);\r\n    },\r\n    registerGrabEventListener(id, callback) {\r\n        this._myGrabCallbacks.set(id, callback);\r\n    },\r\n    unregisterGrabEventListener(id) {\r\n        this._myGrabCallbacks.delete(id);\r\n    },\r\n    registerThrowEventListener(id, callback) {\r\n        this._myThrowCallbacks.set(id, callback);\r\n    },\r\n    unregisterThrowEventListener(id) {\r\n        this._myThrowCallbacks.delete(id);\r\n    },\r\n    onActivate() {\r\n        if (this._myGrabButton == 0) {\r\n            this._myGamepad.registerButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.PRESS_START, this, this._grab.bind(this, PP.ButtonType.SELECT));\r\n            this._myGamepad.registerButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.PRESS_END, this, this._throw.bind(this, PP.ButtonType.SELECT));\r\n        } else if (this._myGrabButton == 1) {\r\n            this._myGamepad.registerButtonEventListener(PP.ButtonType.SQUEEZE, PP.ButtonEvent.PRESS_START, this, this._grab.bind(this, PP.ButtonType.SQUEEZE));\r\n            this._myGamepad.registerButtonEventListener(PP.ButtonType.SQUEEZE, PP.ButtonEvent.PRESS_END, this, this._throw.bind(this, PP.ButtonType.SQUEEZE));\r\n        } else {\r\n            this._myGamepad.registerButtonEventListener(PP.ButtonType.SQUEEZE, PP.ButtonEvent.PRESS_START, this, this._grab.bind(this, PP.ButtonType.SQUEEZE));\r\n            this._myGamepad.registerButtonEventListener(PP.ButtonType.SQUEEZE, PP.ButtonEvent.PRESS_END, this, this._throw.bind(this, PP.ButtonType.SQUEEZE));\r\n\r\n            this._myGamepad.registerButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.PRESS_START, this, this._grab.bind(this, PP.ButtonType.SELECT));\r\n            this._myGamepad.registerButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.PRESS_END, this, this._throw.bind(this, PP.ButtonType.SELECT));\r\n        }\r\n    },\r\n    onDeactivate() {\r\n        if (this._myGrabButton == 0) {\r\n            this._myGamepad.unregisterButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.PRESS_END, this);\r\n        } else if (this._myGrabButton == 1) {\r\n            this._myGamepad.unregisterButtonEventListener(PP.ButtonType.SQUEEZE, PP.ButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(PP.ButtonType.SQUEEZE, PP.ButtonEvent.PRESS_END, this);\r\n        } else {\r\n            this._myGamepad.unregisterButtonEventListener(PP.ButtonType.SQUEEZE, PP.ButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(PP.ButtonType.SQUEEZE, PP.ButtonEvent.PRESS_END, this);\r\n\r\n            this._myGamepad.unregisterButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.PRESS_END, this);\r\n        }\r\n    },\r\n    _grab: function (grabButton) {\r\n        if (this._myGrabbables.length >= this._myMaxNumberOfObjects) {\r\n            return;\r\n        }\r\n\r\n        if (this._myGrabButton == 2 || this._myActiveGrabButton == null || this._myActiveGrabButton == grabButton || grabButton == null) {\r\n            let grabbablesToGrab = [];\r\n\r\n            let collisions = this._myCollisionsCollector.getCollisions();\r\n            for (let i = 0; i < collisions.length; i++) {\r\n                let grabbable = collisions[i].getComponent(\"pp-grabbable\");\r\n                if (grabbable && grabbable.active) {\r\n                    grabbablesToGrab.push(grabbable);\r\n                }\r\n            }\r\n\r\n            for (let grabbableToGrab of grabbablesToGrab) {\r\n                if (!this._isAlreadyGrabbed(grabbableToGrab)) {\r\n                    let grabbableData = new PP.GrabberHandGrabbableData(grabbableToGrab, this._myThrowVelocitySource == 1, this._myLinearVelocityHistorySize, this._myAngularVelocityHistorySize);\r\n                    this._myGrabbables.push(grabbableData);\r\n                    grabbableToGrab.grab(this.object);\r\n                    grabbableToGrab.registerReleaseEventListener(this, this._onRelease.bind(this));\r\n\r\n                    if (this._mySnapOnPivot) {\r\n                        grabbableToGrab.object.resetTranslation();\r\n                    }\r\n\r\n                    this._myGrabCallbacks.forEach(function (callback) { callback(this, grabbableToGrab); }.bind(this));\r\n                }\r\n\r\n                if (this._myGrabbables.length >= this._myMaxNumberOfObjects) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (this._myGrabbables.length > 0) {\r\n                if (this._myActiveGrabButton == null) {\r\n                    this._myActiveGrabButton = grabButton;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _throw: function (throwButton) {\r\n        if (this._myGrabButton == 2 || this._myActiveGrabButton == null || this._myActiveGrabButton == throwButton || throwButton == null) {\r\n            if (this._myGrabbables.length > 0) {\r\n                let linearVelocity = null;\r\n                let angularVelocity = null;\r\n\r\n                if (this._myThrowVelocitySource == 0) {\r\n                    linearVelocity = this._computeReleaseLinearVelocity(this._myHandLinearVelocityHistory);\r\n                    angularVelocity = this._computeReleaseAngularVelocity(this._myHandAngularVelocityHistory);\r\n                }\r\n\r\n                for (let grabbableData of this._myGrabbables) {\r\n                    let grabbable = grabbableData.getGrabbable();\r\n\r\n                    grabbable.unregisterReleaseEventListener(this);\r\n\r\n                    if (this._myThrowVelocitySource == 1) {\r\n                        linearVelocity = this._computeReleaseLinearVelocity(grabbableData.getLinearVelocityHistory());\r\n                        angularVelocity = this._computeReleaseAngularVelocity(grabbableData.getAngularVelocityHistory());\r\n                    }\r\n\r\n                    grabbable.throw(linearVelocity, angularVelocity);\r\n\r\n                    this._myThrowCallbacks.forEach(function (callback) { callback(this, grabbable); }.bind(this));\r\n                }\r\n\r\n                this._myGrabbables = [];\r\n            }\r\n\r\n            this._myActiveGrabButton = null;\r\n        }\r\n    },\r\n    _onRelease(grabber, grabbable) {\r\n        grabbable.unregisterReleaseEventListener(this);\r\n        this._myGrabbables.pp_remove(element => element.getGrabbable() == grabbable);\r\n\r\n        if (this._myGrabbables.length <= 0) {\r\n            this._myActiveGrabButton = null;\r\n        }\r\n    },\r\n    _updateLinearVelocityHistory() {\r\n        this._myHandLinearVelocityHistory.unshift(this._myHandPose.getLinearVelocity());\r\n        this._myHandLinearVelocityHistory.pop();\r\n\r\n        for (let grabbable of this._myGrabbables) {\r\n            grabbable.updateLinearVelocityHistory();\r\n        }\r\n    },\r\n    _updateAngularVelocityHistory() {\r\n        this._myHandAngularVelocityHistory.unshift(this._myHandPose.getAngularVelocityRadians());\r\n        this._myHandAngularVelocityHistory.pop();\r\n\r\n        for (let grabbable of this._myGrabbables) {\r\n            grabbable.updateAngularVelocityHistory();\r\n        }\r\n    },\r\n    _computeReleaseLinearVelocity(linearVelocityHistory) {\r\n        //speed\r\n        let speed = glMatrix.vec3.length(linearVelocityHistory[0]);\r\n        for (let i = 1; i < this._myLinearVelocityHistorySpeedAverageSamplesFromStart; i++) {\r\n            speed += glMatrix.vec3.length(linearVelocityHistory[i]);\r\n        }\r\n        speed /= this._myLinearVelocityHistorySpeedAverageSamplesFromStart;\r\n\r\n        // This way I give an increasing and smooth boost to the throw so that when u want to perform a weak throw, the value is not changed, but if u put more speed\r\n        // it will be boosted to make it easier and still feel good and natural (value does not increase suddenly)\r\n        let speedEaseMultiplier = Math.pp_mapToRange(speed, this._myThrowLinearVelocityBoostMinSpeedThreshold, this._myThrowLinearVelocityBoostMaxSpeedThreshold, 0, 1);\r\n        speedEaseMultiplier = PP.EasingFunction.easeIn(speedEaseMultiplier);\r\n\r\n        // Add the boost to the speed\r\n        let extraSpeed = speed * (speedEaseMultiplier * this._myThrowLinearVelocityBoost);\r\n        speed += extraSpeed;\r\n        speed *= this._myThrowLinearVelocityMultiplier;\r\n        speed = Math.pp_clamp(speed, 0, this._myThrowMaxLinearSpeed);\r\n\r\n        if (this._myDebugActive) {\r\n            this._debugDirectionLines(linearVelocityHistory);\r\n        }\r\n\r\n        //direction\r\n        let directionCurrentWeight = this._myLinearVelocityHistoryDirectionAverageSamplesFromStart;\r\n        let lastDirectionIndex = this._myLinearVelocityHistoryDirectionAverageSkipFromStart + this._myLinearVelocityHistoryDirectionAverageSamplesFromStart;\r\n        let direction = [0, 0, 0];\r\n        for (let i = this._myLinearVelocityHistoryDirectionAverageSkipFromStart; i < lastDirectionIndex; i++) {\r\n            let currentDirection = linearVelocityHistory[i];\r\n            glMatrix.vec3.scale(currentDirection, currentDirection, directionCurrentWeight);\r\n            glMatrix.vec3.add(direction, direction, currentDirection);\r\n\r\n            directionCurrentWeight--;\r\n        }\r\n        glMatrix.vec3.normalize(direction, direction);\r\n\r\n        glMatrix.vec3.scale(direction, direction, speed);\r\n\r\n        return direction;\r\n    },\r\n    _computeReleaseAngularVelocity(angularVelocityHistory) {\r\n        let angularVelocity = angularVelocityHistory[0];\r\n\r\n        //speed\r\n        let speed = glMatrix.vec3.length(angularVelocity);\r\n\r\n        speed = Math.pp_clamp(speed * this._myThrowAngularVelocityMultiplier, 0, this._myThrowMaxAngularSpeedRadians);\r\n\r\n        //direction\r\n        let direction = angularVelocity;\r\n        glMatrix.vec3.normalize(direction, direction);\r\n\r\n        glMatrix.vec3.scale(direction, direction, speed);\r\n\r\n        return direction;\r\n    },\r\n    _debugDirectionLines(linearVelocityHistory) {\r\n        for (let j = this._myLinearVelocityHistoryDirectionAverageSkipFromStart + this._myLinearVelocityHistoryDirectionAverageSamplesFromStart; j > this._myLinearVelocityHistoryDirectionAverageSkipFromStart; j--) {\r\n\r\n            let directionCurrentWeight = j - this._myLinearVelocityHistoryDirectionAverageSkipFromStart;\r\n            let lastDirectionIndex = j - this._myLinearVelocityHistoryDirectionAverageSkipFromStart;\r\n            let direction = [0, 0, 0];\r\n            for (let i = this._myLinearVelocityHistoryDirectionAverageSkipFromStart; i < lastDirectionIndex; i++) {\r\n                let currentDirection = linearVelocityHistory[i].pp_clone();\r\n                glMatrix.vec3.scale(currentDirection, currentDirection, directionCurrentWeight);\r\n                glMatrix.vec3.add(direction, direction, currentDirection);\r\n\r\n                directionCurrentWeight--;\r\n            }\r\n            glMatrix.vec3.normalize(direction, direction);\r\n\r\n            this._myDebugLines[j - 1].setStartDirectionLength(this.object.pp_getPosition(), direction, 0.2);\r\n            let color = 1 / j;\r\n            this._myDebugLines[j - 1].setColor([color, color, color, 1]);\r\n            this._myDebugLines[j - 1].setVisible(true);\r\n        }\r\n    },\r\n    _isAlreadyGrabbed(grabbable) {\r\n        let found = this._myGrabbables.pp_find(element => element.getGrabbable() == grabbable);\r\n        return found != null;\r\n    }\r\n});\r\n\r\nPP.GrabberHandGrabbableData = class GrabberHandGrabbableData {\r\n    constructor(grabbable, useGrabbableAsVelocitySource, linearVelocityHistorySize, angularVelocityHistorySize) {\r\n        this._myGrabbable = grabbable;\r\n        this._myUseGrabbableAsVelocitySource = useGrabbableAsVelocitySource;\r\n\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myLinearVelocityHistory = new Array(linearVelocityHistorySize);\r\n            this._myLinearVelocityHistory.fill([0, 0, 0]);\r\n\r\n            this._myAngularVelocityHistory = new Array(angularVelocityHistorySize);\r\n            this._myAngularVelocityHistory.fill([0, 0, 0]);\r\n        }\r\n    }\r\n\r\n    getGrabbable() {\r\n        return this._myGrabbable;\r\n    }\r\n\r\n    getLinearVelocityHistory() {\r\n        return this._myLinearVelocityHistory;\r\n    }\r\n\r\n    getAngularVelocityHistory() {\r\n        return this._myAngularVelocityHistory;\r\n    }\r\n\r\n    updateLinearVelocityHistory() {\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myLinearVelocityHistory.unshift(this._myGrabbable.getLinearVelocity());\r\n            this._myLinearVelocityHistory.pop();\r\n        }\r\n    }\r\n\r\n    updateAngularVelocityHistory() {\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myAngularVelocityHistory.unshift(this._myGrabbable.getAngularVelocityRadians());\r\n            this._myAngularVelocityHistory.pop();\r\n        }\r\n    }\r\n};",
        "WL.registerComponent('pp-finger-cursor', {\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\n    _myEnableMultipleClicks: { type: WL.Type.Bool, default: true },\n    _myCollisionGroup: { type: WL.Type.Int, default: 1 },\n    _myCursorMesh: { type: WL.Type.Mesh, default: null },\n    _myCursorMaterial: { type: WL.Type.Material, default: null },\n    _myCursorSize: { type: WL.Type.Float, default: 0.0125 }\n}, {\n    init: function () {\n        this._myLastTarget = null;\n        this._myReferenceSpace = null;\n        this._myHandInputSource = null;\n        this._myHandednessString = ['left', 'right'][this._myHandedness];\n\n        this._myDoubleClickTimer = 0;\n        this._myTripleClickTimer = 0;\n        this._myMultipleClickObject = null;\n        this._myMultipleClickDelay = 0.3;\n    },\n    start: function () {\n        this._myCursorObject = WL.scene.addObject(this.object.parent);\n        this._myCursorObject.scale([this._myCursorSize, this._myCursorSize, this._myCursorSize]);\n\n        if (this._myCursorMesh) {\n            this._myCursorMeshComponent = this._myCursorObject.addComponent(\"mesh\");\n            this._myCursorMeshComponent.mesh = this._myCursorMesh;\n            this._myCursorMeshComponent.material = this._myCursorMaterial.clone();\n        }\n\n        this._myCollisionComponent = this._myCursorObject.addComponent('collision');\n        this._myCollisionComponent.collider = 0; //sphere\n        this._myCollisionComponent.group = 1 << this._myCollisionGroup;\n        this._myCollisionComponent.extents = [this._myCursorSize, this._myCursorSize, this._myCursorSize];\n\n        if (WL.xrSession) {\n            this._onXRSessionStart(WL.xrSession);\n        }\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\n    },\n    update: function (dt) {\n        if (this._myDoubleClickTimer > 0) {\n            this._myDoubleClickTimer -= dt;\n        }\n\n        if (this._myTripleClickTimer > 0) {\n            this._myTripleClickTimer -= dt;\n        }\n\n        this._updateHand();\n\n        if (this._myHandInputSource) {\n            let overlaps = this._myCollisionComponent.queryOverlaps();\n            let overlapTarget = null;\n            for (let i = 0; i < overlaps.length; ++i) {\n                let object = overlaps[i].object;\n                let target = object.getComponent('cursor-target');\n                if (target) {\n                    overlapTarget = target;\n                    break;\n                }\n            }\n\n            if (!overlapTarget) {\n                this._targetTouchEnd();\n            } else if (!overlapTarget.equals(this._myLastTarget)) {\n                this._targetTouchEnd();\n\n                this._myLastTarget = overlapTarget;\n\n                this._targetTouchStart();\n            }\n        } else {\n            this._targetTouchEnd();\n        }\n    },\n    _targetTouchStart: function () {\n        this._myLastTarget.onHover(this._myLastTarget.object, this);\n        this._myLastTarget.onDown(this._myLastTarget.object, this);\n    },\n    _targetTouchEnd: function () {\n        if (this._myLastTarget) {\n            if (this._myEnableMultipleClicks && this._myTripleClickTimer > 0 && this._myMultipleClickObject && this._myMultipleClickObject.equals(this._myLastTarget.object)) {\n                this._myLastTarget.onTripleClick(this._myLastTarget.object, this);\n\n                this._myTripleClickTimer = 0;\n            } else if (this._myEnableMultipleClicks && this._myDoubleClickTimer > 0 && this._myMultipleClickObject && this._myMultipleClickObject.equals(this._myLastTarget.object)) {\n                this._myLastTarget.onDoubleClick(this._myLastTarget.object, this);\n\n                this._myTripleClickTimer = this._myMultipleClickDelay;\n                this._myDoubleClickTimer = 0;\n            } else {\n                this._myLastTarget.onClick(this._myLastTarget.object, this);\n\n                this._myTripleClickTimer = 0;\n                this._myDoubleClickTimer = this._myMultipleClickDelay;\n                this._myMultipleClickObject = this._myLastTarget.object;\n            }\n\n            this._myLastTarget.onUp(this._myLastTarget.object, this);\n            this._myLastTarget.onUnhover(this._myLastTarget.object, this);\n\n            this._myLastTarget = null;\n        }\n    },\n    setActive: function (active) {\n        this._myCursorObject.pp_setActiveHierarchy(active);\n        this.active = active;\n    },\n    _updateHand() {\n        this._myHandInputSource = PP.InputUtils.getInputSource(this._myHandednessString, PP.InputSourceType.HAND);\n\n        if (this._myHandInputSource) {\n            let tip = Module['webxr_frame'].getJointPose(this._myHandInputSource.hand.get(\"index-finger-tip\"), this._myReferenceSpace);\n\n            if (tip) {\n                this._myCursorObject.resetTransform();\n                this._myCursorObject.transformLocal.set([\n                    tip.transform.orientation.x,\n                    tip.transform.orientation.y,\n                    tip.transform.orientation.z,\n                    tip.transform.orientation.w]);\n                this._myCursorObject.translate([\n                    tip.transform.position.x,\n                    tip.transform.position.y,\n                    tip.transform.position.z]);\n                this._myCursorObject.scale([this._myCursorSize, this._myCursorSize, this._myCursorSize]);\n            }\n        }\n    },\n    _onXRSessionStart: function (session) {\n        session.requestReferenceSpace(WebXR.refSpace).then(function (referenceSpace) { this._myReferenceSpace = referenceSpace; }.bind(this));\n    },\n    _onXRSessionEnd: function (session) {\n        this._myReferenceSpace = null;\n    }\n\n\n});",
        "PP.HandPose = class HandPose {\r\n\r\n    constructor(handedness, fixForward = true, forceEmulatedVelocities = false) {\r\n        this._myInputSource = null;\r\n\r\n        this._myHandedness = handedness;\r\n        this._myFixForward = fixForward;\r\n        this._myForceEmulatedVelocities = forceEmulatedVelocities;\r\n\r\n        this._myReferenceSpace = null;\r\n\r\n        this._myPosition = [0, 0, 0];\r\n        this._myRotation = [0, 0, 0, 1];\r\n\r\n        this._myPrevPosition = [0, 0, 0];\r\n        this._myPrevRotation = [0, 0, 0, 1];\r\n\r\n        this._myLinearVelocity = [0, 0, 0];\r\n        this._myAngularVelocity = [0, 0, 0]; // Radians\r\n\r\n        this._myValid = false;\r\n    }\r\n\r\n    isValid() {\r\n        return this._myValid;\r\n    }\r\n\r\n    getReferenceSpace() {\r\n        return this._myReferenceSpace;\r\n    }\r\n\r\n    getPosition() {\r\n        return this._myPosition.slice(0);\r\n    }\r\n\r\n    getRotation() {\r\n        return this.getRotationDegrees();\r\n    }\r\n\r\n    getRotationDegrees() {\r\n        return this.getRotationQuat().quat_toDegrees();\r\n    }\r\n\r\n    getRotationRadians() {\r\n        return this.getRotationQuat().quat_toRadians();\r\n    }\r\n\r\n    getRotationQuat() {\r\n        // Implemented outside class definition\r\n    }\r\n\r\n    getTransform() {\r\n        return this.getTransformMatrix();\r\n    }\r\n\r\n    getTransformMatrix() {\r\n        return mat4_fromPositionRotationQuat(this._myPosition, this.getRotationQuat());\r\n    }\r\n\r\n    getTransformQuat() {\r\n        return quat2_fromPositionRotationQuat(this._myPosition, this.getRotationQuat());\r\n    }\r\n\r\n    getLinearVelocity() {\r\n        return this._myLinearVelocity.slice(0);\r\n    }\r\n\r\n    getAngularVelocity() {\r\n        return this.getAngularVelocityDegrees();\r\n    }\r\n\r\n    getAngularVelocityDegrees() {\r\n        return this._myAngularVelocity.vec3_toDegrees();\r\n    }\r\n\r\n    getAngularVelocityRadians() {\r\n        return this._myAngularVelocity.slice(0);\r\n    }\r\n\r\n    setFixForward(fixForward) {\r\n        this._myFixForward = fixForward;\r\n    }\r\n\r\n    setForceEmulatedVelocities(forceEmulatedVelocities) {\r\n        this._myForceEmulatedVelocities = forceEmulatedVelocities;\r\n    }\r\n\r\n    start() {\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(true, WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this, false));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    update(dt) {\r\n        glMatrix.vec3.copy(this._myPrevPosition, this._myPosition);\r\n        glMatrix.quat.copy(this._myPrevRotation, this._myRotation);\r\n\r\n        let xrFrame = Module['webxr_frame'];\r\n        if (xrFrame && this._myInputSource) {\r\n            let xrPose = null;\r\n            try {\r\n                xrPose = xrFrame.getPose(this._myInputSource.gripSpace, this._myReferenceSpace);\r\n            } catch (error) {\r\n            }\r\n\r\n            if (xrPose) {\r\n                this._myPosition[0] = xrPose.transform.position.x;\r\n                this._myPosition[1] = xrPose.transform.position.y;\r\n                this._myPosition[2] = xrPose.transform.position.z;\r\n\r\n                this._myRotation[0] = xrPose.transform.orientation.x;\r\n                this._myRotation[1] = xrPose.transform.orientation.y;\r\n                this._myRotation[2] = xrPose.transform.orientation.z;\r\n                this._myRotation[3] = xrPose.transform.orientation.w;\r\n\r\n                if (xrPose.linearVelocity && !this._myForceEmulatedVelocities) {\r\n                    this._myLinearVelocity[0] = xrPose.linearVelocity.x;\r\n                    this._myLinearVelocity[1] = xrPose.linearVelocity.y;\r\n                    this._myLinearVelocity[2] = xrPose.linearVelocity.z;\r\n                } else {\r\n                    this._computeEmulatedLinearVelocity(dt);\r\n                }\r\n\r\n                if (xrPose.angularVelocity && !this._myForceEmulatedVelocities) {\r\n                    this._myAngularVelocity[0] = xrPose.angularVelocity.x;\r\n                    this._myAngularVelocity[1] = xrPose.angularVelocity.y;\r\n                    this._myAngularVelocity[2] = xrPose.angularVelocity.z;\r\n                } else {\r\n                    this._computeEmulatedAngularVelocity(dt);\r\n                }\r\n\r\n                this._myValid = true;\r\n            } else {\r\n                //keep previous position and rotation but reset velocity because reasons\r\n\r\n                this._myLinearVelocity[0] = 0;\r\n                this._myLinearVelocity[1] = 0;\r\n                this._myLinearVelocity[2] = 0;\r\n\r\n                this._myAngularVelocity[0] = 0;\r\n                this._myAngularVelocity[1] = 0;\r\n                this._myAngularVelocity[2] = 0;\r\n\r\n                this._myValid = false;\r\n            }\r\n        } else {\r\n            //keep previous position and rotation but reset velocity because reasons\r\n\r\n            this._myLinearVelocity[0] = 0;\r\n            this._myLinearVelocity[1] = 0;\r\n            this._myLinearVelocity[2] = 0;\r\n\r\n            this._myAngularVelocity[0] = 0;\r\n            this._myAngularVelocity[1] = 0;\r\n            this._myAngularVelocity[2] = 0;\r\n\r\n            this._myValid = false;\r\n        }\r\n    }\r\n\r\n    _computeEmulatedLinearVelocity(dt) {\r\n        if (dt > 0) {\r\n            glMatrix.vec3.subtract(this._myLinearVelocity, this._myPosition, this._myPrevPosition);\r\n            glMatrix.vec3.scale(this._myLinearVelocity, this._myLinearVelocity, 1 / dt);\r\n        } else {\r\n            this._myLinearVelocity[0] = 0;\r\n            this._myLinearVelocity[1] = 0;\r\n            this._myLinearVelocity[2] = 0;\r\n        }\r\n    }\r\n\r\n    _computeEmulatedAngularVelocity(dt) {\r\n        if (dt > 0) {\r\n            glMatrix.vec3.subtract(this._myAngularVelocity, this._myRotation.quat_toRadians(), this._myPrevRotation.quat_toRadians());\r\n            glMatrix.vec3.scale(this._myAngularVelocity, this._myAngularVelocity, 1 / dt);\r\n        } else {\r\n            this._myAngularVelocity[0] = 0;\r\n            this._myAngularVelocity[1] = 0;\r\n            this._myAngularVelocity[2] = 0;\r\n        }\r\n    }\r\n\r\n    _onXRSessionStart(manualStart, session) {\r\n        session.requestReferenceSpace(WebXR.refSpace).then(function (referenceSpace) { this._myReferenceSpace = referenceSpace; }.bind(this));\r\n\r\n        session.addEventListener('inputsourceschange', function (event) {\r\n            if (event.removed) {\r\n                for (let item of event.removed) {\r\n                    if (item == this._myInputSource) {\r\n                        this._myInputSource = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (event.added) {\r\n                for (let item of event.added) {\r\n                    if (item.handedness == this._myHandedness) {\r\n                        this._myInputSource = item;\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n        if (manualStart && this._myInputSource == null && session.inputSources) {\r\n            for (let item of session.inputSources) {\r\n                if (item.handedness == this._myHandedness) {\r\n                    this._myInputSource = item;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionEnd(session) {\r\n        this._myReferenceSpace = null;\r\n        this._myInputSource = null;\r\n    }\r\n};\r\n\r\nPP.HandPose.prototype.getRotationQuat = function () {\r\n    let up = glMatrix.vec3.create();\r\n    let right = glMatrix.vec3.create();\r\n    return function getRotationQuat() {\r\n        let out = this._myRotation.slice(0);\r\n\r\n        if (PP.InputUtils.getInputSourceType(this._myHandedness) == PP.InputSourceType.HAND) {\r\n            if (this._myFixForward) {\r\n                out.quat_rotateAxisDegrees(180, out.quat_getUp(up), out);\r\n            }\r\n\r\n            out.quat_rotateAxisDegrees(-90, out.quat_getRight(right), out);\r\n        } else if (this._myFixForward) {\r\n            out = glMatrix.quat.rotateY(out, out, Math.PI);\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();",
        "PP.HeadPose = class HeadPose {\r\n\r\n    constructor(fixForward = true, forceEmulatedVelocities = false) {\r\n        this._myFixForward = fixForward;\r\n        this._myForceEmulatedVelocities = forceEmulatedVelocities;\r\n\r\n        this._myReferenceSpace = null;\r\n\r\n        this._myPosition = [0, 0, 0];\r\n        this._myRotation = [0, 0, 0, 1];\r\n\r\n        this._myPrevPosition = [0, 0, 0];\r\n        this._myPrevRotation = [0, 0, 0, 1];\r\n\r\n        this._myLinearVelocity = [0, 0, 0];\r\n        this._myAngularVelocity = [0, 0, 0]; // Radians\r\n    }\r\n\r\n    getReferenceSpace() {\r\n        return this._myReferenceSpace;\r\n    }\r\n\r\n    getPosition() {\r\n        return this._myPosition.slice(0);\r\n    }\r\n\r\n    getRotation() {\r\n        return this.getRotationDegrees();\r\n    }\r\n\r\n    getRotationDegrees() {\r\n        return this.getRotationQuat().quat_toDegrees();\r\n    }\r\n\r\n    getRotationRadians() {\r\n        return this.getRotationQuat().quat_toRadians();\r\n    }\r\n\r\n    getRotationQuat() {\r\n        let out = this._myRotation.slice(0);\r\n\r\n        if (this._myFixForward) {\r\n            out = glMatrix.quat.rotateY(out, out, Math.PI);\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    getTransform() {\r\n        return this.getTransformMatrix();\r\n    }\r\n\r\n    getTransformMatrix() {\r\n        return mat4_fromPositionRotationQuat(this._myPosition, this.getRotationQuat());\r\n    }\r\n\r\n    getTransformQuat() {\r\n        return quat2_fromPositionRotationQuat(this._myPosition, this.getRotationQuat());\r\n    }\r\n\r\n    getLinearVelocity() {\r\n        return this._myLinearVelocity.slice(0);\r\n    }\r\n\r\n    getAngularVelocity() {\r\n        return this.getAngularVelocityDegrees();\r\n    }\r\n\r\n    getAngularVelocityDegrees() {\r\n        return this._myAngularVelocity.vec3_toDegrees();\r\n    }\r\n\r\n    getAngularVelocityRadians() {\r\n        return this._myAngularVelocity.slice(0);\r\n    }\r\n\r\n    setFixForward(fixForward) {\r\n        this._myFixForward = fixForward;\r\n    }\r\n\r\n    setForceEmulatedVelocities(forceEmulatedVelocities) {\r\n        this._myForceEmulatedVelocities = forceEmulatedVelocities;\r\n    }\r\n\r\n    start() {\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    update(dt) {\r\n        glMatrix.vec3.copy(this._myPrevPosition, this._myPosition);\r\n        glMatrix.quat.copy(this._myPrevRotation, this._myRotation);\r\n\r\n        let xrFrame = Module['webxr_frame'];\r\n        if (xrFrame) {\r\n            let xrPose = null;\r\n            try {\r\n                xrPose = xrFrame.getViewerPose(this._myReferenceSpace);\r\n            } catch (error) {\r\n            }\r\n\r\n            if (xrPose) {\r\n                this._myPosition[0] = xrPose.transform.position.x;\r\n                this._myPosition[1] = xrPose.transform.position.y;\r\n                this._myPosition[2] = xrPose.transform.position.z;\r\n\r\n                this._myRotation[0] = xrPose.transform.orientation.x;\r\n                this._myRotation[1] = xrPose.transform.orientation.y;\r\n                this._myRotation[2] = xrPose.transform.orientation.z;\r\n                this._myRotation[3] = xrPose.transform.orientation.w;\r\n\r\n                if (xrPose.linearVelocity && !this._myForceEmulatedVelocities) {\r\n                    this._myLinearVelocity[0] = xrPose.linearVelocity.x;\r\n                    this._myLinearVelocity[1] = xrPose.linearVelocity.y;\r\n                    this._myLinearVelocity[2] = xrPose.linearVelocity.z;\r\n                } else {\r\n                    this._computeEmulatedLinearVelocity(dt);\r\n                }\r\n\r\n                if (xrPose.angularVelocity && !this._myForceEmulatedVelocities) {\r\n                    this._myAngularVelocity[0] = xrPose.angularVelocity.x;\r\n                    this._myAngularVelocity[1] = xrPose.angularVelocity.y;\r\n                    this._myAngularVelocity[2] = xrPose.angularVelocity.z;\r\n                } else {\r\n                    this._computeEmulatedAngularVelocity(dt);\r\n                }\r\n            } else {\r\n                //keep previous position and rotation but reset velocity because reasons\r\n\r\n                this._myLinearVelocity[0] = 0;\r\n                this._myLinearVelocity[1] = 0;\r\n                this._myLinearVelocity[2] = 0;\r\n\r\n                this._myAngularVelocity[0] = 0;\r\n                this._myAngularVelocity[1] = 0;\r\n                this._myAngularVelocity[2] = 0;\r\n            }\r\n        } else {\r\n            //keep previous position and rotation but reset velocity because reasons\r\n\r\n            this._myLinearVelocity[0] = 0;\r\n            this._myLinearVelocity[1] = 0;\r\n            this._myLinearVelocity[2] = 0;\r\n\r\n            this._myAngularVelocity[0] = 0;\r\n            this._myAngularVelocity[1] = 0;\r\n            this._myAngularVelocity[2] = 0;\r\n        }\r\n    }\r\n\r\n    _computeEmulatedLinearVelocity(dt) {\r\n        if (dt > 0) {\r\n            glMatrix.vec3.subtract(this._myLinearVelocity, this._myPosition, this._myPrevPosition);\r\n            glMatrix.vec3.scale(this._myLinearVelocity, this._myLinearVelocity, 1 / dt);\r\n        } else {\r\n            this._myLinearVelocity[0] = 0;\r\n            this._myLinearVelocity[1] = 0;\r\n            this._myLinearVelocity[2] = 0;\r\n        }\r\n    }\r\n\r\n    _computeEmulatedAngularVelocity(dt) {\r\n        if (dt > 0) {\r\n            glMatrix.vec3.subtract(this._myAngularVelocity, this._myRotation.quat_toRadians(), this._myPrevRotation.quat_toRadians());\r\n            glMatrix.vec3.scale(this._myAngularVelocity, this._myAngularVelocity, 1 / dt);\r\n        } else {\r\n            this._myAngularVelocity[0] = 0;\r\n            this._myAngularVelocity[1] = 0;\r\n            this._myAngularVelocity[2] = 0;\r\n        }\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        session.requestReferenceSpace(WebXR.refSpace).then(function (referenceSpace) { this._myReferenceSpace = referenceSpace; }.bind(this));\r\n    }\r\n\r\n    _onXRSessionEnd(session) {\r\n        this._myReferenceSpace = null;\r\n    }\r\n};",
        "\nPP.Handedness = {\n    LEFT: \"left\",\n    RIGHT: \"right\"\n};\n\nPP.HandednessIndex = {\n    LEFT: 0,\n    RIGHT: 1\n};\n\nPP.InputSourceType = {\n    GAMEPAD: 0,\n    HAND: 1\n};",
        "PP.InputUtils = {\r\n    getHandednessByIndex: function (index) {\r\n        let handedness = null;\r\n\r\n        switch (index) {\r\n            case PP.HandednessIndex.LEFT:\r\n                handedness = PP.Handedness.LEFT;\r\n                break;\r\n            case PP.HandednessIndex.RIGHT:\r\n                handedness = PP.Handedness.RIGHT;\r\n                break;\r\n        }\r\n\r\n        return handedness;\r\n    },\r\n    getInputSource: function (handedness, inputSourceType) {\r\n        let inputSource = null;\r\n\r\n        if (WL.xrSession && WL.xrSession.inputSources) {\r\n            for (let i = 0; i < WL.xrSession.inputSources.length; i++) {\r\n                let input = WL.xrSession.inputSources[i];\r\n\r\n                let isCorrectType = (!inputSourceType) || (inputSourceType == PP.InputSourceType.GAMEPAD && !input.hand) || (inputSourceType == PP.InputSourceType.HAND && input.hand);\r\n                if (isCorrectType && input.handedness == handedness) {\r\n                    inputSource = input;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return inputSource;\r\n    },\r\n    getInputSourceType: function (handedness) {\r\n        let inputSourceType = null;\r\n\r\n        let inputSource = PP.InputUtils.getInputSource(handedness);\r\n        if (inputSource) {\r\n            if (inputSource.hand) {\r\n                inputSourceType = PP.InputSourceType.HAND;\r\n            } else {\r\n                inputSourceType = PP.InputSourceType.GAMEPAD;\r\n            }\r\n        }\r\n\r\n        return inputSourceType;\r\n    }\r\n};",
        "//If you don't want the PP \"namespace\" just search and replace PP. with empty string\n//you must also add var in front of the enums (like var Handedness = {}) since now they are no longer child of PP\n//and also remove the class assignment to the same name (like ButtonInfo = class ButtonInfo{}) since now they can be global\n\nPP.ButtonType = {\n    SELECT: 0,  //Trigger\n    SQUEEZE: 1, //Grip\n    THUMBSTICK: 3,\n    BOTTOM_BUTTON: 4, // A or X button on oculus quest controller, also triggered for \"touchpad\" press on other controllers\n    TOP_BUTTON: 5  // B or Y button\n};\n\nPP.ButtonEvent = {\n    PRESS_START: 0,\n    PRESS_END: 1,\n    PRESSED: 2, //Every frame that it is pressed\n    NOT_PRESSED: 3, //Every frame that it is not pressed\n    TOUCH_START: 4,\n    TOUCH_END: 5,\n    TOUCHED: 6, //Every frame that it is touched\n    NOT_TOUCHED: 7, //Every frame that it is not touched\n    VALUE_CHANGED: 8,\n    ALWAYS: 9, //callback every frame for this button\n};\n\nPP.ButtonInfo = class ButtonInfo {\n    constructor() {\n        this.myIsPressed = false;\n        this.myPrevIsPressed = false;\n\n        this.myIsTouched = false;\n        this.myPrevIsTouched = false;\n\n        this.myValue = 0.0;\n        this.myPrevValue = 0.0;\n\n        this.myTimePressed = 0;\n        this.myPrevTimePressed = 0;\n\n        this.myTimeNotPressed = 0;\n        this.myPrevTimeNotPressed = 0;\n\n        this.myTimeTouched = 0;\n        this.myPrevTimeTouched = 0;\n\n        this.myTimeNotTouched = 0;\n        this.myPrevTimeNotTouched = 0;\n\n        this.myMultiplePressStartCount = 0;\n        this.myPrevMultiplePressStartCount = 0;\n        this.myMultiplePressEndCount = 0;\n        this.myPrevMultiplePressEndCount = 0;\n\n        this.myMultipleTouchStartCount = 0;\n        this.myPrevMultipleTouchStartCount = 0;\n        this.myMultipleTouchEndCount = 0;\n        this.myPrevMultipleTouchEndCount = 0;\n    }\n\n    getValue() {\n        return this.myValue;\n    }\n\n    isPressed() {\n        return this.myIsPressed;\n    }\n\n    isTouched() {\n        return this.myIsTouched;\n    }\n\n    isPressStart(multiplePressCount = null) {\n        return (this.myIsPressed && !this.myPrevIsPressed) && (multiplePressCount == null || this.myMultiplePressStartCount == multiplePressCount);\n    }\n\n    isPressEnd(multiplePressCount = null) {\n        return (!this.myIsPressed && this.myPrevIsPressed) && (multiplePressCount == null || this.myMultiplePressEndCount == multiplePressCount);\n    }\n\n    isTouchStart(multipleTouchCount = null) {\n        return (this.myIsTouched && !this.myPrevIsTouched) && (multipleTouchCount == null || this.myMultipleTouchStartCount == multipleTouchCount);\n    }\n\n    isTouchEnd(multipleTouchCount = null) {\n        return (!this.myIsTouched && this.myPrevIsTouched) && (multipleTouchCount == null || this.myMultipleTouchEndCount == multipleTouchCount);\n    }\n\n    clone() {\n        let value = new ButtonInfo();\n        value.myIsPressed = this.myIsPressed;\n        value.myPrevIsPressed = this.myPrevIsPressed;\n        value.myIsTouched = this.myIsTouched;\n        value.myPrevIsTouched = this.myPrevIsTouched;\n        value.myValue = this.myValue;\n        value.myPrevValue = this.myPrevValue;\n\n        value.myTimePressed = this.myTimePressed;\n        value.myPrevTimePressed = this.myPrevTimePressed;\n        value.myTimeNotPressed = this.myTimeNotPressed;\n        value.myPrevTimeNotPressed = this.myPrevTimeNotPressed;\n\n        value.myTimeTouched = this.myTimeTouched;\n        value.myPrevTimeTouched = this.myPrevTimeTouched;\n        value.myTimeNotTouched = this.myTimeNotTouched;\n        value.myPrevTimeNotTouched = this.myPrevTimeNotTouched;\n\n        value.myMultiplePressStartCount = this.myMultiplePressStartCount;\n        value.myPrevMultiplePressStartCount = this.myPrevMultiplePressStartCount;\n        value.myMultiplePressEndCount = this.myMultiplePressEndCount;\n        value.myPrevMultiplePressEndCount = this.myPrevMultiplePressEndCount;\n\n        value.myMultipleTouchStartCount = this.myMultipleTouchStartCount;\n        value.myPrevMultipleTouchStartCount = this.myPrevMultipleTouchStartCount;\n        value.myMultipleTouchEndCount = this.myMultipleTouchEndCount;\n        value.myPrevMultipleTouchEndCount = this.myPrevMultipleTouchEndCount;\n\n        return value;\n    }\n};\n\nPP.AxesEvent = {\n    X_CHANGED: 0,\n    Y_CHANGED: 1,\n    AXES_CHANGED: 2,\n    ALWAYS: 3\n};\n\n//index 0 is x, index 1 is y\nPP.AxesInfo = class AxesInfo {\n    constructor() {\n        this.myAxes = new Float32Array(2);\n        this.myAxes.fill(0.0);\n\n        this.myPrevAxes = new Float32Array(2);\n        this.myPrevAxes.fill(0.0);\n    }\n\n    clone() {\n        let value = new AxesInfo();\n        value.myAxes = this.myAxes;\n        value.myPrevAxes = this.myPrevAxes;\n\n        return value;\n    }\n};\n\nPP.PulseInfo = class PulseInfo {\n    constructor() {\n        this.myIntensity = 0.0;\n        this.myDuration = 0.0;\n\n        this.myIsDevicePulsing = false; // true if the gamepad actually sent a request to pulse to the device\n    }\n\n    clone() {\n        let value = new PulseInfo();\n        value.myIntensity = this.myIntensity;\n        value.myDuration = this.myDuration;\n        value.myIsDevicePulsing = this.myIsDevicePulsing;\n\n        return value;\n    }\n};\n\n/**\n * Lets you easily retrieve the current state of a gamepad and register to events\n * \n * xr-standard mapping is assumed for gamepad\n */\nPP.Gamepad = class Gamepad {\n\n    /**\n     * @param {PP.Handedness} handedness specifies which controller this gamepad will represent, left or right\n     */\n    constructor(handedness) {\n        this._myHandedness = handedness;\n\n        this._myButtonInfos = [];\n        for (let key in PP.ButtonType) {\n            this._myButtonInfos[PP.ButtonType[key]] = new PP.ButtonInfo();\n        }\n\n        this._myAxesInfo = new PP.AxesInfo();\n\n        this._mySelectStart = false;\n        this._mySelectEnd = false;\n        this._mySqueezeStart = false;\n        this._mySqueezeEnd = false;\n\n        this._myIsXRSessionActive = false;\n        this._myInputSource = null;\n        this._myGamepad = null;\n\n        this._myButtonCallbacks = [];\n        for (let typeKey in PP.ButtonType) {\n            this._myButtonCallbacks[PP.ButtonType[typeKey]] = [];\n            for (let eventKey in PP.ButtonEvent) {\n                this._myButtonCallbacks[PP.ButtonType[typeKey]][PP.ButtonEvent[eventKey]] = new Map(); //keys = object, item = callback\n            }\n        }\n\n        this._myAxesCallbacks = [];\n        for (let eventKey in PP.AxesEvent) {\n            this._myAxesCallbacks[PP.AxesEvent[eventKey]] = new Map(); //keys = object, item = callback\n        }\n\n        this._myPulseInfo = new PP.PulseInfo();\n\n        //Setup\n        this._myMultiplePressMaxDelay = 0.3;\n        this._myMultipleTouchMaxDelay = 0.3;\n    }\n\n    /**\n     * @returns {PP.Handedness}\n     */\n    getHandedness() {\n        return this._myHandedness;\n    }\n\n    /**\n     * @param {PP.ButtonType} buttonType\n     * @returns {PP.ButtonInfo}\n     */\n    getButtonInfo(buttonType) {\n        return this._myButtonInfos[buttonType].clone();\n    }\n\n    /**\n     * @param {PP.ButtonType} buttonType \n     * @param {PP.ButtonEvent} buttonEvent \n     * @param id \n     * @param callback callback params are (PP.ButtonInfo, PP.Gamepad)\n     */\n    registerButtonEventListener(buttonType, buttonEvent, id, callback) {\n        this._myButtonCallbacks[buttonType][buttonEvent].set(id, callback);\n    }\n\n    /**\n     * @param {PP.ButtonType} buttonType \n     * @param {PP.ButtonEvent} buttonEvent \n     * @param id \n     */\n    unregisterButtonEventListener(buttonType, buttonEvent, id) {\n        this._myButtonCallbacks[buttonType][buttonEvent].delete(id);\n    }\n\n    /**\n     * @returns {PP.AxesInfo}\n     */\n    getAxesInfo() {\n        return this._myAxesInfo.clone();\n    }\n\n    /**\n     * @param {PP.AxesEvent} axesEvent \n     * @param id \n     * @param callback callback parameters are (AxesInfo, Gamepad)\n     */\n    registerAxesEventListener(axesEvent, id, callback) {\n        this._myAxesCallbacks[axesEvent].set(id, callback);\n    }\n\n    /**\n     * @param {PP.AxesEvent} axesEvent \n     * @param id \n     */\n    unregisterAxesEventListener(axesEvent, id) {\n        this._myAxesCallbacks[axesEvent].delete(id);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isGamepadActive() {\n        //connected == null is to fix webxr emulator that leaves that field undefined\n        return this._myIsXRSessionActive && this._myGamepad != null && (this._myGamepad.connected == null || this._myGamepad.connected);\n    }\n\n    /**\n     * pulse, rumble, vibration, whatever\n     * @param {number} intensity range from 0 to 1\n     * @param {number} duration specified in seconds, 0 means 1 frame\n     */\n    pulse(intensity, duration = 0) {\n        this._myPulseInfo.myIntensity = Math.min(Math.max(intensity, 0), 1); //clamp \n        this._myPulseInfo.myDuration = Math.max(duration, 0);\n    }\n\n    stopPulse() {\n        this._myPulseInfo.myIntensity = 0;\n        this._myPulseInfo.myDuration = 0;\n    }\n\n    isPulsing() {\n        return this._myPulseInfo.myIntensity > 0 || this._myPulseInfo.myDuration > 0;\n    }\n\n    getPulseInfo() {\n        return this._myPulseInfo.clone();\n    }\n\n    getMultiplePressMaxDelay() {\n        return this._myMultiplePressMaxDelay;\n    }\n\n    setMultiplePressMaxDelay(maxDelay) {\n        this._myMultiplePressMaxDelay = maxDelay;\n    }\n\n    getMultipleTouchMaxDelay() {\n        return this._myMultipleTouchMaxDelay;\n    }\n\n    setMultipleTouchMaxDelay(maxDelay) {\n        this._myMultipleTouchMaxDelay = maxDelay;\n    }\n\n    start() {\n        if (WL.xrSession) {\n            this._onXRSessionStart(true, WL.xrSession);\n        }\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this, false));\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\n    }\n\n    update(dt) {\n        this._preUpdateButtonInfos();\n        this._updateButtonInfos();\n        this._postUpdateButtonInfos(dt);\n\n        this._preUpdateAxesInfos();\n        this._updateAxesInfos();\n        this._postUpdateAxesInfos();\n\n        this._updatePulse(dt);\n    }\n\n    _preUpdateButtonInfos() {\n        this._myButtonInfos.forEach(function (item) {\n            item.myPrevIsPressed = item.myIsPressed;\n            item.myPrevIsTouched = item.myIsTouched;\n            item.myPrevValue = item.myValue;\n        });\n    }\n\n    _updateButtonInfos() {\n        this._updateSelectAndSqueezePressed();\n        this._updateSingleButtonInfo(PP.ButtonType.SELECT, false);\n        this._updateSingleButtonInfo(PP.ButtonType.SQUEEZE, false);\n        this._updateSingleButtonInfo(PP.ButtonType.THUMBSTICK, true);\n        this._updateSingleButtonInfo(PP.ButtonType.BOTTOM_BUTTON, true);\n        this._updateSingleButtonInfo(PP.ButtonType.TOP_BUTTON, true);\n    }\n\n    //This sadly must be done this way to be the most compatible\n    _updateSelectAndSqueezePressed() {\n        let buttonSelect = this._myButtonInfos[PP.ButtonType.SELECT];\n\n        if (this._mySelectStart) {\n            buttonSelect.myIsPressed = true;\n        }\n        if (this._mySelectEnd) {\n            buttonSelect.myIsPressed = false;\n        }\n\n        let buttonSqueeze = this._myButtonInfos[PP.ButtonType.SQUEEZE];\n        if (this._mySqueezeStart) {\n            buttonSqueeze.myIsPressed = true;\n        }\n\n        if (this._mySqueezeEnd) {\n            buttonSqueeze.myIsPressed = false;\n        }\n\n        if (!this.isGamepadActive()) {\n            buttonSelect.myIsPressed = false;\n            buttonSqueeze.myIsPressed = false;\n        }\n    }\n\n    _updateSingleButtonInfo(buttonType, updatePressed) {\n        let button = this._myButtonInfos[buttonType];\n        let internalButton = this._getInternalButton(buttonType);\n\n        if (updatePressed) {\n            button.myIsPressed = internalButton.pressed;\n        }\n\n        button.myIsTouched = internalButton.touched;\n        button.myValue = internalButton.value;\n    }\n\n    _postUpdateButtonInfos(dt) {\n        this._myButtonInfos.forEach(function (item) {\n            if (item.myIsPressed) {\n                item.myTimePressed += dt;\n                if (!item.myPrevIsPressed) {\n                    item.myMultiplePressStartCount += 1;\n\n                    item.myPrevTimeNotPressed = item.myTimeNotPressed;\n                    item.myTimeNotPressed = 0;\n                }\n\n                if (item.myPrevTimeNotPressed + item.myTimePressed > this._myMultiplePressMaxDelay && item.myMultiplePressEndCount > 0) {\n                    item.myPrevMultiplePressEndCount = item.myMultiplePressEndCount;\n                    item.myMultiplePressEndCount = 0;\n                }\n\n                if (item.myTimePressed > this._myMultiplePressMaxDelay && item.myMultiplePressStartCount > 0) {\n                    item.myPrevMultiplePressStartCount = item.myMultiplePressStartCount;\n                    item.myMultiplePressStartCount = 0;\n                }\n            } else {\n                item.myTimeNotPressed += dt;\n                if (item.myPrevIsPressed) {\n                    item.myMultiplePressEndCount += 1;\n\n                    item.myPrevTimePressed = item.myTimePressed;\n                    item.myTimePressed = 0;\n                }\n\n                if (item.myPrevTimePressed + item.myTimeNotPressed > this._myMultiplePressMaxDelay && item.myMultiplePressStartCount > 0) {\n                    item.myPrevMultiplePressStartCount = item.myMultiplePressStartCount;\n                    item.myMultiplePressStartCount = 0;\n                }\n\n                if (item.myTimeNotPressed > this._myMultiplePressMaxDelay && item.myMultiplePressEndCount > 0) {\n                    item.myPrevMultiplePressEndCount = item.myMultiplePressEndCount;\n                    item.myMultiplePressEndCount = 0;\n                }\n            }\n\n            if (item.myIsTouched) {\n                item.myTimeTouched += dt;\n                if (!item.myPrevIsTouched) {\n                    item.myMultipleTouchStartCount += 1;\n\n                    item.myPrevTimeNotTouched = item.myTimeNotTouched;\n                    item.myTimeNotTouched = 0;\n                }\n\n                if (item.myPrevTimeNotTouched + item.myTimeTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchEndCount > 0) {\n                    item.myPrevMultipleTouchEndCount = item.myMultipleTouchEndCount;\n                    item.myMultipleTouchEndCount = 0;\n                }\n\n                if (item.myTimeTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchStartCount > 0) {\n                    item.myPrevMultipleTouchStartCount = item.myMultipleTouchStartCount;\n                    item.myMultipleTouchStartCount = 0;\n                }\n            } else {\n                item.myTimeNotTouched += dt;\n                if (item.myPrevIsTouched) {\n                    item.myMultipleTouchEndCount += 1;\n\n                    item.myPrevTimeTouched = item.myTimeTouched;\n                    item.myTimeTouched = 0;\n                }\n\n                if (item.myPrevTimeTouched + item.myTimeNotTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchStartCount > 0) {\n                    item.myPrevMultipleTouchStartCount = item.myMultipleTouchStartCount;\n                    item.myMultipleTouchStartCount = 0;\n                }\n\n                if (item.myTimeNotTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchEndCount > 0) {\n                    item.myPrevMultipleTouchEndCount = item.myMultipleTouchEndCount;\n                    item.myMultipleTouchEndCount = 0;\n                }\n            }\n        }.bind(this));\n\n        for (let typeKey in PP.ButtonType) {\n            let buttonInfo = this._myButtonInfos[PP.ButtonType[typeKey]];\n            let buttonCallbacks = this._myButtonCallbacks[PP.ButtonType[typeKey]];\n\n            //PRESSED\n            if (buttonInfo.myIsPressed && !buttonInfo.myPrevIsPressed) {\n                let callbacksMap = buttonCallbacks[PP.ButtonEvent.PRESS_START];\n                this._triggerCallbacks(callbacksMap, buttonInfo);\n            }\n\n            if (!buttonInfo.myIsPressed && buttonInfo.myPrevIsPressed) {\n                let callbacksMap = buttonCallbacks[PP.ButtonEvent.PRESS_END];\n                this._triggerCallbacks(callbacksMap, buttonInfo);\n            }\n\n            if (buttonInfo.myIsPressed) {\n                let callbacksMap = buttonCallbacks[PP.ButtonEvent.PRESSED];\n                this._triggerCallbacks(callbacksMap, buttonInfo);\n            } else {\n                let callbacksMap = buttonCallbacks[PP.ButtonEvent.NOT_PRESSED];\n                this._triggerCallbacks(callbacksMap, buttonInfo);\n            }\n\n            //TOUCHED\n            if (buttonInfo.myIsTouched && !buttonInfo.myPrevIsTouched) {\n                let callbacksMap = buttonCallbacks[PP.ButtonEvent.TOUCH_START];\n                this._triggerCallbacks(callbacksMap, buttonInfo);\n            }\n\n            if (!buttonInfo.myIsTouched && buttonInfo.myPrevIsTouched) {\n                let callbacksMap = buttonCallbacks[PP.ButtonEvent.TOUCH_END];\n                this._triggerCallbacks(callbacksMap, buttonInfo);\n            }\n\n            if (buttonInfo.myIsTouched) {\n                let callbacksMap = buttonCallbacks[PP.ButtonEvent.TOUCHED];\n                this._triggerCallbacks(callbacksMap, buttonInfo);\n            } else {\n                let callbacksMap = buttonCallbacks[PP.ButtonEvent.NOT_TOUCHED];\n                this._triggerCallbacks(callbacksMap, buttonInfo);\n            }\n\n            //VALUE\n            if (buttonInfo.myValue != buttonInfo.myPrevValue) {\n                let callbacksMap = buttonCallbacks[PP.ButtonEvent.VALUE_CHANGED];\n                this._triggerCallbacks(callbacksMap, buttonInfo);\n            }\n\n            //ALWAYS\n            let callbacksMap = buttonCallbacks[PP.ButtonEvent.ALWAYS];\n            this._triggerCallbacks(callbacksMap, buttonInfo);\n        }\n\n        this._mySelectStart = false;\n        this._mySelectEnd = false;\n        this._mySqueezeStart = false;\n        this._mySqueezeEnd = false;\n    }\n\n    _preUpdateAxesInfos() {\n        this._myAxesInfo.myPrevAxes = this._myAxesInfo.myAxes;\n    }\n\n    _updateAxesInfos() {\n        this._myAxesInfo.myAxes = this._getInternalAxes();\n    }\n\n    _postUpdateAxesInfos() {\n        //X CHANGED\n        if (this._myAxesInfo.myAxes[0] != this._myAxesInfo.myPrevAxes[0]) {\n            let callbacksMap = this._myAxesCallbacks[PP.AxesEvent.X_CHANGED];\n            this._triggerCallbacks(callbacksMap, this._myAxesInfo);\n        }\n\n        //Y CHANGED\n        if (this._myAxesInfo.myAxes[1] != this._myAxesInfo.myPrevAxes[1]) {\n            let callbacksMap = this._myAxesCallbacks[PP.AxesEvent.Y_CHANGED];\n            this._triggerCallbacks(callbacksMap, this._myAxesInfo);\n        }\n\n        //AXES CHANGED\n        if (!glMatrix.vec2.exactEquals(this._myAxesInfo.myAxes, this._myAxesInfo.myPrevAxes)) {\n            let callbacksMap = this._myAxesCallbacks[PP.AxesEvent.AXES_CHANGED];\n            this._triggerCallbacks(callbacksMap, this._myAxesInfo);\n        }\n\n        //ALWAYS        \n        let callbacksMap = this._myAxesCallbacks[PP.AxesEvent.ALWAYS];\n        this._triggerCallbacks(callbacksMap, this._myAxesInfo);\n    }\n\n    _getInternalButton(buttonType) {\n        let buttonData = { pressed: false, touched: false, value: 0 };\n        if (this.isGamepadActive()) {\n            if (buttonType < this._myGamepad.buttons.length) {\n                let gamepadButton = this._myGamepad.buttons[buttonType];\n                buttonData.pressed = gamepadButton.pressed;\n                buttonData.touched = gamepadButton.touched;\n                buttonData.value = gamepadButton.value;\n            } else if (buttonType == PP.ButtonType.BOTTOM_BUTTON && this._myGamepad.buttons.length >= 3) {\n                //This way if you are using a basic touch controller bottom button will work anyway\n                let touchButton = this._myGamepad.buttons[2];\n                buttonData.pressed = touchButton.pressed;\n                buttonData.touched = touchButton.touched;\n                buttonData.value = touchButton.value;\n            }\n        }\n\n        return buttonData;\n    }\n\n    _getInternalAxes() {\n        let axes = [0.0, 0.0];\n        if (this.isGamepadActive()) {\n            let internalAxes = this._myGamepad.axes;\n            if (internalAxes.length == 4) {\n                //in this case it could be both touch axes or thumbstick axes, that depends on the controller\n                //to support both I simply choose the absolute max value (unused axes will always be 0)\n\n                //X\n                if (Math.abs(internalAxes[0]) > Math.abs(internalAxes[2])) {\n                    axes[0] = internalAxes[0];\n                } else {\n                    axes[0] = internalAxes[2];\n                }\n\n                //Y\n                if (Math.abs(internalAxes[1]) > Math.abs(internalAxes[3])) {\n                    axes[1] = internalAxes[1];\n                } else {\n                    axes[1] = internalAxes[3];\n                }\n\n            } else if (internalAxes.length == 2) {\n                axes[0] = internalAxes[0];\n                axes[1] = internalAxes[1];\n            }\n\n            //y axis is recorder negative when thumbstick is pressed forward for weird reasons\n            axes[1] = -axes[1];\n        }\n\n        return axes;\n    }\n\n    _updatePulse(dt) {\n        let hapticActuator = this._getHapticActuator();\n        if (hapticActuator) {\n            if (this._myPulseInfo.myIntensity > 0) {\n                hapticActuator.pulse(this._myPulseInfo.myIntensity, 1000); //duration is managed by this class\n                this._myPulseInfo.myIsDevicePulsing = true;\n            } else if (this._myPulseInfo.myIsDevicePulsing) {\n                hapticActuator.reset();\n                this._myPulseInfo.myIsDevicePulsing = false;\n            }\n        }\n\n        this._myPulseInfo.myDuration -= dt;\n        if (this._myPulseInfo.myDuration <= 0) {\n            this._myPulseInfo.myIntensity = 0;\n            this._myPulseInfo.myDuration = 0;\n        }\n    }\n\n    _getHapticActuator() {\n        let hapticActuator = null;\n\n        if (this.isGamepadActive()) {\n            if (this._myGamepad.hapticActuators && this._myGamepad.hapticActuators.length > 0) {\n                hapticActuator = this._myGamepad.hapticActuators[0];\n            } else {\n                hapticActuator = this._myGamepad.vibrationActuator;\n            }\n        }\n\n        return hapticActuator;\n    }\n\n    _onXRSessionStart(manualStart, session) {\n        session.addEventListener(\"inputsourceschange\", function (event) {\n            if (event.removed) {\n                for (let item of event.removed) {\n                    if (item.gamepad == this._myGamepad) {\n                        this._myInputSource = null;\n                        this._myGamepad = null;\n                    }\n                }\n            }\n\n            if (event.added) {\n                for (let item of event.added) {\n                    if (item.handedness == this._myHandedness) {\n                        this._myInputSource = item;\n                        this._myGamepad = item.gamepad;\n                    }\n                }\n            }\n        }.bind(this));\n\n        if (manualStart && this._myInputSource == null && session.inputSources) {\n            for (let item of session.inputSources) {\n                if (item.handedness == this._myHandedness) {\n                    this._myInputSource = item;\n                    this._myGamepad = item.gamepad;\n                }\n            }\n        }\n\n        session.addEventListener(\"selectstart\", this._selectStart.bind(this));\n        session.addEventListener(\"selectend\", this._selectEnd.bind(this));\n\n        session.addEventListener(\"squeezestart\", this._squeezeStart.bind(this));\n        session.addEventListener(\"squeezeend\", this._squeezeEnd.bind(this));\n\n        this._myIsXRSessionActive = true;\n    }\n\n    _onXRSessionEnd(session) {\n        this._myInputSource = null;\n        this._myGamepad = null;\n\n        this._myIsXRSessionActive = false;\n    }\n\n    //Select and Squeeze are managed this way to be more compatible\n    _selectStart(event) {\n        if (event.inputSource.handedness == this._myHandedness) {\n            this._mySelectStart = true;\n        }\n    }\n\n    _selectEnd(event) {\n        if (event.inputSource.handedness == this._myHandedness) {\n            this._mySelectEnd = true;\n        }\n    }\n\n    _squeezeStart(event) {\n        if (event.inputSource.handedness == this._myHandedness) {\n            this._mySqueezeStart = true;\n        }\n    }\n\n    _squeezeEnd(event) {\n        if (event.inputSource.handedness == this._myHandedness) {\n            this._mySqueezeEnd = true;\n        }\n    }\n\n    _triggerCallbacks(callbacksMap, info) {\n        for (let callback of callbacksMap.values()) {\n            callback(info, this);\n        }\n    }\n};",
        "/**\n * Animate the buttons of a gamepad, like pressing, thumbstick tilting and so on\n */\nWL.registerComponent('pp-gamepad-animator', {\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\n    _mySelect: { type: WL.Type.Object, default: null },\n    _mySqueeze: { type: WL.Type.Object, default: null },\n    _myThumbstick: { type: WL.Type.Object, default: null },\n    _myBottomButton: { type: WL.Type.Object, default: null },\n    _myTopButton: { type: WL.Type.Object, default: null }\n}, {\n    init: function () {\n        this._myGamepad = null;\n\n        this._myNormalDiffuseButtonColor = null; //@EDIT with the color you want, or leave null to keep the material color, set all color variables or none\n        this._myNormalAmbientButtonColor = null; // set them like this [x/255, y/255, z/255, w/255]\n        this._myIsTouchedDiffuseButtonColor = null;\n        this._myIsTouchedAmbientButtonColor = null;\n\n        this._myThumbstickInitialLocalForward = this._getLocalAxis(this._myThumbstick, [0, 0, 1]);\n        this._myThumbstickForward = [0, 0, 1];\n        this._mySelectForward = [0, 0, 1];\n\n        this._myIsMeshEnabled = false;\n    },\n    start: function () {\n        if (this._myHandedness == 0) {\n            this._myGamepad = PP.myLeftGamepad; //@EDIT get gamepad LEFT here based on how you store it in your game\n        } else {\n            this._myGamepad = PP.myRightGamepad; //@EDIT get gamepad RIGHT here based on how you store it in your game\n        }\n\n        this._mySelectMaterial = this._mySelect.getComponent(\"mesh\").material.clone();\n        this._mySelect.getComponent(\"mesh\").material = this._mySelectMaterial;\n        this._mySelectPosition = new Float32Array(3);\n        this._mySelect.getTranslationLocal(this._mySelectPosition);\n        if (this._myNormalDiffuseButtonColor) {\n            this._mySelectMaterial.diffuseColor = this._myNormalDiffuseButtonColor;\n            this._mySelectMaterial.ambientColor = this._myNormalAmbientButtonColor;\n        }\n\n        this._mySqueezeMaterial = this._mySqueeze.getComponent(\"mesh\").material.clone();\n        this._mySqueeze.getComponent(\"mesh\").material = this._mySqueezeMaterial;\n        this._mySqueezePosition = new Float32Array(3);\n        this._mySqueeze.getTranslationLocal(this._mySqueezePosition);\n        if (this._myNormalDiffuseButtonColor) {\n            this._mySqueezeMaterial.diffuseColor = this._myNormalDiffuseButtonColor;\n            this._mySqueezeMaterial.ambientColor = this._myNormalAmbientButtonColor;\n        }\n\n        this._myThumbstickMaterial = this._myThumbstick.getComponent(\"mesh\").material.clone();\n        this._myThumbstick.getComponent(\"mesh\").material = this._myThumbstickMaterial;\n        this._myThumbstickPosition = new Float32Array(3);\n        this._myThumbstick.getTranslationLocal(this._myThumbstickPosition);\n        if (this._myNormalDiffuseButtonColor) {\n            this._myThumbstickMaterial.diffuseColor = this._myNormalDiffuseButtonColor;\n            this._myThumbstickMaterial.ambientColor = this._myNormalAmbientButtonColor;\n        }\n\n        this._myBottomButtonMaterial = this._myBottomButton.getComponent(\"mesh\").material.clone();\n        this._myBottomButton.getComponent(\"mesh\").material = this._myBottomButtonMaterial;\n        this._myBottomButtonPosition = new Float32Array(3);\n        this._myBottomButton.getTranslationLocal(this._myBottomButtonPosition);\n        if (this._myNormalDiffuseButtonColor) {\n            this._myBottomButtonMaterial.diffuseColor = this._myNormalDiffuseButtonColor;\n            this._myBottomButtonMaterial.ambientColor = this._myNormalAmbientButtonColor;\n        }\n\n        this._myTopButtonMaterial = this._myTopButton.getComponent(\"mesh\").material.clone();\n        this._myTopButton.getComponent(\"mesh\").material = this._myTopButtonMaterial;\n        this._myTopButtonPosition = new Float32Array(3);\n        this._myTopButton.getTranslationLocal(this._myTopButtonPosition);\n        if (this._myNormalDiffuseButtonColor) {\n            this._myTopButtonMaterial.diffuseColor = this._myNormalDiffuseButtonColor;\n            this._myTopButtonMaterial.ambientColor = this._myNormalAmbientButtonColor;\n        }\n\n        //PRESSED\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.THUMBSTICK, PP.ButtonEvent.PRESS_START, this, this._thumbstickPressedStart.bind(this));\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.THUMBSTICK, PP.ButtonEvent.PRESS_END, this, this._thumbstickPressedEnd.bind(this));\n\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.BOTTOM_BUTTON, PP.ButtonEvent.PRESS_START, this, this._bottomButtonPressedStart.bind(this));\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.BOTTOM_BUTTON, PP.ButtonEvent.PRESS_END, this, this._bottomButtonPressedEnd.bind(this));\n\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.TOP_BUTTON, PP.ButtonEvent.PRESS_START, this, this._topButtonPressedStart.bind(this));\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.TOP_BUTTON, PP.ButtonEvent.PRESS_END, this, this._topButtonPressedEnd.bind(this));\n\n        //TOUCHED\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.TOUCH_START, this, this._selectTouchedStart.bind(this));\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.TOUCH_END, this, this._selectTouchedEnd.bind(this));\n\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.SQUEEZE, PP.ButtonEvent.TOUCH_START, this, this._squeezeTouchedStart.bind(this));\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.SQUEEZE, PP.ButtonEvent.TOUCH_END, this, this._squeezeTouchedEnd.bind(this));\n\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.THUMBSTICK, PP.ButtonEvent.TOUCH_START, this, this._thumbstickTouchedStart.bind(this));\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.THUMBSTICK, PP.ButtonEvent.TOUCH_END, this, this._thumbstickTouchedEnd.bind(this));\n\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.BOTTOM_BUTTON, PP.ButtonEvent.TOUCH_START, this, this._bottomButtonTouchedStart.bind(this));\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.BOTTOM_BUTTON, PP.ButtonEvent.TOUCH_END, this, this._bottomButtonTouchedEnd.bind(this));\n\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.TOP_BUTTON, PP.ButtonEvent.TOUCH_START, this, this._topButtonTouchedStart.bind(this));\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.TOP_BUTTON, PP.ButtonEvent.TOUCH_END, this, this._topButtonTouchedEnd.bind(this));\n\n        //VALUE CHANGED\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.SQUEEZE, PP.ButtonEvent.VALUE_CHANGED, this, this._squeezeValueChanged.bind(this));\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.VALUE_CHANGED, this, this._selectValueChanged.bind(this));\n\n        //AXES CHANGED\n        this._myGamepad.registerAxesEventListener(PP.AxesEvent.AXES_CHANGED, this, this._axesValueChanged.bind(this));\n\n        this.object.scale([0, 0, 0]);\n    },\n    update: function (dt) {\n        this._enableMeshInSession();\n    },\n    _thumbstickPressedStart: function (buttonInfo, gamepad) {\n        //since thumbstick object rotate I need to specifically use its initial forward\n        let tempVector = glMatrix.vec3.create();\n        glMatrix.vec3.scale(tempVector, this._myThumbstickInitialLocalForward, 0.0015);\n        this._myThumbstick.translate(tempVector);\n    },\n    _thumbstickPressedEnd: function (buttonInfo, gamepad) {\n        let tempVector = glMatrix.vec3.create();\n        glMatrix.vec3.scale(tempVector, this._myThumbstickInitialLocalForward, -0.0015);\n        this._myThumbstick.translate(tempVector);\n    },\n    _bottomButtonPressedStart: function (buttonInfo, gamepad) {\n        this._translateLocalAxis(this._myBottomButton, [0, 0, 1], 0.002);\n    },\n    _bottomButtonPressedEnd: function (buttonInfo, gamepad) {\n        this._translateLocalAxis(this._myBottomButton, [0, 0, 1], -0.002);\n    },\n    _topButtonPressedStart: function (buttonInfo, gamepad) {\n        this._translateLocalAxis(this._myTopButton, [0, 0, 1], 0.002);\n    },\n    _topButtonPressedEnd: function (buttonInfo, gamepad) {\n        this._translateLocalAxis(this._myTopButton, [0, 0, 1], -0.002);\n    },\n    //TOUCHED\n    _selectTouchedStart: function (buttonInfo, gamepad) {\n        if (this._myNormalDiffuseButtonColor) {\n            this._mySelectMaterial.diffuseColor = this._myIsTouchedDiffuseButtonColor;\n            this._mySelectMaterial.ambientColor = this._myIsTouchedAmbientButtonColor;\n        }\n    },\n    _selectTouchedEnd: function (buttonInfo, gamepad) {\n        if (this._myNormalDiffuseButtonColor) {\n            this._mySelectMaterial.diffuseColor = this._myNormalDiffuseButtonColor;\n            this._mySelectMaterial.ambientColor = this._myNormalAmbientButtonColor;\n        }\n    },\n    _squeezeTouchedStart: function (buttonInfo, gamepad) {\n        if (this._myNormalDiffuseButtonColor) {\n            this._mySqueezeMaterial.diffuseColor = this._myIsTouchedDiffuseButtonColor;\n            this._mySqueezeMaterial.ambientColor = this._myIsTouchedAmbientButtonColor;\n        }\n    },\n    _squeezeTouchedEnd: function (buttonInfo, gamepad) {\n        if (this._myNormalDiffuseButtonColor) {\n            this._mySqueezeMaterial.diffuseColor = this._myNormalDiffuseButtonColor;\n            this._mySqueezeMaterial.ambientColor = this._myNormalAmbientButtonColor;\n        }\n    },\n    _thumbstickTouchedStart: function (buttonInfo, gamepad) {\n        if (this._myNormalDiffuseButtonColor) {\n            this._myThumbstickMaterial.diffuseColor = this._myIsTouchedDiffuseButtonColor;\n            this._myThumbstickMaterial.ambientColor = this._myIsTouchedAmbientButtonColor;\n        }\n    },\n    _thumbstickTouchedEnd: function (buttonInfo, gamepad) {\n        if (this._myNormalDiffuseButtonColor) {\n            this._myThumbstickMaterial.diffuseColor = this._myNormalDiffuseButtonColor;\n            this._myThumbstickMaterial.ambientColor = this._myNormalAmbientButtonColor;\n        }\n    },\n    _bottomButtonTouchedStart: function (buttonInfo, gamepad) {\n        if (this._myNormalDiffuseButtonColor) {\n            this._myBottomButtonMaterial.diffuseColor = this._myIsTouchedDiffuseButtonColor;\n            this._myBottomButtonMaterial.ambientColor = this._myIsTouchedAmbientButtonColor;\n        }\n    },\n    _bottomButtonTouchedEnd: function (buttonInfo, gamepad) {\n        if (this._myNormalDiffuseButtonColor) {\n            this._myBottomButtonMaterial.diffuseColor = this._myNormalDiffuseButtonColor;\n            this._myBottomButtonMaterial.ambientColor = this._myNormalAmbientButtonColor;\n        }\n    },\n    _topButtonTouchedStart: function (buttonInfo, gamepad) {\n        if (this._myNormalDiffuseButtonColor) {\n            this._myTopButtonMaterial.diffuseColor = this._myIsTouchedDiffuseButtonColor;\n            this._myTopButtonMaterial.ambientColor = this._myIsTouchedAmbientButtonColor;\n        }\n    },\n    _topButtonTouchedEnd: function (buttonInfo, gamepad) {\n        if (this._myNormalDiffuseButtonColor) {\n            this._myTopButtonMaterial.diffuseColor = this._myNormalDiffuseButtonColor;\n            this._myTopButtonMaterial.ambientColor = this._myNormalAmbientButtonColor;\n        }\n    },\n    _selectValueChanged: function (buttonInfo, gamepad) {\n        //first reset rotation to start position\n        this._copyAlignRotation(this._mySelect, this._mySelectForward, [0, 0, 1]);\n\n        let angleToRotate = glMatrix.glMatrix.toRadian(15 * buttonInfo.myValue);\n        let tiltDirection = [0, 0, 1];\n        glMatrix.vec3.rotateX(tiltDirection, tiltDirection, [0, 0, 0], angleToRotate);\n        glMatrix.vec3.normalize(tiltDirection, tiltDirection);\n\n        this._copyAlignRotation(this._mySelect, [0, 0, 1], tiltDirection);\n\n        this._mySelectForward = tiltDirection;\n    },\n    _squeezeValueChanged: function (buttonInfo, gamepad) {\n        this._mySqueeze.setTranslationLocal(this._mySqueezePosition);\n        let translation = 0.0015;\n        if (this._myHandedness == 1) {\n            translation *= -1;\n        }\n        this._translateLocalAxis(this._mySqueeze, [1, 0, 0], translation * buttonInfo.myValue);\n    },\n    _axesValueChanged: function (axesInfo, gamepad) {\n        //first reset rotation to start position\n        this._copyAlignRotation(this._myThumbstick, this._myThumbstickForward, [0, 0, 1]);\n\n        let tiltDirection = new Float32Array(3);\n        glMatrix.vec3.add(tiltDirection, [0, 0, 1], [axesInfo.myAxes[0], -axesInfo.myAxes[1], 0.0]);\n        glMatrix.vec3.normalize(tiltDirection, tiltDirection);\n\n        this._copyAlignRotation(this._myThumbstick, [0, 0, 1], tiltDirection);\n\n        this._myThumbstickForward = tiltDirection;\n    },\n    //Couldn't find a better name, basically find the rotation to align start axis to end, and apply that to object\n    _copyAlignRotation: function (object, startAxis, endAxis) {\n        let rotationAxis = new Float32Array(3);\n        glMatrix.vec3.cross(rotationAxis, startAxis, endAxis);\n        glMatrix.vec3.normalize(rotationAxis, rotationAxis);\n\n        let angleToRotate = glMatrix.vec3.angle(startAxis, endAxis);\n\n        if (angleToRotate > 0.0001) {\n            object.rotateAxisAngleRadObject(rotationAxis, angleToRotate);\n        }\n    },\n    _translateLocalAxis(object, axis, amount) {\n        let tempVector = this._getLocalAxis(object, axis);\n        glMatrix.vec3.scale(tempVector, tempVector, amount);\n        object.translate(tempVector);\n    },\n    _getLocalAxis(object, axis) {\n        let tempVector = glMatrix.vec3.create();\n        glMatrix.vec3.transformQuat(tempVector, axis, object.transformLocal);\n        glMatrix.vec3.normalize(tempVector, tempVector);\n        return tempVector;\n    },\n    _enableMeshInSession: function () {\n        if (!this._myIsMeshEnabled) {\n            if (WL.xrSession) {\n                this.object.resetScaling();\n                this._myIsMeshEnabled = true;\n            }\n        } else {\n            if (!WL.xrSession) {\n                this.object.scale([0, 0, 0]);\n                this._myIsMeshEnabled = false;\n            }\n        }\n    }\n});",
        "PP.GamepadManager = class GamepadManager {\r\n    constructor() {\r\n        this._myLeftGamepad = new PP.Gamepad(PP.Handedness.LEFT);\r\n        this._myRightGamepad = new PP.Gamepad(PP.Handedness.RIGHT);\r\n    }\r\n\r\n    start() {\r\n        this._myLeftGamepad.start();\r\n        this._myRightGamepad.start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myLeftGamepad.update(dt);\r\n        this._myRightGamepad.update(dt);\r\n    }\r\n\r\n    getLeftGamepad() {\r\n        return this._myLeftGamepad;\r\n    }\r\n\r\n    getRightGamepad() {\r\n        return this._myRightGamepad;\r\n    }\r\n\r\n    getGamepad(handedness) {\r\n        let gamepad = null;\r\n\r\n        switch (handedness) {\r\n            case PP.Handedness.LEFT:\r\n                gamepad = this._myLeftGamepad;\r\n                break;\r\n            case PP.Handedness.RIGHT:\r\n                gamepad = this._myRightGamepad;\r\n                break;\r\n            default:\r\n                gamepad = null;\r\n        }\r\n\r\n        return gamepad;\r\n    }\r\n\r\n    getGamepads() {\r\n        let gamepads = [];\r\n\r\n        gamepads[PP.Handedness.LEFT] = this._myLeftGamepad;\r\n        gamepads[PP.Handedness.RIGHT] = this._myRightGamepad;\r\n\r\n        return gamepads;\r\n    }\r\n};",
        "/**\n * A quick and simple way to have the gamepads up and running\n * Add this manager to an object that will never be destroyed (like the Player object)\n * otherwise the gamepads will not be updated anymore\n */\nWL.registerComponent('pp-gamepad-manager', {\n}, {\n    init: function () {\n        this._myGamepadManager = new PP.GamepadManager();\n\n        PP.myLeftGamepad = this._myGamepadManager.getLeftGamepad();\n        PP.myRightGamepad = this._myGamepadManager.getRightGamepad();\n        PP.myGamepads = this._myGamepadManager.getGamepads();\n    },\n    start: function () {\n        this._myGamepadManager.start();\n    },\n    update: function (dt) {\n        this._myGamepadManager.update(dt);\n    },\n});\n\nPP.myLeftGamepad = null;\nPP.myRightGamepad = null;\nPP.myGamepads = null;",
        "PP.GamepadUtils = {\r\n    _myPressTogetherMaxDelay: 0.15,\r\n    _myTouchTogetherMaxDelay: 0.15,\r\n\r\n    // gamepadButtonTypesList is a sequence of a gamepad and a list of buttonTypes like this ([gamepad1, squeeze, top, select], [gamepad2, bottom, squeeze, select], ...)\r\n    // if the first paramter is a number it's used as multiplePressCount\r\n    areButtonsPressStart: function (...gamepadButtonTypesList) {\r\n        let multiplePressCount = null;\r\n        let argumentsToForward = gamepadButtonTypesList;\r\n        if (!isNaN(gamepadButtonTypesList[0])) {\r\n            multiplePressCount = gamepadButtonTypesList[0];\r\n            argumentsToForward = gamepadButtonTypesList.slice(1);\r\n        }\r\n        return PP.GamepadUtils.areButtonsMultiplePressStart(multiplePressCount, ...argumentsToForward);\r\n    },\r\n\r\n    areButtonsMultiplePressStart: function (multiplePressCount, ...gamepadButtonTypesList) {\r\n        let areButtonPressedRecently = true;\r\n        let isOnePressStart = false;\r\n        for (let gamepadButtonTypes of gamepadButtonTypesList) {\r\n            let gamepad = gamepadButtonTypes[0];\r\n            for (let i = 1; i < gamepadButtonTypes.length; i++) {\r\n                let buttonType = gamepadButtonTypes[i];\r\n                let button = gamepad.getButtonInfo(buttonType);\r\n\r\n                if (!(button.myIsPressed && (multiplePressCount == null || button.myMultiplePressStartCount == multiplePressCount) && button.myTimePressed < PP.GamepadUtils._myPressTogetherMaxDelay)) {\r\n                    areButtonPressedRecently = false;\r\n                    break;\r\n                }\r\n\r\n                if (button.isPressStart(multiplePressCount)) {\r\n                    isOnePressStart = true;\r\n                }\r\n            }\r\n\r\n            if (!areButtonPressedRecently) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return areButtonPressedRecently && isOnePressStart;\r\n    },\r\n\r\n    areButtonsPressEnd: function (...gamepadButtonTypesList) {\r\n        let multiplePressCount = null;\r\n        let argumentsToForward = gamepadButtonTypesList;\r\n        if (!isNaN(gamepadButtonTypesList[0])) {\r\n            multiplePressCount = gamepadButtonTypesList[0];\r\n            argumentsToForward = gamepadButtonTypesList.slice(1);\r\n        }\r\n        return PP.GamepadUtils.areButtonsMultiplePressEnd(multiplePressCount, ...argumentsToForward);\r\n    },\r\n\r\n    areButtonsMultiplePressEnd: function (multiplePressCount, ...gamepadButtonTypesList) {\r\n        let areButtonNotPressedRecently = true;\r\n        let isOnePressEnd = false;\r\n        for (let gamepadButtonTypes of gamepadButtonTypesList) {\r\n            let gamepad = gamepadButtonTypes[0];\r\n            for (let i = 1; i < gamepadButtonTypes.length; i++) {\r\n                let buttonType = gamepadButtonTypes[i];\r\n                let button = gamepad.getButtonInfo(buttonType);\r\n\r\n                if (!(!button.myIsPressed && (multiplePressCount == null || button.myMultiplePressEndCount == multiplePressCount) && button.myTimeNotPressed < PP.GamepadUtils._myPressTogetherMaxDelay)) {\r\n                    areButtonNotPressedRecently = false;\r\n                    break;\r\n                }\r\n\r\n                if (button.isPressEnd(multiplePressCount)) {\r\n                    isOnePressEnd = true;\r\n                }\r\n            }\r\n\r\n            if (!areButtonNotPressedRecently) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return areButtonNotPressedRecently && isOnePressEnd;\r\n    },\r\n\r\n    areButtonsTouchStart: function (...gamepadButtonTypesList) {\r\n        let multipleTouchCount = null;\r\n        let argumentsToForward = gamepadButtonTypesList;\r\n        if (!isNaN(gamepadButtonTypesList[0])) {\r\n            multipleTouchCount = gamepadButtonTypesList[0];\r\n            argumentsToForward = gamepadButtonTypesList.slice(1);\r\n        }\r\n        return PP.GamepadUtils.areButtonsMultipleTouchStart(multipleTouchCount, ...argumentsToForward);\r\n    },\r\n\r\n    areButtonsMultipleTouchStart: function (multipleTouchCount, ...gamepadButtonTypesList) {\r\n        let areButtonTouchedRecently = true;\r\n        let isOneTouchStart = false;\r\n        for (let gamepadButtonTypes of gamepadButtonTypesList) {\r\n            let gamepad = gamepadButtonTypes[0];\r\n            for (let i = 1; i < gamepadButtonTypes.length; i++) {\r\n                let buttonType = gamepadButtonTypes[i];\r\n                let button = gamepad.getButtonInfo(buttonType);\r\n\r\n                if (!(button.myIsTouched && (multipleTouchCount == null || button.myMultipleTouchStartCount == multipleTouchCount) && button.myTimeTouched < PP.GamepadUtils._myTouchTogetherMaxDelay)) {\r\n                    areButtonTouchedRecently = false;\r\n                    break;\r\n                }\r\n\r\n                if (button.isTouchStart(multipleTouchCount)) {\r\n                    isOneTouchStart = true;\r\n                }\r\n            }\r\n\r\n            if (!areButtonTouchedRecently) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return areButtonTouchedRecently && isOneTouchStart;\r\n    },\r\n\r\n    areButtonsTouchEnd: function (...gamepadButtonTypesList) {\r\n        let multipleTouchCount = null;\r\n        let argumentsToForward = gamepadButtonTypesList;\r\n        if (!isNaN(gamepadButtonTypesList[0])) {\r\n            multipleTouchCount = gamepadButtonTypesList[0];\r\n            argumentsToForward = gamepadButtonTypesList.slice(1);\r\n        }\r\n        return PP.GamepadUtils.areButtonsMultipleTouchEnd(multipleTouchCount, ...argumentsToForward);\r\n    },\r\n\r\n    areButtonsMultipleTouchEnd: function (multipleTouchCount, ...gamepadButtonTypesList) {\r\n        let areButtonNotTouchedRecently = true;\r\n        let isOneTouchEnd = false;\r\n        for (let gamepadButtonTypes of gamepadButtonTypesList) {\r\n            let gamepad = gamepadButtonTypes[0];\r\n            for (let i = 1; i < gamepadButtonTypes.length; i++) {\r\n                let buttonType = gamepadButtonTypes[i];\r\n                let button = gamepad.getButtonInfo(buttonType);\r\n\r\n                if (!(!button.myIsTouched && (multipleTouchCount == null || button.myMultipleTouchEndCount == multipleTouchCount) && button.myTimeNotTouched < PP.GamepadUtils._myTouchTogetherMaxDelay)) {\r\n                    areButtonNotTouchedRecently = false;\r\n                    break;\r\n                }\r\n\r\n                if (button.isTouchEnd(multipleTouchCount)) {\r\n                    isOneTouchEnd = true;\r\n                }\r\n            }\r\n\r\n            if (!areButtonNotTouchedRecently) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return areButtonNotTouchedRecently && isOneTouchEnd;\r\n    },\r\n};",
        "WL.registerComponent('test-add-rotation', {\r\n    _myAddRotation: { type: WL.Type.Bool, default: false },\r\n    _myRotateSeparately: { type: WL.Type.Bool, default: false },\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        let vec = [0, 0, 45];\r\n        let vec2 = [0, 180, 0];\r\n        let quat = vec.vec3_toQuat();\r\n        let quat2 = vec2.vec3_toQuat();\r\n        let quat3 = quat;\r\n        if (this._myAddRotation) {\r\n            quat3 = quat.quat_addRotationQuat(quat2);\r\n        }\r\n\r\n        if (this._myRotateSeparately) {\r\n            this.object.pp_rotateObjectQuat(quat);\r\n            this.object.pp_rotateObjectQuat(quat2);\r\n        } else {\r\n            this.object.pp_rotateObjectQuat(quat3);\r\n        }\r\n    },\r\n    update: function (dt) {\r\n    }\r\n});",
        "WL.registerComponent('test-audio', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this.timer = new PP.Timer(1.2);\r\n    },\r\n    update: function (dt) {\r\n        this.timer.update(dt);\r\n        if (this.timer.isDone()) {\r\n            this.timer.reset();\r\n\r\n            let player = Global.myAudioManager.createAudioPlayer(SfxID.NOT_ENOUGH);\r\n            player.play();\r\n            player.registerAudioEventListener(PP.AudioEvent.END, this, function (id) { console.log(id); });\r\n        }\r\n    }\r\n});",
        "WL.registerComponent('test-clone-mesh', {\r\n    objectToClone: { type: WL.Type.Object }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        /*\r\n        this.mesh = this.object.pp_addComponent(\"mesh\");\r\n        let otherMesh = this.objectToClone.pp_getComponent(\"mesh\");\r\n        this.mesh.material = otherMesh.material;\r\n        this.mesh.mesh = otherMesh.mesh;\r\n        this.mesh.skin = otherMesh.skin;\r\n        */\r\n\r\n        let params = new PP.CloneParams();\r\n        //params.myIgnoreChildren = true;\r\n        //params.myComponentsToIgnore.push(\"mesh\");\r\n        this.cloned = this.objectToClone.pp_clone(params);\r\n        this.cloned.pp_getPositionWorld();\r\n        this.cloned.pp_translate([0.5, 0, 0]);\r\n        //console.log(this.cloned.pp_getPositionWorld());\r\n\r\n    },\r\n    update: function (dt) {\r\n        let a = 2;\r\n        a += 2;\r\n    }\r\n});",
        "WL.registerComponent('test-print-axes', {\r\n}, {\r\n    init: function () {\r\n        this._myCounter = 70;\r\n\r\n        /*\r\n        let parent = WL.scene.addObject(null);\r\n        let child = WL.scene.addObject(parent);\r\n        parent.scalingWorld = [2, 5, 4];\r\n        //parent.scalingWorld = [1, 1, 1];\r\n        child.scalingWorld = [4, 3, 7];\r\n        //child.scalingWorld = [1, 1, 1];\r\n        let transform = [0.5354, 0.5714, 0.1685, -0.5986, 5.3222, -4.4403, 6.6770, 2.4017];\r\n        let transformParent = [0.1110, 0.1936, -0.0633, 0.9727, 0.4864, 0.0317, 0.0968, -0.0555];\r\n        glMatrix.quat2.normalize(transform, transform);\r\n        glMatrix.quat2.normalize(transformParent, transformParent);\r\n        parent.transformWorld = transformParent;\r\n        child.transformWorld = transform;\r\n\r\n        let parentMatrixWorld = glMatrix.mat4.fromRotationTranslationScale([], parent.rotationWorld, parent.getTranslationWorld([]), parent.scalingWorld);\r\n        let childMatrixLocal = glMatrix.mat4.fromRotationTranslationScale([], child.rotationLocal, child.getTranslationLocal([]), child.scalingLocal);\r\n        let childMatrixWorld = glMatrix.mat4.fromRotationTranslationScale([], child.rotationWorld, child.getTranslationWorld([]), child.scalingWorld);\r\n\r\n        this.consoleWarnFixed(child.pp_getTransformWorldQuat());\r\n        this.consoleWarnFixed(parent.pp_convertTransformObjectToWorldQuat(child.pp_getTransformLocalQuat()));\r\n        this.consoleWarnFixed(glMatrix.mat4.sub([], child.pp_getTransformWorldQuat(), parent.pp_convertTransformObjectToWorldQuat(child.pp_getTransformLocalQuat())));\r\n\r\n        this.consoleWarnFixed(child.pp_getTransformLocalQuat());\r\n        this.consoleWarnFixed(parent.pp_convertTransformWorldToObjectQuat(child.pp_getTransformWorldQuat()));\r\n        this.consoleWarnFixed(glMatrix.mat4.sub([], child.pp_getTransformLocalQuat(), parent.pp_convertTransformWorldToObjectQuat(child.pp_getTransformWorldQuat())));\r\n\r\n        //this.consoleWarnMatrix4Fixed(child.pp_getTransformLocalMatrix());\r\n        //this.consoleWarnMatrix4Fixed(parent.pp_convertTransformWorldToObjectMatrix(child.pp_getTransformWorldMatrix()));\r\n        //this.consoleWarnMatrix4Fixed(glMatrix.mat4.sub([], child.pp_getTransformLocalMatrix(), parent.pp_convertTransformWorldToObjectMatrix(child.pp_getTransformWorldMatrix())));\r\n\r\n        //this.consoleWarnMatrix4Fixed(child.pp_getTransformWorldMatrix());\r\n        //this.consoleWarnMatrix4Fixed(parent.pp_convertTransformObjectToWorldMatrix(child.pp_getTransformLocalMatrix()));\r\n        //this.consoleWarnMatrix4Fixed(glMatrix.mat4.sub([], child.pp_getTransformWorldMatrix(), parent.pp_convertTransformObjectToWorldMatrix(child.pp_getTransformLocalMatrix())));\r\n\r\n        //this.consoleWarnFixed(child.rotationWorld);\r\n        //this.consoleWarnFixed(child.getTranslationWorld([]));\r\n        //this.consoleWarnFixed(child.scalingWorld);\r\n\r\n        let computedChildMatrixLocal = glMatrix.mat4.mul([], glMatrix.mat4.invert([], parentMatrixWorld), childMatrixWorld);\r\n        child.pp_setTransformLocalMatrix(computedChildMatrixLocal);\r\n        this.consoleWarnMatrix4Fixed(computedChildMatrixLocal);\r\n        this.consoleWarnMatrix4Fixed(child.pp_getTransformLocalMatrix());\r\n\r\n        this.consoleWarnFixed(child.rotationWorld);\r\n        this.consoleWarnFixed(child.getTranslationWorld([]));\r\n        this.consoleWarnFixed(child.scalingWorld);\r\n\r\n        this.consoleWarnMatrix4Fixed(parent.pp_getTransformWorldMatrix());\r\n        this.consoleWarnMatrix4Fixed(parent.pp_getTransformLocalMatrix());\r\n        this.consoleWarnMatrix4Fixed(parentMatrixWorld);\r\n\r\n        this.consoleWarnFixed(child.transformWorld);\r\n        this.consoleWarnFixed(parent.toWorldSpaceTransform([], child.transformLocal));\r\n        console.warn(childMatrixLocal);\r\n        let computedChildMatrixWorld = glMatrix.mat4.mul([], parentMatrixWorld, childMatrixLocal);\r\n\r\n        {\r\n            let print = [[], [], [], []];\r\n            for (let i = 0; i < childMatrixWorld.length; i++) {\r\n                print[Math.floor(i / 4)].push(childMatrixWorld[i].toFixed(4));\r\n            }\r\n            console.warn(print);\r\n\r\n            print = [[], [], [], []];\r\n            for (let i = 0; i < computedChildMatrixWorld.length; i++) {\r\n                print[Math.floor(i / 4)].push(computedChildMatrixWorld[i].toFixed(4));\r\n            }\r\n            console.warn(print);\r\n\r\n            let difference = glMatrix.mat4.sub([], computedChildMatrixWorld, childMatrixWorld);\r\n\r\n            print = [[], [], [], []];\r\n            for (let i = 0; i < difference.length; i++) {\r\n                print[Math.floor(i / 4)].push(difference[i].toFixed(4));\r\n            }\r\n            console.warn(print);\r\n        }\r\n\r\n        {\r\n            let quat = [0.4911, 0.6793, 0.2719, -0.4727];\r\n            quat.quat_normalize(quat);\r\n            this.consoleWarnFixed(quat);\r\n\r\n            let mat = glMatrix.mat4.fromRotationTranslationScale([], quat, [2, 3, 4], [3, 1, 2]);\r\n            let mat2 = glMatrix.mat4.fromRotationTranslationScale([], quat, [2, 3, 4], [1, 1, 1]);\r\n            let mat3 = mat.mat4_setScale([1, 1, 1]);\r\n            let mat4 = computedChildMatrixWorld;\r\n            let mat5 = computedChildMatrixWorld.mat4_clone().mat4_setScale([1, 1, 1]);\r\n\r\n            let rotation = glMatrix.mat4.getRotation([], mat);\r\n            let rotation2 = glMatrix.mat4.getRotation([], mat2);\r\n            let rotation3 = glMatrix.mat4.getRotation([], mat3);\r\n            let rotation4 = glMatrix.mat4.getRotation([], mat4);\r\n            let rotation5 = glMatrix.mat4.getRotation([], mat5);\r\n\r\n            this.consoleWarnFixed(rotation);\r\n            this.consoleWarnFixed(rotation.quat_normalize());\r\n            this.consoleWarnFixed(rotation2);\r\n            this.consoleWarnFixed(rotation3);\r\n            this.consoleWarnFixed(rotation3.quat_normalize());\r\n            this.consoleWarnFixed(rotation4);\r\n            this.consoleWarnFixed(rotation5);\r\n            this.consoleWarnFixed(rotation5.quat_normalize());\r\n\r\n            console.warn(glMatrix.mat4.mul([], parentMatrixWorld, childMatrixWorld).mat4_getScale());\r\n\r\n            let axes = glMatrix.mat4.mul([], parentMatrixWorld, childMatrixWorld).mat4_getAxes();\r\n            let angle1 = axes[0].vec3_angleRadians(axes[1]);\r\n            let angle2 = axes[2].vec3_angleRadians(axes[1]);\r\n            let angle3 = axes[2].vec3_angleRadians(axes[0]);\r\n            console.warn(angle1 - Math.PI / 2, angle2 - Math.PI / 2, angle3 - Math.PI / 2);\r\n\r\n\r\n        }\r\n        */\r\n    },\r\n    consoleWarnFixed(vector) {\r\n        let result = [];\r\n        for (let value of vector) {\r\n            result.push(value.toFixed(4));\r\n        }\r\n        console.warn(result);\r\n    },\r\n    consoleWarnMatrix4Fixed(vector) {\r\n        let result = [[], [], [], []];\r\n        for (let i = 0; i < vector.length; i++) {\r\n            result[Math.floor(i / 4)].push(vector[i].toFixed(4));\r\n        }\r\n        console.warn(result);\r\n    },\r\n    consoleWarnMatrix3Fixed(vector) {\r\n        let result = [[], [], []];\r\n        for (let i = 0; i < vector.length; i++) {\r\n            result[Math.floor(i / 3)].push(vector[i].toFixed(4));\r\n        }\r\n        console.warn(result);\r\n    },\r\n    start: function () {\r\n        this._myDebugAxes = new PP.DebugAxes();\r\n        this._myDebugAxes.setPositionOffset([0, 0, 0]);\r\n    },\r\n    update: function (dt) {\r\n        if (this._myCounter >= 0) {\r\n            this._myCounter--;\r\n            if (this._myCounter == 0) {\r\n                this._myCounter = 70;\r\n                /*\r\n                console.log(this.object.pp_getRight()[0].toFixed(4), this.object.pp_getRight()[1].toFixed(4), this.object.pp_getRight()[2].toFixed(4));\r\n                console.log(this.object.pp_getUp()[0].toFixed(4), this.object.pp_getUp()[1].toFixed(4), this.object.pp_getUp()[2].toFixed(4));\r\n                console.log(this.object.pp_getForward()[0].toFixed(4), this.object.pp_getForward()[1].toFixed(4), this.object.pp_getForward()[2].toFixed(4));\r\n                */\r\n                /* \r\n                let right = [];\r\n                let up = [];\r\n                let forward = [];\r\n\r\n                this.object.getRight(right);\r\n                this.object.getUp(up);\r\n                this.object.getForward(forward);\r\n\r\n                console.log(right[0].toFixed(4), right[1].toFixed(4), right[2].toFixed(4));\r\n                console.log(up[0].toFixed(4), up[1].toFixed(4), up[2].toFixed(4));\r\n                console.log(forward[0].toFixed(4), forward[1].toFixed(4), forward[2].toFixed(4));\r\n                */\r\n\r\n                //console.log(\"   \");\r\n            }\r\n        }\r\n\r\n        /*\r\n        let right = [];\r\n        let up = [];\r\n        let forward = [];\r\n\r\n        this.object.getRight(right);\r\n        this.object.getUp(up);\r\n        this.object.getForward(forward);\r\n\r\n        this._myDebugForward.setStartDirectionLength(this.object.pp_getPosition(), forward, 0.1);\r\n        this._myDebugForward.update(dt);\r\n\r\n        this._myDebugUp.setStartDirectionLength(this.object.pp_getPosition(), up, 0.1);\r\n        this._myDebugUp.update(dt);\r\n\r\n        this._myDebugRight.setStartDirectionLength(this.object.pp_getPosition(), right, 0.1);\r\n        this._myDebugRight.update(dt);\r\n        */\r\n\r\n        this._myDebugAxes.setTransform(this.object.transformWorld);\r\n    }\r\n});",
        "WL.registerComponent('test-prototype', {\r\n}, {\r\n    init: function () {\r\n        this._myCounter = 3;\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n        if (this._myCounter >= 0) {\r\n            this._myCounter--;\r\n            if (this._myCounter == 0) {\r\n                this.test();\r\n            }\r\n        }\r\n    },\r\n    test() {\r\n        let initParentTransform = [2.7510, -0.2407, -1.1722, 0.0000, 0.1662, 0.9674, 0.1914, 0.0000, 0.7252, -0.4809, 1.8008, 0.0000, 1.0000, -0.0000, -0.0000, 1.0000];\r\n        let initTransform = [5.5891, 0.7359, -2.0544, 0.0000, 0.3699, 1.3017, 1.4727, 0.0000, 0.6263, -1.4985, 1.1672, 0.0000, 1.3324, 1.9347, 0.3828, 1.0000];\r\n        this.object.pp_getParent().pp_setTransformWorldMatrix(initParentTransform);\r\n        this.object.pp_setTransformWorldMatrix(initTransform);\r\n        this.object.pp_getParent().pp_setParent(null);\r\n\r\n        console.warn(\"TEST START\\n\");\r\n\r\n        console.warn(\"\\nPOSITION\\n\");\r\n        this.object.pp_setPosition([1, 2, 3]);\r\n        this.consoleWarnFixed(this.object.pp_getPosition());\r\n        this.object.pp_setPositionWorld([3, 1, 2]);\r\n        this.consoleWarnFixed(this.object.pp_getPositionWorld());\r\n        this.object.pp_setPositionLocal([4, 5, 7]);\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n\r\n        console.warn(\"\\nROTATION\\n\");\r\n        this.object.pp_setRotation([20, 50, 120]);\r\n        this.consoleWarnFixed(this.object.pp_getRotation());\r\n        this.object.pp_setRotationDegrees([21, 54, 123]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationDegrees());\r\n        this.object.pp_setRotationRadians([-2.9116, -1.1416, 1.7416]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationRadians());\r\n        this.object.pp_setRotationMatrix([-0.0707, 0.4101, 0.9093, 0.9243, 0.3698, -0.0949, -0.3751, 0.8337, -0.4052]);\r\n        this.consoleWarnMatrix3Fixed(this.object.pp_getRotationMatrix());\r\n        this.object.pp_setRotationQuat([0, 0, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationQuat());\r\n\r\n        console.warn(\"\\nROTATION WORLD\\n\");\r\n        this.object.pp_setRotationWorld([-20, 50, 120]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_setRotationWorldDegrees([-20, -37, 12]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorldDegrees());\r\n        this.object.pp_setRotationWorldRadians([-2.9116, -1.1416, 1.7416]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorldRadians());\r\n        this.object.pp_setRotationWorldMatrix([1, 0, 0, 0, 1, 0, 0, 0, 1]);\r\n        this.consoleWarnMatrix3Fixed(this.object.pp_getRotationWorldMatrix());\r\n        this.object.pp_setRotationWorldQuat([0.4911, 0.6793, 0.2719, -0.4727]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorldQuat());\r\n\r\n        console.warn(\"\\nROTATION LOCAL\\n\");\r\n        this.object.pp_setRotationLocal([22, 45, 163]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_setRotationLocalDegrees([22, -45, 163]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocalDegrees());\r\n        this.object.pp_setRotationLocalRadians([-2.9116, -1.1416, 1.7416]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocalRadians());\r\n        this.object.pp_setRotationLocalMatrix([-0.0707, 0.4101, 0.9093, 0.9243, 0.3698, -0.0949, -0.3751, 0.8337, -0.4052]);\r\n        this.consoleWarnMatrix3Fixed(this.object.pp_getRotationLocalMatrix());\r\n        this.object.pp_setRotationLocalQuat([0.4911, 0.6793, 0.2719, -0.4727]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocalQuat());\r\n\r\n        console.warn(\"\\nSCALE\\n\");\r\n        this.object.pp_setScale([2, 5, 4]);\r\n        this.consoleWarnFixed(this.object.pp_getScale());\r\n        this.object.pp_setScale(6.32);\r\n        this.consoleWarnFixed(this.object.pp_getScale());\r\n        this.object.pp_setScaleWorld([3.2, 1.65, 4.4]);\r\n        this.consoleWarnFixed(this.object.pp_getScaleWorld());\r\n        this.object.pp_setScaleWorld(5);\r\n        this.consoleWarnFixed(this.object.pp_getScaleWorld());\r\n        this.object.pp_setScaleLocal([5.2, 3.1, 9.1]);\r\n        this.consoleWarnFixed(this.object.pp_getScaleLocal());\r\n        this.object.pp_setScaleLocal(1.3);\r\n        this.consoleWarnFixed(this.object.pp_getScaleLocal());\r\n\r\n        console.warn(\"\\nTRANSFORM\\n\");\r\n        this.object.pp_setTransformMatrix([1, 0, 0, 0, 0, 2.4, 0, 0, 0, 0, 3.2, 0, 4, 2, 3, 1]);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransform());\r\n        this.object.pp_setTransformMatrix([3, 0, 0, 0, 0, 2.4, 0, 0, 0, 0, 1.2, 0, 1, 2, 3, 1]);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformMatrix());\r\n        this.object.pp_setTransformQuat([0.5354, 0.5714, 0.1685, -0.5986, 5.3222, -4.4403, 6.6770, 2.4017]);\r\n        this.consoleWarnFixed(this.object.pp_getTransformQuat());\r\n\r\n        console.warn(\"\\nTRANSFORM WORLD\\n\");\r\n        this.object.pp_setTransformMatrix([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorld());\r\n        this.object.pp_setTransformWorldMatrix([-0.2458, 1.3998, 1.4071, 0.0000, 2.7900, 3.1750, -2.6712, 0.0000, -2.4621, 0.9808, -1.4058, 0.0000, 0.1834, -2.7853, -19.6426, 1.0000]);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorldMatrix());\r\n        this.object.pp_setTransformWorldMatrix([-0.1229, 0.6999, 0.7036, 0.0000, 0.5580, 0.6350, -0.5342, 0.0000, -0.8207, 0.3270, -0.4686, 0.0000, 0.1834, -2.7853, -19.6426, 1.0000]);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorldMatrix());\r\n        this.object.pp_setTransformWorldQuat([0.5354, 0.5714, 0.1685, -0.5986, 5.3222, -4.4403, 6.6770, 2.4017]);\r\n        this.consoleWarnFixed(this.object.pp_getTransformWorldQuat());\r\n\r\n        console.warn(\"\\nTRANSFORM LOCAL\\n\");\r\n        this.object.pp_setTransformLocal([-0.2458, 1.3998, 1.4071, 0.0000, 2.7900, 3.1750, -2.6712, 0.0000, -2.4621, 0.9808, -1.4058, 0.0000, 0.1834, -2.7853, -19.6426, 1.0000]);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformLocal());\r\n        this.object.pp_setTransformLocalMatrix([0.9706, 4.1994, 4.1739, 0.0000, 1.5245, 3.1750, -3.5490, 0.0000, -5.6314, 1.9616, -0.6641, 0.0000, -13.8437, -2.7853, -36.3777, 1.0000]);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformLocalMatrix());\r\n        this.object.pp_setTransformLocalQuat([-0.4215, -0.7461, 0.0695, 0.5108, -7.3773, 3.4221, -5.6718, -0.3181]);\r\n        this.consoleWarnFixed(this.object.pp_getTransformLocalQuat());\r\n\r\n        console.warn(\"\\nFORWARD\\n\");\r\n        this.consoleWarnFixed(this.object.pp_getForward());\r\n        this.consoleWarnFixed(this.object.pp_getForwardWorld());\r\n        this.consoleWarnFixed(this.object.pp_getForwardLocal());\r\n\r\n        console.warn(\"\\nBACKWARD\\n\");\r\n        this.consoleWarnFixed(this.object.pp_getBackward());\r\n        this.consoleWarnFixed(this.object.pp_getBackwardWorld());\r\n        this.consoleWarnFixed(this.object.pp_getBackwardLocal());\r\n\r\n        console.warn(\"\\nUP\\n\");\r\n        this.consoleWarnFixed(this.object.pp_getUp());\r\n        this.consoleWarnFixed(this.object.pp_getUpWorld());\r\n        this.consoleWarnFixed(this.object.pp_getUpLocal());\r\n\r\n        console.warn(\"\\nDOWN\\n\");\r\n        this.consoleWarnFixed(this.object.pp_getDown());\r\n        this.consoleWarnFixed(this.object.pp_getDownWorld());\r\n        this.consoleWarnFixed(this.object.pp_getDownLocal());\r\n\r\n        console.warn(\"\\nLEFT\\n\");\r\n        this.consoleWarnFixed(this.object.pp_getLeft());\r\n        this.consoleWarnFixed(this.object.pp_getLeftWorld());\r\n        this.consoleWarnFixed(this.object.pp_getLeftLocal());\r\n\r\n        console.warn(\"\\nRIGHT\\n\");\r\n        this.consoleWarnFixed(this.object.pp_getRight());\r\n        this.consoleWarnFixed(this.object.pp_getRightWorld());\r\n        this.consoleWarnFixed(this.object.pp_getRightLocal());\r\n\r\n        this.object.pp_getParent().pp_setTransformMatrix(initParentTransform);\r\n        this.object.pp_setTransformMatrix(initTransform);\r\n\r\n        console.warn(\"\\nLOOK AT\\n\");\r\n        this.object.pp_lookAt([0.7071, 0.7071, 0]);\r\n        this.object.pp_lookAtWorld([0.7071, 0.7071, 0]);\r\n        this.object.pp_lookAtLocal([0.7071, 0.7071, 0]);\r\n\r\n        console.warn(\"\\nLOOK TO\\n\");\r\n        this.consoleWarnFixed(this.object.pp_getPosition());\r\n        this.object.pp_lookTo([0.7071, 0.7071, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getForward());\r\n        this.object.pp_lookTo([0.4472, -0.8944, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getForward());\r\n        this.object.pp_lookTo([0, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRight());\r\n        this.consoleWarnFixed(this.object.pp_getUp());\r\n        this.consoleWarnFixed(this.object.pp_getForward());\r\n        this.object.pp_lookTo([0, 0, 1], [0, 1, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRight());\r\n        this.consoleWarnFixed(this.object.pp_getUp());\r\n        this.consoleWarnFixed(this.object.pp_getForward());\r\n        this.object.pp_lookTo([0, 1, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRight());\r\n        this.consoleWarnFixed(this.object.pp_getUp());\r\n        this.consoleWarnFixed(this.object.pp_getForward());\r\n\r\n        console.warn(\"\\nLOOK TO WORLD\\n\");\r\n        this.object.pp_lookToWorld([0, 0, 1], [0, 1, 0]);\r\n        this.object.pp_lookToWorld([0, -1, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRight());\r\n        this.consoleWarnFixed(this.object.pp_getUp());\r\n        this.consoleWarnFixed(this.object.pp_getForward());\r\n        this.object.pp_lookToWorld([0, 0, 1], [0, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRight());\r\n        this.consoleWarnFixed(this.object.pp_getUp());\r\n        this.consoleWarnFixed(this.object.pp_getForward());\r\n        this.object.pp_lookToWorld([1, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRight());\r\n        this.consoleWarnFixed(this.object.pp_getUp());\r\n        this.consoleWarnFixed(this.object.pp_getForward());\r\n        this.object.pp_lookToWorld([0, 0, 1], [0, 1, 0]);\r\n        this.object.pp_lookToWorld([1, -1, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRight());\r\n        this.consoleWarnFixed(this.object.pp_getUp());\r\n        this.consoleWarnFixed(this.object.pp_getForward());\r\n        this.object.pp_lookToWorld([0, 0, 1], [0, 1, 0]);\r\n        this.object.pp_lookToWorld([2, -1, 3], [2, 1, 4]);\r\n        this.consoleWarnFixed(this.object.pp_getRight());\r\n        this.consoleWarnFixed(this.object.pp_getUp());\r\n        this.consoleWarnFixed(this.object.pp_getForward());\r\n        this.consoleWarnFixed(this.object.pp_getPosition());\r\n\r\n        console.warn(\"\\nLOOK TO LOCAL\\n\");\r\n        this.object.pp_lookToLocal([0, 0, 1], [0, 1, 0]);\r\n        this.object.pp_lookToLocal([0, -1, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRightLocal());\r\n        this.consoleWarnFixed(this.object.pp_getUpLocal());\r\n        this.consoleWarnFixed(this.object.pp_getForwardLocal());\r\n        this.object.pp_lookToLocal([0, 0, 1], [0, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRightLocal());\r\n        this.consoleWarnFixed(this.object.pp_getUpLocal());\r\n        this.consoleWarnFixed(this.object.pp_getForwardLocal());\r\n        this.object.pp_lookToLocal([1, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRightLocal());\r\n        this.consoleWarnFixed(this.object.pp_getUpLocal());\r\n        this.consoleWarnFixed(this.object.pp_getForwardLocal());\r\n        this.object.pp_lookToLocal([0, 0, 1], [0, 1, 0]);\r\n        this.object.pp_lookToLocal([1, -1, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRightLocal());\r\n        this.consoleWarnFixed(this.object.pp_getUpLocal());\r\n        this.consoleWarnFixed(this.object.pp_getForwardLocal());\r\n        this.object.pp_lookToLocal([0, 0, 1], [0, 1, 0]);\r\n        this.object.pp_lookToLocal([2, -1, 3], [2, 1, 4]);\r\n        this.consoleWarnFixed(this.object.pp_getRightLocal());\r\n        this.consoleWarnFixed(this.object.pp_getUpLocal());\r\n        this.consoleWarnFixed(this.object.pp_getForwardLocal());\r\n        this.consoleWarnFixed(this.object.pp_getPosition());\r\n\r\n        this.object.pp_getParent().pp_setTransformMatrix(initParentTransform);\r\n        this.object.pp_setTransformMatrix(initTransform);\r\n\r\n        console.warn(\"\\nPARENT\\n\");\r\n        this.object.pp_setPosition([1, 2, 3]);\r\n        let oldParent = this.object.pp_getParent();\r\n        let nullParent = null;\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorld());\r\n        this.object.pp_setParent(nullParent);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorld());\r\n        this.object.pp_setParent(oldParent);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorld());\r\n        this.object.pp_setParent(nullParent, false);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorld());\r\n        this.object.pp_setParent(oldParent, false);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorld());\r\n        this.object.pp_setParent(nullParent, false);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorld());\r\n        this.object.pp_setParent(oldParent);\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorld());\r\n\r\n        console.warn(\"\\nRESET POSITION\\n\");\r\n        this.object.pp_resetPosition();\r\n        this.consoleWarnFixed(this.object.pp_getPosition());\r\n        this.object.pp_resetPositionWorld();\r\n        this.consoleWarnFixed(this.object.pp_getPositionWorld());\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n        this.object.pp_resetPositionLocal();\r\n        this.consoleWarnFixed(this.object.pp_getPositionWorld());\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n\r\n        console.warn(\"\\nRESET ROTATION\\n\");\r\n        this.object.pp_resetRotation();\r\n        this.consoleWarnFixed(this.object.pp_getRotation());\r\n        this.object.pp_resetRotationWorld();\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_resetRotationLocal();\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n\r\n        console.warn(\"\\nRESET SCALE\\n\");\r\n        this.object.pp_resetScale();\r\n        this.consoleWarnFixed(this.object.pp_getScale());\r\n        this.object.pp_resetScaleWorld();\r\n        this.consoleWarnFixed(this.object.pp_getScaleWorld());\r\n        this.consoleWarnFixed(this.object.pp_getScaleLocal());\r\n        this.object.pp_resetScaleLocal();\r\n        this.consoleWarnFixed(this.object.pp_getScaleWorld());\r\n        this.consoleWarnFixed(this.object.pp_getScaleLocal());\r\n\r\n        console.warn(\"\\nRESET TRANSFORM\\n\");\r\n        this.object.pp_setTransformWorldMatrix([0.9706, 4.1994, 4.1739, 0.0000, 1.5245, 3.1750, -3.5490, 0.0000, -5.6314, 1.9616, -0.6641, 0.0000, -13.8437, -2.7853, -36.3777, 1.0000]);\r\n        this.object.pp_resetTransform();\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransform());\r\n        this.object.pp_resetTransformWorld();\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorld());\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformLocal());\r\n        this.object.pp_resetTransformLocal();\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorld());\r\n        this.consoleWarnMatrix4Fixed(this.object.pp_getTransformLocal());\r\n\r\n        console.warn(\"\\nTRANSLATE\\n\");\r\n        this.object.pp_resetPositionWorld();\r\n        this.object.pp_translate([0, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getPosition());\r\n        this.object.pp_translate([0, 1, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getPosition());\r\n        this.object.pp_translate([1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getPosition());\r\n\r\n        this.object.pp_resetPositionLocal();\r\n        this.object.pp_translateLocal([0, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n        this.object.pp_translateLocal([0, 1, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n        this.object.pp_translateLocal([1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n\r\n        this.object.pp_resetPositionLocal();\r\n        this.object.pp_lookTo(this.object.pp_getParent().pp_getUp());\r\n        this.object.pp_translateObject([0, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n        this.object.pp_translateObject([0, 1, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n        this.object.pp_translateObject([1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n\r\n        this.object.pp_getParent().pp_setTransformMatrix(initParentTransform);\r\n        this.object.pp_setTransformMatrix(initTransform);\r\n\r\n        console.warn(\"\\nTRANSLATE AXIS\\n\");\r\n        let translateAxis = [23, 3, -12];\r\n        let normalizedTranslateAxis = [];\r\n        glMatrix.vec3.normalize(normalizedTranslateAxis, translateAxis);\r\n        let length = glMatrix.vec3.length(translateAxis);\r\n        this.object.pp_resetPosition();\r\n        this.object.pp_translate(translateAxis);\r\n        this.consoleWarnFixed(this.object.pp_getPosition());\r\n        this.object.pp_resetPosition();\r\n        this.object.pp_translateAxis(normalizedTranslateAxis, length);\r\n        this.consoleWarnFixed(this.object.pp_getPosition());\r\n\r\n        this.object.pp_resetPositionWorld();\r\n        this.object.pp_translateWorld(translateAxis);\r\n        this.consoleWarnFixed(this.object.pp_getPositionWorld());\r\n        this.object.pp_resetPositionWorld();\r\n        this.object.pp_translateAxisWorld(normalizedTranslateAxis, length);\r\n        this.consoleWarnFixed(this.object.pp_getPositionWorld());\r\n\r\n        this.object.pp_resetPositionLocal();\r\n        this.object.pp_translateLocal(translateAxis);\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n        this.object.pp_resetPositionLocal();\r\n        this.object.pp_translateAxisLocal(normalizedTranslateAxis, length);\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n\r\n        this.object.pp_resetPositionWorld();\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_translateObject(translateAxis);\r\n        this.consoleWarnFixed(this.object.pp_getPositionWorld());\r\n        this.object.pp_resetPositionWorld();\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_translateAxisObject(normalizedTranslateAxis, length);\r\n        this.consoleWarnFixed(this.object.pp_getPositionWorld());\r\n\r\n        this.object.pp_resetPositionLocal();\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_translateObject(translateAxis);\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n        this.object.pp_resetPositionLocal();\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_translateAxisObject(normalizedTranslateAxis, length);\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n\r\n        console.warn(\"\\nROTATE\\n\");\r\n        this.object.pp_resetRotation();\r\n        this.object.pp_rotate([20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotation());\r\n        this.object.pp_resetRotation();\r\n        this.object.pp_rotateDegrees([0, 30, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationDegrees());\r\n        this.object.pp_resetRotation();\r\n        this.object.pp_rotateRadians([0, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationRadians());\r\n        this.object.pp_resetRotation();\r\n        this.object.pp_rotateMatrix([0.5403, 0.8415, -0.0000, -0.8415, 0.5403, -0.0000, -0.0000, 0.0000, 1.0000]);\r\n        this.consoleWarnMatrix3Fixed(this.object.pp_getRotationMatrix());\r\n        this.object.pp_resetRotation();\r\n        this.object.pp_rotateQuat([-0.4215, -0.7461, 0.0695, 0.5108]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationQuat());\r\n\r\n        console.warn(\"\\nROTATE WORLD\\n\");\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateWorld([20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateWorldDegrees([0, 30, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorldDegrees());\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateWorldRadians([0, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorldRadians());\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateWorldMatrix([0.5403, 0.8415, -0.0000, -0.8415, 0.5403, -0.0000, -0.0000, 0.0000, 1.0000]);\r\n        this.consoleWarnMatrix3Fixed(this.object.pp_getRotationWorldMatrix());\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateWorldQuat([-0.4215, -0.7461, 0.0695, 0.5108]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorldQuat());\r\n\r\n        console.warn(\"\\nROTATE LOCAL\\n\");\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateLocal([20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateLocalDegrees([0, 30, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocalDegrees());\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateLocalRadians([0, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocalRadians());\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateLocalMatrix([0.5403, 0.8415, -0.0000, -0.8415, 0.5403, -0.0000, -0.0000, 0.0000, 1.0000]);\r\n        this.consoleWarnMatrix3Fixed(this.object.pp_getRotationLocalMatrix());\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateLocalQuat([-0.4215, -0.7461, 0.0695, 0.5108]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocalQuat());\r\n\r\n        console.warn(\"\\nROTATE OBJECT\\n\");\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateObject([20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateObjectDegrees([0, 30, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocalDegrees());\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateObjectRadians([0, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocalRadians());\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateObjectMatrix([0.5403, 0.8415, -0.0000, -0.8415, 0.5403, -0.0000, -0.0000, 0.0000, 1.0000]);\r\n        this.consoleWarnMatrix3Fixed(this.object.pp_getRotationLocalMatrix());\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateObjectQuat([-0.4215, -0.7461, 0.0695, 0.5108]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocalQuat());\r\n\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateObject([20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateObjectDegrees([0, 30, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorldDegrees());\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateObjectRadians([0, 0, 1]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorldRadians());\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateObjectMatrix([0.5403, 0.8415, -0.0000, -0.8415, 0.5403, -0.0000, -0.0000, 0.0000, 1.0000]);\r\n        this.consoleWarnMatrix3Fixed(this.object.pp_getRotationWorldMatrix());\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateObjectQuat([-0.4215, -0.7461, 0.0695, 0.5108]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorldQuat());\r\n\r\n        console.warn(\"\\nROTATE AXIS\\n\");\r\n        this.object.pp_resetRotation();\r\n        this.object.pp_rotateObject([20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotation());\r\n        this.object.pp_rotateAxis(20, [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotation());\r\n        this.object.pp_rotateAxisDegrees(10, [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotation());\r\n        this.object.pp_rotateAxisRadians(Math.pp_toRadians(10), [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotation());\r\n\r\n        console.warn(\"\\nROTATE WORLD AXIS\\n\");\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateWorld([-20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_rotateAxisWorld(-20, [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_rotateAxisWorldDegrees(10, [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_rotateAxisWorldRadians(Math.pp_toRadians(10), [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n\r\n        console.warn(\"\\nROTATE LOCAL AXIS\\n\");\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateLocal([-20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_rotateAxisLocal(-20, [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_rotateAxisLocalDegrees(10, [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_rotateAxisLocalRadians(Math.pp_toRadians(10), [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n\r\n        console.warn(\"\\nROTATE OBJECT AXIS\\n\");\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateWorld([-20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_rotateAxisObject(-20, [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_rotateAxisObjectDegrees(10, [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_rotateAxisObjectRadians(Math.pp_toRadians(10), [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateLocal([-20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_rotateAxisObject(-20, [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_rotateAxisObjectDegrees(10, [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_rotateAxisObjectRadians(Math.pp_toRadians(10), [1, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n\r\n        console.warn(\"\\nROTATE AROUND\\n\");\r\n        this.object.pp_rotateAround([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundDegrees([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundRadians([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundMatrix([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundQuat([-20, 0, 0], [1, 2, 3]);\r\n\r\n        this.object.pp_rotateAroundWorldDegrees([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundWorldRadians([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundWorldMatrix([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundWorldQuat([-20, 0, 0], [1, 2, 3]);\r\n\r\n        this.object.pp_rotateAroundLocalDegrees([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundLocalRadians([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundLocalMatrix([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundLocalQuat([-20, 0, 0], [1, 2, 3]);\r\n\r\n        this.object.pp_rotateAroundObjectDegrees([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundObjectRadians([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundObjectMatrix([-20, 0, 0], [1, 2, 3]);\r\n        this.object.pp_rotateAroundObjectQuat([-20, 0, 0], [1, 2, 3]);\r\n\r\n        console.warn(\"\\nROTATE AROUND AXIS\\n\");\r\n        this.object.pp_resetRotation();\r\n        this.object.pp_rotateObject([20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotation());\r\n        this.object.pp_rotateAroundAxis(20, [1, 0, 0], this.object.pp_getPosition());\r\n        this.consoleWarnFixed(this.object.pp_getRotation());\r\n        this.object.pp_rotateAroundAxisDegrees(10, [1, 0, 0], this.object.pp_getPosition());\r\n        this.consoleWarnFixed(this.object.pp_getRotation());\r\n        this.object.pp_rotateAroundAxisRadians(Math.pp_toRadians(10), [1, 0, 0], this.object.pp_getParent().pp_getPosition());\r\n        this.consoleWarnFixed(this.object.pp_getRotation());\r\n\r\n        console.warn(\"\\nROTATE WORLD AROUND AXIS\\n\");\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateWorld([-20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_rotateAroundAxisWorld(-20, [1, 0, 0], this.object.pp_getParent().pp_getPosition());\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_rotateAroundAxisWorldDegrees(10, [1, 0, 0], this.object.pp_getParent().pp_getPosition());\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_rotateAroundAxisWorldRadians(Math.pp_toRadians(10), [1, 0, 0], this.object.pp_getParent().pp_getPosition());\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n\r\n        console.warn(\"\\nROTATE LOCAL AROUND AXIS\\n\");\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateLocal([-20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_rotateAroundAxisLocal(-20, [1, 0, 0], this.object.pp_getPositionLocal());\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_rotateAroundAxisLocalDegrees(10, [1, 0, 0], this.object.pp_getPositionLocal());\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_rotateAroundAxisLocalRadians(Math.pp_toRadians(10), [1, 0, 0], [0, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n\r\n        console.warn(\"\\nROTATE OBJECT AROUND AXIS\\n\");\r\n        this.object.pp_resetRotationWorld();\r\n        this.object.pp_rotateWorld([-20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_rotateAroundAxisObject(-20, [1, 0, 0], -20, [0, 1, 2]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_rotateAroundAxisObjectDegrees(10, [1, 0, 0], [0, 1, 2]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n        this.object.pp_rotateAroundAxisObjectRadians(Math.pp_toRadians(10), [1, 0, 0], [0, 1, 2]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationWorld());\r\n\r\n        this.object.pp_resetRotationLocal();\r\n        this.object.pp_rotateLocal([-20, 0, 0]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_rotateAroundAxisObject(-20, [1, 0, 0], [0, 1, 2]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_rotateAroundAxisObjectDegrees(10, [1, 0, 0], [0, 1, 2]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n        this.object.pp_rotateAroundAxisObjectRadians(Math.pp_toRadians(10), [1, 0, 0], [0, 1, 2]);\r\n        this.consoleWarnFixed(this.object.pp_getRotationLocal());\r\n\r\n        console.warn(\"\\nSCALE OBJECT\\n\");\r\n        this.object.pp_resetScaleWorld();\r\n        this.object.pp_scaleObject([4, 2, 3]);\r\n        this.consoleWarnFixed(this.object.pp_getScaleWorld());\r\n        this.object.pp_scaleObject(3);\r\n        this.consoleWarnFixed(this.object.pp_getScaleWorld());\r\n\r\n        this.object.pp_resetScaleLocal();\r\n        this.object.pp_scaleObject([4, 2, 3]);\r\n        this.consoleWarnFixed(this.object.pp_getScaleLocal());\r\n        this.object.pp_scaleObject(3);\r\n        this.consoleWarnFixed(this.object.pp_getScaleLocal());\r\n\r\n        //Reset Transform To Init\r\n        this.object.pp_getParent().pp_setTransformMatrix(initParentTransform);\r\n        this.object.pp_setTransformMatrix(initTransform);\r\n\r\n        console.warn(\"\\nCONVERT POSITION OBJECT WORLD\\n\");\r\n        this.consoleWarnFixed(this.object.pp_getPositionWorld());\r\n        this.consoleWarnFixed(this.object.pp_convertPositionObjectToWorld([0, 0, 0]));\r\n        this.consoleWarnFixed(this.object.pp_convertPositionObjectToWorld([0, 1, 0]));\r\n        this.consoleWarnFixed(this.object.pp_convertPositionWorldToObject([1.7023, 3.2364, 1.8554]));\r\n        this.consoleWarnFixed(this.object.pp_convertPositionWorldToObject(this.object.pp_convertPositionObjectToWorld([0, 1, 0])));\r\n\r\n        console.warn(\"\\nCONVERT POSITION LOCAL WORLD\\n\");\r\n        this.consoleWarnFixed(this.object.pp_getParent().pp_getPositionWorld());\r\n        this.consoleWarnFixed(this.object.pp_convertPositionLocalToWorld([0, 0, 0]));\r\n        this.consoleWarnFixed(this.object.pp_convertPositionLocalToWorld([2, 1, 0]));\r\n        this.consoleWarnFixed(this.object.pp_convertPositionWorldToLocal([6.6682, 0.486, -2.153]));\r\n        this.consoleWarnFixed(this.object.pp_convertPositionWorldToLocal(this.object.pp_convertPositionLocalToWorld([0, 1, 2])));\r\n\r\n        console.warn(\"\\nCONVERT POSITION LOCAL OBJECT\\n\");\r\n        this.consoleWarnFixed(this.object.pp_getPositionLocal());\r\n        this.consoleWarnFixed(this.object.pp_convertPositionObjectToLocal([0, 0, 0]));\r\n        this.consoleWarnFixed(this.object.pp_convertPositionObjectToLocal([0, 2, 3]));\r\n        this.consoleWarnFixed(this.object.pp_convertPositionLocalToObject([0.0114, 1.839, 3.605]));\r\n        this.consoleWarnFixed(this.object.pp_convertPositionLocalToObject(this.object.pp_convertPositionObjectToLocal([1, 3, -20])));\r\n\r\n        console.warn(\"\\nCONVERT POSITION CHAIN\\n\");\r\n        this.consoleWarnFixed(this.object.pp_convertPositionObjectToWorld(this.object.pp_convertPositionLocalToObject(this.object.pp_convertPositionWorldToLocal([1, 3, -20]))));\r\n        this.consoleWarnFixed(this.object.pp_convertPositionWorldToObject(this.object.pp_convertPositionLocalToWorld(this.object.pp_convertPositionObjectToLocal([1, 3, -20]))));\r\n\r\n        let tempDirection = [];\r\n        console.warn(\"\\nCONVERT DIRECTION OBJECT WORLD\\n\");\r\n        glMatrix.vec3.add(tempDirection, this.object.pp_getForwardWorld(), this.object.pp_getRightWorld());\r\n        this.consoleWarnFixed(this.object.pp_getForwardWorld());\r\n        this.consoleWarnFixed(tempDirection);\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionObjectToWorld([0, 0, 1]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionObjectToWorld([0, 0, 2]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionObjectToWorld([0, 0, 3]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionObjectToWorld([-1, 0, 1]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionWorldToObject([0.3132, -0.7492, 0.5836]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionWorldToObject([0.9395, -2.2477, 1.7508]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionWorldToObject(this.object.pp_getForwardWorld()));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionWorldToObject(this.object.pp_convertDirectionObjectToWorld([1, 2, 0])));\r\n\r\n        console.warn(\"\\nCONVERT DIRECTION LOCAL WORLD\\n\");\r\n        glMatrix.vec3.add(tempDirection, this.object.pp_getParent().pp_getForwardWorld(), this.object.pp_getParent().pp_getRightWorld());\r\n        this.consoleWarnFixed(this.object.pp_getParent().pp_getForwardWorld());\r\n        this.consoleWarnFixed(tempDirection);\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionLocalToWorld([0, 0, 1]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionLocalToWorld([0, 0, 2]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionLocalToWorld([0, 0, 3]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionLocalToWorld([-1, 0, 1]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionWorldToLocal([0.3626, -0.2404, 0.9004]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionWorldToLocal([1.0878, -0.7213, 2.7012]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionWorldToLocal(this.object.pp_getParent().pp_getForwardWorld()));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionWorldToLocal(this.object.pp_convertDirectionLocalToWorld([1, 2, 0])));\r\n\r\n        console.warn(\"\\nCONVERT DIRECTION OBJECT LOCAL\\n\");\r\n        glMatrix.vec3.add(tempDirection, this.object.pp_getForwardLocal(), this.object.pp_getRightLocal());\r\n        this.consoleWarnFixed(this.object.pp_getForwardLocal());\r\n        this.consoleWarnFixed(tempDirection);\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionObjectToLocal([0, 0, 1]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionObjectToLocal([0, 0, 2]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionObjectToLocal([0, 0, 3]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionObjectToLocal([-1, 0, 1]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionLocalToObject([0.1193, -0.5610, 0.8192]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionLocalToObject([0.3578, -1.6831, 2.4575]));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionLocalToObject(this.object.pp_getForwardLocal()));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionLocalToObject(this.object.pp_convertDirectionObjectToLocal([1, 2, 0])));\r\n\r\n        console.warn(\"\\nCONVERT DIRECTION CHAIN\\n\");\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionObjectToWorld(this.object.pp_convertDirectionLocalToObject(this.object.pp_convertDirectionWorldToLocal([1, 3, -20]))));\r\n        this.consoleWarnFixed(this.object.pp_convertDirectionWorldToObject(this.object.pp_convertDirectionLocalToWorld(this.object.pp_convertDirectionObjectToLocal([1, 3, -20]))));\r\n\r\n        {\r\n            this.object.pp_getParent().pp_setTransformMatrix(initParentTransform);\r\n            this.object.pp_setTransformMatrix(initTransform);\r\n            //this.object.parent.scalingWorld = [1, 1, 1];\r\n            //this.object.scalingWorld = [1, 1, 1];\r\n            this.object.setDirty();\r\n            this.object.pp_getParent().setDirty();\r\n            let defaultMatrix = glMatrix.mat4.create();\r\n            let defaultQuat2 = glMatrix.quat2.create();\r\n\r\n            let child = WL.scene.addObject(this.object);\r\n            child.pp_setRotation([20, 30, -10]);\r\n            child.pp_setPosition([2, 0, -7]);\r\n            child.pp_setScale([4, 3, 2]);\r\n            child.pp_markDirty();\r\n\r\n            console.warn(\"\\nCONVERT TRANSFORM OBJECT WORLD\\n\");\r\n            this.consoleWarnMatrix4Fixed(child.pp_getTransformWorldMatrix());\r\n            this.consoleWarnMatrix4Fixed(child.pp_getTransformWorldQuat());\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorldMatrix());\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorldQuat());\r\n\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToWorld(child.pp_getTransformLocalMatrix()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToWorldQuat(child.pp_getTransformLocalQuat()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToWorldMatrix(defaultMatrix));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToWorldQuat(defaultQuat2));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToObject(this.object.pp_getTransformWorldMatrix()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToObjectMatrix(this.object.pp_getTransformWorldMatrix()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToObjectQuat(this.object.pp_getTransformWorldQuat()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToObjectMatrix(this.object.pp_convertTransformObjectToWorldMatrix(defaultMatrix)));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToObjectQuat(this.object.pp_convertTransformObjectToWorldQuat(defaultQuat2)));\r\n\r\n            console.warn(\"\\nCONVERT TRANSFORM LOCAL WORLD\\n\");\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorldMatrix());\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorldQuat());\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_getTransformLocalMatrix());\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_getTransformLocalQuat());\r\n\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformLocalToWorld(this.object.pp_getTransformLocalMatrix()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformLocalToWorldMatrix(this.object.pp_getTransformLocalMatrix()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformLocalToWorldQuat(this.object.pp_getTransformLocalQuat()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToLocal(this.object.pp_getTransformWorldMatrix()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToLocalMatrix(this.object.pp_getTransformWorldMatrix()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToLocalQuat(this.object.pp_getTransformWorldQuat()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToLocalMatrix(this.object.pp_convertTransformLocalToWorldMatrix(this.object.pp_getTransformLocalMatrix())));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToLocalQuat(this.object.pp_convertTransformLocalToWorldQuat(this.object.pp_getTransformLocalQuat())));\r\n\r\n            console.warn(\"\\nCONVERT TRANSFORM LOCAL OBJECT\\n\");\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorldMatrix());\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorldQuat());\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_getTransformLocalMatrix());\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_getTransformLocalQuat());\r\n\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToLocal(defaultMatrix));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToLocalMatrix(defaultMatrix));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToLocalQuat(defaultQuat2));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformLocalToObject(this.object.pp_getTransformLocalMatrix()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformLocalToObjectMatrix(this.object.pp_getTransformLocalMatrix()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformLocalToObjectQuat(this.object.pp_getTransformLocalQuat()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformLocalToObjectMatrix(this.object.pp_convertTransformObjectToLocalMatrix(defaultMatrix)));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformLocalToObjectQuat(this.object.pp_convertTransformObjectToLocalQuat(defaultQuat2)));\r\n\r\n            console.warn(\"\\nCONVERT TRANSFORM CHAIN\\n\");\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToWorld(this.object.pp_convertTransformLocalToObject(this.object.pp_convertTransformWorldToLocal(defaultMatrix))));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToObject(this.object.pp_convertTransformLocalToWorld(this.object.pp_convertTransformObjectToLocal(defaultMatrix))));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToWorldMatrix(this.object.pp_convertTransformLocalToObjectMatrix(this.object.pp_convertTransformWorldToLocalMatrix(this.object.pp_getTransformWorldMatrix()))));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToObjectMatrix(this.object.pp_convertTransformLocalToWorldMatrix(this.object.pp_convertTransformObjectToLocalMatrix(this.object.pp_getTransformWorldMatrix()))));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToWorldQuat(this.object.pp_convertTransformLocalToObjectQuat(this.object.pp_convertTransformWorldToLocalQuat(defaultQuat2))));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToObjectQuat(this.object.pp_convertTransformLocalToWorldQuat(this.object.pp_convertTransformObjectToLocalQuat(defaultQuat2))));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToWorldQuat(this.object.pp_convertTransformLocalToObjectQuat(this.object.pp_convertTransformWorldToLocalQuat(this.object.pp_getTransformWorldQuat()))));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToObjectQuat(this.object.pp_convertTransformLocalToWorldQuat(this.object.pp_convertTransformObjectToLocalQuat(this.object.pp_getTransformWorldQuat()))));\r\n\r\n            console.warn(\"\\nCONVERT TRANSFORM OBJECT WORLD UNIFORM\\n\");\r\n            this.object.pp_setScale([3, 3, 3]);\r\n            child.pp_setScale([2, 2, 2]);\r\n\r\n            this.consoleWarnMatrix4Fixed(child.pp_getTransformWorldMatrix());\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_getTransformWorldMatrix());\r\n\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToWorld(child.pp_getTransformLocalMatrix()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformObjectToWorldMatrix(defaultMatrix));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToObject(this.object.pp_getTransformWorldMatrix()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToObjectMatrix(this.object.pp_getTransformWorldMatrix()));\r\n            this.consoleWarnMatrix4Fixed(this.object.pp_convertTransformWorldToObjectMatrix(this.object.pp_convertTransformObjectToWorldMatrix(defaultMatrix)));\r\n        }\r\n\r\n        console.warn(\"\\nUNIFORM SCALE\\n\");\r\n        this.object.pp_setScale([2, 2, 2]);\r\n        console.warn(this.object.pp_hasUniformScale());\r\n        this.object.pp_setScale([2, 2, 1]);\r\n        console.warn(this.object.pp_hasUniformScale());\r\n        this.object.pp_setScaleWorld([3, 2, 2]);\r\n        console.warn(this.object.pp_hasUniformScaleWorld());\r\n        this.object.pp_setScaleWorld([3, 2, 1]);\r\n        console.warn(this.object.pp_hasUniformScaleWorld());\r\n        this.object.pp_setScaleLocal([1, 2, 3]);\r\n        console.warn(this.object.pp_hasUniformScaleLocal());\r\n        this.object.pp_setScaleLocal([3, 3, 3]);\r\n        console.warn(this.object.pp_hasUniformScaleLocal());\r\n\r\n        console.warn(\"\\nCAULDRON\\n\");\r\n        this.object.pp_setName(\"ciao\");\r\n        this.object.pp_getName();\r\n        this.object.pp_setActive(false);\r\n        this.object.pp_setActiveHierarchy(true);\r\n        this.object.pp_setActiveChildren(true);\r\n        this.object.pp_getChildren();\r\n        this.object.pp_markDirty();\r\n        this.object.pp_equals(this.object.pp_getParent());\r\n        this.object.pp_getComponent(\"ciao\", 1);\r\n        this.object.pp_getComponentHierarchy(\"ciao\", 1);\r\n        this.object.pp_getComponentChildren(\"ciao\", 1);\r\n        this.object.pp_getComponents(\"ciao\");\r\n        this.object.pp_getComponentsHierarchy(\"ciao\");\r\n        this.object.pp_getComponentsChildren(\"ciao\");\r\n        this.object.pp_addComponent(\"mesh\");\r\n\r\n        console.warn(\"\\nMATRIX STABILITY\\n\");\r\n        this.object.pp_setTransformWorldMatrix([0.9706, 4.1994, 4.1739, 0.0000, 1.5245, 3.1750, -3.5490, 0.0000, -5.6314, 1.9616, -0.6641, 0.0000, -13.8437, -2.7853, -36.3777, 1.0000]);\r\n        let initialMatrix = this.object.pp_getTransformWorldMatrix();\r\n        for (let i = 0; i < 100; i++) {\r\n            this.object.pp_setTransformWorldMatrix(this.object.pp_getTransformWorldMatrix());\r\n        }\r\n        glMatrix.mat4.sub(initialMatrix, this.object.pp_getTransformWorldMatrix(), initialMatrix);\r\n        initialMatrix = initialMatrix.map(a => a < 0.00000002 ? 0 : a);\r\n        console.warn(initialMatrix);\r\n\r\n        this.object.pp_getParent().pp_setTransformMatrix(initParentTransform);\r\n        this.object.pp_setTransformMatrix(initTransform);\r\n\r\n        console.warn(\"\\nQUAT TRANSFORM POSITION STABILITY\\n\");\r\n        {\r\n            let transform = [0.5354, 0.5714, 0.1685, -0.5986, 5.3222, -4.4403, 6.6770, 2.4017];\r\n            let transformParent = [0.1110, 0.1936, -0.0633, 0.9727, 0.4864, 0.0317, 0.0968, -0.0555];\r\n            glMatrix.quat2.normalize(transform, transform);\r\n            glMatrix.quat2.normalize(transformParent, transformParent);\r\n            this.object.parent.pp_setTransformWorldQuat(transformParent);\r\n            this.object.pp_setTransformWorldQuat(transform);\r\n            let initialPos = this.object.pp_getPositionWorld();\r\n            for (let i = 0; i < 100; i++) {\r\n                this.object.pp_setTransformWorldQuat(this.object.pp_getTransformWorldQuat());\r\n            }\r\n            glMatrix.vec3.sub(initialPos, this.object.pp_getPositionWorld(), initialPos);\r\n            initialPos = initialPos.map(a => a < 0.00000002 ? 0 : a);\r\n            console.warn(initialPos);\r\n        }\r\n\r\n        console.warn(\"\\nQUAT TRANSFORM POSITION STABILITY WLE\\n\");\r\n        {\r\n            this.object.scalingWorld = [5, 1, 2];\r\n            this.object.parent.scalingWorld = [2, 5, 3];\r\n            //this.object.parent.scalingWorld = [1, 1, 1];\r\n            let transform = [0.5354, 0.5714, 0.1685, -0.5986, 5.3222, -4.4403, 6.6770, 2.4017];\r\n            let transformParent = [0.1110, 0.1936, -0.0633, 0.9727, 0.4864, 0.0317, 0.0968, -0.0555];\r\n            glMatrix.quat2.normalize(transform, transform);\r\n            glMatrix.quat2.normalize(transformParent, transformParent);\r\n            this.object.parent.transformWorld = transformParent;\r\n            this.object.transformWorld = transform;\r\n            this.object.parent.setDirty();\r\n            this.object.setDirty();\r\n            let initialPos = [];\r\n            this.object.getTranslationWorld(initialPos);\r\n            for (let i = 0; i < 100; i++) {\r\n                this.object.transformWorld = this.object.transformWorld;\r\n                this.object.setDirty();\r\n            }\r\n            let finalPos = [];\r\n            this.object.getTranslationWorld(finalPos);\r\n            glMatrix.vec3.sub(initialPos, finalPos, initialPos);\r\n            initialPos = initialPos.map(a => a < 0.00000002 ? 0 : a);\r\n            console.warn(initialPos);\r\n        }\r\n\r\n        console.warn(\"\\nTEST END\");\r\n    },\r\n    consoleWarnFixed(vector) {\r\n        let result = [];\r\n        for (let value of vector) {\r\n            result.push(value.toFixed(4));\r\n        }\r\n        console.warn(result);\r\n    },\r\n    consoleWarnMatrix4Fixed(vector) {\r\n        let result = [[], [], [], []];\r\n        for (let i = 0; i < vector.length; i++) {\r\n            result[Math.floor(i / 4)].push(vector[i].toFixed(4));\r\n        }\r\n        console.warn(result);\r\n    },\r\n    consoleWarnMatrix3Fixed(vector) {\r\n        let result = [[], [], []];\r\n        for (let i = 0; i < vector.length; i++) {\r\n            result[Math.floor(i / 3)].push(vector[i].toFixed(4));\r\n        }\r\n        console.warn(result);\r\n    }\r\n});\r\n\r\n/*WL.Object.prototype.pp_test = function () {\r\n    console.log(\"OMG IT WORKS\");\r\n};*/\r\n\r\n/*\r\nlet mat = [];\r\nthis.pp_getTransformWorldMatrix(mat);\r\nglMatrix.mat4.sub(mat, mat, transform);\r\nmat = mat.map(a => a < 0.00002 ? 0 : a);\r\nconsole.warn(mat);\r\n*/",
        "WL.registerComponent('test-rotate-object', {\r\n    _myX: { type: WL.Type.Float, default: 0.0 },\r\n    _myY: { type: WL.Type.Float, default: 0.0 },\r\n    _myZ: { type: WL.Type.Float, default: 0.0 },\r\n    _myObjectRotate: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n        let quat = this.object._pp_degreesToQuaternion([this._myX * dt, this._myY * dt, this._myZ * dt]);\r\n        if (!this._myObjectRotate) {\r\n            this.object.pp_rotateObjectDegrees([this._myX * dt, this._myY * dt, this._myZ * dt]);\r\n            //this.object.pp_rotateAxisWorldDegrees(this.object.pp_getRightWorld(), -this._myX * dt);\r\n        } else {\r\n            let axis = [];\r\n            glMatrix.vec3.copy(axis, [this._myX * dt, this._myY * dt, this._myZ * dt]);\r\n            glMatrix.vec3.normalize(axis, axis);\r\n            //this.object.pp_transformDirectionWorldToObject(axis, axis);\r\n            //this.object.pp_rotateAxisObjectDegrees(axis, this._myX * dt);\r\n            //this.object.pp_rotateObjectDegrees([this._myX * dt, this._myY * dt, this._myZ * dt]);\r\n            this.object.pp_rotateAroundAxisObjectDegrees(axis, this._myX * dt, [0, 5, 5]);\r\n        }\r\n    }\r\n});",
        "WL.registerComponent('test-set-alpha', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myElapsedTime = 0;\r\n        PP.MeshUtils.setClonedMaterials(this.object);\r\n    },\r\n    update: function (dt) {\r\n        this._myElapsedTime += dt;\r\n        PP.MeshUtils.setAlpha(this.object, Math.abs(Math.sin(this._myElapsedTime)));\r\n    }\r\n});",
        "WL.registerComponent('test-trigger', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myPhysx = this.object.pp_getComponent(\"physx\");\r\n        this._myPhysx.onCollision(function (type, other) {\r\n            // Ignore uncollides\r\n            if (type == WL.CollisionEventType.TouchLost) return;\r\n\r\n            console.log(\"TRIGGER\");\r\n        }.bind(this));\r\n    },\r\n    update: function (dt) {\r\n        var a = a + 2;\r\n        a = a + 2;\r\n        a = a + 2;\r\n        a = a + 2;\r\n        a = a + 2;\r\n    }\r\n});",
        "WL.registerComponent(\"pp-clear-console-on-session\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myFirstTime = true;\r\n        WL.onXRSessionStart.push(function () {\r\n            if (this._myFirstTime) {\r\n                this._myFirstTime = false;\r\n                console.clear();\r\n            }\r\n        }.bind(this));\r\n    },\r\n    update: function (dt) {\r\n    }\r\n});",
        "WL.registerComponent(\"pp-player-height\", {\r\n    _myEyesHeight: { type: WL.Type.Float, default: 1.65 }\r\n}, {\r\n    start: function () {\r\n        this.object.setTranslationLocal([0, this._myEyesHeight, 0]);\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    },\r\n    _onXRSessionStart: function () {\r\n        if (![\"local\", \"viewer\"].includes(WebXR.refSpace)) {\r\n            this.object.resetTranslation();\r\n        }\r\n    },\r\n    _onXRSessionEnd: function () {\r\n        if (![\"local\", \"viewer\"].includes(WebXR.refSpace)) {\r\n            this.object.setTranslationLocal([0, this._myEyesHeight, 0]);\r\n        }\r\n    }\r\n});",
        "WL.registerComponent('pp-set-hand-transform', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n        this._myHandPose = new PP.HandPose(PP.InputUtils.getHandednessByIndex(this._myHandedness), this._myFixForward);\r\n    },\r\n    start: function () {\r\n        this._myHandPose.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myHandPose.update(dt);\r\n        this.object.pp_setTransformLocalQuat(this._myHandPose.getTransformQuat());\r\n    },\r\n});",
        "WL.registerComponent('pp-set-head-transform', {\r\n    _myFixForward: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n        this._myHeadPose = new PP.HeadPose(this._myFixForward);\r\n    },\r\n    start: function () {\r\n        this._myHeadPose.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myHeadPose.update(dt);\r\n        this.object.pp_setTransformLocalQuat(this._myHeadPose.getTransformQuat());\r\n    },\r\n});",
        "WL.registerComponent('pp-set-hierarchy-active', {\n    _myHierarchyActive: { type: WL.Type.Bool, default: true },\n    _mySetActiveOn: { type: WL.Type.Enum, values: ['init', 'start', 'first_update'], default: 'init' },\n}, {\n    init: function () {\n        if (this.active && this._mySetActiveOn == 0) {\n            this.object.pp_setActiveHierarchy(this._myHierarchyActive);\n        }\n    },\n    start: function () {\n        if (this._mySetActiveOn == 1) {\n            this.object.pp_setActiveHierarchy(this._myHierarchyActive);\n        }\n        this._myFirst = true;\n    },\n    update: function (dt) {\n        if (this._mySetActiveOn == 2 && this._myFirst) {\n            this._myFirst = false;\n            this.object.pp_setActiveHierarchy(this._myHierarchyActive);\n        }\n    },\n});",
        "PP.CAUtils = {\r\n    _myDummyServer: null,\r\n    _myUseDummyServerOnSDKMissing: false,\r\n    _myUseDummyServerOnError: false,\r\n    setUseDummyServerOnSDKMissing: function (useDummyServer) {\r\n        PP.CAUtils._myUseDummyServerOnSDKMissing = useDummyServer;\r\n    },\r\n    setUseDummyServerOnError: function (useDummyServer) {\r\n        PP.CAUtils._myUseDummyServerOnError = useDummyServer;\r\n    },\r\n    setDummyServer: function (dummyServer) {\r\n        PP.CAUtils._myDummyServer = dummyServer;\r\n    },\r\n    isUseDummyServerOnSDKMissing: function () {\r\n        return PP.CAUtils._myUseDummyServerOnSDKMissing;\r\n    },\r\n    isUseDummyServerOnError: function () {\r\n        return PP.CAUtils._myUseDummyServerOnError;\r\n    },\r\n    getDummyServer: function () {\r\n        return PP.CAUtils._myDummyServer;\r\n    },\r\n    isSDKAvailable: function () {\r\n        return \"casdk\" in window;\r\n    },\r\n    getLeaderboard: function (leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError, overrideUseDummyServer = null) {\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            if (!isAroundPlayer) {\r\n                casdk.getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount).then(function (result) {\r\n                    if (result.leaderboard) {\r\n                        if (callbackOnDone) {\r\n                            callbackOnDone(result.leaderboard);\r\n                        }\r\n                    } else {\r\n                        if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                            (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                            PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                        } else if (callbackOnError) {\r\n                            let error = {};\r\n                            error.reason = \"Get leaderboard failed\";\r\n                            error.type = PP.CAUtils.ErrorType.GET_LEADERBOARD_FAILED;\r\n                            callbackOnError(error, result);\r\n                        }\r\n                    }\r\n                }).catch(function (result) {\r\n                    if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                        (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                        PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                    } else if (callbackOnError) {\r\n                        let error = {};\r\n                        error.reason = \"Get leaderboard failed\";\r\n                        error.type = PP.CAUtils.ErrorType.GET_LEADERBOARD_FAILED;\r\n                        callbackOnError(error, result);\r\n                    }\r\n                });\r\n            } else {\r\n                PP.CAUtils.getUser(\r\n                    function (user) {\r\n                        let userName = user.displayName;\r\n                        casdk.getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount).then(function (result) {\r\n                            if (result.leaderboard) {\r\n                                let userValid = false;\r\n                                for (let value of result.leaderboard) {\r\n                                    if (value.displayName == userName && value.score != 0) {\r\n                                        userValid = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (userValid) {\r\n                                    if (callbackOnDone) {\r\n                                        callbackOnDone(result.leaderboard);\r\n                                    }\r\n                                } else {\r\n                                    if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                                        (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                                        PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                                    } else if (callbackOnError) {\r\n                                        let error = {};\r\n                                        error.reason = \"Searching for around player but the user has not submitted a score yet\";\r\n                                        error.type = PP.CAUtils.ErrorType.USER_HAS_NO_SCORE;\r\n                                        callbackOnError(error, result);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                                    (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                                    PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                                } else if (callbackOnError) {\r\n                                    let error = {};\r\n                                    error.reason = \"Get leaderboard failed\";\r\n                                    error.type = PP.CAUtils.ErrorType.GET_LEADERBOARD_FAILED;\r\n                                    callbackOnError(error, result);\r\n                                }\r\n                            }\r\n                        }).catch(function (result) {\r\n                            if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                                (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                                PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                            } else if (callbackOnError) {\r\n                                let error = {};\r\n                                error.reason = \"Get leaderboard failed\";\r\n                                error.type = PP.CAUtils.ErrorType.GET_LEADERBOARD_FAILED;\r\n                                callbackOnError(error, result);\r\n                            }\r\n                        });\r\n\r\n                    },\r\n                    function () {\r\n                        if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                            (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                            PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                        } else if (callbackOnError) {\r\n                            let error = {};\r\n                            error.reason = \"Searching for around player but the user can't be retrieved\";\r\n                            error.type = PP.CAUtils.ErrorType.GET_USER_FAILED;\r\n                            callbackOnError(error, result);\r\n                        }\r\n                    },\r\n                    false);\r\n            }\r\n        } else {\r\n            if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                (PP.CAUtils._myUseDummyServerOnSDKMissing && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n            } else if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Construct Arcade SDK missing\";\r\n                error.type = PP.CAUtils.ErrorType.CA_SDK_MISSING;\r\n                callbackOnError(error, null);\r\n            }\r\n        }\r\n    },\r\n    getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError) {\r\n        if (PP.CAUtils._myDummyServer) {\r\n            PP.CAUtils._myDummyServer.getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n        } else {\r\n            if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Dummy server not initialized\";\r\n                error.type = PP.CAUtils.ErrorType.DUMMY_NOT_INITIALIZED;\r\n                callbackOnError(error);\r\n            }\r\n        }\r\n    },\r\n    submitScore: function (leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError, overrideUseDummyServer = null) {\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            casdk.submitScore(leaderboardID, scoreToSubmit).then(function (result) {\r\n                if (result.error) {\r\n                    if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.submitScore != null &&\r\n                        (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                        PP.CAUtils.submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n                    } else if (callbackOnError) {\r\n                        let error = {};\r\n                        error.reason = \"Submit score failed\";\r\n                        error.type = PP.CAUtils.ErrorType.SUBMIT_SCORE_FAILED;\r\n                        callbackOnError(error, result);\r\n                    }\r\n                } else {\r\n                    callbackOnDone();\r\n                }\r\n            }).catch(function (result) {\r\n                if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.submitScore != null &&\r\n                    (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                    PP.CAUtils.submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n                } else if (callbackOnError) {\r\n                    let error = {};\r\n                    error.reason = \"Submit score failed\";\r\n                    error.type = PP.CAUtils.ErrorType.SUBMIT_SCORE_FAILED;\r\n                    callbackOnError(error, result);\r\n                }\r\n            });\r\n        } else {\r\n            if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.submitScore != null &&\r\n                (PP.CAUtils._myUseDummyServerOnSDKMissing && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                PP.CAUtils.submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n            } else if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Construct Arcade SDK missing\";\r\n                error.type = PP.CAUtils.ErrorType.CA_SDK_MISSING;\r\n                callbackOnError(error, null);\r\n            }\r\n        }\r\n    },\r\n    submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError) {\r\n        if (PP.CAUtils._myDummyServer) {\r\n            PP.CAUtils._myDummyServer.submitScore(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n        } else {\r\n            if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Dummy server not initialized\";\r\n                error.type = PP.CAUtils.ErrorType.DUMMY_NOT_INITIALIZED;\r\n                callbackOnError(error);\r\n            }\r\n        }\r\n    },\r\n    getUser: function (callbackOnDone, callbackOnError, overrideUseDummyServer = null) {\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            casdk.getUser().then(function (result) {\r\n                if (result.user) {\r\n                    if (callbackOnDone) {\r\n                        callbackOnDone(result.user);\r\n                    }\r\n                } else {\r\n                    if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getUser != null &&\r\n                        (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                        PP.CAUtils.getUserDummy(callbackOnDone, callbackOnError);\r\n                    } else if (callbackOnError) {\r\n                        let error = {};\r\n                        error.reason = \"Get user failed\";\r\n                        error.type = PP.CAUtils.ErrorType.GET_USER_FAILED;\r\n                        callbackOnError(error, result);\r\n                    }\r\n                }\r\n            }).catch(function (result) {\r\n                if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getUser != null &&\r\n                    (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                    PP.CAUtils.getUserDummy(callbackOnDone, callbackOnError);\r\n                } else if (callbackOnError) {\r\n                    let error = {};\r\n                    error.reason = \"Get user failed\";\r\n                    error.type = PP.CAUtils.ErrorType.GET_USER_FAILED;\r\n                    callbackOnError(error, result);\r\n                }\r\n            });\r\n        } else {\r\n            if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getUser != null &&\r\n                (PP.CAUtils._myUseDummyServerOnSDKMissing && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                PP.CAUtils.getUserDummy(callbackOnDone, callbackOnError);\r\n            } else if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Construct Arcade SDK missing\";\r\n                error.type = PP.CAUtils.ErrorType.CA_SDK_MISSING;\r\n                callbackOnError(error, null);\r\n            }\r\n        }\r\n    },\r\n    getUserDummy(callbackOnDone, callbackOnError) {\r\n        if (PP.CAUtils._myDummyServer) {\r\n            PP.CAUtils._myDummyServer.getUser(callbackOnDone, callbackOnError);\r\n        } else {\r\n            if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Dummy server not initialized\";\r\n                error.type = PP.CAUtils.ErrorType.DUMMY_NOT_INITIALIZED;\r\n                callbackOnError(error);\r\n            }\r\n        }\r\n    },\r\n    ErrorType: {\r\n        DUMMY_NOT_INITIALIZED: 0,\r\n        CA_SDK_MISSING: 1,\r\n        SUBMIT_SCORE_FAILED: 2,\r\n        GET_LEADERBOARD_FAILED: 3,\r\n        GET_USER_FAILED: 4,\r\n        USER_HAS_NO_SCORE: 5\r\n    }\r\n};\r\n\r\nPP.CADummyServer = class CADummyServer {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError) {\r\n        let leaderboard = null;\r\n\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            leaderboard = [\r\n                { rank: 0, displayName: \"An\", score: 0 },\r\n                { rank: 1, displayName: \"Error\", score: 0 },\r\n                { rank: 2, displayName: \"Has\", score: 0 },\r\n                { rank: 3, displayName: \"Occurred\", score: 0 },\r\n                { rank: 4, displayName: \"While\", score: 0 },\r\n                { rank: 5, displayName: \"Trying\", score: 0 },\r\n                { rank: 6, displayName: \"To\", score: 0 },\r\n                { rank: 7, displayName: \"Retrieve\", score: 0 },\r\n                { rank: 8, displayName: \"The\", score: 0 },\r\n                { rank: 9, displayName: \"Leaderboard\", score: 0 }\r\n            ];\r\n        } else {\r\n            if (isAroundPlayer) {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"Sign In\", score: 0 },\r\n                    { rank: 1, displayName: \"And\", score: 0 },\r\n                    { rank: 2, displayName: \"Play\", score: 0 },\r\n                    { rank: 3, displayName: \"On\", score: 0 },\r\n                    { rank: 4, displayName: \"HeyVR\", score: 0 },\r\n                    { rank: 5, displayName: \"To\", score: 0 },\r\n                    { rank: 6, displayName: \"Submit\", score: 0 },\r\n                    { rank: 7, displayName: \"Your\", score: 0 },\r\n                    { rank: 8, displayName: \"Own\", score: 0 },\r\n                    { rank: 9, displayName: \"Score\", score: 0 }\r\n                ];\r\n            } else {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"The\", score: 0 },\r\n                    { rank: 1, displayName: \"Top 10\", score: 0 },\r\n                    { rank: 2, displayName: \"Leaderboard\", score: 0 },\r\n                    { rank: 3, displayName: \"Is\", score: 0 },\r\n                    { rank: 4, displayName: \"Available\", score: 0 },\r\n                    { rank: 5, displayName: \"Only\", score: 0 },\r\n                    { rank: 5, displayName: \"When\", score: 0 },\r\n                    { rank: 7, displayName: \"Playing\", score: 0 },\r\n                    { rank: 8, displayName: \"On\", score: 0 },\r\n                    { rank: 9, displayName: \"HeyVR\", score: 0 },\r\n                ];\r\n            }\r\n        }\r\n\r\n        while (leaderboard.length > scoresAmount) {\r\n            leaderboard.pop();\r\n        }\r\n\r\n        if (callbackOnDone) {\r\n            callbackOnDone(leaderboard);\r\n        }\r\n    }\r\n\r\n    submitScore(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError) {\r\n        if (callbackOnDone) {\r\n            callbackOnDone();\r\n        }\r\n    }\r\n\r\n    getUser(callbackOnDone, callbackOnError) {\r\n        let user = {};\r\n        user.displayName = \"Jonathan\";\r\n\r\n        if (callbackOnDone) {\r\n            callbackOnDone(user);\r\n        }\r\n    }\r\n};",
        "PP.ColorUtils = {\r\n    //RGB is in [0,1], alpha is not changed\r\n    rgbToHsv: function (rgb) {\r\n        let hsv = rgb.pp_clone();\r\n\r\n        let r = rgb[0];\r\n        let g = rgb[1];\r\n        let b = rgb[2];\r\n\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n            d = max - min,\r\n            h,\r\n            s = (max === 0 ? 0 : d / max),\r\n            v = max;\r\n\r\n        switch (max) {\r\n            case min: h = 0; break;\r\n            case r: h = (g - b) + d * (g < b ? 6 : 0); h /= 6 * d; break;\r\n            case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n            case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n        }\r\n\r\n        hsv[0] = h;\r\n        hsv[1] = s;\r\n        hsv[2] = v;\r\n\r\n        return hsv;\r\n    },\r\n    //alpha is not changed\r\n    hsvToRgb: function (hsv) {\r\n        let rgb = hsv.pp_clone();\r\n\r\n        let h = hsv[0];\r\n        let s = hsv[1];\r\n        let v = hsv[2];\r\n\r\n        let r, g, b, i, f, p, q, t;\r\n        i = Math.floor(h * 6);\r\n        f = h * 6 - i;\r\n        p = v * (1 - s);\r\n        q = v * (1 - f * s);\r\n        t = v * (1 - (1 - f) * s);\r\n\r\n        switch (i % 6) {\r\n            case 0: r = v, g = t, b = p; break;\r\n            case 1: r = q, g = v, b = p; break;\r\n            case 2: r = p, g = v, b = t; break;\r\n            case 3: r = p, g = q, b = v; break;\r\n            case 4: r = t, g = p, b = v; break;\r\n            case 5: r = v, g = p, b = q; break;\r\n        }\r\n\r\n        rgb[0] = r;\r\n        rgb[1] = g;\r\n        rgb[2] = b;\r\n\r\n        return rgb;\r\n    },\r\n    rgbCodeToHuman(rgb) {\r\n        return PP.ColorUtils.color1To255(rgb);\r\n    },\r\n    rgbHumanToCode(rgb) {\r\n        return PP.ColorUtils.color255To1(rgb);\r\n    },\r\n    hsvCodeToHuman(hsv) {\r\n        return PP.ColorUtils.color1To255(hsv);\r\n    },\r\n    hsvHumanToCode(hsv) {\r\n        return PP.ColorUtils.color255To1(hsv);\r\n    },\r\n    color255To1(color) {\r\n        let result = color.pp_clone();\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n            result[i] /= 255;\r\n            result[i] = Math.pp_clamp(result[i], 0, 1);\r\n        }\r\n\r\n        return result;\r\n    },\r\n    color1To255(color) {\r\n        let result = color.pp_clone();\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n            result[i] = Math.round(result[i] * 255);\r\n            result[i] = Math.pp_clamp(result[i], 0, 255);\r\n        }\r\n\r\n        return result;\r\n    },\r\n};",
        "PP.MeshUtils = {\n    createPlaneMesh: function () {\n        let vertexCount = 4;\n        let vertexDataSize = WL.Mesh.VERTEX_FLOAT_SIZE; // vertex is like a class with x,y,z,u,v,normal unwrapped in an array\n\n        let vertexData = new Float32Array(vertexCount * vertexDataSize);\n        let indexData = new Uint32Array(vertexCount + 2); // +2 repeated vertexes\n\n        for (let i = 0; i < 4; ++i) {\n            vertexData[i * vertexDataSize + WL.Mesh.POS.X] = -1 + (i & 1) * 2;\n            vertexData[i * vertexDataSize + WL.Mesh.POS.Y] = -1 + ((i & 2) >> 1) * 2; // this is a quick way to have positions (-1,-1) (1,-1) (1,-1) (1,1)\n            vertexData[i * vertexDataSize + WL.Mesh.POS.Z] = 0;\n\n            vertexData[i * vertexDataSize + WL.Mesh.TEXCOORD.U] = (i & 1);\n            vertexData[i * vertexDataSize + WL.Mesh.TEXCOORD.V] = ((i & 2) >> 1);\n\n            vertexData[i * vertexDataSize + WL.Mesh.NORMAL.X] = 0;\n            vertexData[i * vertexDataSize + WL.Mesh.NORMAL.Y] = 0;\n            vertexData[i * vertexDataSize + WL.Mesh.NORMAL.Z] = 1;\n        }\n\n        indexData[0] = 0;\n        indexData[1] = 1;\n        indexData[2] = 2;\n        indexData[3] = 2;\n        indexData[4] = 1;\n        indexData[5] = 3;\n\n        let mesh = new WL.Mesh({\n            indexData: indexData,\n            indexType: WL.MeshIndexType.UnsignedInt,\n            vertexData: vertexData\n        });\n\n        return mesh;\n    },\n    // alpha between 0 and 1\n    setAlpha: function (object, alpha) {\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\n\n        for (let meshComponent of meshComponents) {\n            if (meshComponent.material.color != null) {\n                let color = meshComponent.material.color;\n                color[3] = alpha;\n                meshComponent.material.color = color;\n            }\n\n            if (meshComponent.material.diffuseColor != null) {\n                let color = meshComponent.material.diffuseColor;\n                color[3] = alpha;\n                meshComponent.material.diffuseColor = color;\n            }\n\n            if (meshComponent.material.ambientColor != null) {\n                let color = meshComponent.material.ambientColor;\n                color[3] = alpha;\n                meshComponent.material.ambientColor = color;\n            }\n        }\n    },\n    setMaterial: function (object, material, cloneMaterial = false) {\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\n\n        for (let meshComponent of meshComponents) {\n            if (cloneMaterial) {\n                meshComponent.material = material.clone();\n            } else {\n                meshComponent.material = material;\n            }\n        }\n    },\n    setClonedMaterials: function (object) {\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\n\n        for (let meshComponent of meshComponents) {\n            meshComponent.material = meshComponent.material.clone();\n        }\n    },\n    setSpecularColor: function (object, color) {\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\n\n        for (let meshComponent of meshComponents) {\n            if (meshComponent.material.specularColor != null) {\n                meshComponent.material.specularColor = color;\n            }\n        }\n    },\n    setFogColor: function (object, color) {\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\n\n        for (let meshComponent of meshComponents) {\n            if (meshComponent.material.fogColor != null) {\n                meshComponent.material.fogColor = color;\n            }\n        }\n    },\n};",
        "PP.SaveUtils = {\r\n    save: function (id, value) {\r\n        if (value != null) {\r\n            localStorage.setItem(id, value);\r\n        }\r\n    },\r\n    has: function (id) {\r\n        return PP.SaveUtils.loadString(id, null) != null;\r\n    },\r\n    delete: function (id) {\r\n        return localStorage.removeItem(id);\r\n    },\r\n    clear: function () {\r\n        return localStorage.clear();\r\n    },\r\n    load: function (id, defaultValue = null) {\r\n        return PP.SaveUtils.loadString(id, defaultValue);\r\n    },\r\n    loadString: function (id, defaultValue = null) {\r\n        let item = localStorage.getItem(id);\r\n\r\n        if (item == null) {\r\n            item = defaultValue;\r\n        }\r\n\r\n        return item;\r\n    },\r\n    loadNumber: function (id, defaultValue = null) {\r\n        let item = PP.SaveUtils.loadString(id);\r\n\r\n        if (item != null) {\r\n            return Number(item);\r\n        }\r\n\r\n        return defaultValue;\r\n    },\r\n    loadBool: function (id, defaultValue = null) {\r\n        let item = PP.SaveUtils.loadString(id);\r\n\r\n        if (item == \"true\") {\r\n            return true;\r\n        } else if (item == \"false\") {\r\n            return false;\r\n        }\r\n\r\n        return defaultValue;\r\n    }\r\n};",
        "PP.TextUtils = {\r\n    setClonedMaterials: function (object) {\r\n        let textComponents = object.pp_getComponentsHierarchy(\"text\");\r\n\r\n        for (let textComponent of textComponents) {\r\n            textComponent.material = textComponent.material.clone();\r\n        }\r\n    },\r\n};",
        "PP.XRUtils = {\r\n    isDeviceEmulated: function () {\r\n        let isEmulated = ('CustomWebXRPolyfill' in window);\r\n        return isEmulated;\r\n    },\r\n    isXRSessionActive: function () {\r\n        return WL.xrSession != null;\r\n    },\r\n    openLink(url, newTab = true, exitXRSession = true, onSuccessCallback = null, onFailureCallback = null) {\r\n        if (exitXRSession) {\r\n            if (WL.xrSession) {\r\n                WL.xrSession.end();\r\n                Global.myXRSessionActiveOpenLinkExtraCheck = false;\r\n            }\r\n        }\r\n\r\n        let element = document.createElement(\"a\");\r\n\r\n        element.style.display = \"none\";\r\n\r\n        document.body.appendChild(element);\r\n\r\n        element.addEventListener(\"click\", function () {\r\n            let targetPage = undefined;\r\n            if (newTab) {\r\n                targetPage = \"_blank\";\r\n            }\r\n\r\n            let result = window.open(url, targetPage);\r\n\r\n            if (result != null) {\r\n                if (onSuccessCallback != null) {\r\n                    onSuccessCallback();\r\n                }\r\n            } else {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n            }\r\n        });\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n    },\r\n    openLinkPersistent(url, newTab = true, exitXRSession = true, timeOutSeconds = null, onSuccessCallback = null, onFailureCallback = null) {\r\n        let totalSeconds = 0;\r\n        let secondsTillNextAttempt = 0.5;\r\n        let onPersistentFailureCallback = function (...args) {\r\n            if (timeOutSeconds != null && totalSeconds >= timeOutSeconds) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback(...args);\r\n                }\r\n            } else {\r\n                totalSeconds += secondsTillNextAttempt;\r\n                setTimeout(function () {\r\n                    PP.XRUtils.openLink(url, newTab, exitXRSession, onSuccessCallback, onPersistentFailureCallback);\r\n                }, secondsTillNextAttempt * 1000);\r\n            }\r\n        };\r\n\r\n        PP.XRUtils.openLink(url, newTab, exitXRSession, onSuccessCallback, onPersistentFailureCallback);\r\n    }\r\n};",
        "PP.DebugAxes = class DebugAxes {\r\n\r\n    constructor(autoRefresh = true) {\r\n        this._myDebugRight = new PP.DebugLine();\r\n        this._myDebugRight.setColor([1, 0, 0, 1]);\r\n        this._myDebugUp = new PP.DebugLine();\r\n        this._myDebugUp.setColor([0, 1, 0, 1]);\r\n        this._myDebugForward = new PP.DebugLine();\r\n        this._myDebugForward.setColor([0, 0, 1, 1]);\r\n\r\n        this._myTransform = glMatrix.mat4.create();\r\n        this._myAxesLength = 0.1;\r\n        this._myPositionOffset = [0, 0, 0];\r\n\r\n        this._myVisible = true;\r\n        this._myDirty = false;\r\n        this._myAutoRefresh = autoRefresh;\r\n\r\n        this._myDebugRight.setVisible(this._myVisible);\r\n        this._myDebugUp.setVisible(this._myVisible);\r\n        this._myDebugForward.setVisible(this._myVisible);\r\n\r\n        this._myDebugRight.setAutoRefresh(false);\r\n        this._myDebugUp.setAutoRefresh(false);\r\n        this._myDebugForward.setAutoRefresh(false);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this._myVisible = visible;\r\n        this._myDebugRight.setVisible(visible);\r\n        this._myDebugUp.setVisible(visible);\r\n        this._myDebugForward.setVisible(visible);\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n        this._myDebugRight.setAutoRefresh(autoRefresh);\r\n        this._myDebugUp.setAutoRefresh(autoRefresh);\r\n        this._myDebugForward.setAutoRefresh(autoRefresh);\r\n    }\r\n\r\n    setTransform(transform) {\r\n        if (transform.length == 8) {\r\n            transform.quat2_toMatrix(this._myTransform);\r\n        } else {\r\n            this._myTransform.mat4_copy(transform);\r\n        }\r\n\r\n        this._markDirty();\r\n    }\r\n\r\n    setAxesLength(length) {\r\n        this._myAxesLength = length;\r\n\r\n        this._markDirty();\r\n    }\r\n\r\n    setPositionOffset(offset) {\r\n        this._myPositionOffset.vec3_copy(offset);\r\n\r\n        this._markDirty();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refreshAxes(dt);\r\n\r\n            this._myDebugForward.update(dt);\r\n            this._myDebugUp.update(dt);\r\n            this._myDebugRight.update(dt);\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _refreshAxes(dt) {\r\n        let axes = this._myTransform.mat4_getAxes();\r\n        let position = this._myTransform.mat4_getPosition();\r\n        position.vec3_add(this._myPositionOffset, position);\r\n        this._myDebugRight.setStartDirectionLength(position, axes[0], this._myAxesLength);\r\n        this._myDebugUp.setStartDirectionLength(position, axes[1], this._myAxesLength);\r\n        this._myDebugForward.setStartDirectionLength(position, axes[2], this._myAxesLength);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this._refreshAxes(0);\r\n            this._myDebugForward._refreshLine(0);\r\n            this._myDebugUp._refreshLine(0);\r\n            this._myDebugRight._refreshLine(0);\r\n        }\r\n    }\r\n}",
        "WL.registerComponent('pp-debug-global-data', {\r\n    _myCubeMesh: { type: WL.Type.Mesh },\r\n    _myFlatMaterial: { type: WL.Type.Material },\r\n}, {\r\n    init: function () {\r\n        PP.myDebugData.myRootObject = WL.scene.addObject(null);\r\n\r\n        PP.myDebugData.myCubeMesh = this._myCubeMesh;\r\n        PP.myDebugData.myFlatMaterial = this._myFlatMaterial;\r\n    },\r\n});\r\n\r\nPP.myDebugData = {\r\n    myRootObject: null,\r\n    myCubeMesh: null,\r\n    myFlatMaterial: null\r\n};",
        "PP.DebugLine = class DebugLine {\r\n\r\n    constructor(autoRefresh = true) {\r\n        this._myLineRootObject = null;\r\n        this._myLineObject = null;\r\n\r\n        this._myStartPosition = [0, 0, 0];\r\n        this._myDirection = [0, 0, 1];\r\n        this._myLength = 0;\r\n\r\n        this._myThickness = 0.005;\r\n\r\n        this._myColor = [0.7, 0.7, 0.7, 1];\r\n\r\n        this._myVisible = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myAutoRefresh = autoRefresh;\r\n\r\n        this._buildLine();\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myLineRootObject.pp_setActiveHierarchy(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    setStartEnd(start, end) {\r\n        let direction = [];\r\n        glMatrix.vec3.sub(direction, end, start);\r\n        let length = glMatrix.vec3.length(direction);\r\n        glMatrix.vec3.normalize(direction, direction);\r\n\r\n        this.setStartDirectionLength(start, direction, length);\r\n    }\r\n\r\n    setStartDirectionLength(start, direction, length) {\r\n        this._myStartPosition.vec3_copy(start);\r\n        this._myDirection.vec3_copy(direction);\r\n        this._myLength = length;\r\n\r\n        this._markDirty();\r\n    }\r\n\r\n    setColor(color) {\r\n        glMatrix.vec4.copy(this._myColor, color);\r\n\r\n        this._markDirty();\r\n    }\r\n\r\n    setThickness(thickness) {\r\n        this._myThickness = thickness;\r\n\r\n        this._markDirty();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refreshLine(dt);\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _refreshLine(dt) {\r\n        this._myLineRootObject.setTranslationWorld(this._myStartPosition);\r\n        this._myLineObject.resetTranslationRotation();\r\n        this._myLineObject.resetScaling();\r\n\r\n        this._myLineObject.scale([this._myThickness / 2, this._myThickness / 2, this._myLength / 2]);\r\n\r\n        let forward = this._myLineObject.pp_getForward();\r\n        let angle = glMatrix.vec3.angle(forward, this._myDirection);\r\n        if (angle > 0.0001) {\r\n            let rotationAxis = [];\r\n            glMatrix.vec3.cross(rotationAxis, forward, this._myDirection);\r\n            glMatrix.vec3.normalize(rotationAxis, rotationAxis);\r\n            let rotationQuat = [];\r\n            glMatrix.quat.setAxisAngle(rotationQuat, rotationAxis, angle);\r\n\r\n            glMatrix.quat.mul(rotationQuat, rotationQuat, this._myLineObject.transformWorld);\r\n            glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n            this._myLineObject.rotateObject(rotationQuat);\r\n        }\r\n\r\n        forward = this._myLineObject.pp_getForward();\r\n        let position = this._myLineObject.pp_getPosition();\r\n        glMatrix.vec3.scale(forward, forward, this._myLength / 2);\r\n        glMatrix.vec3.add(position, forward, position);\r\n        this._myLineObject.setTranslationWorld(position);\r\n\r\n        this._myLineMesh.material.color = this._myColor;\r\n    }\r\n\r\n    _buildLine() {\r\n        this._myLineRootObject = WL.scene.addObject(PP.myDebugData.myRootObject);\r\n        this._myLineObject = WL.scene.addObject(this._myLineRootObject);\r\n        this._myLineObject.scale([0.01, 0.01, 0.01]);\r\n\r\n        this._myLineMesh = this._myLineObject.addComponent('mesh');\r\n        this._myLineMesh.mesh = PP.myDebugData.myCubeMesh;\r\n        this._myLineMesh.material = PP.myDebugData.myFlatMaterial.clone();\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this._refreshLine(0);\r\n        }\r\n    }\r\n};",
        "/*\r\n    You can also use plain functions for state/transition if u want to do something simpler and faster\r\n\r\n    Signatures:\r\n        stateUpdateFunction(dt, fsm)\r\n        initFunction(fsm, initStateData)\r\n        transitionFunction(fsm, transitionData)\r\n*/\r\n\r\nPP.StateData = class StateData {\r\n    constructor(stateID, stateObject) {\r\n        this.myID = stateID;\r\n        this.myObject = stateObject;\r\n    }\r\n};\r\n\r\nPP.TransitionData = class TransitionData {\r\n    constructor(transitionID, fromStateData, toStateData, transitionObject, skipStateFunction) {\r\n        this.myID = transitionID;\r\n        this.myFromState = fromStateData;\r\n        this.myToState = toStateData;\r\n        this.myObject = transitionObject;\r\n        this.mySkipStateFunction = skipStateFunction;\r\n    }\r\n};\r\n\r\nPP.PendingPerform = class PendingPerform {\r\n    constructor(transitionID, ...args) {\r\n        this.myID = transitionID;\r\n        this.myArgs = args;\r\n    }\r\n};\r\n\r\nPP.PerformType = {\r\n    IMMEDIATE: 0,\r\n    DELAYED: 1\r\n};\r\n\r\nPP.PerformDelayedType = {\r\n    QUEUE: 0,\r\n    KEEP_FIRST: 1,\r\n    KEEP_LAST: 2\r\n};\r\n\r\nPP.SkipStateFunction = {\r\n    NONE: 0,\r\n    END: 1,\r\n    START: 2,\r\n    BOTH: 3\r\n};\r\n\r\nPP.FSM = class FSM {\r\n\r\n    constructor(performType = PP.PerformType.IMMEDIATE, performDelayedType = PP.PerformDelayedType.QUEUE) {\r\n        this._myCurrentStateData = null;\r\n\r\n        this._myStateMap = new Map();\r\n        this._myTransitionMap = new Map();\r\n\r\n        this._myDebugLogActive = false;\r\n        this._myDebugShowDelayedInfo = false;\r\n        this._myDebugLogName = \"FSM\";\r\n\r\n        this._myPerformType = performType;\r\n        this._myPerformDelayedType = performDelayedType;\r\n        this._myPendingPerforms = [];\r\n    }\r\n\r\n    addState(stateID, state = null) {\r\n        let stateObject = null;\r\n        if (!state || typeof state == 'function') {\r\n            stateObject = {};\r\n            if (typeof state == 'function') {\r\n                stateObject.update = state;\r\n            } else {\r\n                stateObject.update = null;\r\n            }\r\n            stateObject.clone = function () {\r\n                let cloneObject = {};\r\n                cloneObject.update = this.update;\r\n                cloneObject.clone = this.clone;\r\n                return cloneObject;\r\n            };\r\n        } else {\r\n            stateObject = state;\r\n        }\r\n\r\n        let stateData = new PP.StateData(stateID, stateObject);\r\n        this._myStateMap.set(stateID, stateData);\r\n        this._myTransitionMap.set(stateID, new Map());\r\n    }\r\n\r\n    addTransition(fromStateID, toStateID, transitionID, transition = null, skipStateFunction = PP.SkipStateFunction.NONE) {\r\n        let transitionObject = null;\r\n        if (!transition || typeof transition == 'function') {\r\n            transitionObject = {};\r\n            if (typeof transition == 'function') {\r\n                transitionObject.perform = transition;\r\n            } else {\r\n                transitionObject.perform = null;\r\n            }\r\n            transitionObject.clone = function () {\r\n                let cloneObject = {};\r\n                cloneObject.perform = this.perform;\r\n                cloneObject.clone = this.clone;\r\n                return cloneObject;\r\n            };\r\n        } else {\r\n            transitionObject = transition;\r\n        }\r\n\r\n        if (this.hasState(fromStateID) && this.hasState(toStateID)) {\r\n            let fromMap = this._getTransitionMapFromState(fromStateID);\r\n\r\n            let transitionData = new PP.TransitionData(transitionID, this.getState(fromStateID), this.getState(toStateID), transitionObject, skipStateFunction);\r\n            fromMap.set(transitionID, transitionData);\r\n        } else {\r\n            if (!this.hasState(fromStateID) && !this.hasState(toStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- from state not found:\", fromStateID, \"- to state not found:\", toStateID);\r\n            } else if (!this.hasState(fromStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- from state not found:\", fromStateID);\r\n            } else if (!this.hasState(toStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- to state not found:\", toStateID);\r\n            }\r\n        }\r\n    }\r\n\r\n    init(initStateID, initTransition = null, ...args) {\r\n        let initTransitionObject = initTransition;\r\n        if (initTransition && typeof initTransition == 'function') {\r\n            initTransitionObject = {};\r\n            initTransitionObject.performInit = initTransition;\r\n        }\r\n\r\n        if (this.hasState(initStateID)) {\r\n            let initStateData = this._myStateMap.get(initStateID);\r\n\r\n            if (this._myDebugLogActive) {\r\n                console.log(this._myDebugLogName, \"- Init:\", initStateID);\r\n            }\r\n\r\n            if (initTransitionObject && initTransitionObject.performInit) {\r\n                initTransitionObject.performInit(this, initStateData, ...args);\r\n            } else if (initStateData.myObject && initStateData.myObject.init) {\r\n                initStateData.myObject.init(this, initStateData, ...args);\r\n            }\r\n\r\n            this._myCurrentStateData = initStateData;\r\n        } else if (this._myDebugLogActive) {\r\n            console.warn(this._myDebugLogName, \"- Init state not found:\", initStateID);\r\n        }\r\n    }\r\n\r\n    update(dt, ...args) {\r\n        if (this._myPendingPerforms.length > 0) {\r\n            for (let i = 0; i < this._myPendingPerforms.length; i++) {\r\n                this._perform(this._myPendingPerforms[i].myID, true, ...this._myPendingPerforms[i].myArgs);\r\n            }\r\n            this._myPendingPerforms = [];\r\n        }\r\n\r\n        if (this._myCurrentStateData && this._myCurrentStateData.myObject && this._myCurrentStateData.myObject.update) {\r\n            this._myCurrentStateData.myObject.update(dt, this, ...args);\r\n        }\r\n    }\r\n\r\n    perform(transitionID, ...args) {\r\n        if (this._myPerformType == PP.PerformType.DELAYED) {\r\n            this.performDelayed(transitionID, ...args);\r\n        } else {\r\n            this.performImmediate(transitionID, ...args);\r\n        }\r\n    }\r\n\r\n    performDelayed(transitionID, ...args) {\r\n        let performDelayed = false;\r\n\r\n        switch (this._myPerformDelayedType) {\r\n            case PP.PerformDelayedType.QUEUE:\r\n                this._myPendingPerforms.push(new PP.PendingPerform(transitionID, ...args));\r\n                performDelayed = true;\r\n                break;\r\n            case PP.PerformDelayedType.KEEP_FIRST:\r\n                if (!this.hasPendingPerforms()) {\r\n                    this._myPendingPerforms.push(new PP.PendingPerform(transitionID, ...args));\r\n                    performDelayed = true;\r\n                }\r\n                break;\r\n            case PP.PerformDelayedType.KEEP_LAST:\r\n                this.resetPendingPerforms();\r\n                this._myPendingPerforms.push(new PP.PendingPerform(transitionID, ...args));\r\n                performDelayed = true;\r\n                break;\r\n        }\r\n\r\n        return performDelayed;\r\n    }\r\n\r\n    performImmediate(transitionID, ...args) {\r\n        return this._perform(transitionID, false, ...args);\r\n    }\r\n\r\n    canPerform(transitionID) {\r\n        return this.hasTransitionFromState(this._myCurrentStateData.myID, transitionID);\r\n    }\r\n\r\n    canGoTo(stateID, transitionID = null) {\r\n        return this.hasTransitionFromStateToState(this._myCurrentStateData.myID, stateID, transitionID);\r\n    }\r\n\r\n    isInState(stateID) {\r\n        return this._myCurrentStateData != null && this._myCurrentStateData.myID == stateID;\r\n    }\r\n\r\n    hasBeenInit() {\r\n        return this._myCurrentStateData != null;\r\n    }\r\n\r\n    reset() {\r\n        this.resetState();\r\n        this.resetPendingPerforms();\r\n    }\r\n\r\n    resetState() {\r\n        this._myCurrentStateData = null;\r\n    }\r\n\r\n    resetPendingPerforms() {\r\n        this._myPendingPerforms = [];\r\n    }\r\n\r\n    getCurrentState() {\r\n        return this._myCurrentStateData;\r\n    }\r\n\r\n    getCurrentTransitions() {\r\n        return this.getTransitionsFromState(this._myCurrentStateData.myID);\r\n    }\r\n\r\n    getCurrentTransitionsToState(stateID) {\r\n        return this.getTransitionsFromStateToState(this._myCurrentStateData.myID, stateID);\r\n    }\r\n\r\n    getState(stateID) {\r\n        return this._myStateMap.get(stateID);\r\n    }\r\n\r\n    getStates() {\r\n        return this._myStateMap.values();\r\n    }\r\n\r\n    getTransitions() {\r\n        let transitions = [];\r\n\r\n        for (let transitionsPerStateMap of this._myTransitionMap.values()) {\r\n            for (let transitionData of transitionsPerStateMap.values()) {\r\n                transitions.push(transitionData);\r\n            }\r\n        }\r\n\r\n        return transitions;\r\n    }\r\n\r\n    getTransitionsFromState(fromStateID) {\r\n        let transitionMap = this._getTransitionMapFromState(fromStateID);\r\n        return Array.from(transitionMap.values());\r\n    }\r\n\r\n    getTransitionsFromStateToState(fromStateID, toStateID) {\r\n        let transitionMap = this._getTransitionMapFromState(fromStateID);\r\n\r\n        let transitionsToState = [];\r\n        for (let transitionData of transitionMap.values()) {\r\n            if (transitionData.myToState.myID == toStateID) {\r\n                transitionsToState.push(transitionData);\r\n            }\r\n        }\r\n\r\n        return transitionsToState;\r\n    }\r\n\r\n    removeState(stateID) {\r\n        if (this.hasState(stateID)) {\r\n            this._myStateMap.delete(stateID);\r\n            this._myTransitionMap.delete(stateID);\r\n\r\n            for (let transitionMap of this._myTransitionMap.values()) {\r\n                let toDelete = [];\r\n                for (let [transitionID, transitionData] of transitionMap.entries()) {\r\n                    if (transitionData.myToState.myID == stateID) {\r\n                        toDelete.push(transitionID);\r\n                    }\r\n                }\r\n\r\n                for (let transitionID of toDelete) {\r\n                    transitionMap.delete(transitionID);\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    removeTransitionFromState(fromStateID, transitionID) {\r\n        let fromTransitions = this._getTransitionMapFromState(fromStateID);\r\n        if (fromTransitions) {\r\n            return fromTransitions.delete(transitionID);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    hasState(stateID) {\r\n        return this._myStateMap.has(stateID);\r\n    }\r\n\r\n    hasTransitionFromState(fromStateID, transitionID) {\r\n        let transitions = this.getTransitionsFromState(fromStateID);\r\n\r\n        let transitionIndex = transitions.findIndex(function (transition) {\r\n            return transition.myID == transitionID;\r\n        });\r\n\r\n        return transitionIndex >= 0;\r\n    }\r\n\r\n    hasTransitionFromStateToState(fromStateID, toStateID, transitionID = null) {\r\n        let transitions = this.getTransitionsFromStateToState(fromStateID, toStateID);\r\n\r\n        let hasTransition = false;\r\n        if (transitionID) {\r\n            let transitionIndex = transitions.findIndex(function (transition) {\r\n                return transition.myID == transitionID;\r\n            });\r\n\r\n            hasTransition = transitionIndex >= 0;\r\n        } else {\r\n            hasTransition = transitions.length > 0;\r\n        }\r\n\r\n        return hasTransition;\r\n    }\r\n\r\n    setPerformType(performType) {\r\n        this._myPerformType = performType;\r\n    }\r\n\r\n    getPerformType() {\r\n        return this._myPerformType;\r\n    }\r\n\r\n    setPerformDelayedType(performDelayedType) {\r\n        this._myPerformDelayedType = performDelayedType;\r\n    }\r\n\r\n    getPerformDelayedType() {\r\n        return this._myPerformDelayedType;\r\n    }\r\n\r\n    hasPendingPerforms() {\r\n        return this._myPendingPerforms.length > 0;\r\n    }\r\n\r\n    getPendingPerforms() {\r\n        return this._myPendingPerforms.slice(0);\r\n    }\r\n\r\n    clone(deepClone = false) {\r\n        if (!this.isCloneable(deepClone)) {\r\n            return null;\r\n        }\r\n\r\n        let cloneFSM = new PP.FSM();\r\n\r\n        cloneFSM._myDebugLogActive = this._myDebugLogActive;\r\n        cloneFSM._myDebugShowDelayedInfo = this._myDebugShowDelayedInfo;\r\n        cloneFSM._myDebugLogName = this._myDebugLogName.slice(0);\r\n\r\n        cloneFSM._myPerformType = this._myPerformType;\r\n        cloneFSM._myPerformDelayedType = this._myPerformDelayedType;\r\n        cloneFSM._myPendingPerforms = this._myPendingPerforms.slice(0);\r\n\r\n        for (let entry of this._myStateMap.entries()) {\r\n            let stateData = null;\r\n\r\n            if (deepClone) {\r\n                stateData = new PP.StateData(entry[1].myID, entry[1].myObject.clone());\r\n            } else {\r\n                stateData = new PP.StateData(entry[1].myID, entry[1].myObject);\r\n            }\r\n\r\n            cloneFSM._myStateMap.set(stateData.myID, stateData);\r\n        }\r\n\r\n        for (let entry of this._myTransitionMap.entries()) {\r\n            let fromStateMap = new Map();\r\n            cloneFSM._myTransitionMap.set(entry[0], fromStateMap);\r\n\r\n            for (let tEntry of entry[1].entries()) {\r\n                let transitionData = null;\r\n\r\n                let fromState = cloneFSM.getState(tEntry[1].myFromState.myID);\r\n                let toState = cloneFSM.getState(tEntry[1].myToState.myID);\r\n\r\n                if (deepClone) {\r\n                    transitionData = new PP.TransitionData(tEntry[1].myID, fromState, toState, tEntry[1].myObject.clone(), tEntry[1].mySkipStateFunction);\r\n                } else {\r\n                    transitionData = new PP.TransitionData(tEntry[1].myID, fromState, toState, tEntry[1].myObject, tEntry[1].mySkipStateFunction);\r\n                }\r\n\r\n                fromStateMap.set(transitionData.myID, transitionData);\r\n            }\r\n        }\r\n\r\n        if (this._myCurrentStateData) {\r\n            cloneFSM._myCurrentStateData = cloneFSM.getState(this._myCurrentStateData.myID);\r\n        }\r\n\r\n        return cloneFSM;\r\n    }\r\n\r\n    isCloneable(deepClone = false) {\r\n        if (!deepClone) {\r\n            return true;\r\n        }\r\n\r\n        let isDeepCloneable = true;\r\n\r\n        for (let entry of this._myStateMap.entries()) {\r\n            isDeepCloneable = isDeepCloneable && entry[1].myObject.clone != null;\r\n        }\r\n\r\n        for (let entry of this._myTransitionMap.entries()) {\r\n            for (let tEntry of entry[1].entries()) {\r\n                isDeepCloneable = isDeepCloneable && tEntry[1].myObject.clone != null;\r\n            }\r\n        }\r\n\r\n        return isDeepCloneable;\r\n    }\r\n\r\n    setDebugLogActive(active, debugLogName = null, showDelayedInfo = false) {\r\n        this._myDebugLogActive = active;\r\n        this._myDebugShowDelayedInfo = showDelayedInfo;\r\n        if (debugLogName) {\r\n            this._myDebugLogName = \"FSM: \".concat(debugLogName);\r\n        }\r\n    }\r\n\r\n    _perform(transitionID, isDelayed, ...args) {\r\n        if (this._myCurrentStateData) {\r\n            if (this.canPerform(transitionID)) {\r\n                let transitions = this._myTransitionMap.get(this._myCurrentStateData.myID);\r\n                let transitionToPerform = transitions.get(transitionID);\r\n\r\n                let fromState = this._myCurrentStateData;\r\n                let toState = this._myStateMap.get(transitionToPerform.myToState.myID);\r\n\r\n                if (this._myDebugLogActive) {\r\n                    let consoleArguments = [this._myDebugLogName, \"- From:\", fromState.myID, \"- To:\", toState.myID, \"- With:\", transitionID];\r\n                    if (this._myDebugShowDelayedInfo) {\r\n                        consoleArguments.push(isDelayed ? \"- Delayed\" : \"- Immediate\");\r\n                    }\r\n                    console.log(...consoleArguments);\r\n                }\r\n\r\n                if (transitionToPerform.mySkipStateFunction != PP.SkipStateFunction.END && transitionToPerform.mySkipStateFunction != PP.SkipStateFunction.BOTH &&\r\n                    fromState.myObject && fromState.myObject.end) {\r\n                    fromState.myObject.end(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                if (transitionToPerform.myObject && transitionToPerform.myObject.perform) {\r\n                    transitionToPerform.myObject.perform(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                if (transitionToPerform.mySkipStateFunction != PP.SkipStateFunction.START && transitionToPerform.mySkipStateFunction != PP.SkipStateFunction.BOTH &&\r\n                    toState.myObject && toState.myObject.start) {\r\n                    toState.myObject.start(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                this._myCurrentStateData = transitionToPerform.myToState;\r\n\r\n                return true;\r\n            } else if (this._myDebugLogActive) {\r\n                let consoleArguments = [this._myDebugLogName, \"- No Transition:\", transitionID, \"- From:\", this._myCurrentStateData.myID];\r\n                if (this._myDebugShowDelayedInfo) {\r\n                    consoleArguments.push(isDelayed ? \"- Delayed\" : \"- Immediate\");\r\n                }\r\n                console.warn(...consoleArguments);\r\n            }\r\n        } else if (this._myDebugLogActive) {\r\n            let consoleArguments = [this._myDebugLogName, \"- FSM not initialized yet\"];\r\n            if (this._myDebugShowDelayedInfo) {\r\n                consoleArguments.push(isDelayed ? \"- Delayed\" : \"- Immediate\");\r\n            }\r\n            console.warn(...consoleArguments);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _getTransitionMapFromState(fromStateID) {\r\n        return this._myTransitionMap.get(fromStateID);\r\n    }\r\n};",
        "/*\r\n    There is no need to inherit from this state, especially since states can be only functions\r\n    It's more like an example of what is needed\r\n    \r\n    If you don't specify some methods the fsm will just skip them\r\n    Or consider them always valid\r\n\r\n    The param state is of type PP.StateData and can be used to retrieve the stateID and other data\r\n    The param transition is of type PP.TransitionData and can be used to retrieve the transitionID, the from and to states and other data\r\n*/\r\n\r\nPP.State = class State {\r\n\r\n    //Called every frame if this is the current state\r\n    //You can retrieve this state data by calling fsm.getCurrentState()\r\n    update(dt, fsm, ...args) {\r\n    }\r\n\r\n    //Called when the fsm is started with this init state if no init transition object is specified or it does not have a performInit function\r\n    //Since the state is set as the current one after the init, you can't use fsm.getCurrentState() to get it, so it is forwarded as a param if needed\r\n    init(fsm, state, ...args) {\r\n    }\r\n\r\n    //Called when entering this state if no transition object is specified or it does not have a perform function\r\n    //You can get this state data by accesing to the to state data inside the transition\r\n    start(fsm, transition, ...args) {\r\n    }\r\n\r\n    //Called when exiting this state if no transition function is specified\r\n    //You can get this state data by accesing to the from state data inside the transition\r\n    end(fsm, transition, ...args) {\r\n    }\r\n\r\n};",
        "/*\r\n    There is no need to inherit from this transition, especially since states can be only transitions\r\n    It's more like an example of what is needed\r\n    \r\n    The param transition (forwarded at the end every function) is of type PP.TransitionData and can be used to retrieve the transitionID and other data\r\n    The initState param is of type PP.StateData and can be used to retrieve the stateID and other data\r\n*/\r\n\r\nPP.Transition = class Transition {\r\n\r\n    //Called if this is used as an init transition for the fsm\r\n    performInit(fsm, initState, ...args) {\r\n\r\n    }\r\n\r\n    //Called when performing a transition\r\n    //You can find the from and to states inside the transition params\r\n    perform(fsm, transition, ...args) {\r\n    }\r\n\r\n};",
        "class enoughISenough {\r\n    constructor() {\r\n        this.prepareSFXSetups();\r\n    }\r\n\r\n    start() {\r\n        this._myStatisticsManager = new StatisticsManager();\r\n        this._myStatisticsManager.start();\r\n\r\n        this._myMainFSM = new MainFSM();\r\n        this._myMainFSM.init();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myMainFSM.update(dt);\r\n\r\n        if (PP.XRUtils.isXRSessionActive()) {\r\n            Global.myStatistics.myTotalPlayTime += dt;\r\n        }\r\n\r\n        this._myStatisticsManager.update(dt);\r\n    }\r\n\r\n    prepareSFXSetups() {\r\n        let manager = Global.myAudioManager;\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/music/you_KNOW_22Hz.wav\");\r\n            audioSetup.myLoop = true;\r\n            audioSetup.mySpatial = false;\r\n            audioSetup.myVolume = 0.45;\r\n            manager.addAudioSetup(SfxID.YOU_KNOW, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/NOT_ENOUGH.wav\");\r\n            audioSetup.myReferenceDistance = 1000000;\r\n            manager.addAudioSetup(SfxID.NOT_ENOUGH, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/blather_0.wav\");\r\n            audioSetup.myVolume = 0.4;\r\n            audioSetup.myReferenceDistance = 1000000;\r\n            manager.addAudioSetup(SfxID.BLATHER_0, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/blather_1.wav\");\r\n            audioSetup.myVolume = 0.4;\r\n            audioSetup.myReferenceDistance = 1000000;\r\n            manager.addAudioSetup(SfxID.BLATHER_1, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/blather_dot.wav\");\r\n            audioSetup.myVolume = 0.4;\r\n            audioSetup.myReferenceDistance = 1000000;\r\n            manager.addAudioSetup(SfxID.BLATHER_DOT, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/ring_rise.wav\");\r\n            audioSetup.myVolume = 0.5;\r\n            audioSetup.myRate = 0.8;\r\n            manager.addAudioSetup(SfxID.RING_RISE, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/hand_piece_appear.wav\");\r\n            audioSetup.myVolume = 0.2;\r\n            manager.addAudioSetup(SfxID.HAND_PIECE_APPEAR, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/mr_NOT_appear.wav\");\r\n            audioSetup.myReferenceDistance = 1000000;\r\n            audioSetup.myPitch = 0.8;\r\n            audioSetup.myVolume = 0.85;\r\n            manager.addAudioSetup(SfxID.MR_NOT_APPEAR, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/mr_NOT_disappear.wav\");\r\n            audioSetup.myReferenceDistance = 1000000;\r\n            audioSetup.myPitch = 0.8;\r\n            audioSetup.myVolume = 0.45;\r\n            manager.addAudioSetup(SfxID.MR_NOT_DISAPPEAR, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/title_appear.wav\");\r\n            audioSetup.myReferenceDistance = 1000000;\r\n            audioSetup.myPitch = 0.8;\r\n            audioSetup.myVolume = 0.55;\r\n            manager.addAudioSetup(SfxID.TITLE_APPEAR, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/title_disappear.wav\");\r\n            audioSetup.myReferenceDistance = 1000000;\r\n            audioSetup.myPitch = 0.8;\r\n            audioSetup.myVolume = 0.8;\r\n            manager.addAudioSetup(SfxID.TITLE_DISAPPEAR, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/mr_NOT_explode.wav\");\r\n            audioSetup.myVolume = 0.95;\r\n            audioSetup.myReferenceDistance = 3;\r\n            manager.addAudioSetup(SfxID.CLONE_EXPLODE, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/mr_NOT_explode.wav\");\r\n            audioSetup.myVolume = 0.95;\r\n            audioSetup.myReferenceDistance = 3;\r\n            manager.addAudioSetup(SfxID.MR_NOT_EXPLODE, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/evidence_appear.wav\");\r\n            audioSetup.myVolume = 0.2;\r\n            audioSetup.myReferenceDistance = 3;\r\n            manager.addAudioSetup(SfxID.EVIDENCE_APPEAR, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/evidence_disappear.wav\");\r\n            audioSetup.myVolume = 0.5;\r\n            audioSetup.myReferenceDistance = 3;\r\n            manager.addAudioSetup(SfxID.EVIDENCE_DISAPPEAR, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/clone_appear.wav\");\r\n            audioSetup.myVolume = 0.65;\r\n            audioSetup.myReferenceDistance = 1000000;\r\n            manager.addAudioSetup(SfxID.CLONE_APPEAR, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/mr_NOT_fast_appear.wav\");\r\n            audioSetup.myRate = 1.5;\r\n            audioSetup.myVolume = 0.6;\r\n            audioSetup.myReferenceDistance = 1000000;\r\n            manager.addAudioSetup(SfxID.MR_NOT_FAST_APPEAR, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/grab.wav\");\r\n            audioSetup.myVolume = 0.55;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            manager.addAudioSetup(SfxID.GRAB, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/throw.wav\");\r\n            audioSetup.myRate = 0.7;\r\n            audioSetup.myVolume = 0.225;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            manager.addAudioSetup(SfxID.THROW, audioSetup);\r\n        }\r\n\r\n        {\r\n            let audioSetup = new PP.AudioSetup(\"assets/audio/sfx/collision.wav\");\r\n            audioSetup.myRate = 0.8;\r\n            audioSetup.myVolume = 0.5;\r\n            audioSetup.myReferenceDistance = 0.3;\r\n            manager.addAudioSetup(SfxID.COLLISION, audioSetup);\r\n        }\r\n\r\n        manager.createAudioPlayer(SfxID.RING_RISE);\r\n        for (let i = 0; i <= SfxID.BLATHER_DOT; i++) {\r\n            manager.createAudioPlayer(i);\r\n        }\r\n\r\n        //This MAY avoid some crackle on first play with position\r\n        let ringRise = manager.createAudioPlayer(SfxID.RING_RISE);\r\n        ringRise.setVolume(0);\r\n        ringRise.updatePosition([0, -10000, 0]);\r\n        ringRise.play();\r\n        ringRise.updatePosition([0, -10000, 0]);\r\n    }\r\n}\r\n\r\nvar SfxID = {\r\n    NOT_ENOUGH: 0,\r\n    BLATHER_0: 1,\r\n    BLATHER_1: 2,\r\n    RING_RISE: 3,\r\n    HAND_PIECE_APPEAR: 4,\r\n    MR_NOT_APPEAR: 5,\r\n    MR_NOT_DISAPPEAR: 6,\r\n    TITLE_APPEAR: 7,\r\n    TITLE_DISAPPEAR: 8,\r\n    CLONE_EXPLODE: 9,\r\n    MR_NOT_EXPLODE: 10,\r\n    EVIDENCE_APPEAR: 11,\r\n    EVIDENCE_DISAPPEAR: 12,\r\n    CLONE_APPEAR: 13,\r\n    MR_NOT_FAST_APPEAR: 14,\r\n    YOU_KNOW: 15,\r\n    GRAB: 16,\r\n    THROW: 17,\r\n    COLLISION: 18,\r\n    BLATHER_DOT: 19,\r\n};",
        "WL.registerComponent(\"enough-IS-enough-gateway\", {\r\n    _myPlayerRumbleObject: { type: WL.Type.Object },\r\n    _myRingAnimator: { type: WL.Type.Object },\r\n    _myLeftHandAnimator: { type: WL.Type.Object },\r\n    _myRightHandAnimator: { type: WL.Type.Object },\r\n}, {\r\n    init: function () {\r\n        Global.myGoogleAnalytics = window.gtag != null;\r\n        //Global.myGoogleAnalytics = false;\r\n        Global.myAudioManager = new PP.AudioManager();\r\n        Global.myParticlesManager = new ParticlesManager();\r\n        Global.myMeshObjectPoolMap = new PP.ObjectPoolManager();\r\n        Global.myMeshNoFogObjectPoolMap = new PP.ObjectPoolManager();\r\n        Global.myGameObjectPoolMap = new PP.ObjectPoolManager();\r\n        Global.mySaveManager = new PP.SaveManager();\r\n        //Global.mySaveManager.clear(); \r\n        Global.myScene = this.object;\r\n\r\n        Global.myPlayerRumbleObject = this._myPlayerRumbleObject;\r\n        Global.myRingAnimator = this._myRingAnimator.pp_getComponent(\"ring-animator\");\r\n        Global.myLeftHandAnimator = this._myLeftHandAnimator.pp_getComponent(\"hand-animator\");\r\n        Global.myRightHandAnimator = this._myRightHandAnimator.pp_getComponent(\"hand-animator\");\r\n\r\n        this.enoughISenough = new enoughISenough();\r\n\r\n        Global.myAudioManager.setVolume(1);\r\n\r\n        this._myFirstUpdate = true;\r\n        this._myIncreasePool = false;\r\n        this._myMeshObjectPoolSize = 20;\r\n        this._myGameObjectPoolSize = 40;\r\n        this._myUpdateReadyCountdown = 10;\r\n        this._myLoadTimeSent = false;\r\n    },\r\n    start: function () {\r\n        let version = Global.mySaveManager.loadNumber(\"game_version\", 0);\r\n        Global.myGameVersion = 18;\r\n\r\n        let minVersionToReset = 6;\r\n        if (version < minVersionToReset) {\r\n            Global.mySaveManager.clear();\r\n            Global.mySaveManager.save(\"game_version\", Global.myGameVersion);\r\n        } else if (version < Global.myGameVersion) {\r\n            Global.mySaveManager.save(\"game_version\", Global.myGameVersion);\r\n        }\r\n\r\n        let trialStartedOnce = Global.mySaveManager.loadBool(\"trial_started_once\", false);\r\n        let trialPhase = Global.mySaveManager.loadNumber(\"trial_phase\", 1);\r\n        let trialCompleted = Global.mySaveManager.loadBool(\"trial_completed\", false);\r\n        Global.myEnableSelectPhysx = trialCompleted || (trialStartedOnce && trialPhase >= 2);\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    },\r\n    update: function (dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            this._start();\r\n            PP.setEasyTuneWidgetActiveVariable(\"Float 1\");\r\n        } else if (!Global.myUpdateReady) {\r\n            if (!this._myLoadTimeSent) {\r\n                if (window.performance) {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"load_time\", {\r\n                            \"value\": (performance.now() / 1000).toFixed(2)\r\n                        });\r\n                    }\r\n                }\r\n\r\n                this._myLoadTimeSent = true;\r\n            }\r\n\r\n            this._myUpdateReadyCountdown--;\r\n            if (this._myUpdateReadyCountdown <= 0) {\r\n                Global.myUpdateReady = true;\r\n            }\r\n        }\r\n\r\n        if (Global.myUpdateReady) {\r\n            if (this._myIncreasePool) {\r\n                this._increasePools();\r\n            } else {\r\n                if (PP.InputUtils.getInputSourceType(PP.Handedness.LEFT) == PP.InputSourceType.HAND &&\r\n                    PP.InputUtils.getInputSourceType(PP.Handedness.RIGHT) == PP.InputSourceType.HAND\r\n                ) {\r\n                    Global.myIsUsingTrackedHands = true;\r\n                } else {\r\n                    Global.myIsUsingTrackedHands = false;\r\n                }\r\n\r\n                this.enoughISenough.update(dt * Global.myDeltaTimeSpeed);\r\n                Global.myParticlesManager.update(dt * Global.myDeltaTimeSpeed);\r\n                Global.mySaveManager.update(dt * Global.myDeltaTimeSpeed);\r\n            }\r\n\r\n            if (Global.myUnmute && PP.XRUtils.isXRSessionActive() && Global.myXRSessionActiveOpenLinkExtraCheck) {\r\n                Global.myUnmute = false;\r\n                Howler.mute(false);\r\n            }\r\n\r\n            if (!Global.myIsUsingTrackedHandsVentEventSent) {\r\n                if (Global.myVentDurationWithTrackedHands >= 40) {\r\n                    Global.myIsUsingTrackedHandsVentEventSent = true;\r\n\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"is_using_tracked_hands_vent\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _start() {\r\n        //let componentAmountMapBeforeLoad = Global.myScene.pp_getComponentAmountMapHierarchy();\r\n        //console.error(componentAmountMapBeforeLoad);\r\n\r\n        WL.scene.reserveObjects(10700, { \"mesh\": 5850, \"text\": 800, \"collision\": 70, \"text-color-fog\": 140 });\r\n\r\n        {\r\n            let staringCube = Global.myGameObjects.get(GameObjectType.STARING_CUBE);\r\n            PP.MeshUtils.setClonedMaterials(staringCube);\r\n            let cloneParams = new PP.CloneParams();\r\n            cloneParams.myComponentsToInclude.push(\"mesh\");\r\n            Global.myMeshObjects.set(GameObjectType.STARING_CUBE, staringCube.pp_clone(cloneParams));\r\n        }\r\n\r\n        for (let entry of Global.myMeshObjects.entries()) {\r\n            if (entry[0] != GameObjectType.STARING_CUBE && entry[0] != GameObjectType.ZESTY_MARKET) {\r\n                PP.MeshUtils.setClonedMaterials(entry[1]);\r\n                PP.TextUtils.setClonedMaterials(entry[1]);\r\n            } else if (entry[0] == GameObjectType.ZESTY_MARKET) {\r\n                let zestyMeshes = entry[1].pp_getComponentsHierarchy(\"mesh\");\r\n                for (let zestyMesh of zestyMeshes) {\r\n                    let zestyMeshName = zestyMesh.object.pp_getName();\r\n                    if (zestyMeshName.includes(\"Frame\")) {\r\n                        zestyMesh.material = zestyMesh.material.clone();\r\n                    }\r\n                }\r\n            }\r\n\r\n            entry[1].pp_setActive(false);\r\n\r\n            let clonedMesh = entry[1].pp_clone();\r\n            PP.MeshUtils.setClonedMaterials(clonedMesh);\r\n            PP.TextUtils.setClonedMaterials(clonedMesh);\r\n            PP.MeshUtils.setFogColor(clonedMesh, [0, 0, 0, 0]);\r\n            Global.myMeshNoFogObjects.set(entry[0], clonedMesh);\r\n        }\r\n\r\n        for (let entry of Global.myGameObjects.entries()) {\r\n            if (entry[0] != GameObjectType.STARING_CUBE && entry[0] != GameObjectType.ZESTY_MARKET) {\r\n                PP.MeshUtils.setClonedMaterials(entry[1]);\r\n                PP.TextUtils.setClonedMaterials(entry[1]);\r\n            } else if (entry[0] == GameObjectType.ZESTY_MARKET) {\r\n                let zestyMeshes = entry[1].pp_getComponentsHierarchy(\"mesh\");\r\n                for (let zestyMesh of zestyMeshes) {\r\n                    let zestyMeshName = zestyMesh.object.pp_getName();\r\n                    if (zestyMeshName.includes(\"Frame\")) {\r\n                        zestyMesh.material = zestyMesh.material.clone();\r\n                    }\r\n                }\r\n            }\r\n\r\n            entry[1].pp_setActive(false);\r\n        }\r\n\r\n        let meshObjectPoolParams = new PP.ObjectPoolParams();\r\n        meshObjectPoolParams.myInitialPoolSize = 20;\r\n        meshObjectPoolParams.myPercentageToAddWhenEmpty = 0.2;\r\n\r\n        for (let entry of Global.myMeshObjects.entries()) {\r\n            Global.myMeshObjectPoolMap.addPool(entry[0], entry[1], meshObjectPoolParams);\r\n        }\r\n\r\n        for (let entry of Global.myMeshNoFogObjects.entries()) {\r\n            Global.myMeshNoFogObjectPoolMap.addPool(entry[0], entry[1], meshObjectPoolParams);\r\n        }\r\n\r\n        Global.myMeshObjectPoolMap.increasePoolPercentage(GameObjectType.MR_NOT, 1.2);\r\n        Global.myMeshNoFogObjectPoolMap.increasePoolPercentage(GameObjectType.MR_NOT, 1.2);\r\n        Global.myMeshObjectPoolMap.increasePoolPercentage(GameObjectType.MR_NOT_CLONE, 1.2);\r\n        Global.myMeshNoFogObjectPoolMap.increasePoolPercentage(GameObjectType.MR_NOT_CLONE, 1.2);\r\n\r\n        let cloneParams = new PP.CloneParams();\r\n        cloneParams.myDeepCloneParams.deepCloneComponentVariable(\"mesh\", \"material\", true);\r\n        let mrNOTCloneObjectPoolParams = new PP.ObjectPoolParams();\r\n        mrNOTCloneObjectPoolParams.myInitialPoolSize = 40;\r\n        mrNOTCloneObjectPoolParams.myPercentageToAddWhenEmpty = 0.2;\r\n        mrNOTCloneObjectPoolParams.myCloneParams = cloneParams;\r\n        Global.myGameObjectPoolMap.addPool(GameObjectType.MR_NOT_CLONE, Global.myGameObjects.get(GameObjectType.MR_NOT_CLONE), mrNOTCloneObjectPoolParams);\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Float 1\", 0, 10, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Float 2\", 30, 5, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Float 3\", 1.4, 5, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Float 4\", 4, 5, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneInt(\"Int\", 4, 1));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneBool(\"Bool\", false));\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"mr NOT Clone Scale\", 0.35, 0.1, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneBool(\"Prevent Vent Lost\", false));\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Explosion Particle Life\", 0.15, 0.5, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Explosion Particles Duration\", 0.5, 0.5, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Explosion Particles Delay\", 0.05, 0.5, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneInt(\"Explosion Particles Amount\", 2, 10));\r\n\r\n        PP.CAUtils.setDummyServer(new EIECADummyServer());\r\n        PP.CAUtils.setUseDummyServerOnSDKMissing(true);\r\n        PP.CAUtils.setUseDummyServerOnError(true);\r\n\r\n        this.enoughISenough.start();\r\n\r\n        /*\r\n        let componentAmountMapAfterLoad = Global.myScene.pp_getComponentAmountMapHierarchy();\r\n        //console.error(componentAmountMapAfterLoad);\r\n\r\n        let componentAmountMapDifference = new Map();\r\n        for (let entry of componentAmountMapAfterLoad.entries()) {\r\n            valueBefore = componentAmountMapBeforeLoad.get(entry[0]);\r\n            valueBefore = valueBefore == null ? 0 : valueBefore;\r\n            let result = entry[1] - valueBefore;\r\n            if (result > 0) {\r\n                componentAmountMapDifference.set(entry[0], result);\r\n            }\r\n        }\r\n        console.error(componentAmountMapDifference);\r\n        */\r\n    },\r\n    _increasePools() {\r\n        let amountToIncrease = 5;\r\n\r\n        if (this._myMeshObjectPoolSize > 0) {\r\n            this._myMeshObjectPoolSize -= amountToIncrease;\r\n\r\n            for (let entry of Global.myMeshObjects.entries()) {\r\n                Global.myMeshObjectPoolMap.increasePool(entry[0], amountToIncrease);\r\n            }\r\n\r\n            for (let entry of Global.myMeshNoFogObjects.entries()) {\r\n                Global.myMeshNoFogObjectPoolMap.increasePool(entry[0], amountToIncrease);\r\n            }\r\n        }\r\n\r\n        if (this._myGameObjectPoolSize > 0) {\r\n            this._myGameObjectPoolSize -= amountToIncrease;\r\n\r\n            Global.myGameObjectPoolMap.increasePool(GameObjectType.MR_NOT_CLONE, amountToIncrease);\r\n        }\r\n\r\n        if (this._myGameObjectPoolSize <= 0 && this._myMeshObjectPoolSize <= 0) {\r\n            this._myIncreasePool = false;\r\n            if (WL.xrSession) {\r\n                console.clear();\r\n            }\r\n        }\r\n    },\r\n    _onXRSessionStart(session) {\r\n        Global.myXRSessionActiveOpenLinkExtraCheck = true;\r\n    },\r\n    _onXRSessionEnd() {\r\n        Global.myXRSessionActiveOpenLinkExtraCheck = false;\r\n    }\r\n});\r\n\r\nvar Global = {\r\n    myDeltaTimeSpeed: 1,\r\n    myScene: null,\r\n    myUpdateReady: false,\r\n    myAudioManager: null,\r\n    myParticlesManager: null,\r\n    myPlayerRumbleObject: null,\r\n    myRingAnimator: null,\r\n    myLeftHandAnimator: null,\r\n    myRightHandAnimator: null,\r\n    myGameObjects: new Map(),\r\n    myMeshObjects: new Map(),\r\n    myMeshNoFogObjects: new Map(),\r\n    myRingRadius: 0,\r\n    myRingHeight: 0,\r\n    myTitlesObject: null,\r\n    myTitlesRumbleObject: null,\r\n    myTitleObject: null,\r\n    mySubtitleObject: null,\r\n    myTitlePatchObject: null,\r\n    myBigBlatherPatchObject: null,\r\n    myMeshObjectPoolMap: null,\r\n    myMeshNoFogObjectPoolMap: null,\r\n    myGameObjectPoolMap: null,\r\n    myMaterials: null,\r\n    myTrialDuration: 0,\r\n    myArcadeDuration: 0,\r\n    myVentDuration: 0,\r\n    myDebugShortcutsEnabled: false,\r\n    myDebugShortcutsPress: 2,\r\n    myPlayerPosition: [0, 0, 0],\r\n    myPlayerRotation: [0, 0, 0],\r\n    myPlayerForward: [0, 0, 1],\r\n    myPlayerUp: [0, 1, 0],\r\n    myLightFadeInTime: 0,\r\n    myStartFadeOut: false,\r\n    myStatistics: null,\r\n    myIsInMenu: false,\r\n    myIsInArcadeResult: false,\r\n    myEnableSelectPhysx: false,\r\n    mySaveManager: null,\r\n    myDebugCurrentVentObject: null,\r\n    myPlayMusic: false,\r\n    myStopMusic: false,\r\n    myGameVersion: 0,\r\n    myGoogleAnalytics: false,\r\n    myUnmute: false,\r\n    myXRSessionActiveOpenLinkExtraCheck: false,\r\n    myIsUsingTrackedHands: false,\r\n    myHasGrabbedTrackedHandsEventSent: false,\r\n    myIsUsingTrackedHandsVentEventSent: false,\r\n    myVentDurationWithTrackedHands: 0\r\n};",
        "WL.registerComponent('pp-tool-cursor', {\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\n    _myPulseOnHover: { type: WL.Type.Bool, default: true },\n    _myShowFingerCursor: { type: WL.Type.Bool, default: false },\n    _myCursorMesh: { type: WL.Type.Mesh, default: null },\n    _myCursorMaterial: { type: WL.Type.Material, default: null }\n}, {\n    init: function () {\n        this._myHandednessString = ['left', 'right'][this._myHandedness];\n\n        if (this._myHandedness == 0) {\n            this._myCursorPosition = [-0.01, -0.024, -0.05];\n        } else {\n            this._myCursorPosition = [0.01, -0.024, -0.05];\n        }\n\n        this._myCursorRotation = [-0.382, 0, 0, 0.924];\n        this._myCursorRotation = glMatrix.quat.normalize(this._myCursorRotation, this._myCursorRotation);\n        this._myCursorMeshScale = [0.0025, 0.0025, 0.0025];\n\n        this._myCursorColor = [255 / 255, 255 / 255, 255 / 255, 1];\n\n        this._myCursorTargetCollisionGroup = 7;\n    },\n    start: function () {\n        this._myFixForwardObject = WL.scene.addObject(this.object);\n        this._myFixForwardObject.pp_rotateObject([0, 180, 0]);\n        this._myCursorObject = WL.scene.addObject(this._myFixForwardObject);\n        this._myCursorObject.setTranslationLocal(this._myCursorPosition);\n        this._myCursorObject.rotateObject(this._myCursorRotation);\n\n        this._myCursorMeshObject = WL.scene.addObject(this._myCursorObject);\n        this._myCursorMeshObject.scale(this._myCursorMeshScale);\n\n        this._myCursorMeshComponent = this._myCursorMeshObject.addComponent(\"mesh\");\n        this._myCursorMeshComponent.mesh = this._myCursorMesh;\n        this._myCursorMeshComponent.material = this._myCursorMaterial.clone();\n        this._myCursorMeshComponent.material.color = this._myCursorColor;\n\n        this._myCursorComponent = this._myCursorObject.addComponent(\"cursor\", { \"collisionGroup\": this._myCursorTargetCollisionGroup, \"handedness\": this._myHandedness + 1 });\n        this._myCursorComponent.cursorObject = this._myCursorMeshObject;\n        this._myCursorComponent.rayCastMode = 0; //collision\n        if (this._myPulseOnHover) {\n            this._myCursorComponent.globalTarget.addHoverFunction(this._pulseOnHover.bind(this));\n        }\n\n        this._myFingerCursorComponent = this.object.addComponent(\"pp-finger-cursor\", {\n            \"_myHandedness\": this._myHandedness,\n            \"_myEnableMultipleClicks\": true,\n            \"_myCollisionGroup\": this._myCursorTargetCollisionGroup,\n            \"_myCursorMesh\": (this._myShowFingerCursor ? this._myCursorMesh : null),\n            \"_myCursorMaterial\": this._myCursorMeshComponent.material\n        });\n        this._myFingerCursorComponent.setActive(false);\n    },\n    update: function (dt) {\n        let isUsingHand = this._isUsingHand();\n\n        this._myFingerCursorComponent.setActive(isUsingHand);\n\n        this._myCursorComponent.active = !isUsingHand;\n        if (!this._myCursorComponent.active) {\n            this._myCursorComponent._setCursorVisibility(false);\n        }\n    },\n    _isUsingHand: function () {\n        let isUsingHand = false;\n\n        if (WL.xrSession && WL.xrSession.inputSources) {\n            for (let i = 0; i < WL.xrSession.inputSources.length; i++) {\n                let input = WL.xrSession.inputSources[i];\n                if (input.hand && input.handedness == this._myHandednessString) {\n                    isUsingHand = true;\n                    break;\n                }\n            }\n        }\n\n        return isUsingHand;\n    },\n    _pulseOnHover: function (object) {\n        let targetComponent = object.getComponent(\"cursor-target\");\n\n        if (targetComponent && !targetComponent.myPreventPulseOnHover) {\n            if (this._myHandedness == 0) {\n                if (PP.myLeftGamepad) {\n                    PP.myLeftGamepad.pulse(0.4, 0);\n                }\n            } else {\n                if (PP.myRightGamepad) {\n                    PP.myRightGamepad.pulse(0.4, 0);\n                }\n            }\n        }\n    }\n});",
        "/*\r\n    How to use\r\n\r\n    Warning: The extension is a WIP so not all the methods are available for all kinds of vector.\r\n\r\n    By default rotations are in Degrees and transforms are Matrix 4 (and not Quat 2)    \r\n    For methods that work with rotations, Matrix means Matrix 3 and Quat means Quat\r\n    For methods that work with transforms, Matrix means Matrix 4 and Quat means Quat 2\r\n    \r\n    For rotations u can add a suffix like Degrees/Radians/Quat/Matrix to use a specific version, example:\r\n        - vec3_rotateAroundRadians\r\n        - vec3_degreesAddRotationDegrees\r\n        \r\n    For transform u can add a suffix like Quat/Matrix to use a specific version, example:\r\n        - vec3_convertPositionToWorldMatrix\r\n        - vec3_convertDirectionToWorldQuat\r\n\r\n    Some vec3 methods let u add a prefix to specify if the vec3 represent a rotation in degrees or radians, where degrees is the default:\r\n        - vec3_toQuat\r\n        - vec3_degreesToQuat\r\n        - vec3_radiansToQuat\r\n        - vec3_degreesAddRotation\r\n\r\n    Rotation operations return a rotation of the same kind of the starting variable:\r\n        - vec3_degreesAddRotationQuat   -> returns a rotation in degrees\r\n        - quat_rotationToDegrees        -> returns a rotation in quat\r\n\r\n    The methods leave u the choice of forwarding an out parameter or just get the return value, example:\r\n        - let quat = this.vec3_toQuat()\r\n        - this.vec3_toQuat(quat)\r\n        - the out parameter is always the last one\r\n\r\n    List of methods:\r\n        Note:\r\n            - If a group of methods starts with ○ it means it modifies the variable itself\r\n            - The suffixes (like Matrix or Radians) or prefixes (like degrees) are omitted \r\n\r\n        CREATION (u can call these functions without any object):\r\n            - vec3_create\r\n\r\n            - quat_create\r\n\r\n            - quat2_create\r\n            - quat2_fromPositionRotation\r\n\r\n            - mat4_create\r\n            - mat4_fromPositionRotation     / mat4_fromPositionRotationScale\r\n\r\n        ARRAY:\r\n            - pp_has        / pp_hasEqual\r\n            - pp_find       / pp_findAll        / pp_findEquals / pp_findAllEqual\r\n            ○ pp_remove     / pp_removeIndex    / pp_removeAll  / pp_removeEqual    / pp_removeAllEqual\r\n            ○ pp_pushUnique / pp_unshiftUnique\r\n            ○ pp_copy    \r\n            - pp_clone      \r\n            - pp_equals      \r\n\r\n        GENERIC VECTOR (array with only numbers):\r\n            - vec_scale\r\n            - vec_round     / vec_floor         / vec_ceil      / vec_clamp\r\n            - vec_log       / vec_error         / vec_warn      \r\n\r\n        VECTOR 3:\r\n            ○ vec3_set      / vec3_copy     / vec3_zero\r\n            - vec3_clone \r\n            - vec3_normalize    / vec3_negate\r\n            - vec3_isNormalized\r\n            - vec3_length\r\n            - vec3_distance\r\n            - vec3_add      / vec3_sub          / vec3_mul      / vec3_div      / vec3_scale\r\n            - vec3_componentAlongAxis           / vec3_removeComponentAlongAxis\r\n            - vec3_isConcordant\r\n            - vec3_convertPositionToWorld       / vec3_convertPositionToLocal \r\n            - vec3_convertDirectionToWorld      / vec3_convertDirectionToLocal   \r\n            - vec3_angle\r\n            - vec3_toRadians        / vec3_toDegrees            / vec3_toQuat       / vec3_toMatrix\r\n            - vec3_rotate           / vec3_rotateAxis           / vec3_rotateAround / vec3_rotateAroundAxis\r\n            - vec3_addRotation\r\n            - vec3_log       / vec3_error         / vec3_warn     \r\n            \r\n        VECTOR 4:\r\n            ○ vec4_set\r\n\r\n        QUAT:\r\n            ○ quat_set          / quat_copy     / quat_identity\r\n            - quat_normalize    / quat_invert\r\n            - quat_isNormalized\r\n            - quat_length\r\n            - quat_mul\r\n            - quat_getAxis  / quat_getAngle\r\n            ○ quat_fromRadians      / quat_fromDegrees      / quat_fromAxisAngle\r\n            - quat_toRadians        / quat_toDegrees        / quat_toMatrix\r\n            - quat_addRotation      / quat_subRotation\r\n            - quat_rotationTo\r\n\r\n        QUAT 2:\r\n            ○ quat2_copy        / quat2_identity\r\n            - quat2_normalize\r\n            - quat2_getPosition     / quat2_getRotation\r\n            ○ quat2_setPositionRotation\r\n            - quat2_getAxes\r\n            - quat2_toWorld     / quat2_toLocal\r\n            - quat2_toMatrix\r\n            ○ quat2_fromMatrix\r\n\r\n        MATRIX 3:\r\n            - mat3_toDegrees    / mat3_toRadians    / mat3_toQuat\r\n\r\n        MATRIX 4:\r\n            ○ mat4_copy         / mat4_identity\r\n            - mat4_clone\r\n            - mat4_invert\r\n            - mat4_getPosition  / mat4_getRotation  / mat4_getScale\r\n            ○ mat4_setPosition  / mat4_setRotation  / mat4_setScale\r\n            ○ mat4_setPositionRotation      / mat4_setPositionRotationScale\r\n            - mat4_getAxes\r\n            - mat4_toWorld      / mat4_toLocal\r\n            - mat4_hasUniformScale\r\n            - mat4_toQuat\r\n            ○ mat4_fromQuat\r\n*/\r\n\r\n//ARRAY\r\n\r\nArray.prototype.pp_has = function (callback) {\r\n    return this.pp_find(callback) != undefined;\r\n};\r\n\r\nArray.prototype.pp_hasEquals = function (elementToFind) {\r\n    return this.pp_findEqual(elementToFind) != undefined;\r\n};\r\n\r\nArray.prototype.pp_find = function (callback) {\r\n    let elementFound = undefined;\r\n\r\n    let index = this.findIndex(callback);\r\n    if (index >= 0) {\r\n        elementFound = this[index];\r\n    }\r\n\r\n    return elementFound;\r\n};\r\n\r\nArray.prototype.pp_findAll = function (callback) {\r\n    let elementsFound = this.filter(callback);\r\n\r\n    return elementsFound;\r\n};\r\n\r\nArray.prototype.pp_findEqual = function (elementToFind) {\r\n    return this.pp_find(element => element === elementToFind);\r\n};\r\n\r\nArray.prototype.pp_findAllEqual = function (elementToFind) {\r\n    return this.pp_findAll(element => element === elementToFind);\r\n};\r\n\r\nArray.prototype.pp_removeIndex = function (index) {\r\n    let elementRemoved = undefined;\r\n\r\n    if (index >= 0 && index < this.length) {\r\n        let arrayRemoved = this.splice(index, 1);\r\n        if (arrayRemoved.length == 1) {\r\n            elementRemoved = arrayRemoved[0];\r\n        }\r\n    }\r\n\r\n    return elementRemoved;\r\n};\r\n\r\nArray.prototype.pp_remove = function (callback) {\r\n    let elementRemoved = undefined;\r\n\r\n    let index = this.findIndex(callback);\r\n    if (index >= 0) {\r\n        elementRemoved = this.pp_removeIndex(index);\r\n    }\r\n\r\n    return elementRemoved;\r\n};\r\n\r\nArray.prototype.pp_removeAll = function (callback) {\r\n    let elementsRemoved = [];\r\n\r\n    let currentElement = undefined;\r\n    do {\r\n        currentElement = this.pp_remove(callback);\r\n        if (currentElement !== undefined) {\r\n            elementsRemoved.push(currentElement);\r\n        }\r\n    } while (currentElement !== undefined);\r\n\r\n    return elementsRemoved;\r\n};\r\n\r\nArray.prototype.pp_removeEqual = function (elementToRemove) {\r\n    return this.pp_remove(element => element === elementToRemove);\r\n};\r\n\r\nArray.prototype.pp_removeAllEqual = function (elementToRemove) {\r\n    return this.pp_removeAll(element => element === elementToRemove);\r\n};\r\n\r\nArray.prototype.pp_pushUnique = function (element, hasElementCallback = null) {\r\n    let length = this.length;\r\n\r\n    let hasElement = false;\r\n    if (hasElementCallback != null) {\r\n        hasElement = this.pp_has(hasElementCallback);\r\n    } else {\r\n        hasElement = this.pp_hasEquals(element);\r\n    }\r\n\r\n    if (!hasElement) {\r\n        length = this.push(element);\r\n    }\r\n\r\n    return length;\r\n};\r\n\r\nArray.prototype.pp_unshiftUnique = function (element, hasElementCallback = null) {\r\n    let length = this.length;\r\n\r\n    let hasElement = false;\r\n    if (hasElementCallback != null) {\r\n        hasElement = this.pp_has(hasElementCallback);\r\n    } else {\r\n        hasElement = this.pp_hasEquals(element);\r\n    }\r\n\r\n    if (!hasElement) {\r\n        length = this.unshift(element);\r\n    }\r\n\r\n    return length;\r\n};\r\n\r\nArray.prototype.pp_copy = function (array) {\r\n    while (this.length > array.length) {\r\n        this.pop();\r\n    }\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        this[i] = array[i];\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nArray.prototype.pp_clone = function () {\r\n    return this.slice(0);\r\n};\r\n\r\nArray.prototype.pp_equals = function (array, elementEqualsCallback = null) {\r\n    let equals = true;\r\n\r\n    if (array != null && this.length == array.length) {\r\n        for (let i = 0; i < this.length; i++) {\r\n            if ((elementEqualsCallback != null && !elementEqualsCallback(this[i], array[i])) ||\r\n                (elementEqualsCallback == null && this[i] != array[i])) {\r\n                equals = false;\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        equals = false;\r\n    }\r\n\r\n    return equals;\r\n};\r\n\r\n// GENERIC VECTOR\r\n\r\nArray.prototype.vec_toString = function (decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    return message;\r\n};\r\n\r\nArray.prototype.vec_log = function (decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    console.log(message);\r\n};\r\n\r\nArray.prototype.vec_error = function (decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    console.error(message);\r\n};\r\n\r\nArray.prototype.vec_warn = function (decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    console.warn(message);\r\n};\r\n\r\nArray.prototype.vec_scale = function (value, out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = out[i] * value;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_round = function (out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.round(out[i]);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_floor = function (out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.floor(out[i]);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_ceil = function (out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.ceil(out[i]);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_clamp = function (start, end, out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    let fixedStart = (start != null) ? start : Number.MIN_VALUE;\r\n    let fixedEnd = (end != null) ? end : Number.MAX_VALUE;\r\n    let min = Math.min(fixedStart, fixedEnd);\r\n    let max = Math.max(fixedStart, fixedEnd);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.min(Math.max(out[i], min), max);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_equals = function (vector) {\r\n    let equals = this.length == vector.length;\r\n\r\n    for (let i = 0; i < this.length && equals; i++) {\r\n        equals &= Math.abs(this[i] - vector[i]) < this._pp_epsilon;\r\n    }\r\n\r\n    return equals;\r\n};\r\n\r\n// VECTOR 3\r\n\r\n//glMatrix Bridge\r\n\r\nArray.prototype.vec3_normalize = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_copy = function (vector) {\r\n    glMatrix.vec3.copy(this, vector);\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec3_clone = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.copy(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_set = function (x, y = null, z = null) {\r\n    if (y == null) {\r\n        glMatrix.vec3.set(this, x, x, x);\r\n    } else {\r\n        glMatrix.vec3.set(this, x, y, z);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec3_zero = function () {\r\n    glMatrix.vec3.zero(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec3_angle = function (vector) {\r\n    return this.vec3_angleDegrees(vector);\r\n};\r\n\r\nArray.prototype.vec3_angleDegrees = function (vector) {\r\n    return this.vec3_angleRadians(vector) * (180 / Math.PI);\r\n};\r\n\r\nArray.prototype.vec3_angleRadians = function (vector) {\r\n    return glMatrix.vec3.angle(this, vector);\r\n};\r\n\r\nArray.prototype.vec3_length = function () {\r\n    return glMatrix.vec3.length(this);\r\n};\r\n\r\nArray.prototype.vec3_distance = function (vector) {\r\n    return glMatrix.vec3.dist(this, vector);\r\n};\r\n\r\nArray.prototype.vec3_add = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.add(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_sub = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.sub(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_mul = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.mul(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_div = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.div(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_scale = function (value, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.scale(out, this, value);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_negate = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.negate(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_cross = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.cross(out, this, vector);\r\n    return out;\r\n};\r\n\r\n//New Methods\r\n\r\nArray.prototype.vec3_angleSigned = function (vector, axis) {\r\n    return this.vec3_angleSignedDegrees(vector, axis);\r\n};\r\n\r\nArray.prototype.vec3_angleSignedDegrees = function (vector, axis) {\r\n    return this.vec3_angleSignedRadians(vector, axis) * (180 / Math.PI);\r\n};\r\n\r\nArray.prototype.vec3_angleSignedRadians = function () {\r\n    let crossAxis = glMatrix.vec3.create();\r\n    return function (vector, axis) {\r\n        this.vec3_cross(vector, crossAxis);\r\n        let angle = this.vec3_angleRadians(vector);\r\n        if (!crossAxis.vec3_isConcordant(axis)) {\r\n            angle = -angle;\r\n        }\r\n\r\n        return angle;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_toRadians = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.set(out, glMatrix.glMatrix.toRadian(this[0]), glMatrix.glMatrix.toRadian(this[1]), glMatrix.glMatrix.toRadian(this[2]));\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_toDegrees = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.set(out, this[0] * (180 / Math.PI), this[1] * (180 / Math.PI), this[2] * (180 / Math.PI));\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_toQuat = function (out) {\r\n    return this.vec3_degreesToQuat(out);\r\n};\r\n\r\nArray.prototype.vec3_radiansToQuat = function (out = glMatrix.quat.create()) {\r\n    out.quat_fromRadians(this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_degreesToQuat = function (out = glMatrix.quat.create()) {\r\n    out.quat_fromDegrees(this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_isNormalized = function () {\r\n    return Math.abs(glMatrix.vec3.length(this) - 1) < this._pp_epsilon;\r\n};\r\n\r\nArray.prototype.vec3_componentAlongAxis = function (axis, out = glMatrix.vec3.create()) {\r\n    let angle = glMatrix.vec3.angle(this, axis);\r\n    let length = Math.cos(angle) * glMatrix.vec3.length(this);\r\n\r\n    glMatrix.vec3.copy(out, axis);\r\n    glMatrix.vec3.scale(out, out, length);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_removeComponentAlongAxis = function () {\r\n    let componentAlong = glMatrix.vec3.create();\r\n    return function (axis, out = glMatrix.vec3.create()) {\r\n        this.vec3_componentAlongAxis(axis, componentAlong);\r\n        glMatrix.vec3.sub(out, this, componentAlong);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_isConcordant = function (vector) {\r\n    return glMatrix.vec3.angle(this, vector) <= Math.PI / 2;\r\n};\r\n\r\nArray.prototype.vec3_rotate = function (rotation, out) {\r\n    return this.vec3_rotateDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateDegrees = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function (rotation, out) {\r\n        return this.vec3_rotateAroundDegrees(rotation, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateRadians = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function (rotation, out) {\r\n        return this.vec3_rotateAroundRadians(rotation, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateQuat = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function (rotation, out) {\r\n        return this.vec3_rotateAroundQuat(rotation, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAxis = function (angle, axis, out) {\r\n    return this.vec3_rotateAxisDegrees(angle, axis, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateAxisDegrees = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function (angle, axis, out) {\r\n        return this.vec3_rotateAroundAxisDegrees(angle, axis, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAxisRadians = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function (angle, axis, out) {\r\n        return this.vec3_rotateAroundAxisRadians(angle, axis, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAround = function (rotation, origin, out) {\r\n    return this.vec3_rotateAroundDegrees(rotation, origin, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateAroundDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, origin, out = glMatrix.vec3.create()) {\r\n        rotation.vec3_degreesToQuat(quat);\r\n        return this.vec3_rotateAroundQuat(quat, origin, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAroundRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, origin, out = glMatrix.vec3.create()) {\r\n        rotation.vec3_radiansToQuat(quat);\r\n        return this.vec3_rotateAroundQuat(quat, origin, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAroundQuat = function (rotation, origin, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.sub(out, this, origin);\r\n    glMatrix.vec3.transformQuat(out, out, rotation);\r\n    glMatrix.vec3.add(out, out, origin);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_rotateAroundAxis = function (angle, axis, origin, out) {\r\n    return this.vec3_rotateAroundAxisDegrees(angle, axis, origin, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateAroundAxisDegrees = function (angle, axis, origin, out) {\r\n    return this.vec3_rotateAroundAxisRadians(glMatrix.glMatrix.toRadian(angle), axis, origin, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateAroundAxisRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (angle, axis, origin, out = glMatrix.vec3.create()) {\r\n        glMatrix.quat.setAxisAngle(quat, axis, angle);\r\n        return this.vec3_rotateAroundQuat(quat, origin, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertPositionToWorld = function (parentTransform, out) {\r\n    return this.vec3_convertPositionToWorldMatrix(parentTransform, out);\r\n};\r\n\r\nArray.prototype.vec3_convertPositionToLocal = function (parentTransform, out) {\r\n    return this.vec3_convertPositionToLocalMatrix(parentTransform, out);\r\n};\r\n\r\nArray.prototype.vec3_convertPositionToWorldMatrix = function (parentTransform, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.transformMat4(out, this, parentTransform);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_convertPositionToLocalMatrix = function () {\r\n    let inverse = glMatrix.mat4.create();\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        glMatrix.mat4.invert(inverse, parentTransform);\r\n        glMatrix.vec3.transformMat4(out, this, inverse);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertPositionToWorldQuat = function () {\r\n    let parentTransformMatrix = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.quat2_getPosition(position);\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        parentTransformMatrix.mat4_setPositionRotationQuatScale(position, rotation, one);\r\n        return this.vec3_convertPositionToWorldMatrix(parentTransformMatrix, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertPositionToLocalQuat = function () {\r\n    let parentTransformMatrix = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.quat2_getPosition(position);\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        parentTransformMatrix.mat4_setPositionRotationQuatScale(position, rotation, one);\r\n        return this.vec3_convertPositionToLocalMatrix(parentTransformMatrix, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertDirectionToWorld = function (parentTransform, out) {\r\n    return this.vec3_convertDirectionToWorldMatrix(parentTransform, out);\r\n};\r\n\r\nArray.prototype.vec3_convertDirectionToLocal = function (parentTransform, out) {\r\n    return this.vec3_convertDirectionToLocalMatrix(parentTransform, out);\r\n};\r\n\r\nArray.prototype.vec3_convertDirectionToWorldMatrix = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.mat4_getRotationQuat(rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertDirectionToLocalMatrix = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.mat4_getRotationQuat(rotation);\r\n        glMatrix.quat.conjugate(rotation, rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\n\r\nArray.prototype.vec3_convertDirectionToWorldQuat = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertDirectionToLocalQuat = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        glMatrix.quat.conjugate(rotation, rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_log = function (decimalPlaces = 4) {\r\n    this.vec_log(decimalPlaces);\r\n};\r\n\r\nArray.prototype.vec3_error = function (decimalPlaces = 4) {\r\n    this.vec_error(decimalPlaces);\r\n};\r\n\r\nArray.prototype.vec3_warn = function (decimalPlaces = 4) {\r\n    this.vec_warn(decimalPlaces);\r\n};\r\n\r\nArray.prototype.vec3_addRotation = function (rotation, out) {\r\n    return this.vec3_degreesAddRotation(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_addRotationDegrees = function (rotation, out) {\r\n    return quat.vec3_degreesAddRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_addRotationRadians = function (rotation, out) {\r\n    return quat.vec3_degreesAddRotationRadians(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_addRotationQuat = function (rotation, out) {\r\n    return quat.vec3_degreesAddRotationQuat(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_degreesAddRotation = function (rotation, out) {\r\n    return this.vec3_degreesAddRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_degreesAddRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_addRotationDegrees(rotation, quat).quat_toDegrees(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_degreesAddRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_addRotationRadians(rotation, quat).quat_toDegrees(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_degreesAddRotationQuat = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_addRotationQuat(rotation, quat).quat_toDegrees(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_radiansAddRotation = function (rotation, out) {\r\n    return this.vec3_radiansAddRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_radiansAddRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_addRotationDegrees(rotation, quat).quat_toRadians(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_radiansAddRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_addRotationRadians(rotation, quat).quat_toRadians(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_radiansAddRotationQuat = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_addRotationQuat(rotation, quat).quat_toRadians(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_toMatrix = function (out = glMatrix.mat3.create()) {\r\n    return this.vec3_degreesToMatrix(out);\r\n};\r\n\r\nArray.prototype.vec3_degreesToMatrix = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (out = glMatrix.mat3.create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_toMatrix(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_radiansToMatrix = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (out = glMatrix.mat3.create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_toMatrix(out);\r\n    };\r\n}();\r\n\r\n// VECTOR 4\r\n\r\n//glMatrix Bridge\r\n\r\nArray.prototype.vec4_set = function (x, y = null, z = null, w = null) {\r\n    if (y == null) {\r\n        glMatrix.vec4.set(this, x, x, x, x);\r\n    } else {\r\n        glMatrix.vec4.set(this, x, y, z, w);\r\n    }\r\n    return this;\r\n};\r\n\r\n//QUAT\r\n\r\n//glMatrix Bridge\r\n\r\nArray.prototype.quat_normalize = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_copy = function (quat) {\r\n    glMatrix.quat.copy(this, quat);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_set = function (x, y = null, z = null, w = null) {\r\n    if (y == null) {\r\n        glMatrix.quat.set(this, x, x, x, x);\r\n    } else {\r\n        glMatrix.quat.set(this, x, y, z, w);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_identity = function () {\r\n    glMatrix.quat.identity(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_length = function () {\r\n    return glMatrix.quat.length(this);\r\n};\r\n\r\nArray.prototype.quat_invert = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.invert(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_mul = function (rotation, out = glMatrix.quat.create()) {\r\n    glMatrix.quat.mul(out, this, rotation);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getAxis = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.quat.getAxisAngle(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getAngle = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function () {\r\n        let angle = glMatrix.quat.getAxisAngle(vector, this);\r\n        return angle;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_fromAxisAngle = function (axis, angle) {\r\n    return this.quat_fromAxisAngleDegrees(axis, angle);\r\n};\r\n\r\nArray.prototype.quat_fromAxisAngleDegrees = function (axis, angle) {\r\n    glMatrix.quat.setAxisAngle(this, axis, glMatrix.glMatrix.toRadian(angle));\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_fromAxisAngleRadians = function (axis, angle) {\r\n    glMatrix.quat.setAxisAngle(this, axis, angle);\r\n    return this;\r\n};\r\n\r\n//New Methods\r\n\r\nArray.prototype.quat_fromRadians = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function (radiansRotation) {\r\n        radiansRotation.vec3_toDegrees(vector);\r\n        return this.quat_fromDegrees(vector);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_fromDegrees = function (degreesRotation) {\r\n    glMatrix.quat.fromEuler(this, degreesRotation[0], degreesRotation[1], degreesRotation[2]);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_toRadians = function () {\r\n    let mat3 = glMatrix.mat3.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        glMatrix.mat3.fromQuat(mat3, this);\r\n\r\n        //Rotation order is ZYX \r\n        out[1] = Math.asin(-this._pp_clamp(mat3[2], -1, 1));\r\n\r\n        if (Math.abs(mat3[2]) < (1 - this._pp_epsilon)) {\r\n            out[0] = Math.atan2(mat3[5], mat3[8]);\r\n            out[2] = Math.atan2(mat3[1], mat3[0]);\r\n        } else {\r\n            out[0] = 0;\r\n            out[2] = Math.atan2(-mat3[3], mat3[4]);\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_toDegrees = function (out = glMatrix.vec3.create()) {\r\n    this.quat_toRadians(out);\r\n    out.vec3_toDegrees(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_isNormalized = function () {\r\n    return Math.abs(glMatrix.quat.length(this) - 1) < this._pp_epsilon;\r\n};\r\n\r\nArray.prototype.quat_addRotation = function (rotation, out) {\r\n    return this.quat_addRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_addRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out) {\r\n        rotation.vec3_degreesToQuat(quat);\r\n        return this.quat_addRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_addRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out) {\r\n        rotation.vec3_radiansToQuat(quat);\r\n        return this.quat_addRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_addRotationQuat = function (rotation, out = glMatrix.quat.create()) {\r\n    rotation.quat_mul(this, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_subRotation = function (rotation, out) {\r\n    return this.quat_subRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_subRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out) {\r\n        rotation.vec3_degreesToQuat(quat);\r\n        return this.quat_subRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_subRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out) {\r\n        rotation.vec3_radiansToQuat(quat);\r\n        return this.quat_subRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_subRotationQuat = function () {\r\n    let inverse = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.quat.create()) {\r\n        rotation.quat_invert(inverse);\r\n        this.quat_mul(inverse, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_rotationTo = function (rotation, out) {\r\n    return this.quat_rotationToDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_rotationToDegrees = function (rotation, out) {\r\n    return rotation.quat_subRotationDegrees(this, out);\r\n};\r\n\r\nArray.prototype.quat_rotationToRadians = function (rotation, out) {\r\n    return rotation.quat_subRotationRadians(this, out);\r\n};\r\n\r\nArray.prototype.quat_rotationToQuat = function (rotation, out) {\r\n    return rotation.quat_subRotationQuat(this, out);\r\n};\r\n\r\nArray.prototype.quat_toMatrix = function (out = glMatrix.mat3.create()) {\r\n    glMatrix.mat3.fromQuat(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_rotateAxisDegrees = function () {\r\n    let secondQuat = glMatrix.quat.create();\r\n    return function quat_rotateAxisDegrees(angle, axis, out = glMatrix.quat.create()) {\r\n        secondQuat.quat_fromAxisAngleDegrees(axis, angle);\r\n        return this.quat_rotateQuat(secondQuat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_rotateQuat = function (second, out = glMatrix.quat.create()) {\r\n    second.quat_mul(this, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getForward = function () {\r\n    let rotationMatrix = glMatrix.mat3.create();\r\n    return function quat_getForward(out = glMatrix.vec3.create()) {\r\n        this.quat_toMatrix(rotationMatrix);\r\n\r\n        out.vec3_set(rotationMatrix[6], rotationMatrix[7], rotationMatrix[8]);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getLeft = function () {\r\n    let rotationMatrix = glMatrix.mat3.create();\r\n    return function quat_getLeft(out = glMatrix.vec3.create()) {\r\n        this.quat_toMatrix(rotationMatrix);\r\n\r\n        out.vec3_set(rotationMatrix[0], rotationMatrix[1], rotationMatrix[2]);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getRight = function (out = glMatrix.vec3.create()) {\r\n    this.quat_getLeft(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getUp = function () {\r\n    let rotationMatrix = glMatrix.mat3.create();\r\n    return function quat_getUp(out = glMatrix.vec3.create()) {\r\n        this.quat_toMatrix(rotationMatrix);\r\n\r\n        out.vec3_set(rotationMatrix[3], rotationMatrix[4], rotationMatrix[5]);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\n//QUAT 2\r\n\r\n//glMatrix Bridge\r\n\r\nArray.prototype.quat2_normalize = function (out = glMatrix.quat2.create()) {\r\n    glMatrix.quat2.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_copy = function (quat2) {\r\n    glMatrix.quat2.copy(this, quat2);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat2_identity = function () {\r\n    glMatrix.quat2.identity(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat2_getPosition = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.quat2.getTranslation(out, this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat2_getRotation = function (out) {\r\n    return this.quat2_getRotationDegrees(out);\r\n};\r\nArray.prototype.quat2_getRotationDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        this.quat2_getRotationQuat(rotationQuat).quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_getRotationRadians = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        this.quat2_getRotationQuat(rotationQuat).quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_getRotationQuat = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.copy(out, this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat2_setPositionRotation = function (position, rotation) {\r\n    return this.quat2_setPositionRotationDegrees(position, rotation);\r\n};\r\n\r\nArray.prototype.quat2_setPositionRotationDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (position, rotation) {\r\n        rotation.vec3_degreesToQuat(rotationQuat);\r\n        glMatrix.quat2.fromRotationTranslation(this, rotationQuat, position);\r\n\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setPositionRotationRadians = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (position, rotation) {\r\n        rotation.vec3_radiansToQuat(rotationQuat);\r\n        glMatrix.quat2.fromRotationTranslation(this, rotationQuat, position);\r\n\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setPositionRotationQuat = function (position, rotation) {\r\n    glMatrix.quat2.fromRotationTranslation(this, rotation, position);\r\n    return this;\r\n};\r\n\r\n//New Methods\r\n\r\nArray.prototype.quat2_getAxes = function () {\r\n    let rotationMatrix = glMatrix.mat3.create();\r\n    return function (out = [glMatrix.vec3.create(), glMatrix.vec3.create(), glMatrix.vec3.create()]) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out[0], rotationMatrix[0], rotationMatrix[1], rotationMatrix[2]);\r\n        glMatrix.vec3.set(out[1], rotationMatrix[3], rotationMatrix[4], rotationMatrix[5]);\r\n        glMatrix.vec3.set(out[2], rotationMatrix[6], rotationMatrix[7], rotationMatrix[8]);\r\n\r\n        glMatrix.vec3.normalize(out[0], out[0]);\r\n        glMatrix.vec3.normalize(out[1], out[1]);\r\n        glMatrix.vec3.normalize(out[2], out[2]);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_toLocal = function () {\r\n    let invertQuat = glMatrix.quat2.create();\r\n    return function (parentTransform, out = glMatrix.quat2.create()) {\r\n        glMatrix.quat2.conjugate(invertQuat, parentTransform);\r\n        glMatrix.quat2.mul(out, invertQuat, this);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_toWorld = function (parentTransform, out = glMatrix.quat2.create()) {\r\n    glMatrix.quat2.mul(out, parentTransform, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_toMatrix = function (out = glMatrix.mat4.create()) {\r\n    glMatrix.mat4.fromQuat2(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_fromMatrix = function (transformMatrix) {\r\n    transformMatrix.mat4_toQuat(this);\r\n    return this;\r\n};\r\n\r\n//MATRIX 3\r\n\r\n//glMatrix Bridge\r\n\r\n//New Methods\r\n\r\nArray.prototype.mat3_toDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        this.mat3_toQuat(quat);\r\n        quat.quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat3_toRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        this.mat3_toQuat(quat);\r\n        quat.quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat3_toQuat = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.fromMat3(out, this);\r\n    return out;\r\n};\r\n\r\n//MATRIX 4\r\n\r\n//glMatrix Bridge\r\n\r\nArray.prototype.mat4_copy = function (mat4) {\r\n    glMatrix.mat4.copy(this, mat4);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_identity = function () {\r\n    glMatrix.mat4.identity(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_invert = function (out = glMatrix.mat4.create()) {\r\n    glMatrix.mat4.invert(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_clone = function (out = glMatrix.mat4.create()) {\r\n    glMatrix.mat4.copy(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getPosition = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.mat4.getTranslation(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getRotation = function (out = glMatrix.vec3.create()) {\r\n    return this.mat4_getRotationDegrees(out);\r\n};\r\n\r\nArray.prototype.mat4_getRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        this.mat4_getRotationQuat(quat);\r\n        quat.quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_getRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        this.mat4_getRotationQuat(quat);\r\n        quat.quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_getRotationQuat = function () {\r\n    let scale = glMatrix.vec3.create();\r\n    let transformMatrixNoScale = glMatrix.mat4.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (out = glMatrix.quat.create()) {\r\n        glMatrix.mat4.getScaling(scale, this);\r\n        glMatrix.vec3.divide(inverseScale, one, scale);\r\n        glMatrix.mat4.scale(transformMatrixNoScale, this, inverseScale);\r\n        glMatrix.mat4.getRotation(out, transformMatrixNoScale);\r\n        glMatrix.quat.normalize(out, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_getScale = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.mat4.getScaling(out, this);\r\n    return out;\r\n};\r\n\r\n//New Methods\r\n\r\nArray.prototype.mat4_setPosition = function (position) {\r\n    this[12] = position[0];\r\n    this[13] = position[1];\r\n    this[14] = position[2];\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setRotation = function (rotation) {\r\n    this.mat4_setRotationDegrees(rotation);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        this.mat4_setRotationQuat(rotation.vec3_degreesToQuat(quat));\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setRotationRadians = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function (rotation) {\r\n        this.mat4_setRotationDegrees(rotation.vec3_toDegrees(vector));\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setRotationQuat = function () {\r\n    let position = glMatrix.vec3.create();\r\n    let scale = glMatrix.vec3.create();\r\n    return function (rotation) {\r\n        this.mat4_getPosition(position);\r\n        this.mat4_getScale(scale);\r\n        this.mat4_setPositionRotationQuatScale(position, rotation, scale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setScale = function () {\r\n    let tempScale = glMatrix.vec3.create();\r\n    return function (scale) {\r\n        glMatrix.mat4.getScaling(tempScale, this);\r\n        glMatrix.vec3.divide(tempScale, scale, tempScale);\r\n        glMatrix.mat4.scale(this, this, tempScale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationScale = function (position, rotation, scale) {\r\n    this.mat4_setPositionRotationDegreesScale(position, rotation, scale);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setPositionRotationDegreesScale = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (position, rotation, scale) {\r\n        this.mat4_setPositionRotationQuatScale(position, rotation.vec3_degreesToQuat(quat), scale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationRadiansScale = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function (position, rotation, scale) {\r\n        this.mat4_setPositionRotationDegreesScale(position, rotation.vec3_toDegrees(vector), scale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationQuatScale = function (position, rotation, scale) {\r\n    glMatrix.mat4.fromRotationTranslationScale(this, rotation, position, scale);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setPositionRotation = function (position, rotation) {\r\n    this.mat4_setPositionRotationDegrees(position, rotation);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setPositionRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (position, rotation) {\r\n        this.mat4_setPositionRotationQuat(position, rotation.vec3_degreesToQuat(quat));\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationRadians = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function (position, rotation) {\r\n        this.mat4_setPositionRotationDegrees(position, rotation.vec3_toDegrees(vector));\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationQuat = function (position, rotation) {\r\n    glMatrix.mat4.fromRotationTranslation(this, rotation, position);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_getAxes = function (out = [glMatrix.vec3.create(), glMatrix.vec3.create(), glMatrix.vec3.create()]) {\r\n    glMatrix.vec3.set(out[0], this[0], this[1], this[2]);\r\n    glMatrix.vec3.set(out[1], this[4], this[5], this[6]);\r\n    glMatrix.vec3.set(out[2], this[8], this[9], this[10]);\r\n\r\n    glMatrix.vec3.normalize(out[0], out[0]);\r\n    glMatrix.vec3.normalize(out[1], out[1]);\r\n    glMatrix.vec3.normalize(out[2], out[2]);\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_toWorld = function () {\r\n    let convertTransform = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let scale = glMatrix.vec3.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (parentTransform, out = glMatrix.mat4.create()) {\r\n        if (parentTransform.mat4_hasUniformScale()) {\r\n            glMatrix.mat4.mul(out, parentTransform, this);\r\n        } else {\r\n            glMatrix.vec3.set(position, this[12], this[13], this[14]);\r\n            position.vec3_convertPositionToWorldMatrix(parentTransform, position);\r\n\r\n            glMatrix.mat4.getScaling(scale, parentTransform);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(convertTransform, parentTransform, inverseScale);\r\n\r\n            glMatrix.mat4.mul(out, convertTransform, this);\r\n            glMatrix.mat4.scale(out, out, scale);\r\n\r\n            out[12] = position[0];\r\n            out[13] = position[1];\r\n            out[14] = position[2];\r\n            out[15] = 1;\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_toLocal = function () {\r\n    let convertTransform = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let scale = glMatrix.vec3.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (parentTransform, out = glMatrix.mat4.create()) {\r\n        if (parentTransform.mat4_hasUniformScale()) {\r\n            glMatrix.mat4.invert(convertTransform, parentTransform);\r\n            glMatrix.mat4.mul(out, convertTransform, this);\r\n        } else {\r\n            glMatrix.vec3.set(position, this[12], this[13], this[14]);\r\n            position.vec3_convertPositionToLocalMatrix(parentTransform, position);\r\n\r\n            glMatrix.mat4.getScaling(scale, parentTransform);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(convertTransform, parentTransform, inverseScale);\r\n\r\n            glMatrix.mat4.invert(convertTransform, convertTransform);\r\n            glMatrix.mat4.mul(out, convertTransform, this);\r\n            glMatrix.mat4.scale(out, out, inverseScale);\r\n\r\n            out[12] = position[0];\r\n            out[13] = position[1];\r\n            out[14] = position[2];\r\n            out[15] = 1;\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_hasUniformScale = function () {\r\n    let scale = glMatrix.vec3.create();\r\n    return function () {\r\n        glMatrix.mat4.getScaling(scale, this);\r\n        return Math.abs(scale[0] - scale[1]) < this._pp_epsilon && Math.abs(scale[1] - scale[2]) < this._pp_epsilon && Math.abs(scale[0] - scale[2]) < this._pp_epsilon;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_toQuat = function () {\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    return function (out = glMatrix.quat2.create()) {\r\n        glMatrix.mat4.getTranslation(position, this);\r\n        this.mat4_getRotationQuat(rotation);\r\n        glMatrix.quat2.fromRotationTranslation(out, rotation, position);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_fromQuat = function (transformQuat) {\r\n    transformQuat.quat2_toMatrix(this);\r\n    return this;\r\n};\r\n\r\n//CREATION\r\n\r\nfunction vec3_create(x = null, y = null, z = null) {\r\n    let out = glMatrix.vec3.create();\r\n    if (x != null) {\r\n        out.vec3_set(x, y, z);\r\n    }\r\n    return out;\r\n}\r\n\r\nfunction vec4_create(x = null, y = null, z = null, w = null) {\r\n    let out = glMatrix.vec4.create();\r\n    if (x != null) {\r\n        out.vec4_set(x, y, z, w);\r\n    }\r\n    return out;\r\n}\r\n\r\nfunction quat_create(x = null, y = null, z = null, w = null) {\r\n    let out = glMatrix.quat.create();\r\n    if (x != null) {\r\n        out.quat_set(x, y, z, w);\r\n    }\r\n    return out;\r\n}\r\n\r\nfunction quat2_create() {\r\n    let out = glMatrix.quat2.create();\r\n    return out;\r\n}\r\n\r\nfunction quat2_fromPositionRotation(position, rotation) {\r\n    return quat2_fromPositionRotationDegrees(position, rotation);\r\n}\r\n\r\nfunction quat2_fromPositionRotationDegrees(position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.quat2_setPositionRotationDegrees(position, rotation);\r\n    return out;\r\n}\r\n\r\nfunction quat2_fromPositionRotationRadians(position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.quat2_setPositionRotationRadians(position, rotation);\r\n    return out;\r\n}\r\n\r\nfunction quat2_fromPositionRotationQuat(position, rotation) {\r\n    let out = glMatrix.quat2.create();\r\n    out.quat2_setPositionRotationQuat(position, rotation);\r\n    return out;\r\n}\r\n\r\nfunction mat4_create() {\r\n    let out = glMatrix.mat4.create();\r\n    return out;\r\n}\r\n\r\nfunction mat4_fromPositionRotation(position, rotation) {\r\n    return mat4_fromPositionRotationDegrees(position, rotation);\r\n}\r\n\r\nfunction mat4_fromPositionRotationDegrees(position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationDegrees(position, rotation);\r\n    return out;\r\n}\r\n\r\nfunction mat4_fromPositionRotationRadians(position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationRadians(position, rotation);\r\n    return out;\r\n}\r\n\r\nfunction mat4_fromPositionRotationQuat(position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationQuat(position, rotation);\r\n    return out;\r\n}\r\n\r\nfunction mat4_fromPositionRotationScale(position, rotation, scale) {\r\n    return mat4_fromPositionRotationDegreesScale(position, rotation, scale);\r\n}\r\n\r\nfunction mat4_fromPositionRotationDegreesScale(position, rotation, scale) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationDegreesScale(position, rotation, scale);\r\n    return out;\r\n}\r\n\r\nfunction mat4_fromPositionRotationRadiansScale(position, rotation, scale) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationRadiansScale(position, rotation, scale);\r\n    return out;\r\n}\r\n\r\nfunction mat4_fromPositionRotationQuatScale(position, rotation, scale) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationQuatScale(position, rotation, scale);\r\n    return out;\r\n}\r\n\r\n//UTILS\r\n\r\nArray.prototype._pp_epsilon = 0.000001;\r\n\r\nArray.prototype._pp_clamp = function (value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\n\r\nArray.prototype._vec_buildConsoleMessage = function (decimalPlaces) {\r\n    let message = \"[\";\r\n\r\n    for (let i = 0; i < this.length; i++) {\r\n        if (i != 0) {\r\n            message = message.concat(\", \");\r\n        }\r\n\r\n        message = message.concat(this[i].toFixed(decimalPlaces));\r\n    }\r\n\r\n    message = message.concat(\"]\");\r\n    return message;\r\n};\r\n\r\nArray.prototype._vec_prepareOut = function (out) {\r\n    if (out == null) {\r\n        out = this.pp_clone();\r\n    } else if (out != this) {\r\n        out.pp_copy(this);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nfor (let key in Array.prototype) {\r\n    let prefixes = [\"pp_\", \"vec_\", \"vec3_\", \"vec4_\", \"quat_\", \"quat2_\", \"mat3_\", \"mat4_\", \"_pp_\", \"_vec_\",];\r\n\r\n    let found = false;\r\n    for (let prefix of prefixes) {\r\n        if (key.startsWith(prefix)) {\r\n            found = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (found) {\r\n        Object.defineProperty(Array.prototype, key, { enumerable: false });\r\n    }\r\n}",
        "/*\r\n    How to use\r\n\r\n    Warning: The extension is a WIP so not all the methods are available for all kinds of vector.\r\n\r\n    By default rotations are in Degrees and transforms are Matrix 4 (and not Quat 2)    \r\n    For methods that work with rotations, Matrix means Matrix 3 and Quat means Quat\r\n    For methods that work with transforms, Matrix means Matrix 4 and Quat means Quat 2\r\n    \r\n    For rotations u can add a suffix like Degrees/Radians/Quat/Matrix to use a specific version, example:\r\n        - vec3_rotateAroundRadians\r\n        - vec3_degreesAddRotationDegrees\r\n        \r\n    For transform u can add a suffix like Quat/Matrix to use a specific version, example:\r\n        - vec3_convertPositionToWorldMatrix\r\n        - vec3_convertDirectionToWorldQuat\r\n\r\n    Some vec3 methods let u add a prefix to specify if the vec3 represent a rotation in degrees or radians, where degrees is the default:\r\n        - vec3_toQuat\r\n        - vec3_degreesToQuat\r\n        - vec3_radiansToQuat\r\n        - vec3_degreesAddRotation\r\n\r\n    Rotation operations return a rotation of the same kind of the starting variable:\r\n        - vec3_degreesAddRotationQuat   -> returns a rotation in degrees\r\n        - quat_rotationToDegrees        -> returns a rotation in quat\r\n\r\n    The methods leave u the choice of forwarding an out parameter or just get the return value, example:\r\n        - let quat = this.vec3_toQuat()\r\n        - this.vec3_toQuat(quat)\r\n        - the out parameter is always the last one\r\n\r\n    List of methods:\r\n        Note:\r\n            - If a group of methods starts with ○ it means it modifies the variable itself\r\n            - The suffixes (like Matrix or Radians) or prefixes (like degrees) are omitted \r\n\r\n        CREATION (u can call these functions without any object):\r\n            - vec3_create\r\n\r\n            - quat_create\r\n\r\n            - quat2_create\r\n            - quat2_fromPositionRotation\r\n\r\n            - mat4_create\r\n            - mat4_fromPositionRotation     / mat4_fromPositionRotationScale\r\n\r\n        ARRAY:\r\n            - pp_has        / pp_hasEqual\r\n            - pp_find       / pp_findAll        / pp_findEquals / pp_findAllEqual\r\n            ○ pp_remove     / pp_removeIndex    / pp_removeAll  / pp_removeEqual    / pp_removeAllEqual\r\n            ○ pp_pushUnique / pp_unshiftUnique\r\n            ○ pp_copy    \r\n            - pp_clone      \r\n            - pp_equals      \r\n\r\n        GENERIC VECTOR (array with only numbers):\r\n            - vec_scale\r\n            - vec_round     / vec_floor         / vec_ceil      / vec_clamp\r\n            - vec_log       / vec_error         / vec_warn      \r\n\r\n        VECTOR 3:\r\n            ○ vec3_set      / vec3_copy     / vec3_zero\r\n            - vec3_clone \r\n            - vec3_normalize    / vec3_negate\r\n            - vec3_isNormalized\r\n            - vec3_length\r\n            - vec3_distance\r\n            - vec3_add      / vec3_sub          / vec3_mul      / vec3_div      / vec3_scale\r\n            - vec3_componentAlongAxis           / vec3_removeComponentAlongAxis\r\n            - vec3_isConcordant\r\n            - vec3_convertPositionToWorld       / vec3_convertPositionToLocal \r\n            - vec3_convertDirectionToWorld      / vec3_convertDirectionToLocal   \r\n            - vec3_angle\r\n            - vec3_toRadians        / vec3_toDegrees            / vec3_toQuat       / vec3_toMatrix\r\n            - vec3_rotate           / vec3_rotateAxis           / vec3_rotateAround / vec3_rotateAroundAxis\r\n            - vec3_addRotation\r\n            - vec3_log       / vec3_error         / vec3_warn     \r\n            \r\n        VECTOR 4:\r\n            ○ vec4_set\r\n\r\n        QUAT:\r\n            ○ quat_set          / quat_copy     / quat_identity\r\n            - quat_normalize    / quat_invert\r\n            - quat_isNormalized\r\n            - quat_length\r\n            - quat_mul\r\n            - quat_getAxis  / quat_getAngle\r\n            ○ quat_fromRadians      / quat_fromDegrees      / quat_fromAxisAngle\r\n            - quat_toRadians        / quat_toDegrees        / quat_toMatrix\r\n            - quat_addRotation      / quat_subRotation\r\n            - quat_rotationTo\r\n\r\n        QUAT 2:\r\n            ○ quat2_copy        / quat2_identity\r\n            - quat2_normalize\r\n            - quat2_getPosition     / quat2_getRotation\r\n            ○ quat2_setPositionRotation\r\n            - quat2_getAxes\r\n            - quat2_toWorld     / quat2_toLocal\r\n            - quat2_toMatrix\r\n            ○ quat2_fromMatrix\r\n\r\n        MATRIX 3:\r\n            - mat3_toDegrees    / mat3_toRadians    / mat3_toQuat\r\n\r\n        MATRIX 4:\r\n            ○ mat4_copy         / mat4_identity\r\n            - mat4_clone\r\n            - mat4_invert\r\n            - mat4_getPosition  / mat4_getRotation  / mat4_getScale\r\n            ○ mat4_setPosition  / mat4_setRotation  / mat4_setScale\r\n            ○ mat4_setPositionRotation      / mat4_setPositionRotationScale\r\n            - mat4_getAxes\r\n            - mat4_toWorld      / mat4_toLocal\r\n            - mat4_hasUniformScale\r\n            - mat4_toQuat\r\n            ○ mat4_fromQuat\r\n*/\r\n\r\n//ARRAY\r\n\r\nFloat32Array.prototype.pp_has = function (callback) {\r\n    return this.pp_find(callback) != undefined;\r\n};\r\n\r\nFloat32Array.prototype.pp_hasEquals = function (elementToFind) {\r\n    return this.pp_findEqual(elementToFind) != undefined;\r\n};\r\n\r\nFloat32Array.prototype.pp_find = function (callback) {\r\n    let elementFound = undefined;\r\n\r\n    let index = this.findIndex(callback);\r\n    if (index >= 0) {\r\n        elementFound = this[index];\r\n    }\r\n\r\n    return elementFound;\r\n};\r\n\r\nFloat32Array.prototype.pp_findAll = function (callback) {\r\n    let elementsFound = this.filter(callback);\r\n\r\n    return elementsFound;\r\n};\r\n\r\nFloat32Array.prototype.pp_findEqual = function (elementToFind) {\r\n    return this.pp_find(element => element === elementToFind);\r\n};\r\n\r\nFloat32Array.prototype.pp_findAllEqual = function (elementToFind) {\r\n    return this.pp_findAll(element => element === elementToFind);\r\n};\r\n\r\nFloat32Array.prototype.pp_removeIndex = function (index) {\r\n    let elementRemoved = undefined;\r\n\r\n    if (index >= 0 && index < this.length) {\r\n        let arrayRemoved = this.splice(index, 1);\r\n        if (arrayRemoved.length == 1) {\r\n            elementRemoved = arrayRemoved[0];\r\n        }\r\n    }\r\n\r\n    return elementRemoved;\r\n};\r\n\r\nFloat32Array.prototype.pp_remove = function (callback) {\r\n    let elementRemoved = undefined;\r\n\r\n    let index = this.findIndex(callback);\r\n    if (index >= 0) {\r\n        elementRemoved = this.pp_removeIndex(index);\r\n    }\r\n\r\n    return elementRemoved;\r\n};\r\n\r\nFloat32Array.prototype.pp_removeAll = function (callback) {\r\n    let elementsRemoved = [];\r\n\r\n    let currentElement = undefined;\r\n    do {\r\n        currentElement = this.pp_remove(callback);\r\n        if (currentElement !== undefined) {\r\n            elementsRemoved.push(currentElement);\r\n        }\r\n    } while (currentElement !== undefined);\r\n\r\n    return elementsRemoved;\r\n};\r\n\r\nFloat32Array.prototype.pp_removeEqual = function (elementToRemove) {\r\n    return this.pp_remove(element => element === elementToRemove);\r\n};\r\n\r\nFloat32Array.prototype.pp_removeAllEqual = function (elementToRemove) {\r\n    return this.pp_removeAll(element => element === elementToRemove);\r\n};\r\n\r\nFloat32Array.prototype.pp_pushUnique = function (element, hasElementCallback = null) {\r\n    let length = this.length;\r\n\r\n    let hasElement = false;\r\n    if (hasElementCallback != null) {\r\n        hasElement = this.pp_has(hasElementCallback);\r\n    } else {\r\n        hasElement = this.pp_hasEquals(element);\r\n    }\r\n\r\n    if (!hasElement) {\r\n        length = this.push(element);\r\n    }\r\n\r\n    return length;\r\n};\r\n\r\nFloat32Array.prototype.pp_unshiftUnique = function (element, hasElementCallback = null) {\r\n    let length = this.length;\r\n\r\n    let hasElement = false;\r\n    if (hasElementCallback != null) {\r\n        hasElement = this.pp_has(hasElementCallback);\r\n    } else {\r\n        hasElement = this.pp_hasEquals(element);\r\n    }\r\n\r\n    if (!hasElement) {\r\n        length = this.unshift(element);\r\n    }\r\n\r\n    return length;\r\n};\r\n\r\nFloat32Array.prototype.pp_copy = function (array) {\r\n    while (this.length > array.length) {\r\n        this.pop();\r\n    }\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        this[i] = array[i];\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.pp_clone = function () {\r\n    return this.slice(0);\r\n};\r\n\r\nFloat32Array.prototype.pp_equals = function (array, elementEqualsCallback = null) {\r\n    let equals = true;\r\n\r\n    if (array != null && this.length == array.length) {\r\n        for (let i = 0; i < this.length; i++) {\r\n            if ((elementEqualsCallback != null && !elementEqualsCallback(this[i], array[i])) ||\r\n                (elementEqualsCallback == null && this[i] != array[i])) {\r\n                equals = false;\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        equals = false;\r\n    }\r\n\r\n    return equals;\r\n};\r\n\r\n// GENERIC VECTOR\r\n\r\nFloat32Array.prototype.vec_toString = function (decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    return message;\r\n};\r\n\r\nFloat32Array.prototype.vec_log = function (decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    console.log(message);\r\n};\r\n\r\nFloat32Array.prototype.vec_error = function (decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    console.error(message);\r\n};\r\n\r\nFloat32Array.prototype.vec_warn = function (decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    console.warn(message);\r\n};\r\n\r\nFloat32Array.prototype.vec_scale = function (value, out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = out[i] * value;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec_round = function (out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.round(out[i]);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec_floor = function (out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.floor(out[i]);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec_ceil = function (out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.ceil(out[i]);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec_clamp = function (start, end, out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    let fixedStart = (start != null) ? start : Number.MIN_VALUE;\r\n    let fixedEnd = (end != null) ? end : Number.MAX_VALUE;\r\n    let min = Math.min(fixedStart, fixedEnd);\r\n    let max = Math.max(fixedStart, fixedEnd);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.min(Math.max(out[i], min), max);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec_equals = function (vector) {\r\n    let equals = this.length == vector.length;\r\n\r\n    for (let i = 0; i < this.length && equals; i++) {\r\n        equals &= Math.abs(this[i] - vector[i]) < this._pp_epsilon;\r\n    }\r\n\r\n    return equals;\r\n};\r\n\r\n// VECTOR 3\r\n\r\n//glMatrix Bridge\r\n\r\nFloat32Array.prototype.vec3_normalize = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_copy = function (vector) {\r\n    glMatrix.vec3.copy(this, vector);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.vec3_clone = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.copy(out, this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_set = function (x, y = null, z = null) {\r\n    if (y == null) {\r\n        glMatrix.vec3.set(this, x, x, x);\r\n    } else {\r\n        glMatrix.vec3.set(this, x, y, z);\r\n    }\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.vec3_zero = function () {\r\n    glMatrix.vec3.zero(this);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.vec3_angle = function (vector) {\r\n    return this.vec3_angleDegrees(vector);\r\n};\r\n\r\nFloat32Array.prototype.vec3_angleDegrees = function (vector) {\r\n    return this.vec3_angleRadians(vector) * (180 / Math.PI);\r\n};\r\n\r\nFloat32Array.prototype.vec3_angleRadians = function (vector) {\r\n    return glMatrix.vec3.angle(this, vector);\r\n};\r\n\r\nFloat32Array.prototype.vec3_length = function () {\r\n    return glMatrix.vec3.length(this);\r\n};\r\n\r\nFloat32Array.prototype.vec3_distance = function (vector) {\r\n    return glMatrix.vec3.dist(this, vector);\r\n};\r\n\r\nFloat32Array.prototype.vec3_add = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.add(out, this, vector);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_sub = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.sub(out, this, vector);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_mul = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.mul(out, this, vector);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_div = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.div(out, this, vector);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_scale = function (value, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.scale(out, this, value);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_negate = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.negate(out, this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_cross = function (vector, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.cross(out, this, vector);\r\n    return out;\r\n};\r\n\r\n//New Methods\r\n\r\nFloat32Array.prototype.vec3_angleSigned = function (vector, axis) {\r\n    return this.vec3_angleSignedDegrees(vector, axis);\r\n};\r\n\r\nFloat32Array.prototype.vec3_angleSignedDegrees = function (vector, axis) {\r\n    return this.vec3_angleSignedRadians(vector, axis) * (180 / Math.PI);\r\n};\r\n\r\nFloat32Array.prototype.vec3_angleSignedRadians = function () {\r\n    let crossAxis = glMatrix.vec3.create();\r\n    return function (vector, axis) {\r\n        this.vec3_cross(vector, crossAxis);\r\n        let angle = this.vec3_angleRadians(vector);\r\n        if (!crossAxis.vec3_isConcordant(axis)) {\r\n            angle = -angle;\r\n        }\r\n\r\n        return angle;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_toRadians = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.set(out, glMatrix.glMatrix.toRadian(this[0]), glMatrix.glMatrix.toRadian(this[1]), glMatrix.glMatrix.toRadian(this[2]));\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_toDegrees = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.set(out, this[0] * (180 / Math.PI), this[1] * (180 / Math.PI), this[2] * (180 / Math.PI));\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_toQuat = function (out) {\r\n    return this.vec3_degreesToQuat(out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_radiansToQuat = function (out = glMatrix.quat.create()) {\r\n    out.quat_fromRadians(this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_degreesToQuat = function (out = glMatrix.quat.create()) {\r\n    out.quat_fromDegrees(this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_isNormalized = function () {\r\n    return Math.abs(glMatrix.vec3.length(this) - 1) < this._pp_epsilon;\r\n};\r\n\r\nFloat32Array.prototype.vec3_componentAlongAxis = function (axis, out = glMatrix.vec3.create()) {\r\n    let angle = glMatrix.vec3.angle(this, axis);\r\n    let length = Math.cos(angle) * glMatrix.vec3.length(this);\r\n\r\n    glMatrix.vec3.copy(out, axis);\r\n    glMatrix.vec3.scale(out, out, length);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_removeComponentAlongAxis = function () {\r\n    let componentAlong = glMatrix.vec3.create();\r\n    return function (axis, out = glMatrix.vec3.create()) {\r\n        this.vec3_componentAlongAxis(axis, componentAlong);\r\n        glMatrix.vec3.sub(out, this, componentAlong);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_isConcordant = function (vector) {\r\n    return glMatrix.vec3.angle(this, vector) <= Math.PI / 2;\r\n};\r\n\r\nFloat32Array.prototype.vec3_rotate = function (rotation, out) {\r\n    return this.vec3_rotateDegrees(rotation, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_rotateDegrees = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function (rotation, out) {\r\n        return this.vec3_rotateAroundDegrees(rotation, zero, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_rotateRadians = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function (rotation, out) {\r\n        return this.vec3_rotateAroundRadians(rotation, zero, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_rotateQuat = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function (rotation, out) {\r\n        return this.vec3_rotateAroundQuat(rotation, zero, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_rotateAxis = function (angle, axis, out) {\r\n    return this.vec3_rotateAxisDegrees(angle, axis, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_rotateAxisDegrees = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function (angle, axis, out) {\r\n        return this.vec3_rotateAroundAxisDegrees(angle, axis, zero, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_rotateAxisRadians = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function (angle, axis, out) {\r\n        return this.vec3_rotateAroundAxisRadians(angle, axis, zero, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_rotateAround = function (rotation, origin, out) {\r\n    return this.vec3_rotateAroundDegrees(rotation, origin, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_rotateAroundDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, origin, out = glMatrix.vec3.create()) {\r\n        rotation.vec3_degreesToQuat(quat);\r\n        return this.vec3_rotateAroundQuat(quat, origin, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_rotateAroundRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, origin, out = glMatrix.vec3.create()) {\r\n        rotation.vec3_radiansToQuat(quat);\r\n        return this.vec3_rotateAroundQuat(quat, origin, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_rotateAroundQuat = function (rotation, origin, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.sub(out, this, origin);\r\n    glMatrix.vec3.transformQuat(out, out, rotation);\r\n    glMatrix.vec3.add(out, out, origin);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_rotateAroundAxis = function (angle, axis, origin, out) {\r\n    return this.vec3_rotateAroundAxisDegrees(angle, axis, origin, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_rotateAroundAxisDegrees = function (angle, axis, origin, out) {\r\n    return this.vec3_rotateAroundAxisRadians(glMatrix.glMatrix.toRadian(angle), axis, origin, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_rotateAroundAxisRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (angle, axis, origin, out = glMatrix.vec3.create()) {\r\n        glMatrix.quat.setAxisAngle(quat, axis, angle);\r\n        return this.vec3_rotateAroundQuat(quat, origin, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_convertPositionToWorld = function (parentTransform, out) {\r\n    return this.vec3_convertPositionToWorldMatrix(parentTransform, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_convertPositionToLocal = function (parentTransform, out) {\r\n    return this.vec3_convertPositionToLocalMatrix(parentTransform, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_convertPositionToWorldMatrix = function (parentTransform, out = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.transformMat4(out, this, parentTransform);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.vec3_convertPositionToLocalMatrix = function () {\r\n    let inverse = glMatrix.mat4.create();\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        glMatrix.mat4.invert(inverse, parentTransform);\r\n        glMatrix.vec3.transformMat4(out, this, inverse);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_convertPositionToWorldQuat = function () {\r\n    let parentTransformMatrix = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.quat2_getPosition(position);\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        parentTransformMatrix.mat4_setPositionRotationQuatScale(position, rotation, one);\r\n        return this.vec3_convertPositionToWorldMatrix(parentTransformMatrix, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_convertPositionToLocalQuat = function () {\r\n    let parentTransformMatrix = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.quat2_getPosition(position);\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        parentTransformMatrix.mat4_setPositionRotationQuatScale(position, rotation, one);\r\n        return this.vec3_convertPositionToLocalMatrix(parentTransformMatrix, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_convertDirectionToWorld = function (parentTransform, out) {\r\n    return this.vec3_convertDirectionToWorldMatrix(parentTransform, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_convertDirectionToLocal = function (parentTransform, out) {\r\n    return this.vec3_convertDirectionToLocalMatrix(parentTransform, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_convertDirectionToWorldMatrix = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.mat4_getRotationQuat(rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_convertDirectionToLocalMatrix = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.mat4_getRotationQuat(rotation);\r\n        glMatrix.quat.conjugate(rotation, rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\n\r\nFloat32Array.prototype.vec3_convertDirectionToWorldQuat = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_convertDirectionToLocalQuat = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (parentTransform, out = glMatrix.vec3.create()) {\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        glMatrix.quat.conjugate(rotation, rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_log = function (decimalPlaces = 4) {\r\n    this.vec_log(decimalPlaces);\r\n};\r\n\r\nFloat32Array.prototype.vec3_error = function (decimalPlaces = 4) {\r\n    this.vec_error(decimalPlaces);\r\n};\r\n\r\nFloat32Array.prototype.vec3_warn = function (decimalPlaces = 4) {\r\n    this.vec_warn(decimalPlaces);\r\n};\r\n\r\nFloat32Array.prototype.vec3_addRotation = function (rotation, out) {\r\n    return this.vec3_degreesAddRotation(rotation, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_addRotationDegrees = function (rotation, out) {\r\n    return quat.vec3_degreesAddRotationDegrees(rotation, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_addRotationRadians = function (rotation, out) {\r\n    return quat.vec3_degreesAddRotationRadians(rotation, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_addRotationQuat = function (rotation, out) {\r\n    return quat.vec3_degreesAddRotationQuat(rotation, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_degreesAddRotation = function (rotation, out) {\r\n    return this.vec3_degreesAddRotationDegrees(rotation, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_degreesAddRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_addRotationDegrees(rotation, quat).quat_toDegrees(out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_degreesAddRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_addRotationRadians(rotation, quat).quat_toDegrees(out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_degreesAddRotationQuat = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_addRotationQuat(rotation, quat).quat_toDegrees(out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_radiansAddRotation = function (rotation, out) {\r\n    return this.vec3_radiansAddRotationDegrees(rotation, out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_radiansAddRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_addRotationDegrees(rotation, quat).quat_toRadians(out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_radiansAddRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_addRotationRadians(rotation, quat).quat_toRadians(out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_radiansAddRotationQuat = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.vec3.create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_addRotationQuat(rotation, quat).quat_toRadians(out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_toMatrix = function (out = glMatrix.mat3.create()) {\r\n    return this.vec3_degreesToMatrix(out);\r\n};\r\n\r\nFloat32Array.prototype.vec3_degreesToMatrix = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (out = glMatrix.mat3.create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_toMatrix(out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.vec3_radiansToMatrix = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (out = glMatrix.mat3.create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_toMatrix(out);\r\n    };\r\n}();\r\n\r\n// VECTOR 4\r\n\r\n//glMatrix Bridge\r\n\r\nFloat32Array.prototype.vec4_set = function (x, y = null, z = null, w = null) {\r\n    if (y == null) {\r\n        glMatrix.vec4.set(this, x, x, x, x);\r\n    } else {\r\n        glMatrix.vec4.set(this, x, y, z, w);\r\n    }\r\n    return this;\r\n};\r\n\r\n//QUAT\r\n\r\n//glMatrix Bridge\r\n\r\nFloat32Array.prototype.quat_normalize = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.quat_copy = function (quat) {\r\n    glMatrix.quat.copy(this, quat);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.quat_set = function (x, y = null, z = null, w = null) {\r\n    if (y == null) {\r\n        glMatrix.quat.set(this, x, x, x, x);\r\n    } else {\r\n        glMatrix.quat.set(this, x, y, z, w);\r\n    }\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.quat_identity = function () {\r\n    glMatrix.quat.identity(this);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.quat_length = function () {\r\n    return glMatrix.quat.length(this);\r\n};\r\n\r\nFloat32Array.prototype.quat_invert = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.invert(out, this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.quat_mul = function (rotation, out = glMatrix.quat.create()) {\r\n    glMatrix.quat.mul(out, this, rotation);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.quat_getAxis = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.quat.getAxisAngle(out, this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.quat_getAngle = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function () {\r\n        let angle = glMatrix.quat.getAxisAngle(vector, this);\r\n        return angle;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat_fromAxisAngle = function (axis, angle) {\r\n    return this.quat_fromAxisAngleDegrees(axis, angle);\r\n};\r\n\r\nFloat32Array.prototype.quat_fromAxisAngleDegrees = function (axis, angle) {\r\n    glMatrix.quat.setAxisAngle(this, axis, glMatrix.glMatrix.toRadian(angle));\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.quat_fromAxisAngleRadians = function (axis, angle) {\r\n    glMatrix.quat.setAxisAngle(this, axis, angle);\r\n    return this;\r\n};\r\n\r\n//New Methods\r\n\r\nFloat32Array.prototype.quat_fromRadians = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function (radiansRotation) {\r\n        radiansRotation.vec3_toDegrees(vector);\r\n        return this.quat_fromDegrees(vector);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat_fromDegrees = function (degreesRotation) {\r\n    glMatrix.quat.fromEuler(this, degreesRotation[0], degreesRotation[1], degreesRotation[2]);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.quat_toRadians = function () {\r\n    let mat3 = glMatrix.mat3.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        glMatrix.mat3.fromQuat(mat3, this);\r\n\r\n        //Rotation order is ZYX \r\n        out[1] = Math.asin(-this._pp_clamp(mat3[2], -1, 1));\r\n\r\n        if (Math.abs(mat3[2]) < (1 - this._pp_epsilon)) {\r\n            out[0] = Math.atan2(mat3[5], mat3[8]);\r\n            out[2] = Math.atan2(mat3[1], mat3[0]);\r\n        } else {\r\n            out[0] = 0;\r\n            out[2] = Math.atan2(-mat3[3], mat3[4]);\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat_toDegrees = function (out = glMatrix.vec3.create()) {\r\n    this.quat_toRadians(out);\r\n    out.vec3_toDegrees(out);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.quat_isNormalized = function () {\r\n    return Math.abs(glMatrix.quat.length(this) - 1) < this._pp_epsilon;\r\n};\r\n\r\nFloat32Array.prototype.quat_addRotation = function (rotation, out) {\r\n    return this.quat_addRotationDegrees(rotation, out);\r\n};\r\n\r\nFloat32Array.prototype.quat_addRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out) {\r\n        rotation.vec3_degreesToQuat(quat);\r\n        return this.quat_addRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat_addRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out) {\r\n        rotation.vec3_radiansToQuat(quat);\r\n        return this.quat_addRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat_addRotationQuat = function (rotation, out = glMatrix.quat.create()) {\r\n    rotation.quat_mul(this, out);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.quat_subRotation = function (rotation, out) {\r\n    return this.quat_subRotationDegrees(rotation, out);\r\n};\r\n\r\nFloat32Array.prototype.quat_subRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out) {\r\n        rotation.vec3_degreesToQuat(quat);\r\n        return this.quat_subRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat_subRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation, out) {\r\n        rotation.vec3_radiansToQuat(quat);\r\n        return this.quat_subRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat_subRotationQuat = function () {\r\n    let inverse = glMatrix.quat.create();\r\n    return function (rotation, out = glMatrix.quat.create()) {\r\n        rotation.quat_invert(inverse);\r\n        this.quat_mul(inverse, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat_rotationTo = function (rotation, out) {\r\n    return this.quat_rotationToDegrees(rotation, out);\r\n};\r\n\r\nFloat32Array.prototype.quat_rotationToDegrees = function (rotation, out) {\r\n    return rotation.quat_subRotationDegrees(this, out);\r\n};\r\n\r\nFloat32Array.prototype.quat_rotationToRadians = function (rotation, out) {\r\n    return rotation.quat_subRotationRadians(this, out);\r\n};\r\n\r\nFloat32Array.prototype.quat_rotationToQuat = function (rotation, out) {\r\n    return rotation.quat_subRotationQuat(this, out);\r\n};\r\n\r\nFloat32Array.prototype.quat_toMatrix = function (out = glMatrix.mat3.create()) {\r\n    glMatrix.mat3.fromQuat(out, this);\r\n    return out;\r\n};\r\n\r\n//QUAT 2\r\n\r\n//glMatrix Bridge\r\n\r\nFloat32Array.prototype.quat2_normalize = function (out = glMatrix.quat2.create()) {\r\n    glMatrix.quat2.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.quat2_copy = function (quat2) {\r\n    glMatrix.quat2.copy(this, quat2);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.quat2_identity = function () {\r\n    glMatrix.quat2.identity(this);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.quat2_getPosition = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.quat2.getTranslation(out, this);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.quat2_getRotation = function (out) {\r\n    return this.quat2_getRotationDegrees(out);\r\n};\r\nFloat32Array.prototype.quat2_getRotationDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        this.quat2_getRotationQuat(rotationQuat).quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat2_getRotationRadians = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        this.quat2_getRotationQuat(rotationQuat).quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat2_getRotationQuat = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.copy(out, this);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.quat2_setPositionRotation = function (position, rotation) {\r\n    return this.quat2_setPositionRotationDegrees(position, rotation);\r\n};\r\n\r\nFloat32Array.prototype.quat2_setPositionRotationDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (position, rotation) {\r\n        rotation.vec3_degreesToQuat(rotationQuat);\r\n        glMatrix.quat2.fromRotationTranslation(this, rotationQuat, position);\r\n\r\n        return this;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat2_setPositionRotationRadians = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (position, rotation) {\r\n        rotation.vec3_radiansToQuat(rotationQuat);\r\n        glMatrix.quat2.fromRotationTranslation(this, rotationQuat, position);\r\n\r\n        return this;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat2_setPositionRotationQuat = function (position, rotation) {\r\n    glMatrix.quat2.fromRotationTranslation(this, rotation, position);\r\n    return this;\r\n};\r\n\r\n//New Methods\r\n\r\nFloat32Array.prototype.quat2_getAxes = function () {\r\n    let rotationMatrix = glMatrix.mat3.create();\r\n    return function (out = [glMatrix.vec3.create(), glMatrix.vec3.create(), glMatrix.vec3.create()]) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out[0], rotationMatrix[0], rotationMatrix[1], rotationMatrix[2]);\r\n        glMatrix.vec3.set(out[1], rotationMatrix[3], rotationMatrix[4], rotationMatrix[5]);\r\n        glMatrix.vec3.set(out[2], rotationMatrix[6], rotationMatrix[7], rotationMatrix[8]);\r\n\r\n        glMatrix.vec3.normalize(out[0], out[0]);\r\n        glMatrix.vec3.normalize(out[1], out[1]);\r\n        glMatrix.vec3.normalize(out[2], out[2]);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat2_toLocal = function () {\r\n    let invertQuat = glMatrix.quat2.create();\r\n    return function (parentTransform, out = glMatrix.quat2.create()) {\r\n        glMatrix.quat2.conjugate(invertQuat, parentTransform);\r\n        glMatrix.quat2.mul(out, invertQuat, this);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.quat2_toWorld = function (parentTransform, out = glMatrix.quat2.create()) {\r\n    glMatrix.quat2.mul(out, parentTransform, this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.quat2_toMatrix = function (out = glMatrix.mat4.create()) {\r\n    glMatrix.mat4.fromQuat2(out, this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.quat2_fromMatrix = function (transformMatrix) {\r\n    transformMatrix.mat4_toQuat(this);\r\n    return this;\r\n};\r\n\r\n//MATRIX 3\r\n\r\n//glMatrix Bridge\r\n\r\n//New Methods\r\n\r\nFloat32Array.prototype.mat3_toDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        this.mat3_toQuat(quat);\r\n        quat.quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat3_toRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        this.mat3_toQuat(quat);\r\n        quat.quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat3_toQuat = function (out = glMatrix.quat.create()) {\r\n    glMatrix.quat.fromMat3(out, this);\r\n    return out;\r\n};\r\n\r\n//MATRIX 4\r\n\r\n//glMatrix Bridge\r\n\r\nFloat32Array.prototype.mat4_copy = function (mat4) {\r\n    glMatrix.mat4.copy(this, mat4);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.mat4_identity = function () {\r\n    glMatrix.mat4.identity(this);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.mat4_invert = function (out = glMatrix.mat4.create()) {\r\n    glMatrix.mat4.invert(out, this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.mat4_clone = function (out = glMatrix.mat4.create()) {\r\n    glMatrix.mat4.copy(out, this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.mat4_getPosition = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.mat4.getTranslation(out, this);\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.mat4_getRotation = function (out = glMatrix.vec3.create()) {\r\n    return this.mat4_getRotationDegrees(out);\r\n};\r\n\r\nFloat32Array.prototype.mat4_getRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        this.mat4_getRotationQuat(quat);\r\n        quat.quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_getRotationRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (out = glMatrix.vec3.create()) {\r\n        this.mat4_getRotationQuat(quat);\r\n        quat.quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_getRotationQuat = function () {\r\n    let scale = glMatrix.vec3.create();\r\n    let transformMatrixNoScale = glMatrix.mat4.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (out = glMatrix.quat.create()) {\r\n        glMatrix.mat4.getScaling(scale, this);\r\n        glMatrix.vec3.divide(inverseScale, one, scale);\r\n        glMatrix.mat4.scale(transformMatrixNoScale, this, inverseScale);\r\n        glMatrix.mat4.getRotation(out, transformMatrixNoScale);\r\n        glMatrix.quat.normalize(out, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_getScale = function (out = glMatrix.vec3.create()) {\r\n    glMatrix.mat4.getScaling(out, this);\r\n    return out;\r\n};\r\n\r\n//New Methods\r\n\r\nFloat32Array.prototype.mat4_setPosition = function (position) {\r\n    this[12] = position[0];\r\n    this[13] = position[1];\r\n    this[14] = position[2];\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.mat4_setRotation = function (rotation) {\r\n    this.mat4_setRotationDegrees(rotation);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.mat4_setRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        this.mat4_setRotationQuat(rotation.vec3_degreesToQuat(quat));\r\n        return this;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_setRotationRadians = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function (rotation) {\r\n        this.mat4_setRotationDegrees(rotation.vec3_toDegrees(vector));\r\n        return this;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_setRotationQuat = function () {\r\n    let position = glMatrix.vec3.create();\r\n    let scale = glMatrix.vec3.create();\r\n    return function (rotation) {\r\n        this.mat4_getPosition(position);\r\n        this.mat4_getScale(scale);\r\n        this.mat4_setPositionRotationQuatScale(position, rotation, scale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_setScale = function () {\r\n    let tempScale = glMatrix.vec3.create();\r\n    return function (scale) {\r\n        glMatrix.mat4.getScaling(tempScale, this);\r\n        glMatrix.vec3.divide(tempScale, scale, tempScale);\r\n        glMatrix.mat4.scale(this, this, tempScale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_setPositionRotationScale = function (position, rotation, scale) {\r\n    this.mat4_setPositionRotationDegreesScale(position, rotation, scale);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.mat4_setPositionRotationDegreesScale = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (position, rotation, scale) {\r\n        this.mat4_setPositionRotationQuatScale(position, rotation.vec3_degreesToQuat(quat), scale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_setPositionRotationRadiansScale = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function (position, rotation, scale) {\r\n        this.mat4_setPositionRotationDegreesScale(position, rotation.vec3_toDegrees(vector), scale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_setPositionRotationQuatScale = function (position, rotation, scale) {\r\n    glMatrix.mat4.fromRotationTranslationScale(this, rotation, position, scale);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.mat4_setPositionRotation = function (position, rotation) {\r\n    this.mat4_setPositionRotationDegrees(position, rotation);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.mat4_setPositionRotationDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (position, rotation) {\r\n        this.mat4_setPositionRotationQuat(position, rotation.vec3_degreesToQuat(quat));\r\n        return this;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_setPositionRotationRadians = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function (position, rotation) {\r\n        this.mat4_setPositionRotationDegrees(position, rotation.vec3_toDegrees(vector));\r\n        return this;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_setPositionRotationQuat = function (position, rotation) {\r\n    glMatrix.mat4.fromRotationTranslation(this, rotation, position);\r\n    return this;\r\n};\r\n\r\nFloat32Array.prototype.mat4_getAxes = function (out = [glMatrix.vec3.create(), glMatrix.vec3.create(), glMatrix.vec3.create()]) {\r\n    glMatrix.vec3.set(out[0], this[0], this[1], this[2]);\r\n    glMatrix.vec3.set(out[1], this[4], this[5], this[6]);\r\n    glMatrix.vec3.set(out[2], this[8], this[9], this[10]);\r\n\r\n    glMatrix.vec3.normalize(out[0], out[0]);\r\n    glMatrix.vec3.normalize(out[1], out[1]);\r\n    glMatrix.vec3.normalize(out[2], out[2]);\r\n\r\n    return out;\r\n};\r\n\r\nFloat32Array.prototype.mat4_toWorld = function () {\r\n    let convertTransform = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let scale = glMatrix.vec3.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (parentTransform, out = glMatrix.mat4.create()) {\r\n        if (parentTransform.mat4_hasUniformScale()) {\r\n            glMatrix.mat4.mul(out, parentTransform, this);\r\n        } else {\r\n            glMatrix.vec3.set(position, this[12], this[13], this[14]);\r\n            position.vec3_convertPositionToWorldMatrix(parentTransform, position);\r\n\r\n            glMatrix.mat4.getScaling(scale, parentTransform);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(convertTransform, parentTransform, inverseScale);\r\n\r\n            glMatrix.mat4.mul(out, convertTransform, this);\r\n            glMatrix.mat4.scale(out, out, scale);\r\n\r\n            out[12] = position[0];\r\n            out[13] = position[1];\r\n            out[14] = position[2];\r\n            out[15] = 1;\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_toLocal = function () {\r\n    let convertTransform = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let scale = glMatrix.vec3.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (parentTransform, out = glMatrix.mat4.create()) {\r\n        if (parentTransform.mat4_hasUniformScale()) {\r\n            glMatrix.mat4.invert(convertTransform, parentTransform);\r\n            glMatrix.mat4.mul(out, convertTransform, this);\r\n        } else {\r\n            glMatrix.vec3.set(position, this[12], this[13], this[14]);\r\n            position.vec3_convertPositionToLocalMatrix(parentTransform, position);\r\n\r\n            glMatrix.mat4.getScaling(scale, parentTransform);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(convertTransform, parentTransform, inverseScale);\r\n\r\n            glMatrix.mat4.invert(convertTransform, convertTransform);\r\n            glMatrix.mat4.mul(out, convertTransform, this);\r\n            glMatrix.mat4.scale(out, out, inverseScale);\r\n\r\n            out[12] = position[0];\r\n            out[13] = position[1];\r\n            out[14] = position[2];\r\n            out[15] = 1;\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_hasUniformScale = function () {\r\n    let scale = glMatrix.vec3.create();\r\n    return function () {\r\n        glMatrix.mat4.getScaling(scale, this);\r\n        return Math.abs(scale[0] - scale[1]) < this._pp_epsilon && Math.abs(scale[1] - scale[2]) < this._pp_epsilon && Math.abs(scale[0] - scale[2]) < this._pp_epsilon;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_toQuat = function () {\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    return function (out = glMatrix.quat2.create()) {\r\n        glMatrix.mat4.getTranslation(position, this);\r\n        this.mat4_getRotationQuat(rotation);\r\n        glMatrix.quat2.fromRotationTranslation(out, rotation, position);\r\n        return out;\r\n    };\r\n}();\r\n\r\nFloat32Array.prototype.mat4_fromQuat = function (transformQuat) {\r\n    transformQuat.quat2_toMatrix(this);\r\n    return this;\r\n};\r\n\r\n//CREATION\r\n\r\nfunction vec3_create(x = null, y = null, z = null) {\r\n    let out = glMatrix.vec3.create();\r\n    if (x != null) {\r\n        out.vec3_set(x, y, z);\r\n    }\r\n    return out;\r\n}\r\n\r\nfunction vec4_create(x = null, y = null, z = null, w = null) {\r\n    let out = glMatrix.vec4.create();\r\n    if (x != null) {\r\n        out.vec4_set(x, y, z, w);\r\n    }\r\n    return out;\r\n}\r\n\r\nfunction quat_create(x = null, y = null, z = null, w = null) {\r\n    let out = glMatrix.quat.create();\r\n    if (x != null) {\r\n        out.quat_set(x, y, z, w);\r\n    }\r\n    return out;\r\n}\r\n\r\nfunction quat2_create() {\r\n    let out = glMatrix.quat2.create();\r\n    return out;\r\n}\r\n\r\nfunction quat2_fromPositionRotation(position, rotation) {\r\n    return quat2_fromPositionRotationDegrees(position, rotation);\r\n}\r\n\r\nfunction quat2_fromPositionRotationDegrees(position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.quat2_setPositionRotationDegrees(position, rotation);\r\n    return out;\r\n}\r\n\r\nfunction quat2_fromPositionRotationRadians(position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.quat2_setPositionRotationRadians(position, rotation);\r\n    return out;\r\n}\r\n\r\nfunction quat2_fromPositionRotationQuat(position, rotation) {\r\n    let out = glMatrix.quat2.create();\r\n    out.quat2_setPositionRotationQuat(position, rotation);\r\n    return out;\r\n}\r\n\r\nfunction mat4_create() {\r\n    let out = glMatrix.mat4.create();\r\n    return out;\r\n}\r\n\r\nfunction mat4_fromPositionRotation(position, rotation) {\r\n    return mat4_fromPositionRotationDegrees(position, rotation);\r\n}\r\n\r\nfunction mat4_fromPositionRotationDegrees(position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationDegrees(position, rotation);\r\n    return out;\r\n}\r\n\r\nfunction mat4_fromPositionRotationRadians(position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationRadians(position, rotation);\r\n    return out;\r\n}\r\n\r\nfunction mat4_fromPositionRotationQuat(position, rotation) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationQuat(position, rotation);\r\n    return out;\r\n}\r\n\r\nfunction mat4_fromPositionRotationScale(position, rotation, scale) {\r\n    return mat4_fromPositionRotationDegreesScale(position, rotation, scale);\r\n}\r\n\r\nfunction mat4_fromPositionRotationDegreesScale(position, rotation, scale) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationDegreesScale(position, rotation, scale);\r\n    return out;\r\n}\r\n\r\nfunction mat4_fromPositionRotationRadiansScale(position, rotation, scale) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationRadiansScale(position, rotation, scale);\r\n    return out;\r\n}\r\n\r\nfunction mat4_fromPositionRotationQuatScale(position, rotation, scale) {\r\n    let out = glMatrix.mat4.create();\r\n    out.mat4_setPositionRotationQuatScale(position, rotation, scale);\r\n    return out;\r\n}\r\n\r\n//UTILS\r\n\r\nFloat32Array.prototype._pp_epsilon = 0.000001;\r\n\r\nFloat32Array.prototype._pp_clamp = function (value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\n\r\nFloat32Array.prototype._vec_buildConsoleMessage = function (decimalPlaces) {\r\n    let message = \"[\";\r\n\r\n    for (let i = 0; i < this.length; i++) {\r\n        if (i != 0) {\r\n            message = message.concat(\", \");\r\n        }\r\n\r\n        message = message.concat(this[i].toFixed(decimalPlaces));\r\n    }\r\n\r\n    message = message.concat(\"]\");\r\n    return message;\r\n};\r\n\r\nFloat32Array.prototype._vec_prepareOut = function (out) {\r\n    if (out == null) {\r\n        out = this.pp_clone();\r\n    } else if (out != this) {\r\n        out.pp_copy(this);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nfor (let key in Float32Array.prototype) {\r\n    let prefixes = [\"pp_\", \"vec_\", \"vec3_\", \"vec4_\", \"quat_\", \"quat2_\", \"mat3_\", \"mat4_\", \"_pp_\", \"_vec_\",];\r\n\r\n    let found = false;\r\n    for (let prefix of prefixes) {\r\n        if (key.startsWith(prefix)) {\r\n            found = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (found) {\r\n        Object.defineProperty(Float32Array.prototype, key, { enumerable: false });\r\n    }\r\n}",
        "if (!PP) {\r\n    var PP = {};\r\n}\r\n\r\nMath.pp_clamp = function (value, start, end) {\r\n    let fixedStart = (start != null) ? start : Number.MIN_VALUE;\r\n    let fixedEnd = (end != null) ? end : Number.MAX_VALUE;\r\n\r\n    let min = Math.min(fixedStart, fixedEnd);\r\n    let max = Math.max(fixedStart, fixedEnd);\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\n\r\nMath.pp_sign = function (value, zeroSign = 1) {\r\n    let sign = Math.sign(value);\r\n    if (sign == 0) {\r\n        sign = Math.sign(zeroSign);\r\n    }\r\n    return sign;\r\n};\r\n\r\nMath.pp_toDegrees = function (angle) {\r\n    return angle * (180 / Math.PI);\r\n};\r\n\r\nMath.pp_toRadians = function (angle) {\r\n    return glMatrix.glMatrix.toRadian(angle);\r\n};\r\n\r\nMath.pp_roundDecimal = function (number, decimalPlaces) {\r\n    let factor = Math.pow(10, decimalPlaces);\r\n    number = Math.round(number * factor) / factor;\r\n\r\n    return number;\r\n};\r\n\r\n// Start range value doesn't need to be lower than the end one, so you can map from [0,1] to [3,2], where 3 is greater than 2\r\nMath.pp_mapToRange = function (value, originRangeStart, originRangeEnd, newRangeStart, newRangeEnd) {\r\n    if (originRangeStart == originRangeEnd) {\r\n        return newRangeStart;\r\n    }\r\n\r\n    let clampedValue = Math.pp_clamp(value, originRangeStart, originRangeEnd);\r\n\r\n    if (clampedValue == originRangeStart) {\r\n        return newRangeStart;\r\n    } else if (clampedValue == originRangeEnd) {\r\n        return newRangeEnd;\r\n    }\r\n\r\n    let newValue = newRangeStart + ((newRangeEnd - newRangeStart) / (originRangeEnd - originRangeStart)) * (clampedValue - originRangeStart);\r\n    let clampedNewValue = Math.pp_clamp(newValue, newRangeStart, newRangeEnd);\r\n    return clampedNewValue;\r\n};\r\n\r\n//Range is [start, end)\r\nMath.pp_random = function (start = 0, end = 1) {\r\n    return Math.random() * (end - start) + start;\r\n};\r\n\r\n//Range is [start, end]\r\nMath.pp_randomInt = function (start, end) {\r\n    let min = Math.min(start, end);\r\n    let max = Math.max(start, end);\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\n//Return 1 or -1\r\nMath.pp_randomSign = function () {\r\n    return (Math.random() < 0.5) ? 1 : -1;\r\n};\r\n\r\n//You give it a list of parameters and returns one\r\nMath.pp_randomPick = function (...args) {\r\n    let random = null;\r\n\r\n    if (args.length > 0) {\r\n        if (args.length == 1 && args[0].length != null) {\r\n            if (args[0].length > 0) {\r\n                let randomIndex = Math.pp_randomInt(0, args[0].length - 1);\r\n                random = args[0][randomIndex];\r\n            }\r\n        } else {\r\n            let randomIndex = Math.pp_randomInt(0, args.length - 1);\r\n            random = args[randomIndex];\r\n        }\r\n    }\r\n\r\n    return random;\r\n};\r\n\r\nMath.pp_lerp = function (from, to, interpolationValue) {\r\n    if (interpolationValue == 0) {\r\n        return from;\r\n    } else if (interpolationValue == 1) {\r\n        return to;\r\n    }\r\n\r\n    return interpolationValue * (to - from) + from;\r\n};\r\n\r\nPP.EasingFunction = {\r\n    linear: t => t,\r\n    easeIn: t => t * t * t,\r\n    easeOut: t => (t - 1) * (t - 1) * (t - 1) + 1,\r\n    easeInOut: t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\r\n};\r\n\r\nMath.pp_interpolate = function (from, to, interpolationValue, easingFunction = PP.EasingFunction.linear) {\r\n    let lerpValue = easingFunction(interpolationValue);\r\n    return Math.pp_lerp(from, to, lerpValue);\r\n};\r\n\r\nMath.pp_angleDistance = function (first, second) {\r\n    return Math.pp_angleDistanceDegrees(first, second);\r\n};\r\n\r\nMath.pp_angleDistanceDegrees = function (first, second) {\r\n    return Math.abs(Math.pp_angleDistanceSignedDegrees(first, second));\r\n};\r\n\r\nMath.pp_angleDistanceRadians = function (first, second) {\r\n    return Math.abs(Math.pp_angleDistanceSignedRadians(first, second));\r\n};\r\n\r\nMath.pp_angleDistanceSigned = function (first, second) {\r\n    return Math.pp_angleDistanceSignedDegrees(first, second);\r\n};\r\n\r\nMath.pp_angleDistanceSignedDegrees = function (first, second) {\r\n    let clampedFirst = Math.pp_angleClampDegrees(first, true);\r\n    let clampedSecond = Math.pp_angleClampDegrees(second, true);\r\n\r\n    let distance = clampedSecond - clampedFirst;\r\n    if (clampedSecond - clampedFirst > 180) {\r\n        distance = (clampedSecond - clampedFirst) - 360;\r\n    } else if (clampedSecond - clampedFirst < -180) {\r\n        distance = (clampedSecond - clampedFirst) + 360;\r\n    }\r\n\r\n    return distance;\r\n};\r\n\r\nMath.pp_angleDistanceSignedRadians = function (first, second) {\r\n    return Math.pp_toRadians(Math.pp_angleDistanceSignedDegrees(Math.pp_toDegrees(first), Math.pp_toDegrees(second)));\r\n};\r\n\r\n//Clamp the angle to -180/+180, so that, for example, 270 will be -90\r\n//if usePositiveRange is true, the angle will be clamped to 0/360\r\nMath.pp_angleClamp = function (angle, usePositiveRange = false) {\r\n    return Math.pp_angleClampDegrees(angle, usePositiveRange);\r\n};\r\n\r\n//Clamp the angle to -180/+180, so that, for example, 270 will be -90\r\n//if usePositiveRange is true, the angle will be clamped to 0/360\r\nMath.pp_angleClampDegrees = function (angle, usePositiveRange = false) {\r\n    let clampedAngle = angle % 360;\r\n\r\n    if (clampedAngle < 0) {\r\n        clampedAngle += 360;\r\n    }\r\n\r\n    if (!usePositiveRange) {\r\n        if (clampedAngle > 180) {\r\n            clampedAngle -= 360;\r\n        }\r\n    }\r\n\r\n    return clampedAngle;\r\n};\r\n\r\n//Clamp the angle to -Pi/+Pi, so that, for example, 270 will be -90\r\n//if usePositiveRange is true, the angle will be clamped to 0/2Pi\r\nMath.pp_angleClampRadians = function (angle, usePositiveRange = false) {\r\n    return Math.pp_toRadians(Math.pp_angleClampDegrees(Math.pp_toDegrees(angle), usePositiveRange));\r\n};\r\n\r\n//The range goes from start to end by going toward the positive direction (if useShortestAngle is false)\r\n//[20,300] is a 280 degrees range, [300, 20] is an 80 degrees range, [-150,-170] = [210, 190] is a 240 degrees range, [0, -10] = [0, 350] is a 350 degrees range\r\nMath.pp_isInsideAngleRange = function (angle, start, end, useShortestAngle = false) {\r\n    return Math.pp_isInsideAngleRangeDegrees(angle, start, end, useShortestAngle);\r\n};\r\n\r\nMath.pp_isInsideAngleRangeDegrees = function (angle, start, end, useShortestAngle = false) {\r\n    let isInside = false;\r\n\r\n    let anglePositive = Math.pp_angleClampDegrees(angle, true);\r\n    let startPositive = Math.pp_angleClampDegrees(start, true);\r\n    let endPositive = Math.pp_angleClampDegrees(end, true);\r\n\r\n    if (useShortestAngle) {\r\n        if (Math.pp_angleDistanceSignedDegrees(startPositive, endPositive) < 0) {\r\n            let temp = startPositive;\r\n            startPositive = endPositive;\r\n            endPositive = temp;\r\n        }\r\n    }\r\n\r\n    if (startPositive < endPositive) {\r\n        isInside = anglePositive >= startPositive && anglePositive <= endPositive;\r\n    } else {\r\n        isInside = anglePositive >= startPositive || anglePositive <= endPositive;\r\n    }\r\n\r\n    return isInside;\r\n};\r\n\r\nMath.pp_isInsideAngleRangeRadians = function (angle, start, end, useShortestAngle = false) {\r\n    return Math.pp_isInsideAngleRangeDegrees(Math.pp_toDegrees(angle), Math.pp_toDegrees(start), Math.pp_toDegrees(end), useShortestAngle);\r\n};\r\n\r\nfor (let key in Math) {\r\n    let prefixes = [\"pp_\", \"_pp_\"];\r\n\r\n    let found = false;\r\n    for (let prefix of prefixes) {\r\n        if (key.startsWith(prefix)) {\r\n            found = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (found) {\r\n        Object.defineProperty(Math, key, { enumerable: false });\r\n    }\r\n}",
        "/*\r\n    How to use\r\n\r\n    By default the methods work on World space, rotations are in Degrees and transforms are Matrix (and not Quat 2) \r\n    For methods that work with rotations, Matrix means Matrix 3 and Quat means Quat\r\n    For methods that work with transforms, Matrix means Matrix 4 and Quat means Quat 2\r\n\r\n    You can add a suffix like World/Local/Object at the end of some methods to specify the space, example:\r\n        - pp_getPositionLocal to get the position in local space (parent space)\r\n        - pp_translateObject to translate in object space\r\n\r\n    For rotations u can add a suffix like Degrees/Radians/Quat/Matrix to use a specific version, example:\r\n        - pp_getRotationDegrees\r\n        - pp_setRotationLocalMatrix\r\n        - pp_rotateWorldQuat\r\n        \r\n    For transform u can add a suffix like Quat/Matrix to use a specific version, example:\r\n        - pp_getTransformQuat\r\n        - pp_setTransformWorldMatrix\r\n        \r\n    Some methods let you specify if u want them to work on the Hierarchy/Descendants/Children where:\r\n        - Children: direct children of the object\r\n        - Descendants: all the children of the object, including child of child and so on \r\n        - Hierarchy: Descendants plus the current object\r\n    By default the methods work on the current object alone:\r\n        - pp_getComponent\r\n        - pp_getComponentHierarchy\r\n        - pp_getComponentAmountMapDescendants\r\n        - pp_setActiveChildren\r\n\r\n    The methods leave u the choice of forwarding an out parameter or just get the return value, example:\r\n        - let position = this.object.pp_getPosition()\r\n        - this.object.pp_getPosition(position)\r\n        - the out parameter is always the last one\r\n\r\n    List of methods:\r\n        Note:\r\n            - The suffixes (like World or Radians) are omitted \r\n\r\n        - pp_getPosition    / pp_setPosition    / pp_resetPosition\r\n        - pp_getRotation    / pp_setRotation    / pp_resetRotation\r\n        - pp_getScale       / pp_setScale (u can specify a single number instead of a vector to uniform scale easily)   / pp_resetScale \r\n        - pp_getTransform   / pp_setTransform   / pp_resetTransform\r\n\r\n        - pp_getLeft        / pp_getRight\r\n        - pp_getUp          / pp_getDown\r\n        - pp_getForward     / pp_getBackward\r\n\r\n        - pp_translate      / pp_translateAxis\r\n        - pp_rotate         / pp_rotateAxis     / pp_rotateAround    / pp_rotateAroundAxis\r\n        - pp_scaleObject (for now scale only have this variant) (u can specify a single number instead of a vector to uniform scale easily)\r\n\r\n        - pp_lookAt         / pp_lookTo (u can avoid to specify up and the method will pickup the object up by default)\r\n\r\n        - pp_getParent      / pp_setParent (let u specify if u want to keep the transform or not)\r\n\r\n        - pp_convertPositionObjectToWorld (you can use all the combinations between Object/Local/World)\r\n        - pp_convertDirectionObjectToWorld (you can use all the combinations between Object/Local/World)\r\n        - pp_convertTransformObjectToWorld (you can use all the combinations between Object/Local/World) (u also have Quat and Matrix version)\r\n\r\n        - pp_hasUniformScale\r\n\r\n        - pp_addComponent  /  pp_getComponent  / pp_getComponentHierarchy / pp_getComponentDescendants / pp_getComponentChildren\r\n        - pp_getComponents  / pp_getComponentsHierarchy / pp_getComponentsDescendants / pp_getComponentsChildren\r\n\r\n        - pp_setActive  / pp_setActiveHierarchy / pp_setActiveDescendants / pp_setActiveChildren\r\n\r\n        - pp_clone      / pp_isCloneable\r\n\r\n        - pp_getName    / pp_setName\r\n        - pp_getID\r\n        - pp_getHierarchy / pp_getDescendants / pp_getChildren\r\n        - pp_getComponentAmountMap / pp_getComponentAmountMapHierarchy / pp_getComponentAmountMapDescendants / pp_getComponentAmountMapChildren\r\n        - pp_markDirty\r\n        - pp_equals\r\n        - pp_destroy\r\n*/\r\n\r\n\r\n//GETTER\r\n\r\n//Position\r\n\r\nWL.Object.prototype.pp_getPosition = function (position) {\r\n    return this.pp_getPositionWorld(position);\r\n};\r\n\r\nWL.Object.prototype.pp_getPositionWorld = function (position = glMatrix.vec3.create()) {\r\n    this.getTranslationWorld(position);\r\n    return position;\r\n};\r\n\r\nWL.Object.prototype.pp_getPositionLocal = function (position = glMatrix.vec3.create()) {\r\n    this.getTranslationLocal(position);\r\n    return position;\r\n};\r\n\r\n//Rotation\r\n\r\nWL.Object.prototype.pp_getRotation = function (rotation) {\r\n    return this.pp_getRotationWorld(rotation);\r\n};\r\nWL.Object.prototype.pp_getRotationDegrees = function (rotation) {\r\n    return this.pp_getRotationWorldDegrees(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_getRotationRadians = function (rotation) {\r\n    return this.pp_getRotationWorldRadians(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_getRotationMatrix = function (rotation) {\r\n    return this.pp_getRotationWorldMatrix(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_getRotationQuat = function (rotation) {\r\n    return this.pp_getRotationWorldQuat(rotation);\r\n};\r\n\r\n//Rotation World\r\n\r\nWL.Object.prototype.pp_getRotationWorld = function (rotation) {\r\n    return this.pp_getRotationWorldDegrees(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_getRotationWorldDegrees = function (rotation) {\r\n    rotation = this.pp_getRotationWorldRadians(rotation);\r\n    rotation.forEach(function (value, index, array) {\r\n        array[index] = this._pp_toDegrees(value);\r\n    }.bind(this));\r\n    return rotation;\r\n};\r\n\r\nWL.Object.prototype.pp_getRotationWorldRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation = glMatrix.vec3.create()) {\r\n        this.pp_getRotationWorldQuat(quat);\r\n        this._pp_quaternionToRadians(quat, rotation);\r\n        return rotation;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getRotationWorldMatrix = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation = glMatrix.mat3.create()) {\r\n        this.pp_getRotationWorldQuat(quat);\r\n        glMatrix.mat3.fromQuat(rotation, quat);\r\n        return rotation;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getRotationWorldQuat = function (rotation = glMatrix.quat.create()) {\r\n    glMatrix.quat.copy(rotation, this.rotationWorld);\r\n    return rotation;\r\n};\r\n\r\n//Rotation Local\r\n\r\nWL.Object.prototype.pp_getRotationLocal = function (rotation) {\r\n    return this.pp_getRotationLocalDegrees(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_getRotationLocalDegrees = function (rotation) {\r\n    rotation = this.pp_getRotationLocalRadians(rotation);\r\n    rotation.forEach(function (value, index, array) {\r\n        array[index] = this._pp_toDegrees(value);\r\n    }.bind(this));\r\n    return rotation;\r\n};\r\n\r\nWL.Object.prototype.pp_getRotationLocalRadians = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation = glMatrix.vec3.create()) {\r\n        this.pp_getRotationLocalQuat(quat);\r\n        this._pp_quaternionToRadians(quat, rotation);\r\n        return rotation;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getRotationLocalMatrix = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation = glMatrix.mat3.create()) {\r\n        this.pp_getRotationLocalQuat(quat);\r\n        glMatrix.mat3.fromQuat(rotation, quat);\r\n        return rotation;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getRotationLocalQuat = function (rotation = glMatrix.quat.create()) {\r\n    glMatrix.quat.copy(rotation, this.rotationLocal);\r\n    return rotation;\r\n};\r\n\r\n//Scale\r\n\r\nWL.Object.prototype.pp_getScale = function (scale) {\r\n    return this.pp_getScaleWorld(scale);\r\n};\r\n\r\nWL.Object.prototype.pp_getScaleWorld = function (scale = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.copy(scale, this.scalingWorld);\r\n    return scale;\r\n};\r\n\r\nWL.Object.prototype.pp_getScaleLocal = function (scale = glMatrix.vec3.create()) {\r\n    glMatrix.vec3.copy(scale, this.scalingLocal);\r\n    return scale;\r\n};\r\n\r\n//Transform\r\n\r\nWL.Object.prototype.pp_getTransform = function (transform) {\r\n    return this.pp_getTransformWorld(transform);\r\n};\r\n\r\nWL.Object.prototype.pp_getTransformMatrix = function (transform) {\r\n    return this.pp_getTransformWorldMatrix(transform);\r\n};\r\n\r\nWL.Object.prototype.pp_getTransformQuat = function (transform) {\r\n    return this.pp_getTransformWorldQuat(transform);\r\n};\r\n\r\n//Transform World\r\n\r\nWL.Object.prototype.pp_getTransformWorld = function (transform) {\r\n    return this.pp_getTransformWorldMatrix(transform);\r\n};\r\n\r\nWL.Object.prototype.pp_getTransformWorldMatrix = function () {\r\n    let transformQuat = glMatrix.quat2.create();\r\n    let scale = glMatrix.vec3.create();\r\n    return function (transform = glMatrix.mat4.create()) {\r\n        this.pp_getTransformWorldQuat(transformQuat);\r\n        this.pp_getScaleWorld(scale);\r\n        glMatrix.mat4.fromQuat2(transform, transformQuat);\r\n        glMatrix.mat4.scale(transform, transform, scale);\r\n        return transform;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getTransformWorldQuat = function (transform = glMatrix.quat2.create()) {\r\n    glMatrix.quat2.copy(transform, this.transformWorld);\r\n    return transform;\r\n};\r\n\r\n//Transform Local\r\n\r\nWL.Object.prototype.pp_getTransformLocal = function (transform) {\r\n    return this.pp_getTransformLocalMatrix(transform);\r\n};\r\n\r\nWL.Object.prototype.pp_getTransformLocalMatrix = function () {\r\n    let transformQuat = glMatrix.quat2.create();\r\n    let scale = glMatrix.vec3.create();\r\n    return function (transform = glMatrix.mat4.create()) {\r\n        this.pp_getTransformLocalQuat(transformQuat);\r\n        this.pp_getScaleLocal(scale);\r\n        glMatrix.mat4.fromQuat2(transform, transformQuat);\r\n        glMatrix.mat4.scale(transform, transform, scale);\r\n        return transform;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getTransformLocalQuat = function (transform = glMatrix.quat2.create()) {\r\n    glMatrix.quat2.copy(transform, this.transformLocal);\r\n    return transform;\r\n};\r\n\r\n//Forward\r\n\r\nWL.Object.prototype.pp_getForward = function (forward) {\r\n    return this.pp_getForwardWorld(forward);\r\n};\r\n\r\nWL.Object.prototype.pp_getForwardWorld = function () {\r\n    let rotation = glMatrix.mat3.create();\r\n    return function (forward = glMatrix.vec3.create()) {\r\n        this.pp_getRotationWorldMatrix(rotation);\r\n        forward[0] = rotation[6];\r\n        forward[1] = rotation[7];\r\n        forward[2] = rotation[8];\r\n        return forward;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getForwardLocal = function () {\r\n    let rotation = glMatrix.mat3.create();\r\n    return function (forward = glMatrix.vec3.create()) {\r\n        this.pp_getRotationLocalMatrix(rotation);\r\n        forward[0] = rotation[6];\r\n        forward[1] = rotation[7];\r\n        forward[2] = rotation[8];\r\n        return forward;\r\n    };\r\n}();\r\n\r\n//Backward\r\n\r\nWL.Object.prototype.pp_getBackward = function (backward) {\r\n    return this.pp_getBackwardWorld(backward);\r\n};\r\n\r\nWL.Object.prototype.pp_getBackwardWorld = function () {\r\n    let rotation = glMatrix.mat3.create();\r\n    return function (backward = glMatrix.vec3.create()) {\r\n        this.pp_getRotationWorldMatrix(rotation);\r\n        backward[0] = -rotation[6];\r\n        backward[1] = -rotation[7];\r\n        backward[2] = -rotation[8];\r\n        return backward;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getBackwardLocal = function () {\r\n    let rotation = glMatrix.mat3.create();\r\n    return function (backward = glMatrix.vec3.create()) {\r\n        this.pp_getRotationLocalMatrix(rotation);\r\n        backward[0] = -rotation[6];\r\n        backward[1] = -rotation[7];\r\n        backward[2] = -rotation[8];\r\n        return backward;\r\n    };\r\n}();\r\n\r\n//Up\r\n\r\nWL.Object.prototype.pp_getUp = function (up) {\r\n    return this.pp_getUpWorld(up);\r\n};\r\n\r\nWL.Object.prototype.pp_getUpWorld = function () {\r\n    let rotation = glMatrix.mat3.create();\r\n    return function (up = glMatrix.vec3.create()) {\r\n        this.pp_getRotationWorldMatrix(rotation);\r\n        up[0] = rotation[3];\r\n        up[1] = rotation[4];\r\n        up[2] = rotation[5];\r\n        return up;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getUpLocal = function () {\r\n    let rotation = glMatrix.mat3.create();\r\n    return function (up = glMatrix.vec3.create()) {\r\n        this.pp_getRotationLocalMatrix(rotation);\r\n        up[0] = rotation[3];\r\n        up[1] = rotation[4];\r\n        up[2] = rotation[5];\r\n        return up;\r\n    };\r\n}();\r\n\r\n//Down\r\n\r\nWL.Object.prototype.pp_getDown = function (down) {\r\n    return this.pp_getDownWorld(down);\r\n};\r\n\r\nWL.Object.prototype.pp_getDownWorld = function () {\r\n    let rotation = glMatrix.mat3.create();\r\n    return function (down = glMatrix.vec3.create()) {\r\n        this.pp_getRotationWorldMatrix(rotation);\r\n        down[0] = -rotation[3];\r\n        down[1] = -rotation[4];\r\n        down[2] = -rotation[5];\r\n        return down;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getDownLocal = function () {\r\n    let rotation = glMatrix.mat3.create();\r\n    return function (down = glMatrix.vec3.create()) {\r\n        this.pp_getRotationLocalMatrix(rotation);\r\n        down[0] = -rotation[3];\r\n        down[1] = -rotation[4];\r\n        down[2] = -rotation[5];\r\n        return down;\r\n    };\r\n}();\r\n\r\n//Left\r\n\r\nWL.Object.prototype.pp_getLeft = function (left) {\r\n    return this.pp_getLeftWorld(left);\r\n};\r\n\r\nWL.Object.prototype.pp_getLeftWorld = function () {\r\n    let rotation = glMatrix.mat3.create();\r\n    return function (left = glMatrix.vec3.create()) {\r\n        this.pp_getRotationWorldMatrix(rotation);\r\n        left[0] = rotation[0];\r\n        left[1] = rotation[1];\r\n        left[2] = rotation[2];\r\n        return left;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getLeftLocal = function () {\r\n    let rotation = glMatrix.mat3.create();\r\n    return function (left = glMatrix.vec3.create()) {\r\n        this.pp_getRotationLocalMatrix(rotation);\r\n        left[0] = rotation[0];\r\n        left[1] = rotation[1];\r\n        left[2] = rotation[2];\r\n        return left;\r\n    };\r\n}();\r\n\r\n//Right\r\n\r\nWL.Object.prototype.pp_getRight = function (right) {\r\n    return this.pp_getRightWorld(right);\r\n};\r\n\r\nWL.Object.prototype.pp_getRightWorld = function () {\r\n    let rotation = glMatrix.mat3.create();\r\n    return function (right = glMatrix.vec3.create()) {\r\n        this.pp_getRotationWorldMatrix(rotation);\r\n        right[0] = -rotation[0];\r\n        right[1] = -rotation[1];\r\n        right[2] = -rotation[2];\r\n        return right;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getRightLocal = function () {\r\n    let rotation = glMatrix.mat3.create();\r\n    return function (right = glMatrix.vec3.create()) {\r\n        this.pp_getRotationLocalMatrix(rotation);\r\n        right[0] = -rotation[0];\r\n        right[1] = -rotation[1];\r\n        right[2] = -rotation[2];\r\n        return right;\r\n    };\r\n}();\r\n\r\n//SETTER\r\n\r\n//Position\r\n\r\nWL.Object.prototype.pp_setPosition = function (position) {\r\n    this.pp_setPositionWorld(position);\r\n};\r\n\r\nWL.Object.prototype.pp_setPositionWorld = function (position) {\r\n    this.setTranslationWorld(position);\r\n};\r\n\r\nWL.Object.prototype.pp_setPositionLocal = function (position) {\r\n    this.setTranslationLocal(position);\r\n};\r\n\r\n//Rotation\r\n\r\nWL.Object.prototype.pp_setRotation = function (rotation) {\r\n    this.pp_setRotationWorld(rotation);\r\n};\r\nWL.Object.prototype.pp_setRotationDegrees = function (rotation) {\r\n    this.pp_setRotationWorldDegrees(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_setRotationRadians = function (rotation) {\r\n    this.pp_setRotationWorldRadians(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_setRotationMatrix = function (rotation) {\r\n    this.pp_setRotationWorldMatrix(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_setRotationQuat = function (rotation) {\r\n    this.pp_setRotationWorldQuat(rotation);\r\n};\r\n\r\n//Rotation World\r\n\r\nWL.Object.prototype.pp_setRotationWorld = function (rotation) {\r\n    this.pp_setRotationWorldDegrees(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_setRotationWorldDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        this._pp_degreesToQuaternion(rotation, quat);\r\n        this.pp_setRotationWorldQuat(quat);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_setRotationWorldRadians = function () {\r\n    let degreesRotation = glMatrix.vec3.create();\r\n    return function (rotation) {\r\n        rotation.forEach(function (value, index, array) {\r\n            degreesRotation[index] = this._pp_toDegrees(value);\r\n        }.bind(this));\r\n        this.pp_setRotationWorldDegrees(degreesRotation);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_setRotationWorldMatrix = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        glMatrix.quat.fromMat3(quat, rotation);\r\n        this.pp_setRotationWorldQuat(quat);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_setRotationWorldQuat = function (rotation) {\r\n    this.rotationWorld = rotation;\r\n};\r\n\r\n//Rotation Local\r\n\r\nWL.Object.prototype.pp_setRotationLocal = function (rotation) {\r\n    this.pp_setRotationLocalDegrees(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_setRotationLocalDegrees = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        this._pp_degreesToQuaternion(rotation, quat);\r\n        this.pp_setRotationLocalQuat(quat);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_setRotationLocalRadians = function () {\r\n    let degreesRotation = glMatrix.vec3.create();\r\n    return function (rotation) {\r\n        rotation.forEach(function (value, index, array) {\r\n            degreesRotation[index] = this._pp_toDegrees(value);\r\n        }.bind(this));\r\n        this.pp_setRotationLocalDegrees(degreesRotation);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_setRotationLocalMatrix = function () {\r\n    let quat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        glMatrix.quat.fromMat3(quat, rotation);\r\n        this.pp_setRotationLocalQuat(quat);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_setRotationLocalQuat = function (rotation) {\r\n    this.rotationLocal = rotation;\r\n};\r\n\r\n//Scale\r\n\r\nWL.Object.prototype.pp_setScale = function (scale) {\r\n    this.pp_setScaleWorld(scale);\r\n};\r\n\r\nWL.Object.prototype.pp_setScaleWorld = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function (scale) {\r\n        if (isNaN(scale)) {\r\n            this.scalingWorld = scale;\r\n        } else {\r\n            glMatrix.vec3.set(vector, scale, scale, scale);\r\n            this.scalingWorld = vector;\r\n        }\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_setScaleLocal = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function (scale) {\r\n        if (isNaN(scale)) {\r\n            this.scalingLocal = scale;\r\n        } else {\r\n            glMatrix.vec3.set(vector, scale, scale, scale);\r\n            this.scalingLocal = vector;\r\n        }\r\n    };\r\n}();\r\n\r\n//Transform\r\n\r\nWL.Object.prototype.pp_setTransform = function (transform) {\r\n    this.pp_setTransformWorld(transform);\r\n};\r\n\r\nWL.Object.prototype.pp_setTransformMatrix = function (transform) {\r\n    this.pp_setTransformWorldMatrix(transform);\r\n};\r\n\r\nWL.Object.prototype.pp_setTransformQuat = function (transform) {\r\n    this.pp_setTransformWorldQuat(transform);\r\n};\r\n\r\n//Transform World\r\n\r\nWL.Object.prototype.pp_setTransformWorld = function (transform) {\r\n    return this.pp_setTransformWorldMatrix(transform);\r\n};\r\n\r\nWL.Object.prototype.pp_setTransformWorldMatrix = function () {\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    let scale = glMatrix.vec3.create();\r\n    let transformMatrixNoScale = glMatrix.mat4.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (transform) {\r\n        glMatrix.mat4.getTranslation(position, transform);\r\n        glMatrix.mat4.getScaling(scale, transform);\r\n        glMatrix.vec3.divide(inverseScale, one, scale);\r\n        glMatrix.mat4.scale(transformMatrixNoScale, transform, inverseScale);\r\n        glMatrix.mat4.getRotation(rotation, transformMatrixNoScale);\r\n        glMatrix.quat.normalize(rotation, rotation);\r\n        this.pp_setScaleWorld(scale);\r\n        this.pp_setRotationWorldQuat(rotation);\r\n        this.pp_setPositionWorld(position);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_setTransformWorldQuat = function (transform) {\r\n    this.transformWorld = transform;\r\n};\r\n\r\n//Transform Local\r\n\r\nWL.Object.prototype.pp_setTransformLocal = function (transform) {\r\n    return this.pp_setTransformLocalMatrix(transform);\r\n};\r\n\r\nWL.Object.prototype.pp_setTransformLocalMatrix = function () {\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    let scale = glMatrix.vec3.create();\r\n    let transformMatrixNoScale = glMatrix.mat4.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (transform) {\r\n        glMatrix.mat4.getTranslation(position, transform);\r\n        glMatrix.mat4.getScaling(scale, transform);\r\n        glMatrix.vec3.divide(inverseScale, one, scale);\r\n        glMatrix.mat4.scale(transformMatrixNoScale, transform, inverseScale);\r\n        glMatrix.mat4.getRotation(rotation, transformMatrixNoScale);\r\n        glMatrix.quat.normalize(rotation, rotation);\r\n        this.pp_setScaleLocal(scale);\r\n        this.pp_setRotationLocalQuat(rotation);\r\n        this.pp_setPositionLocal(position);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_setTransformLocalQuat = function (transform) {\r\n    this.transformLocal = transform;\r\n};\r\n\r\n//RESET\r\n\r\n//Position\r\n\r\nWL.Object.prototype.pp_resetPosition = function () {\r\n    this.pp_resetPositionWorld();\r\n};\r\n\r\nWL.Object.prototype.pp_resetPositionWorld = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function () {\r\n        this.pp_setPositionWorld(zero);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_resetPositionLocal = function () {\r\n    let zero = glMatrix.vec3.create();\r\n    return function () {\r\n        this.pp_setPositionLocal(zero);\r\n    };\r\n}();\r\n\r\n//Rotation\r\n\r\nWL.Object.prototype.pp_resetRotation = function () {\r\n    this.pp_resetRotationWorld();\r\n};\r\n\r\nWL.Object.prototype.pp_resetRotationWorld = function () {\r\n    let identity = glMatrix.quat.create();\r\n    return function () {\r\n        this.pp_setRotationWorldQuat(identity);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_resetRotationLocal = function () {\r\n    let identity = glMatrix.quat.create();\r\n    return function () {\r\n        this.pp_setRotationLocalQuat(identity);\r\n    };\r\n}();\r\n\r\n//Scale\r\n\r\nWL.Object.prototype.pp_resetScale = function () {\r\n    this.pp_resetScaleWorld();\r\n};\r\n\r\nWL.Object.prototype.pp_resetScaleWorld = function () {\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function () {\r\n        this.pp_setScaleWorld(one);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_resetScaleLocal = function () {\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function () {\r\n        this.pp_setScaleLocal(one);\r\n    };\r\n}();\r\n\r\n//Transform\r\n\r\nWL.Object.prototype.pp_resetTransform = function () {\r\n    this.pp_resetTransformWorld();\r\n};\r\n\r\nWL.Object.prototype.pp_resetTransformWorld = function () {\r\n    this.pp_resetScaleWorld();\r\n    this.pp_resetRotationWorld();\r\n    this.pp_resetPositionWorld();\r\n};\r\n\r\nWL.Object.prototype.pp_resetTransformLocal = function () {\r\n    this.pp_resetScaleLocal();\r\n    this.pp_resetRotationLocal();\r\n    this.pp_resetPositionLocal();\r\n};\r\n\r\n//TRANSFORMATIONS\r\n\r\n//Translate\r\n\r\nWL.Object.prototype.pp_translate = function (translation) {\r\n    this.pp_translateWorld(translation);\r\n};\r\n\r\nWL.Object.prototype.pp_translateWorld = function (translation) {\r\n    this.translateWorld(translation);\r\n};\r\n\r\nWL.Object.prototype.pp_translateLocal = function (translation) {\r\n    this.translate(translation);\r\n};\r\n\r\nWL.Object.prototype.pp_translateObject = function (translation) {\r\n    this.translateObject(translation);\r\n};\r\n\r\n//Translate Axis\r\n\r\nWL.Object.prototype.pp_translateAxis = function (direction, amount) {\r\n    this.pp_translateAxisWorld(direction, amount);\r\n};\r\n\r\nWL.Object.prototype.pp_translateAxisWorld = function () {\r\n    let translation = glMatrix.vec3.create();\r\n    return function (direction, amount) {\r\n        glMatrix.vec3.scale(translation, direction, amount);\r\n        this.pp_translateWorld(translation);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_translateAxisLocal = function () {\r\n    let translation = glMatrix.vec3.create();\r\n    return function (direction, amount) {\r\n        glMatrix.vec3.scale(translation, direction, amount);\r\n        this.pp_translateLocal(translation);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_translateAxisObject = function () {\r\n    let translation = glMatrix.vec3.create();\r\n    return function (direction, amount) {\r\n        glMatrix.vec3.scale(translation, direction, amount);\r\n        this.pp_translateObject(translation);\r\n    };\r\n}();\r\n\r\n//Rotate\r\n\r\nWL.Object.prototype.pp_rotate = function (rotation) {\r\n    this.pp_rotateWorld(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateDegrees = function (rotation) {\r\n    this.pp_rotateWorldDegrees(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateRadians = function (rotation) {\r\n    this.pp_rotateWorldRadians(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateMatrix = function (rotation) {\r\n    this.pp_rotateWorldMatrix(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateQuat = function (rotation) {\r\n    this.pp_rotateWorldQuat(rotation);\r\n};\r\n\r\n//Rotate World\r\n\r\nWL.Object.prototype.pp_rotateWorld = function (rotation) {\r\n    this.pp_rotateWorldDegrees(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateWorldDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n        this.pp_rotateWorldQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateWorldRadians = function () {\r\n    let degreesRotation = glMatrix.vec3.create();\r\n    return function (rotation) {\r\n        rotation.forEach(function (value, index, array) {\r\n            degreesRotation[index] = this._pp_toDegrees(value);\r\n        }.bind(this));\r\n        this.pp_rotateWorldDegrees(degreesRotation);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateWorldMatrix = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        glMatrix.quat.fromMat3(rotationQuat, rotation);\r\n        glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n        this.pp_rotateWorldQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateWorldQuat = function () {\r\n    let currentRotationQuat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        this.pp_getRotationWorldQuat(currentRotationQuat);\r\n        glMatrix.quat.mul(currentRotationQuat, rotation, currentRotationQuat);\r\n        glMatrix.quat.normalize(currentRotationQuat, currentRotationQuat);\r\n        this.pp_setRotationWorldQuat(currentRotationQuat);\r\n    };\r\n}();\r\n\r\n//Rotate Local\r\n\r\nWL.Object.prototype.pp_rotateLocal = function (rotation) {\r\n    this.pp_rotateLocalDegrees(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateLocalDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n        this.pp_rotateLocalQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateLocalRadians = function () {\r\n    let degreesRotation = glMatrix.vec3.create();\r\n    return function (rotation) {\r\n        rotation.forEach(function (value, index, array) {\r\n            degreesRotation[index] = this._pp_toDegrees(value);\r\n        }.bind(this));\r\n        this.pp_rotateLocalDegrees(degreesRotation);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateLocalMatrix = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        glMatrix.quat.fromMat3(rotationQuat, rotation);\r\n        glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n        this.pp_rotateLocalQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateLocalQuat = function () {\r\n    let currentRotationQuat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        this.pp_getRotationLocalQuat(currentRotationQuat);\r\n        glMatrix.quat.mul(currentRotationQuat, rotation, currentRotationQuat);\r\n        glMatrix.quat.normalize(currentRotationQuat, currentRotationQuat);\r\n        this.pp_setRotationLocalQuat(currentRotationQuat);\r\n    };\r\n}();\r\n\r\n//Rotate Object\r\n\r\nWL.Object.prototype.pp_rotateObject = function (rotation) {\r\n    this.pp_rotateObjectDegrees(rotation);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateObjectDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n        this.pp_rotateObjectQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateObjectRadians = function () {\r\n    let degreesRotation = glMatrix.vec3.create();\r\n    return function (rotation) {\r\n        rotation.forEach(function (value, index, array) {\r\n            degreesRotation[index] = this._pp_toDegrees(value);\r\n        }.bind(this));\r\n        this.pp_rotateObjectDegrees(degreesRotation);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateObjectMatrix = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (rotation) {\r\n        glMatrix.quat.fromMat3(rotationQuat, rotation);\r\n        glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n        this.pp_rotateObjectQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateObjectQuat = function (rotation) {\r\n    this.rotateObject(rotation);\r\n};\r\n\r\n//Rotate Axis\r\n\r\nWL.Object.prototype.pp_rotateAxis = function (angle, axis) {\r\n    this.pp_rotateAxisWorld(angle, axis);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAxisDegrees = function (angle, axis) {\r\n    this.pp_rotateAxisWorldDegrees(angle, axis);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAxisRadians = function (angle, axis) {\r\n    this.pp_rotateAxisWorldRadians(angle, axis);\r\n};\r\n\r\n//Rotate Axis World\r\n\r\nWL.Object.prototype.pp_rotateAxisWorld = function (angle, axis) {\r\n    this.pp_rotateAxisWorldDegrees(angle, axis);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAxisWorldDegrees = function (angle, axis) {\r\n    this.pp_rotateAxisWorldRadians(glMatrix.glMatrix.toRadian(angle), axis);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAxisWorldRadians = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (angle, axis) {\r\n        glMatrix.quat.setAxisAngle(rotation, axis, angle);\r\n        this.pp_rotateWorldQuat(rotation);\r\n    };\r\n}();\r\n\r\n//Rotate Axis Local\r\n\r\nWL.Object.prototype.pp_rotateAxisLocal = function (angle, axis) {\r\n    this.pp_rotateAxisLocalDegrees(angle, axis);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAxisLocalDegrees = function (angle, axis) {\r\n    this.pp_rotateAxisLocalRadians(glMatrix.glMatrix.toRadian(angle), axis);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAxisLocalRadians = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (angle, axis) {\r\n        glMatrix.quat.setAxisAngle(rotation, axis, angle);\r\n        this.pp_rotateLocalQuat(rotation);\r\n    };\r\n}();\r\n\r\n//Rotate Axis Object\r\n\r\nWL.Object.prototype.pp_rotateAxisObject = function (angle, axis) {\r\n    this.pp_rotateAxisObjectDegrees(angle, axis);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAxisObjectDegrees = function (angle, axis) {\r\n    this.pp_rotateAxisObjectRadians(glMatrix.glMatrix.toRadian(angle), axis);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAxisObjectRadians = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (angle, axis) {\r\n        glMatrix.quat.setAxisAngle(rotation, axis, angle);\r\n        this.pp_rotateObjectQuat(rotation);\r\n    };\r\n}();\r\n\r\n//Rotate Around\r\n\r\nWL.Object.prototype.pp_rotateAround = function (rotation, origin) {\r\n    this.pp_rotateAroundWorld(rotation, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundDegrees = function (rotation, origin) {\r\n    this.pp_rotateAroundWorldDegrees(rotation, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundRadians = function (rotation, origin) {\r\n    this.pp_rotateAroundWorldRadians(rotation, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundMatrix = function (rotation, origin) {\r\n    this.pp_rotateAroundWorldMatrix(rotation, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundQuat = function (rotation, origin) {\r\n    this.pp_rotateAroundWorldQuat(rotation, origin);\r\n};\r\n\r\n//Rotate Around World\r\n\r\nWL.Object.prototype.pp_rotateAroundWorld = function (rotation, origin) {\r\n    this.pp_rotateAroundWorldDegrees(rotation, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundWorldDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (rotation, origin) {\r\n        this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n        this.pp_rotateAroundWorldQuat(rotationQuat, origin);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateAroundWorldRadians = function () {\r\n    let degreesRotation = glMatrix.vec3.create();\r\n    return function (rotation, origin) {\r\n        rotation.forEach(function (value, index, array) {\r\n            degreesRotation[index] = this._pp_toDegrees(value);\r\n        }.bind(this));\r\n        this.pp_rotateAroundWorldDegrees(degreesRotation, origin);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateAroundWorldMatrix = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (rotation, origin) {\r\n        glMatrix.quat.fromMat3(rotationQuat, rotation);\r\n        glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n        this.pp_rotateAroundWorldQuat(rotationQuat, origin);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateAroundWorldQuat = function () {\r\n    let axis = glMatrix.vec3.create();\r\n    return function (rotation, origin) {\r\n        let angle = glMatrix.quat.getAxisAngle(axis, rotation);\r\n        this.pp_rotateAroundAxisWorldRadians(angle, axis, origin);\r\n    };\r\n}();\r\n\r\n//Rotate Around Local\r\n\r\nWL.Object.prototype.pp_rotateAroundLocal = function (rotation, origin) {\r\n    this.pp_rotateAroundLocalDegrees(rotation, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundLocalDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (rotation, origin) {\r\n        this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n        this.pp_rotateAroundLocalQuat(rotationQuat, origin);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateAroundLocalRadians = function () {\r\n    let degreesRotation = glMatrix.vec3.create();\r\n    return function (rotation, origin) {\r\n        rotation.forEach(function (value, index, array) {\r\n            degreesRotation[index] = this._pp_toDegrees(value);\r\n        }.bind(this));\r\n        this.pp_rotateAroundLocalDegrees(degreesRotation, origin);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateAroundLocalMatrix = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (rotation, origin) {\r\n        glMatrix.quat.fromMat3(rotationQuat, rotation);\r\n        glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n        this.pp_rotateAroundLocalQuat(rotationQuat, origin);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateAroundLocalQuat = function () {\r\n    let axis = glMatrix.vec3.create();\r\n    return function (rotation, origin) {\r\n        let angle = glMatrix.quat.getAxisAngle(axis, rotation);\r\n        this.pp_rotateAroundAxisLocalRadians(angle, axis, origin);\r\n    };\r\n}();\r\n\r\n//Rotate Around Object\r\n\r\nWL.Object.prototype.pp_rotateAroundObject = function (rotation, origin) {\r\n    this.pp_rotateAroundObjectDegrees(rotation, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundObjectDegrees = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (rotation, origin) {\r\n        this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n        this.pp_rotateAroundObjectQuat(rotationQuat, origin);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateAroundObjectRadians = function () {\r\n    let degreesRotation = glMatrix.vec3.create();\r\n    return function (rotation, origin) {\r\n        rotation.forEach(function (value, index, array) {\r\n            degreesRotation[index] = this._pp_toDegrees(value);\r\n        }.bind(this));\r\n        this.pp_rotateAroundObjectDegrees(degreesRotation, origin);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateAroundObjectMatrix = function () {\r\n    let rotationQuat = glMatrix.quat.create();\r\n    return function (rotation, origin) {\r\n        glMatrix.quat.fromMat3(rotationQuat, rotation);\r\n        glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n        this.pp_rotateAroundObjectQuat(rotationQuat, origin);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_rotateAroundObjectQuat = function () {\r\n    let axis = glMatrix.vec3.create();\r\n    return function (rotation, origin) {\r\n        let angle = glMatrix.quat.getAxisAngle(axis, rotation);\r\n        this.pp_rotateAroundAxisObjectRadians(angle, axis, origin);\r\n    };\r\n}();\r\n\r\n//Rotate Around Axis\r\n\r\nWL.Object.prototype.pp_rotateAroundAxis = function (angle, axis, origin) {\r\n    this.pp_rotateAroundAxisWorld(angle, axis, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundAxisDegrees = function (angle, axis, origin) {\r\n    this.pp_rotateAroundAxisWorldDegrees(angle, axis, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundAxisRadians = function (angle, axis, origin) {\r\n    this.pp_rotateAroundAxisWorldRadians(angle, axis, origin);\r\n};\r\n\r\n//Rotate Around Axis World\r\n\r\nWL.Object.prototype.pp_rotateAroundAxisWorld = function (angle, axis, origin) {\r\n    this.pp_rotateAroundAxisWorldDegrees(angle, axis, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundAxisWorldDegrees = function (angle, axis, origin) {\r\n    this.pp_rotateAroundAxisWorldRadians(glMatrix.glMatrix.toRadian(angle), axis, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundAxisWorldRadians = function () {\r\n    let transformToRotate = glMatrix.quat2.create();\r\n    let transformToRotateConjugate = glMatrix.quat2.create();\r\n    let transformQuat = glMatrix.quat2.create();\r\n    let defaultQuat = glMatrix.quat.create();\r\n    return function (angle, axis, origin) {\r\n        glMatrix.quat2.fromRotationTranslation(transformToRotate, defaultQuat, origin);\r\n        this.pp_getTransformWorldQuat(transformQuat);\r\n        glMatrix.quat2.conjugate(transformToRotateConjugate, transformToRotate);\r\n        glMatrix.quat2.mul(transformQuat, transformToRotateConjugate, transformQuat);\r\n        glMatrix.quat2.rotateAroundAxis(transformToRotate, transformToRotate, axis, angle);\r\n        glMatrix.quat2.mul(transformQuat, transformToRotate, transformQuat);\r\n        this.pp_setTransformWorldQuat(transformQuat);\r\n    };\r\n}();\r\n\r\n//Rotate Around Axis Local\r\n\r\nWL.Object.prototype.pp_rotateAroundAxisLocal = function (angle, axis, origin) {\r\n    this.pp_rotateAroundAxisLocalDegrees(angle, axis, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundAxisLocalDegrees = function (angle, axis, origin) {\r\n    this.pp_rotateAroundAxisLocalRadians(glMatrix.glMatrix.toRadian(angle), axis, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundAxisLocalRadians = function () {\r\n    let convertedPosition = glMatrix.vec3.create();\r\n    let convertedAxis = glMatrix.vec3.create();\r\n    return function (angle, axis, origin) {\r\n        this.pp_convertPositionLocalToWorld(origin, convertedPosition);\r\n        this.pp_convertDirectionLocalToWorld(axis, convertedAxis);\r\n        this.pp_rotateAroundAxisWorldRadians(angle, convertedAxis, convertedPosition);\r\n    };\r\n}();\r\n\r\n//Rotate Around Axis Object\r\n\r\nWL.Object.prototype.pp_rotateAroundAxisObject = function (angle, axis, origin) {\r\n    this.pp_rotateAroundAxisObjectDegrees(angle, axis, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundAxisObjectDegrees = function (angle, axis, origin) {\r\n    this.pp_rotateAroundAxisObjectRadians(glMatrix.glMatrix.toRadian(angle), axis, origin);\r\n};\r\n\r\nWL.Object.prototype.pp_rotateAroundAxisObjectRadians = function () {\r\n    let convertedPosition = glMatrix.vec3.create();\r\n    let convertedAxis = glMatrix.vec3.create();\r\n    return function (angle, axis, origin) {\r\n        this.pp_convertPositionObjectToWorld(origin, convertedPosition);\r\n        this.pp_convertDirectionObjectToWorld(axis, convertedAxis);\r\n        this.pp_rotateAroundAxisWorldRadians(angle, convertedAxis, convertedPosition);\r\n    };\r\n}();\r\n\r\n//Scale\r\n\r\n//For now it does not really make sense in wle to scale in world space or parent space\r\n//so there is no pp_scale default function\r\n\r\nWL.Object.prototype.pp_scaleObject = function () {\r\n    let vector = glMatrix.vec3.create();\r\n    return function (scale) {\r\n        if (isNaN(scale)) {\r\n            this.scale(scale);\r\n        } else {\r\n            glMatrix.vec3.set(vector, scale, scale, scale);\r\n            this.scale(vector);\r\n        }\r\n    };\r\n}();\r\n\r\n//Look At\r\n\r\nWL.Object.prototype.pp_lookAt = function (position, up) {\r\n    this.pp_lookAtWorld(position, up);\r\n};\r\n\r\nWL.Object.prototype.pp_lookAtWorld = function () {\r\n    let direction = glMatrix.vec3.create();\r\n    return function (position, up) {\r\n        this.pp_getPositionWorld(direction);\r\n        glMatrix.vec3.sub(direction, position, direction);\r\n        this.pp_lookToWorld(direction, up);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_lookAtLocal = function () {\r\n    let direction = glMatrix.vec3.create();\r\n    return function (position, up) {\r\n        this.pp_getPositionLocal(direction);\r\n        glMatrix.vec3.sub(direction, position, direction);\r\n        this.pp_lookToLocal(direction, up);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_lookTo = function (direction, up) {\r\n    this.pp_lookToWorld(direction, up);\r\n};\r\n\r\nWL.Object.prototype.pp_lookToWorld = function () {\r\n    let internalUp = glMatrix.vec3.create();\r\n    let currentPosition = glMatrix.vec3.create();\r\n    let targetPosition = glMatrix.vec3.create();\r\n    let targetToMatrix = glMatrix.mat4.create();\r\n    let rotation = glMatrix.quat.create();\r\n    return function (direction, up = this.pp_getUpWorld(internalUp)) {\r\n        glMatrix.vec3.copy(internalUp, up); //to avoid changing the forwarded up\r\n        let angle = glMatrix.vec3.angle(direction, internalUp);\r\n        if (angle < this._pp_epsilon || angle > Math.PI - this._pp_epsilon) {\r\n            //direction and up are too similar, trying with the default up\r\n            this.pp_getUpWorld(internalUp);\r\n            angle = glMatrix.vec3.angle(direction, internalUp);\r\n            if (angle < this._pp_epsilon || angle > Math.PI - this._pp_epsilon) {\r\n                //this means we want the forward to become up, so getting forward as the up\r\n                this.pp_getForwardWorld(internalUp);\r\n                if (angle < this._pp_epsilon) {\r\n                    glMatrix.vec3.negate(internalUp, internalUp);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.pp_getPositionWorld(currentPosition);\r\n        glMatrix.vec3.add(targetPosition, currentPosition, direction);\r\n        glMatrix.mat4.targetTo(targetToMatrix, targetPosition, currentPosition, internalUp);\r\n        glMatrix.mat4.getRotation(rotation, targetToMatrix);\r\n        glMatrix.quat.normalize(rotation, rotation);\r\n\r\n        this.pp_setRotationWorldQuat(rotation);\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_lookToLocal = function () {\r\n    let internalUp = glMatrix.vec3.create();\r\n    let currentPosition = glMatrix.vec3.create();\r\n    let targetPosition = glMatrix.vec3.create();\r\n    let targetToMatrix = glMatrix.mat4.create();\r\n    let rotation = glMatrix.quat.create();\r\n    return function (direction, up = this.pp_getUpLocal(internalUp)) {\r\n        glMatrix.vec3.copy(internalUp, up); //to avoid changing the forwarded up\r\n        let angle = glMatrix.vec3.angle(direction, internalUp);\r\n        if (angle < this._pp_epsilon || angle > Math.PI - this._pp_epsilon) {\r\n            //direction and up are too similar, trying with the default up\r\n            this.pp_getUpLocal(internalUp);\r\n            angle = glMatrix.vec3.angle(direction, internalUp);\r\n            if (angle < this._pp_epsilon || angle > Math.PI - this._pp_epsilon) {\r\n                //this means we want the forward to become up, so getting forward as the up\r\n                this.pp_getForwardLocal(internalUp);\r\n                if (angle < this._pp_epsilon) {\r\n                    glMatrix.vec3.negate(internalUp, internalUp);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.pp_getPositionLocal(currentPosition);\r\n        glMatrix.vec3.add(targetPosition, currentPosition, direction);\r\n        glMatrix.mat4.targetTo(targetToMatrix, targetPosition, currentPosition, internalUp);\r\n        glMatrix.mat4.getRotation(rotation, targetToMatrix);\r\n        glMatrix.quat.normalize(rotation, rotation);\r\n\r\n        this.pp_setRotationLocalQuat(rotation);\r\n    };\r\n}();\r\n\r\n//EXTRA\r\n\r\n//Parent\r\n\r\nWL.Object.prototype.pp_setParent = function () {\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    let scale = glMatrix.vec3.create();\r\n    return function (newParent, keepTransform = true) {\r\n        if (!keepTransform) {\r\n            this.parent = newParent;\r\n        } else {\r\n            this.pp_getPositionWorld(position);\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            this.pp_getScaleWorld(scale);\r\n            this.parent = newParent;\r\n            this.pp_setScaleWorld(scale);\r\n            this.pp_setRotationWorldQuat(rotation);\r\n            this.pp_setPositionWorld(position);\r\n        }\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_getParent = function () {\r\n    return this.parent;\r\n};\r\n\r\n//Convert Vector Object World\r\n\r\nWL.Object.prototype.pp_convertPositionObjectToWorld = function () {\r\n    let matrix = glMatrix.mat4.create();\r\n    return function (position, resultPosition = glMatrix.vec3.create()) {\r\n        this.pp_getTransformWorldMatrix(matrix);\r\n        glMatrix.vec3.transformMat4(resultPosition, position, matrix);\r\n        return resultPosition;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_convertDirectionObjectToWorld = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (direction, resultDirection = glMatrix.vec3.create()) {\r\n        this.pp_getRotationWorldQuat(rotation);\r\n        glMatrix.vec3.transformQuat(resultDirection, direction, rotation);\r\n        return resultDirection;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_convertPositionWorldToObject = function () {\r\n    let matrix = glMatrix.mat4.create();\r\n    return function (position, resultPosition = glMatrix.vec3.create()) {\r\n        this.pp_getTransformWorldMatrix(matrix);\r\n        glMatrix.mat4.invert(matrix, matrix);\r\n        glMatrix.vec3.transformMat4(resultPosition, position, matrix);\r\n        return resultPosition;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_convertDirectionWorldToObject = function () {\r\n    let rotation = glMatrix.quat.create();\r\n    return function (direction, resultDirection = glMatrix.vec3.create()) {\r\n        this.pp_getRotationWorldQuat(rotation);\r\n        glMatrix.quat.conjugate(rotation, rotation);\r\n        glMatrix.vec3.transformQuat(resultDirection, direction, rotation);\r\n        return resultDirection;\r\n    };\r\n}();\r\n\r\n//Convert Vector Local World\r\n\r\nWL.Object.prototype.pp_convertPositionLocalToWorld = function (position, resultPosition = glMatrix.vec3.create()) {\r\n    if (this.pp_getParent()) {\r\n        this.pp_getParent().pp_convertPositionObjectToWorld(position, resultPosition);\r\n    } else {\r\n        glMatrix.vec3.copy(resultPosition, position);\r\n    }\r\n    return resultPosition;\r\n};\r\n\r\nWL.Object.prototype.pp_convertDirectionLocalToWorld = function (direction, resultDirection = glMatrix.vec3.create()) {\r\n    if (this.pp_getParent()) {\r\n        this.pp_getParent().pp_convertDirectionObjectToWorld(direction, resultDirection);\r\n    } else {\r\n        glMatrix.vec3.copy(resultDirection, direction);\r\n    }\r\n    return resultDirection;\r\n};\r\n\r\nWL.Object.prototype.pp_convertPositionWorldToLocal = function (position, resultPosition = glMatrix.vec3.create()) {\r\n    if (this.pp_getParent()) {\r\n        this.pp_getParent().pp_convertPositionWorldToObject(position, resultPosition);\r\n    } else {\r\n        glMatrix.vec3.copy(resultPosition, position);\r\n    }\r\n    return resultPosition;\r\n};\r\n\r\nWL.Object.prototype.pp_convertDirectionWorldToLocal = function (direction, resultDirection = glMatrix.vec3.create()) {\r\n    if (this.pp_getParent()) {\r\n        this.pp_getParent().pp_convertDirectionWorldToObject(direction, resultDirection);\r\n    } else {\r\n        glMatrix.vec3.copy(resultDirection, direction);\r\n    }\r\n    return resultDirection;\r\n};\r\n\r\n//Convert Vector Local Object\r\n\r\n//I need to use the converson to world and then local also use the parent scale that changes the position in local space\r\n\r\nWL.Object.prototype.pp_convertPositionObjectToLocal = function (position, resultPosition = glMatrix.vec3.create()) {\r\n    this.pp_convertPositionObjectToWorld(position, resultPosition);\r\n    this.pp_convertPositionWorldToLocal(resultPosition, resultPosition);\r\n    return resultPosition;\r\n};\r\n\r\nWL.Object.prototype.pp_convertDirectionObjectToLocal = function (direction, resultDirection = glMatrix.vec3.create()) {\r\n    this.pp_convertDirectionObjectToWorld(direction, resultDirection);\r\n    this.pp_convertDirectionWorldToLocal(resultDirection, resultDirection);\r\n    return resultDirection;\r\n};\r\n\r\nWL.Object.prototype.pp_convertPositionLocalToObject = function (position, resultPosition = glMatrix.vec3.create()) {\r\n    this.pp_convertPositionLocalToWorld(position, resultPosition);\r\n    this.pp_convertPositionWorldToObject(resultPosition, resultPosition);\r\n    return resultPosition;\r\n};\r\n\r\nWL.Object.prototype.pp_convertDirectionLocalToObject = function (direction, resultDirection = glMatrix.vec3.create()) {\r\n    this.pp_convertDirectionLocalToWorld(direction, resultDirection);\r\n    this.pp_convertDirectionWorldToObject(resultDirection, resultDirection);\r\n    return resultDirection;\r\n};\r\n\r\n//Convert Transform Object World\r\n\r\nWL.Object.prototype.pp_convertTransformObjectToWorld = function (transform, resultTransform) {\r\n    return this.pp_convertTransformObjectToWorldMatrix(transform, resultTransform);\r\n};\r\n\r\nWL.Object.prototype.pp_convertTransformObjectToWorldMatrix = function () {\r\n    let convertTransform = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let scale = glMatrix.vec3.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (transform, resultTransform = glMatrix.mat4.create()) {\r\n        this.pp_getTransformWorldMatrix(convertTransform);\r\n        if (this.pp_hasUniformScaleWorld()) {\r\n            glMatrix.mat4.mul(resultTransform, convertTransform, transform);\r\n        } else {\r\n            glMatrix.vec3.set(position, transform[12], transform[13], transform[14]);\r\n            this.pp_convertPositionObjectToWorld(position, position);\r\n\r\n            glMatrix.mat4.getScaling(scale, convertTransform);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(convertTransform, convertTransform, inverseScale);\r\n\r\n            glMatrix.mat4.mul(resultTransform, convertTransform, transform);\r\n            glMatrix.mat4.scale(resultTransform, resultTransform, scale);\r\n\r\n            resultTransform[12] = position[0];\r\n            resultTransform[13] = position[1];\r\n            resultTransform[14] = position[2];\r\n            resultTransform[15] = 1;\r\n        }\r\n        return resultTransform;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_convertTransformObjectToWorldQuat = function () {\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    return function (transform, resultTransform = glMatrix.quat2.create()) {\r\n        this.pp_getRotationWorldQuat(rotation);\r\n        glMatrix.quat.mul(rotation, rotation, transform);\r\n        glMatrix.quat2.getTranslation(position, transform);\r\n        this.pp_convertPositionObjectToWorld(position, position);\r\n        glMatrix.quat2.fromRotationTranslation(resultTransform, rotation, position);\r\n        return resultTransform;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_convertTransformWorldToObject = function (transform, resultTransform) {\r\n    return this.pp_convertTransformWorldToObjectMatrix(transform, resultTransform);\r\n};\r\n\r\nWL.Object.prototype.pp_convertTransformWorldToObjectMatrix = function () {\r\n    let convertTransform = glMatrix.mat4.create();\r\n    let position = glMatrix.vec3.create();\r\n    let scale = glMatrix.vec3.create();\r\n    let inverseScale = glMatrix.vec3.create();\r\n    let one = glMatrix.vec3.create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function (transform, resultTransform = glMatrix.mat4.create()) {\r\n        this.pp_getTransformWorldMatrix(convertTransform);\r\n        if (this.pp_hasUniformScaleWorld()) {\r\n            glMatrix.mat4.invert(convertTransform, convertTransform);\r\n            glMatrix.mat4.mul(resultTransform, convertTransform, transform);\r\n        } else {\r\n            glMatrix.vec3.set(position, transform[12], transform[13], transform[14]);\r\n            this.pp_convertPositionWorldToObject(position, position);\r\n\r\n            glMatrix.mat4.getScaling(scale, convertTransform);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(convertTransform, convertTransform, inverseScale);\r\n\r\n            glMatrix.mat4.invert(convertTransform, convertTransform);\r\n            glMatrix.mat4.mul(resultTransform, convertTransform, transform);\r\n            glMatrix.mat4.scale(resultTransform, resultTransform, inverseScale);\r\n\r\n            resultTransform[12] = position[0];\r\n            resultTransform[13] = position[1];\r\n            resultTransform[14] = position[2];\r\n            resultTransform[15] = 1;\r\n        }\r\n        return resultTransform;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_convertTransformWorldToObjectQuat = function () {\r\n    let position = glMatrix.vec3.create();\r\n    let rotation = glMatrix.quat.create();\r\n    return function (transform, resultTransform = glMatrix.quat2.create()) {\r\n        this.pp_getRotationWorldQuat(rotation);\r\n        glMatrix.quat.conjugate(rotation, rotation);\r\n        glMatrix.quat.mul(rotation, rotation, transform);\r\n        glMatrix.quat2.getTranslation(position, transform);\r\n        this.pp_convertPositionWorldToObject(position, position);\r\n        glMatrix.quat2.fromRotationTranslation(resultTransform, rotation, position);\r\n        return resultTransform;\r\n    };\r\n}();\r\n\r\n//Convert Transform Local World\r\n\r\nWL.Object.prototype.pp_convertTransformLocalToWorld = function (transform, resultTransform) {\r\n    return this.pp_convertTransformLocalToWorldMatrix(transform, resultTransform);\r\n};\r\n\r\nWL.Object.prototype.pp_convertTransformLocalToWorldMatrix = function (transform, resultTransform = glMatrix.mat4.create()) {\r\n    if (this.pp_getParent()) {\r\n        this.pp_getParent().pp_convertTransformObjectToWorldMatrix(transform, resultTransform);\r\n    } else {\r\n        glMatrix.mat4.copy(resultTransform, transform);\r\n    }\r\n    return resultTransform;\r\n};\r\n\r\nWL.Object.prototype.pp_convertTransformLocalToWorldQuat = function (transform, resultTransform = glMatrix.quat2.create()) {\r\n    if (this.pp_getParent()) {\r\n        this.pp_getParent().pp_convertTransformObjectToWorldQuat(transform, resultTransform);\r\n    } else {\r\n        glMatrix.quat2.copy(resultTransform, transform);\r\n    }\r\n    return resultTransform;\r\n};\r\n\r\nWL.Object.prototype.pp_convertTransformWorldToLocal = function (transform, resultTransform) {\r\n    return this.pp_convertTransformWorldToLocalMatrix(transform, resultTransform);\r\n};\r\n\r\nWL.Object.prototype.pp_convertTransformWorldToLocalMatrix = function (transform, resultTransform = glMatrix.mat4.create()) {\r\n    if (this.pp_getParent()) {\r\n        this.pp_getParent().pp_convertTransformWorldToObjectMatrix(transform, resultTransform);\r\n    } else {\r\n        glMatrix.mat4.copy(resultTransform, transform);\r\n    }\r\n    return resultTransform;\r\n};\r\n\r\nWL.Object.prototype.pp_convertTransformWorldToLocalQuat = function (transform, resultTransform = glMatrix.quat2.create()) {\r\n    if (this.pp_getParent()) {\r\n        this.pp_getParent().pp_convertTransformWorldToObjectQuat(transform, resultTransform);\r\n    } else {\r\n        glMatrix.quat2.copy(resultTransform, transform);\r\n    }\r\n    return resultTransform;\r\n};\r\n\r\n//Convert Transform Object Local\r\n\r\n//I need to use the converson to world and then local also use the parent scale that changes the position in local space\r\n\r\nWL.Object.prototype.pp_convertTransformObjectToLocal = function (transform, resultTransform) {\r\n    return this.pp_convertTransformObjectToLocalMatrix(transform, resultTransform);\r\n};\r\n\r\nWL.Object.prototype.pp_convertTransformObjectToLocalMatrix = function (transform, resultTransform = glMatrix.mat4.create()) {\r\n    this.pp_convertTransformObjectToWorldMatrix(transform, resultTransform);\r\n    this.pp_convertTransformWorldToLocalMatrix(resultTransform, resultTransform);\r\n    return resultTransform;\r\n};\r\n\r\nWL.Object.prototype.pp_convertTransformObjectToLocalQuat = function (transform, resultTransform = glMatrix.quat2.create()) {\r\n    this.pp_convertTransformObjectToWorldQuat(transform, resultTransform);\r\n    this.pp_convertTransformWorldToLocalQuat(resultTransform, resultTransform);\r\n    return resultTransform;\r\n};\r\n\r\nWL.Object.prototype.pp_convertTransformLocalToObject = function (transform, resultTransform) {\r\n    return this.pp_convertTransformLocalToObjectMatrix(transform, resultTransform);\r\n};\r\n\r\nWL.Object.prototype.pp_convertTransformLocalToObjectMatrix = function (transform, resultTransform = glMatrix.mat4.create()) {\r\n    this.pp_convertTransformLocalToWorldMatrix(transform, resultTransform);\r\n    this.pp_convertTransformWorldToObjectMatrix(resultTransform, resultTransform);\r\n    return resultTransform;\r\n};\r\n\r\nWL.Object.prototype.pp_convertTransformLocalToObjectQuat = function (transform, resultTransform = glMatrix.quat2.create()) {\r\n    this.pp_convertTransformLocalToWorldQuat(transform, resultTransform);\r\n    this.pp_convertTransformWorldToObjectQuat(resultTransform, resultTransform);\r\n    return resultTransform;\r\n};\r\n\r\n//Component\r\n\r\nWL.Object.prototype.pp_addComponent = function (type, paramsOrActive, active = null) {\r\n    let params = null;\r\n\r\n    if (typeof paramsOrActive == \"boolean\") {\r\n        params = {};\r\n        params[\"active\"] = paramsOrActive;\r\n    } else {\r\n        params = paramsOrActive;\r\n\r\n        if (active != null) {\r\n            if (params == null) {\r\n                params = {};\r\n            }\r\n            params[\"active\"] = active;\r\n        }\r\n    }\r\n\r\n    return this.addComponent(type, params);\r\n};\r\n\r\nWL.Object.prototype.pp_getComponent = function (type, index) {\r\n    return this.getComponent(type, index);\r\n};\r\n\r\nWL.Object.prototype.pp_getComponents = function (type) {\r\n    return this.getComponents(type);\r\n};\r\n\r\nWL.Object.prototype.pp_getComponentHierarchy = function (type, index) {\r\n    let component = this.getComponent(type, index);\r\n\r\n    if (!component) {\r\n        component = this.pp_getComponentDescendants(type, index);\r\n    }\r\n\r\n    return component;\r\n};\r\n\r\nWL.Object.prototype.pp_getComponentDescendants = function (type, index) {\r\n    let component = null;\r\n\r\n    let descendants = this.children;\r\n    while (!component && descendants.length > 0) {\r\n        let descendant = descendants.shift();\r\n        component = descendant.getComponent(type, index);\r\n        if (!component) {\r\n            for (let object of descendant.children) {\r\n                descendants.push(object);\r\n            }\r\n        }\r\n    }\r\n\r\n    return component;\r\n};\r\nWL.Object.prototype.pp_getComponentChildren = function (type, index) {\r\n    let component = null;\r\n\r\n    let children = this.children;\r\n    for (let child of children) {\r\n        component = child.getComponent(type, index);\r\n        if (component) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return component;\r\n};\r\n\r\nWL.Object.prototype.pp_getComponentsHierarchy = function (type) {\r\n    let components = this.getComponents(type);\r\n\r\n    let descendantsComponents = this.pp_getComponentsDescendants(type);\r\n    for (let component of descendantsComponents) {\r\n        components.push(component);\r\n    }\r\n\r\n    return components;\r\n};\r\n\r\nWL.Object.prototype.pp_getComponentsDescendants = function (type) {\r\n    let components = [];\r\n\r\n    let descendants = this.children;\r\n    while (descendants.length > 0) {\r\n        let descendant = descendants.shift();\r\n        let descendantComponents = descendant.getComponents(type);\r\n        for (let component of descendantComponents) {\r\n            components.push(component);\r\n        }\r\n        for (let object of descendant.children) {\r\n            descendants.push(object);\r\n        }\r\n    }\r\n\r\n    return components;\r\n};\r\n\r\nWL.Object.prototype.pp_getComponentsChildren = function (type) {\r\n    let components = [];\r\n\r\n    let children = this.children;\r\n    for (let child of children) {\r\n        let childComponents = child.getComponents(type);\r\n        for (let component of childComponents) {\r\n            components.push(component);\r\n        }\r\n    }\r\n\r\n    return components;\r\n};\r\n\r\n//Active\r\n\r\nWL.Object.prototype.pp_setActive = function (active, applyToHierarchy = true) {\r\n    if (applyToHierarchy) {\r\n        this.pp_setActiveHierarchy(active);\r\n    } else {\r\n        this.active = active;\r\n    }\r\n};\r\n\r\nWL.Object.prototype.pp_setActiveHierarchy = function (active) {\r\n    this.active = active;\r\n    this.pp_setActiveDescendants(active);\r\n};\r\n\r\nWL.Object.prototype.pp_setActiveDescendants = function (active) {\r\n    let descendants = this.children;\r\n    while (descendants.length > 0) {\r\n        let descendant = descendants.shift();\r\n        descendant.active = active;\r\n        for (let object of descendant.children) {\r\n            descendants.push(object);\r\n        }\r\n    }\r\n};\r\n\r\nWL.Object.prototype.pp_setActiveChildren = function (active) {\r\n    let children = this.children;\r\n    for (let child of children) {\r\n        child.active = active;\r\n    }\r\n};\r\n\r\n//Uniform Scale\r\n\r\nWL.Object.prototype.pp_hasUniformScale = function () {\r\n    return this.pp_hasUniformScaleWorld();\r\n};\r\n\r\nWL.Object.prototype.pp_hasUniformScaleWorld = function () {\r\n    let scale = glMatrix.vec3.create();\r\n    return function () {\r\n        this.pp_getScaleWorld(scale);\r\n        return Math.abs(scale[0] - scale[1]) < this._pp_epsilon && Math.abs(scale[1] - scale[2]) < this._pp_epsilon && Math.abs(scale[0] - scale[2]) < this._pp_epsilon;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype.pp_hasUniformScaleLocal = function () {\r\n    let scale = glMatrix.vec3.create();\r\n    return function () {\r\n        this.pp_getScaleLocal(scale);\r\n        return Math.abs(scale[0] - scale[1]) < this._pp_epsilon && Math.abs(scale[1] - scale[2]) < this._pp_epsilon && Math.abs(scale[0] - scale[2]) < this._pp_epsilon;\r\n    };\r\n}();\r\n\r\n//Clone\r\n\r\nif (!PP) {\r\n    var PP = {};\r\n}\r\n\r\nPP.CloneParams = class CloneParams {\r\n    constructor() {\r\n        this.myIgnoreNonCloneable = false; // Ignores components that are not clonable\r\n        this.myIgnoreComponents = false; // All components are ignored, cloning only the object hierarchy\r\n        this.myIgnoreChildren = false; // Clones only the given object without the children\r\n\r\n        this.myComponentsToIgnore = []; // Ignores all component types in this list (example: \"mesh\"), has lower priority over myComponentsToInclude\r\n        this.myComponentsToInclude = []; // Clones only the component types in this list (example: \"mesh\"), has higher priority over myComponentsToIgnore, if empty it's ignored\r\n        this.myIgnoreComponentCallback = null; // Signature: callback(component) returns true if the component must be ignored, it is called after the previous filters\r\n\r\n        this.myChildrenToIgnore = []; // Ignores all the objects in this list (example: \"mesh\"), has lower priority over myChildrenToInclude\r\n        this.myChildrenToInclude = []; // Clones only the objects in this list (example: \"mesh\"), has higher priority over myChildrenToIgnore, if empty it's ignored\r\n        this.myIgnoreChildCallback = null; // Signature: callback(object) returns true if the object must be ignored, it is called after the previous filters\r\n\r\n        this.myDeepCloneParams = new PP.DeepCloneParams(); // Used to specify if the object must be deep cloned or not, you can also override the behavior for specific components and variables\r\n\r\n        this.myExtraData = new Map(); // This map can be filled with whatever extra data the component clone function could need\r\n    }\r\n};\r\n\r\nPP.DeepCloneParams = class DeepCloneParams {\r\n    constructor() {\r\n        this._myDeepCloneObject = false;\r\n        this._myOverrideDeepCloneComponentMap = new Map();\r\n        this._myOverrideDeepCloneComponentVariableMap = new Map();\r\n    }\r\n\r\n    // The implementation is component dependant, not every component implements the deep clone\r\n    deepCloneObject(deepClone) {\r\n        this._myDeepCloneObject = deepClone;\r\n    }\r\n\r\n    // This value override the deep clone object value\r\n    // The implementation is component dependant, not every component implements the deep clone\r\n    deepCloneComponent(componentName, deepClone) {\r\n        this._myOverrideDeepCloneComponentMap.set(componentName, deepClone);\r\n    }\r\n\r\n    // This value override both the deep clone object value and the deep clone component one\r\n    // The implementation is component dependant, not every component variable override is taken into consideration\r\n    deepCloneComponentVariable(componentName, variableName, deepClone) {\r\n        let componentMap = null;\r\n\r\n        if (!this._myOverrideDeepCloneComponentVariableMap.has(componentName)) {\r\n            this._myOverrideDeepCloneComponentVariableMap.set(componentName, new Map());\r\n        }\r\n\r\n        componentMap = this._myOverrideDeepCloneComponentVariableMap.get(componentName);\r\n\r\n        componentMap.set(variableName, deepClone);\r\n    }\r\n\r\n    shouldDeepCloneComponent(componentName) {\r\n        let overrideValue = this._myOverrideDeepCloneComponentMap.get(componentName);\r\n\r\n        if (overrideValue != null) {\r\n            return overrideValue;\r\n        }\r\n\r\n        return this._myDeepCloneObject;\r\n    }\r\n\r\n    shouldDeepCloneComponentVariable(componentName, variableName) {\r\n        let componentMap = this._myOverrideDeepCloneComponentVariableMap.get(componentName);\r\n        if (componentMap != null) {\r\n            let overrideValue = componentMap.get(variableName);\r\n            if (overrideValue != null) {\r\n                return overrideValue;\r\n            }\r\n        }\r\n\r\n        return this.shouldDeepCloneComponent(componentName);\r\n    }\r\n};\r\n\r\nWL.Object.prototype.pp_clone = function (params = new PP.CloneParams()) {\r\n    let clonedObject = null;\r\n\r\n    if (this.pp_isCloneable(params)) {\r\n        let objectsToCloneData = [];\r\n        objectsToCloneData.push([this.parent, this]);\r\n\r\n        //Create object hierarchy\r\n        let objectsToCloneComponentsData = [];\r\n        while (objectsToCloneData.length > 0) {\r\n            let cloneData = objectsToCloneData.shift();\r\n            let parent = cloneData[0];\r\n            let objectToClone = cloneData[1];\r\n\r\n            let currentClonedObject = WL.scene.addObject(parent);\r\n            currentClonedObject.name = objectToClone.name.slice(0);\r\n\r\n            currentClonedObject.pp_setScaleLocal(objectToClone.pp_getScaleLocal());\r\n            currentClonedObject.pp_setTransformLocalQuat(objectToClone.pp_getTransformLocalQuat());\r\n\r\n            if (!params.myIgnoreComponents) {\r\n                objectsToCloneComponentsData.push([objectToClone, currentClonedObject]);\r\n            }\r\n\r\n            if (!params.myIgnoreChildren) {\r\n                for (let child of objectToClone.children) {\r\n                    let cloneChild = false;\r\n                    if (params.myChildrenToInclude.length > 0) {\r\n                        cloneChild = params.myChildrenToInclude.find(childToInclude => childToInclude.pp_equals(child)) != null;\r\n                    } else {\r\n                        cloneChild = params.myChildrenToIgnore.find(childToIgnore => childToIgnore.pp_equals(child)) == null;\r\n                    }\r\n\r\n                    if (cloneChild && params.myIgnoreChildCallback != null) {\r\n                        cloneChild = !params.myIgnoreChildCallback(child);\r\n                    }\r\n\r\n                    if (cloneChild) {\r\n                        objectsToCloneData.push([currentClonedObject, child]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (clonedObject == null) {\r\n                clonedObject = currentClonedObject;\r\n            }\r\n        }\r\n\r\n        //Create components\r\n        let componentsToCloneData = [];\r\n        while (objectsToCloneComponentsData.length > 0) {\r\n            let cloneData = objectsToCloneComponentsData.shift();\r\n            let objectToClone = cloneData[0];\r\n            let currentClonedObject = cloneData[1];\r\n\r\n            let components = objectToClone.pp_getComponents();\r\n            for (let component of components) {\r\n                if (component.pp_clone != null) {\r\n                    let cloneComponent = false;\r\n                    if (params.myComponentsToInclude.length > 0) {\r\n                        cloneComponent = params.myComponentsToInclude.indexOf(component.type) != -1;\r\n                    } else {\r\n                        cloneComponent = params.myComponentsToIgnore.indexOf(component.type) == -1;\r\n                    }\r\n\r\n                    if (cloneComponent && params.myIgnoreComponentCallback != null) {\r\n                        cloneComponent = !params.myIgnoreComponentCallback(component);\r\n                    }\r\n\r\n                    if (cloneComponent) {\r\n                        //Not managing the fact that inactive components from editor haven't called start yet, but clones do, since there is no way to know\r\n                        let clonedComponent = currentClonedObject.pp_addComponent(component.type);\r\n                        clonedComponent.active = component.active;\r\n                        componentsToCloneData.push([component, clonedComponent]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //Now that all the hierarchy is completed (with components) we can clone them\r\n        while (componentsToCloneData.length > 0) {\r\n            let cloneData = componentsToCloneData.shift();\r\n            let componentToClone = cloneData[0];\r\n            let currentClonedComponent = cloneData[1];\r\n\r\n            componentToClone.pp_clone(currentClonedComponent, params.myDeepCloneParams, params.myExtraData);\r\n        }\r\n    }\r\n\r\n    return clonedObject;\r\n};\r\n\r\nWL.Object.prototype.pp_isCloneable = function (params = new PP.CloneParams()) {\r\n    if (params.myIgnoreNonCloneable || params.myIgnoreComponents) {\r\n        return true;\r\n    }\r\n\r\n    let isCloneable = true;\r\n\r\n    let objects = [];\r\n    objects.push(this);\r\n\r\n    while (isCloneable && objects.length > 0) {\r\n        let object = objects.shift();\r\n\r\n        let components = this.pp_getComponents();\r\n        for (let component of components) {\r\n            let cloneComponent = false;\r\n            if (params.myComponentsToInclude.length > 0) {\r\n                cloneComponent = params.myComponentsToInclude.indexOf(component.type) != -1;\r\n            } else {\r\n                cloneComponent = params.myComponentsToIgnore.indexOf(component.type) == -1;\r\n            }\r\n\r\n            if (cloneComponent && params.myIgnoreComponentCallback != null) {\r\n                cloneComponent = !params.myIgnoreComponentCallback(component);\r\n            }\r\n\r\n            if (cloneComponent && component.pp_clone == null) {\r\n                isCloneable = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isCloneable && !params.myIgnoreChildren) {\r\n            for (let child of object.children) {\r\n                let cloneChild = false;\r\n                if (params.myChildrenToInclude.length > 0) {\r\n                    cloneChild = params.myChildrenToInclude.find(childToInclude => childToInclude.pp_equals(child)) != null;\r\n                } else {\r\n                    cloneChild = params.myChildrenToIgnore.find(childToInclude => childToInclude.pp_equals(child)) == null;\r\n                }\r\n\r\n                if (cloneChild && params.myIgnoreChildCallback != null) {\r\n                    cloneChild = !params.myIgnoreChildCallback(child);\r\n                }\r\n\r\n                if (cloneChild) {\r\n                    objects.push(child);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return isCloneable;\r\n};\r\n\r\n//Cauldron\r\n\r\nWL.Object.prototype.pp_getName = function () {\r\n    return this.name;\r\n};\r\n\r\nWL.Object.prototype.pp_setName = function (name) {\r\n    this.name = name;\r\n};\r\n\r\nWL.Object.prototype.pp_getID = function () {\r\n    return this.objectId;\r\n};\r\n\r\nWL.Object.prototype.pp_getHierarchy = function () {\r\n    let hierarchy = this.pp_getDescendants();\r\n\r\n    hierarchy.unshift(this);\r\n\r\n    return hierarchy;\r\n};\r\n\r\nWL.Object.prototype.pp_getDescendants = function () {\r\n    let descendants = [];\r\n\r\n    let descendantsQueue = this.children;\r\n\r\n    while (descendantsQueue.length > 0) {\r\n        let descendant = descendantsQueue.shift();\r\n        descendants.push(descendant);\r\n        for (let object of descendant.children) {\r\n            descendantsQueue.push(object);\r\n        }\r\n    }\r\n\r\n    return descendants;\r\n};\r\n\r\nWL.Object.prototype.pp_getChildren = function () {\r\n    return this.children;\r\n};\r\n\r\nWL.Object.prototype.pp_markDirty = function () {\r\n    return this.setDirty();\r\n};\r\n\r\nWL.Object.prototype.pp_equals = function (otherObject) {\r\n    return this.equals(otherObject);\r\n};\r\n\r\nWL.Object.prototype.pp_destroy = function () {\r\n    return this.destroy();\r\n};\r\n\r\nWL.Object.prototype.pp_getComponentAmountMap = function (amountMap = new Map()) {\r\n    let objectAmount = amountMap.get(\"object\");\r\n    if (objectAmount == null) {\r\n        objectAmount = 0;\r\n    }\r\n    objectAmount += 1;\r\n    amountMap.set(\"object\", objectAmount);\r\n\r\n    let components = this.pp_getComponents();\r\n    for (let component of components) {\r\n        let type = component.type;\r\n        let typeAmount = amountMap.get(type);\r\n        if (typeAmount == null) {\r\n            typeAmount = 0;\r\n        }\r\n        typeAmount += 1;\r\n        amountMap.set(type, typeAmount);\r\n    }\r\n\r\n    return amountMap;\r\n};\r\n\r\nWL.Object.prototype.pp_getComponentAmountMapHierarchy = function (amountMap = new Map()) {\r\n    let hierarchy = this.pp_getHierarchy();\r\n\r\n    for (let object of hierarchy) {\r\n        object.pp_getComponentAmountMap(amountMap);\r\n    }\r\n\r\n    return amountMap;\r\n};\r\n\r\nWL.Object.prototype.pp_getComponentAmountMapDescendants = function (amountMap = new Map()) {\r\n    let descendants = this.pp_getDescendants();\r\n\r\n    for (let object of descendants) {\r\n        object.pp_getComponentAmountMap(amountMap);\r\n    }\r\n\r\n    return amountMap;\r\n};\r\n\r\nWL.Object.prototype.pp_getComponentAmountMapChildren = function (amountMap = new Map()) {\r\n    let children = this.children;\r\n\r\n    for (let object of children) {\r\n        object.pp_getComponentAmountMap(amountMap);\r\n    }\r\n\r\n    return amountMap;\r\n};\r\n\r\n//Private Utils\r\n\r\nWL.Object.prototype._pp_epsilon = 0.000001;\r\n\r\nWL.Object.prototype._pp_quaternionToRadians = function () {\r\n    let mat3 = glMatrix.mat3.create();\r\n    return function (quatRotation, radiansRotation = glMatrix.vec3.create()) {\r\n        glMatrix.mat3.fromQuat(mat3, quatRotation);\r\n\r\n        //Rotation order is ZYX\r\n        radiansRotation[1] = Math.asin(-this._pp_clamp(mat3[2], -1, 1));\r\n\r\n        if (Math.abs(mat3[2]) < 0.9999999) {\r\n\r\n            radiansRotation[0] = Math.atan2(mat3[5], mat3[8]);\r\n            radiansRotation[2] = Math.atan2(mat3[1], mat3[0]);\r\n\r\n        } else {\r\n\r\n            radiansRotation[0] = 0;\r\n            radiansRotation[2] = Math.atan2(-mat3[3], mat3[4]);\r\n        }\r\n\r\n        return radiansRotation;\r\n    };\r\n}();\r\n\r\nWL.Object.prototype._pp_degreesToQuaternion = function (degreesRotation, quatRotation = glMatrix.quat.create()) {\r\n    glMatrix.quat.fromEuler(quatRotation, degreesRotation[0], degreesRotation[1], degreesRotation[2]);\r\n    return quatRotation;\r\n};\r\n\r\nWL.Object.prototype._pp_toDegrees = function (angle) {\r\n    return angle * (180 / Math.PI);\r\n};\r\n\r\nWL.Object.prototype._pp_clamp = function (value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\n\r\nfor (let key in WL.Object.prototype) {\r\n    let prefixes = [\"pp_\", \"_pp_\"];\r\n\r\n    let found = false;\r\n    for (let prefix of prefixes) {\r\n        if (key.startsWith(prefix)) {\r\n            found = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (found) {\r\n        Object.defineProperty(WL.Object.prototype, key, { enumerable: false });\r\n    }\r\n}",
        "//This is added just to make it easy to just use plain number instead of doing new PP.NumberOverValue(<number>) \r\n//You can remove this if it cause issues but you won't be able anymore to use plain number and will have to use new PP.NumberOverValue(<number>) \r\nNumber.prototype.get = function () {\r\n    return this.valueOf();\r\n};\r\nObject.defineProperty(Number.prototype, \"get\", { enumerable: false });\r\n\r\n//You can just put startNumber if u want a number that doesn't actually change -> new PP.NumberOverValue(13)\r\nPP.NumberOverValue = class NumberOverValue {\r\n    constructor(startNumber, endNumber = null, startInterpolationValue = 0, endInterpolationValue = 0, easingFunction = PP.EasingFunction.linear, roundingFunction = null) {\r\n        if (endNumber == null) {\r\n            endNumber = startNumber;\r\n        }\r\n\r\n        this._myStartNumber = startNumber;\r\n        this._myEndNumber = endNumber;\r\n\r\n        this._myStartInterpolationValue = startInterpolationValue;\r\n        this._myEndInterpolationValue = endInterpolationValue;\r\n\r\n        this._myEasingFunction = easingFunction;\r\n        this._myRoundingFunction = roundingFunction; // function(numberToRound, startNumber = null, endNumber = null), Math.round/floor/ceil can be used, must return an int\r\n    }\r\n\r\n    get(interpolationValue) {\r\n        let lerpInterpolationValue = this._myEasingFunction(Math.pp_mapToRange(interpolationValue, this._myStartInterpolationValue, this._myEndInterpolationValue, 0, 1));\r\n        let lerpNumber = Math.pp_lerp(this._myStartNumber, this._myEndNumber, lerpInterpolationValue);\r\n\r\n        if (this._myRoundingFunction) {\r\n            lerpNumber = this._myRoundingFunction(lerpNumber, this._myStartNumber, this._myEndNumber);\r\n        }\r\n\r\n        return lerpNumber;\r\n    }\r\n\r\n    getAverage(interpolationValue) {\r\n        return this.get(interpolationValue);\r\n    }\r\n\r\n    getRange(interpolationValue) {\r\n        let number = this.get(interpolationValue);\r\n        return [number, number];\r\n    }\r\n\r\n    getMax(interpolationValue) {\r\n        return this.get(interpolationValue);\r\n    }\r\n\r\n    getMin(interpolationValue) {\r\n        return this.get(interpolationValue);\r\n    }\r\n\r\n    isInside(number, interpolationValue) {\r\n        let currentNumber = this.get(interpolationValue);\r\n\r\n        return currentNumber == number;\r\n    }\r\n\r\n    isInsideAngleRange(number, interpolationValue) {\r\n        return this.isInsideAngleRangeDegrees(number, interpolationValue);\r\n    }\r\n\r\n    isInsideAngleRangeDegrees(number, interpolationValue) {\r\n        let currentNumber = this.get(interpolationValue);\r\n\r\n        let clampedNumber = Math.pp_angleClampDegrees(number);\r\n        let clampedCurrentNumber = Math.pp_angleClampDegrees(currentNumber);\r\n\r\n        return clampedNumber == clampedCurrentNumber;\r\n    }\r\n\r\n    isInsideAngleRangeRadians(number, interpolationValue) {\r\n        let currentNumber = this.get(interpolationValue);\r\n\r\n        let clampedNumber = Math.pp_angleClampRadians(number);\r\n        let clampedCurrentNumber = Math.pp_angleClampRadians(currentNumber);\r\n\r\n        return clampedNumber == clampedCurrentNumber;\r\n    }\r\n};\r\n\r\nPP.IntOverValue = class IntOverValue extends PP.NumberOverValue {\r\n    constructor(startNumber, endNumber, startInterpolationValue, endInterpolationValue, easingFunction = PP.EasingFunction.linear, roundingFunction = null) {\r\n        if (roundingFunction == null) {\r\n            roundingFunction = function (numberToRound, startNumber, endNumber) {\r\n                let roundedNumber = null;\r\n\r\n                let useFloor = startNumber <= endNumber;\r\n                if (useFloor) {\r\n                    roundedNumber = Math.floor(numberToRound);\r\n                } else {\r\n                    roundedNumber = Math.ceil(numberToRound);\r\n                }\r\n\r\n                return roundedNumber;\r\n            };\r\n        }\r\n\r\n        super(startNumber, endNumber, startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n    }\r\n};\r\n\r\n//You can just put startRange if u want a range that doesn't actually change -> new PP.NumberOverValue([1,25])\r\nPP.NumberRangeOverValue = class NumberRangeOverValue {\r\n    constructor(startRange, endRange = null, startInterpolationValue = 0, endInterpolationValue = 0, easingFunction = PP.EasingFunction.linear, roundingFunction = null) {\r\n        if (endRange == null) {\r\n            endRange = startRange;\r\n        }\r\n\r\n        this._myStartNumberOverValue = new PP.NumberOverValue(startRange[0], endRange[0], startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n        this._myEndNumberOverValue = new PP.NumberOverValue(startRange[1], endRange[1], startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n\r\n        this._myRoundingFunction = roundingFunction; // function(numberToRound, startNumber = null, endNumber = null), Math.round/floor/ceil can be used, must return an int\r\n    }\r\n\r\n    get(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        let randomValue = null;\r\n\r\n        if (this._myRoundingFunction) {\r\n            randomValue = Math.pp_randomInt(startNumber, endNumber);\r\n        } else {\r\n            randomValue = Math.pp_random(startNumber, endNumber);\r\n        }\r\n\r\n        return randomValue;\r\n    }\r\n\r\n    getAverage(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        let average = (startNumber + endNumber) / 2;\r\n        if (this._myRoundingFunction) {\r\n            average = this._myRoundingFunction(average, startNumber, endNumber);\r\n        }\r\n\r\n        return average;\r\n    }\r\n\r\n    getRange(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return [startNumber, endNumber];\r\n    }\r\n\r\n    getMax(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.max(startNumber, endNumber);\r\n    }\r\n\r\n    getMin(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.min(startNumber, endNumber);\r\n    }\r\n\r\n    isInside(number, interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        let min = Math.min(startNumber, endNumber);\r\n        let max = Math.max(startNumber, endNumber);\r\n\r\n        return number >= min && number <= max;\r\n    }\r\n\r\n    isInsideAngleRange(number, interpolationValue) {\r\n        return this.isInsideAngleRangeDegrees(number, interpolationValue);\r\n    }\r\n\r\n    isInsideAngleRangeDegrees(number, interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.pp_isInsideAngleRangeDegrees(number, startNumber, endNumber);\r\n    }\r\n\r\n    isInsideAngleRangeRadians(number, interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.pp_isInsideAngleRangeRadians(number, startNumber, endNumber);\r\n    }\r\n};\r\n\r\nPP.IntRangeOverValue = class IntRangeOverValue extends PP.NumberRangeOverValue {\r\n    constructor(startRange, endRange, startInterpolationValue, endInterpolationValue, easingFunction = PP.EasingFunction.linear, roundingFunction = null) {\r\n        if (roundingFunction == null) {\r\n            roundingFunction = function (numberToRound, startNumber, endNumber) {\r\n                let roundedNumber = null;\r\n\r\n                let useFloor = startNumber <= endNumber;\r\n                if (useFloor) {\r\n                    roundedNumber = Math.floor(numberToRound);\r\n                } else {\r\n                    roundedNumber = Math.ceil(numberToRound);\r\n                }\r\n\r\n                return roundedNumber;\r\n            };\r\n        }\r\n\r\n        super(startRange, endRange, startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n    }\r\n};",
        "PP.ObjectPoolManager = class ObjectPoolManager {\r\n    constructor() {\r\n        this._myPoolMap = new Map();\r\n    }\r\n\r\n    addPool(poolID, poolObject, objectPoolParams = new PP.ObjectPoolParams()) {\r\n        if (!this._myPoolMap.has(poolID)) {\r\n            let pool = new PP.ObjectPool(poolObject, objectPoolParams);\r\n            this._myPoolMap.set(poolID, pool);\r\n        } else {\r\n            console.error(\"Pool already created with this ID\");\r\n        }\r\n    }\r\n\r\n    increasePool(poolID, amount) {\r\n        let pool = this._myPoolMap.get(poolID);\r\n        if (pool) {\r\n            pool.increase(amount);\r\n        }\r\n    }\r\n\r\n    increasePoolPercentage(poolID, percentage) {\r\n        let pool = this._myPoolMap.get(poolID);\r\n        if (pool) {\r\n            pool.increasePercentage(percentage);\r\n        }\r\n    }\r\n\r\n    getPool(poolID) {\r\n        return this._myPoolMap.get(poolID);\r\n    }\r\n\r\n    getObject(poolID) {\r\n        return this._myPoolMap.get(poolID).get();\r\n    }\r\n\r\n    releaseObject(poolID, object) {\r\n        this._myPoolMap.get(poolID).release(object);\r\n    }\r\n};\r\n\r\nPP.ObjectPoolParams = class ObjectPoolParams {\r\n    constructor() {\r\n        this.myInitialPoolSize = 0;\r\n        this.myAmountToAddWhenEmpty = 1;  //If all the objects are busy, this amount will be added to the pool\r\n        this.myPercentageToAddWhenEmpty = 0.5;  //If all the objects are busy, this percentage of the current pool size will be added to the pool\r\n\r\n        this.myCloneParams = undefined;\r\n        this.myCloneFunctionName = undefined;\r\n        this.mySetActiveFunctionName = undefined;\r\n        this.myEqualsFunctionName = undefined;\r\n    }\r\n};\r\n\r\nPP.ObjectPool = class ObjectPool {\r\n    constructor(poolObject, objectPoolParams) {\r\n        this._myObjectPoolParams = objectPoolParams;\r\n        this._myPrototype = this._clone(poolObject);\r\n\r\n        this._myAvailableObjects = [];\r\n        this._myBusyObjects = [];\r\n\r\n        this._addToPool(objectPoolParams.myInitialPoolSize, false);\r\n    }\r\n\r\n    get() {\r\n        let object = this._myAvailableObjects.shift();\r\n\r\n        if (object == null) {\r\n            let amountToAdd = Math.ceil(this._myBusyObjects.length * this._myObjectPoolParams.myPercentageToAddWhenEmpty);\r\n            amountToAdd += this._myObjectPoolParams.myAmountToAddWhenEmpty;\r\n            this._addToPool(amountToAdd, true);\r\n            object = this._myAvailableObjects.shift();\r\n        }\r\n\r\n        this._myBusyObjects.push(object);\r\n\r\n        return object;\r\n    }\r\n\r\n    release(object) {\r\n        let released = this._myBusyObjects.pp_remove(this._equals.bind(this, object));\r\n        if (released) {\r\n            this._setActive(released, false);\r\n            this._myAvailableObjects.push(released);\r\n        }\r\n    }\r\n\r\n    increase(amount) {\r\n        this._addToPool(amount, false);\r\n    }\r\n\r\n    increasePercentage(percentage) {\r\n        let amount = Math.ceil((this._myBusyObjects.length + this._myAvailableObjects.length) * percentage);\r\n        this._addToPool(amount, false);\r\n    }\r\n\r\n    _addToPool(size, log) {\r\n        for (let i = 0; i < size; i++) {\r\n            this._myAvailableObjects.push(this._clone(this._myPrototype));\r\n        }\r\n\r\n        if (log) {\r\n            console.warn(\"Added new elements to the pool:\", size);\r\n        }\r\n    }\r\n\r\n    _clone(object) {\r\n        let clone = null;\r\n\r\n        if (this._myObjectPoolParams.myCloneFunctionName != null) {\r\n            clone = object[this._myObjectPoolParams.myCloneFunctionName](this._myObjectPoolParams.myCloneParams);\r\n        } else if (object.pp_clone != null) {\r\n            clone = object.pp_clone(this._myObjectPoolParams.myCloneParams);\r\n        } else if (object.clone != null) {\r\n            clone = object.clone(this._myObjectPoolParams.myCloneParams);\r\n        }\r\n\r\n        if (clone == null) {\r\n            console.error(\"Object not cloneable, pool will return null\");\r\n        } else {\r\n            this._setActive(clone, false);\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n    _setActive(object, active) {\r\n        if (this._myObjectPoolParams.mySetActiveFunctionName != null) {\r\n            object[this._myObjectPoolParams.mySetActiveFunctionName](active);\r\n        } else if (object.pp_setActive != null) {\r\n            object.pp_setActive(active);\r\n        } else if (object.setActive != null) {\r\n            object.setActive(active);\r\n        }\r\n    }\r\n\r\n    _equals(first, second) {\r\n        let equals = false;\r\n\r\n        if (this._myObjectPoolParams.myEqualsFunctionName != null) {\r\n            equals = first[this._myObjectPoolParams.myEqualsFunctionName](second);\r\n        } else if (first.pp_equals != null) {\r\n            equals = first.pp_equals(second);\r\n        } else if (first.equals != null) {\r\n            equals = first.equals(second);\r\n        }\r\n\r\n        return equals;\r\n    }\r\n};",
        "PP.PhysXCollisionCollector = class PhysXCollisionCollector {\r\n    constructor(physXComponent, isTrigger = false) {\r\n        this._myPhysX = physXComponent;\r\n\r\n        this._myIsTrigger = isTrigger;\r\n\r\n        this._myCollisions = [];\r\n\r\n        this._myCollisionsStart = [];\r\n        this._myCollisionsEnd = [];\r\n        this._myUpdateActive = false;\r\n        this._myCollisionsStartToProcess = [];\r\n        this._myCollisionsEndToProcess = [];\r\n\r\n        this._myCollisionCallbackID = null;\r\n\r\n        this._myIsActive = false;\r\n        this.setActive(true);\r\n\r\n        this._myDebugActive = false;\r\n\r\n        this._myTriggerDesyncFixDelay = new PP.Timer(0.1);\r\n    }\r\n\r\n    getPhysX() {\r\n        return this._myPhysX;\r\n    }\r\n\r\n    getCollisions() {\r\n        return this._myCollisions.pp_clone();\r\n    }\r\n\r\n    getCollisionsStart() {\r\n        return this._myCollisionsStart.pp_clone();\r\n    }\r\n\r\n    getCollisionsEnd() {\r\n        return this._myCollisionsEnd.pp_clone();\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myIsActive != active) {\r\n            this._myIsActive = active;\r\n\r\n            this._myCollisions = [];\r\n\r\n            this._myCollisionsStart = [];\r\n            this._myCollisionsEnd = [];\r\n            this._myUpdateActive = false;\r\n            this._myCollisionsStartToProcess = [];\r\n            this._myCollisionsEndToProcess = [];\r\n\r\n            if (this._myIsActive) {\r\n                this._myCollisionCallbackID = this._myPhysX.onCollision(this._onCollision.bind(this));\r\n            } else if (this._myCollisionCallbackID != null) {\r\n                this._myPhysX.removeCollisionCallback(this._myCollisionCallbackID);\r\n                this._myCollisionCallbackID = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Set to true only if u are going to actually update this object and don't want to lose any collision start/end events prior to updating the first time after activation\r\n    setUpdateActive(active) {\r\n        this._myUpdateActive = active;\r\n    }\r\n\r\n    //Update is not mandatory, use it only if u want to access collisions start and end\r\n    update(dt) {\r\n        if (!this._myIsActive) {\r\n            return;\r\n        }\r\n\r\n        this._myUpdateActive = true;\r\n\r\n        this._myCollisionsStart = this._myCollisionsStartToProcess;\r\n        this._myCollisionsStartToProcess = [];\r\n\r\n        this._myCollisionsEnd = this._myCollisionsEndToProcess;\r\n        this._myCollisionsEndToProcess = [];\r\n\r\n        if (this._myIsTrigger) {\r\n            this._triggerDesyncFix(dt);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this._myCollisionCallbackID != null) {\r\n            this._myPhysX.removeCollisionCallback(this._myCollisionCallbackID);\r\n            this._myCollisionCallbackID = null;\r\n        }\r\n    }\r\n\r\n    setDebugActive(active) {\r\n        this._myDebugActive = active;\r\n    }\r\n\r\n    _onCollision(type, physXComponent) {\r\n        if (type == WL.CollisionEventType.Touch || type == WL.CollisionEventType.TriggerTouch) {\r\n            this._onCollisionStart(physXComponent);\r\n        } else if (type == WL.CollisionEventType.TouchLost || type == WL.CollisionEventType.TriggerTouchLost) {\r\n            this._onCollisionEnd(physXComponent);\r\n        }\r\n    }\r\n\r\n    _onCollisionStart(physXComponent) {\r\n        if (this._myDebugActive) {\r\n            let objectFound = false;\r\n            for (let object of this._myCollisions) {\r\n                if (object.pp_equals(physXComponent.object)) {\r\n                    objectFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (objectFound) {\r\n                console.error(\"Collision Start on object already collected\");\r\n            }\r\n        }\r\n\r\n        this._myCollisions.push(physXComponent.object);\r\n\r\n        if (this._myUpdateActive) {\r\n            this._myCollisionsStartToProcess.push(physXComponent.object);\r\n            this._myCollisionsEndToProcess.pp_removeAll(function (element) {\r\n                return element.pp_equals(physXComponent.object);\r\n            });\r\n        }\r\n\r\n        if (this._myDebugActive) {\r\n            console.log(\"Collision Start -\", this._myCollisions.length);\r\n        }\r\n    }\r\n\r\n    _onCollisionEnd(physXComponent) {\r\n        if (this._myDebugActive) {\r\n            let objectFound = false;\r\n            for (let object of this._myCollisions) {\r\n                if (object.pp_equals(physXComponent.object)) {\r\n                    objectFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!objectFound) {\r\n                console.error(\"Collision End on object not collected\");\r\n            }\r\n        }\r\n\r\n\r\n        this._myCollisions.pp_removeAll(function (element) {\r\n            return element.pp_equals(physXComponent.object);\r\n        });\r\n\r\n        if (this._myUpdateActive) {\r\n            this._myCollisionsEndToProcess.push(physXComponent.object);\r\n            this._myCollisionsStartToProcess.pp_removeAll(function (element) {\r\n                return element.pp_equals(physXComponent.object);\r\n            });\r\n        }\r\n\r\n        if (this._myDebugActive) {\r\n            console.log(\"Collision End -\", this._myCollisions.length);\r\n        }\r\n    }\r\n\r\n    _triggerDesyncFix(dt) {\r\n        this._myTriggerDesyncFixDelay.update(dt);\r\n        if (this._myTriggerDesyncFixDelay.isDone()) {\r\n            this._myTriggerDesyncFixDelay.start();\r\n\r\n            let collisionsToEnd = this._myCollisions.pp_findAll(function (element) {\r\n                let physX = element.pp_getComponent(\"physx\");\r\n                return physX == null || !physX.active;\r\n            });\r\n\r\n            if (collisionsToEnd.length > 0) {\r\n                //console.error(\"DESYNC RESOLVED\");\r\n\r\n                for (let collision of collisionsToEnd) {\r\n                    let physX = collision.pp_getComponent(\"physx\");\r\n                    if (physX) {\r\n                        this._onCollisionEnd(physX);\r\n                    } else {\r\n                        console.error(\"NO PHYSX, HOW?\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};",
        "PP.SaveManager = class SaveManager {\r\n    constructor() {\r\n        this._mySaveCache = new Map();\r\n\r\n        this._myCommitSavesDelayTimer = new PP.Timer(0, false);\r\n        this._myDelaySavesCommit = true;\r\n        this._myIDsToCommit = [];\r\n\r\n        this._myCacheDefaultValueOnFail = true;\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n\r\n        this._myClearCallbacks = new Map();                 // Signature: callback()\r\n        this._myDeleteCallbacks = new Map();                // Signature: callback(id)\r\n        this._myDeleteIDCallbacks = new Map();              // Signature: callback(id)\r\n        this._mySaveCallbacks = new Map();                  // Signature: callback(id, value)\r\n        this._mySaveValueChangedCallbacks = new Map();      // Signature: callback(id, value)\r\n        this._mySaveIDCallbacks = new Map();                // Signature: callback(id, value)\r\n        this._mySaveValueChangedIDCallbacks = new Map();    // Signature: callback(id, value)\r\n        this._myCommitSaveCallbacks = new Map();            // Signature: callback(id, value, isCommitSaveDelayed, failed)\r\n        this._myCommitSaveIDCallbacks = new Map();          // Signature: callback(id, value, isCommitSaveDelayed, failed)\r\n        this._myCommitSavesCallbacks = new Map();           // Signature: callback(isCommitSavesDelayed, failed)\r\n\r\n        this._myLoadCallbacks = new Map();                  // Signature: callback(id, value, loadFromCache, failed)\r\n        this._myLoadIDCallbacks = new Map();                // Signature: callback(id, value, loadFromCache, failed)\r\n    }\r\n\r\n    setCommitSavesDelay(delay) {\r\n        this._myCommitSavesDelayTimer.start(delay);\r\n    }\r\n\r\n    setDelaySavesCommit(delayed) {\r\n        this._myDelaySavesCommit = delayed;\r\n    }\r\n\r\n    setCacheDefaultValueOnFail(cache) {\r\n        this._myCacheDefaultValueOnFail = cache;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myCommitSavesDelayTimer.isRunning()) {\r\n            this._myCommitSavesDelayTimer.update(dt);\r\n            if (this._myCommitSavesDelayTimer.isDone()) {\r\n                this.commitSaves();\r\n            }\r\n        }\r\n    }\r\n\r\n    save(id, value, overrideDelaySavesCommit = null) {\r\n        let sameValue = false;\r\n        if (this._mySaveCache.has(id)) {\r\n            sameValue = this._mySaveCache.get(id) === value;\r\n        }\r\n\r\n        if (!sameValue) {\r\n            this._mySaveCache.set(id, value);\r\n            if ((this._myDelaySavesCommit && overrideDelaySavesCommit == null) || (overrideDelaySavesCommit != null && overrideDelaySavesCommit)) {\r\n                this._myIDsToCommit.pp_pushUnique(id);\r\n                if (!this._myCommitSavesDelayTimer.isRunning()) {\r\n                    this._myCommitSavesDelayTimer.start();\r\n                }\r\n            } else {\r\n                let failed = this._commitSave(id, false);\r\n\r\n                if (this._myCommitSavesCallbacks.size > 0) {\r\n                    let isCommitSaveDelayed = false;\r\n                    this._myCommitSavesCallbacks.forEach(function (callback) { callback(isCommitSaveDelayed, failed); });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._mySaveCallbacks.size > 0) {\r\n            this._mySaveCallbacks.forEach(function (callback) { callback(id, value); });\r\n        }\r\n\r\n        if (this._mySaveIDCallbacks.size > 0) {\r\n            let callbackMap = this._mySaveIDCallbacks.get(id);\r\n            if (callbackMap != null) {\r\n                callbackMap.forEach(function (callback) { callback(id, value); });\r\n            }\r\n        }\r\n\r\n        if (!sameValue) {\r\n            if (this._mySaveValueChangedCallbacks.size > 0) {\r\n                this._mySaveValueChangedCallbacks.forEach(function (callback) { callback(id, value); });\r\n            }\r\n\r\n            if (this._mySaveValueChangedIDCallbacks.size > 0) {\r\n                let callbackMap = this._mySaveValueChangedIDCallbacks.get(id);\r\n                if (callbackMap != null) {\r\n                    callbackMap.forEach(function (callback) { callback(id, value); });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    commitSaves() {\r\n        if (this._myIDsToCommit.length > 0) {\r\n            let failed = false;\r\n\r\n            for (let id of this._myIDsToCommit) {\r\n                if (this._mySaveCache.has(id)) {\r\n                    let result = this._commitSave(id, true);\r\n                    failed = failed || result;\r\n                }\r\n            }\r\n\r\n            this._myIDsToCommit = [];\r\n\r\n            if (this._myCommitSavesCallbacks.size > 0) {\r\n                let isCommitSavesDelayed = true;\r\n                this._myCommitSavesCallbacks.forEach(function (callback) { callback(isCommitSavesDelayed, failed); });\r\n            }\r\n        }\r\n    }\r\n\r\n    has(id) {\r\n        return this._mySaveCache.has(id) || PP.SaveUtils.has(id);\r\n    }\r\n\r\n    delete(id) {\r\n        this._mySaveCache.delete(id);\r\n        PP.SaveUtils.delete(id);\r\n\r\n        if (this._myDeleteCallbacks.size > 0) {\r\n            this._myDeleteCallbacks.forEach(function (callback) { callback(id); });\r\n        }\r\n\r\n        if (this._myDeleteIDCallbacks.size > 0) {\r\n            let callbackMap = this._myDeleteIDCallbacks.get(id);\r\n            if (callbackMap != null) {\r\n                callbackMap.forEach(function (callback) { callback(id); });\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this._mySaveCache.clear();\r\n        PP.SaveUtils.clear();\r\n\r\n        if (this._myClearCallbacks.size > 0) {\r\n            this._myClearCallbacks.forEach(function (callback) { callback(); });\r\n        }\r\n    }\r\n\r\n    load(id, defaultValue = null) {\r\n        return this._load(id, defaultValue, \"load\");\r\n    }\r\n\r\n    loadString(id, defaultValue = null) {\r\n        return this._load(id, defaultValue, \"loadString\");\r\n    }\r\n\r\n    loadNumber(id, defaultValue = null) {\r\n        return this._load(id, defaultValue, \"loadNumber\");\r\n    }\r\n\r\n    loadBool(id, defaultValue = null) {\r\n        return this._load(id, defaultValue, \"loadBool\");\r\n    }\r\n\r\n    getCommitSavesDelay() {\r\n        return this._myCommitSavesDelayTimer.getDuration();\r\n    }\r\n\r\n    isDelaySavesCommit() {\r\n        return this._myDelaySavesCommit;\r\n    }\r\n\r\n    isCacheDefaultValueOnFail() {\r\n        return this._myCacheDefaultValueOnFail;\r\n    }\r\n\r\n    _commitSave(id, isCommitSaveDelayed) {\r\n        let value = this._mySaveCache.get(id);\r\n        let failed = false;\r\n\r\n        try {\r\n            PP.SaveUtils.save(id, value);\r\n        } catch (error) {\r\n            failed = true;\r\n        }\r\n\r\n        if (this._myCommitSaveCallbacks.size > 0) {\r\n            this._myCommitSaveCallbacks.forEach(function (callback) { callback(id, value, isCommitSaveDelayed, failed); });\r\n        }\r\n\r\n        if (this._myCommitSaveIDCallbacks.size > 0) {\r\n            let callbackMap = this._myCommitSaveIDCallbacks.get(id);\r\n            if (callbackMap != null) {\r\n                callbackMap.forEach(function (callback) { callback(id, value, isCommitSaveDelayed, failed); });\r\n            }\r\n        }\r\n\r\n        return failed;\r\n    }\r\n\r\n    _load(id, defaultValue, functionName) {\r\n        let value = null;\r\n        let failed = false;\r\n        let loadFromCache = false;\r\n\r\n        if (this._mySaveCache.has(id)) {\r\n            value = this._mySaveCache.get(id);\r\n\r\n            if (value == null && defaultValue != null) {\r\n                value = defaultValue;\r\n                if (this._myCacheDefaultValueOnFail) {\r\n                    this._mySaveCache.set(id, value);\r\n                }\r\n            }\r\n\r\n            loadFromCache = true;\r\n        } else {\r\n            let saveResult = null;\r\n            try {\r\n                saveResult = PP.SaveUtils[functionName](id, null);\r\n            } catch (error) {\r\n                // Error is managed as if it worked but there was no value\r\n                saveResult = null;\r\n                failed = true;\r\n            }\r\n\r\n            if (saveResult == null) {\r\n                value = defaultValue;\r\n            } else {\r\n                value = saveResult;\r\n            }\r\n\r\n            if (saveResult != null || this._myCacheDefaultValueOnFail) {\r\n                this._mySaveCache.set(id, value);\r\n            } else {\r\n                this._mySaveCache.set(id, null);\r\n            }\r\n        }\r\n\r\n        if (this._myLoadCallbacks.size > 0) {\r\n            this._myLoadCallbacks.forEach(function (callback) { callback(id, value, loadFromCache, failed); });\r\n        }\r\n\r\n        if (this._myLoadIDCallbacks.size > 0) {\r\n            let callbackMap = this._myLoadIDCallbacks.get(id);\r\n            if (callbackMap != null) {\r\n                callbackMap.forEach(function (callback) { callback(id, value, loadFromCache, failed); });\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        session.addEventListener('visibilitychange', function (event) {\r\n            if (event.session.visibilityState != \"visible\") {\r\n                this._onXRSessionInterrupt();\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._onXRSessionInterrupt();\r\n    }\r\n\r\n    _onXRSessionInterrupt() {\r\n        this.commitSaves();\r\n    }\r\n\r\n    registerClearEventListener(callbackID, callback) {\r\n        this._myClearCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterClearEventListener(callbackID) {\r\n        this._myClearCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerDeleteEventListener(callbackID, callback) {\r\n        this._myDeleteCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterDeleteEventListener(callbackID) {\r\n        this._myDeleteCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerDeleteIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDMap = this._myDeleteIDCallbacks.get(valueID);\r\n        if (valueIDMap == null) {\r\n            this._myDeleteIDCallbacks.set(valueID, new Map());\r\n            valueIDMap = this._myDeleteIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDMap.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterDeleteIDEventListener(valueID, callbackID) {\r\n        let valueIDMap = this._myDeleteIDCallbacks.get(valueID);\r\n        if (valueIDMap != null) {\r\n            valueIDMap.delete(callbackID);\r\n        }\r\n    }\r\n\r\n    registerSaveEventListener(callbackID, callback) {\r\n        this._mySaveCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveEventListener(callbackID) {\r\n        this._mySaveCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerSaveIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDMap = this._mySaveIDCallbacks.get(valueID);\r\n        if (valueIDMap == null) {\r\n            this._mySaveIDCallbacks.set(valueID, new Map());\r\n            valueIDMap = this._mySaveIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDMap.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveIDEventListener(valueID, callbackID) {\r\n        let valueIDMap = this._mySaveIDCallbacks.get(valueID);\r\n        if (valueIDMap != null) {\r\n            valueIDMap.delete(callbackID);\r\n        }\r\n    }\r\n\r\n    registerSaveValueChangedEventListener(callbackID, callback) {\r\n        this._mySaveValueChangedCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveValueChangedEventListener(callbackID) {\r\n        this._mySaveValueChangedCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerSaveValueChangedIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDMap = this._mySaveValueChangedIDCallbacks.get(valueID);\r\n        if (valueIDMap == null) {\r\n            this._mySaveValueChangedIDCallbacks.set(valueID, new Map());\r\n            valueIDMap = this._mySaveValueChangedIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDMap.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveValueChangedIDEventListener(valueID, callbackID) {\r\n        let valueIDMap = this._mySaveValueChangedIDCallbacks.get(valueID);\r\n        if (valueIDMap != null) {\r\n            valueIDMap.delete(callbackID);\r\n        }\r\n    }\r\n\r\n    registerCommitSavesEventListener(callbackID, callback) {\r\n        this._myCommitSavesCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCommitSavesEventListener(callbackID) {\r\n        this._myCommitSavesCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCommitSaveEventListener(callbackID, callback) {\r\n        this._myCommitSaveCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCommitSaveEventListener(callbackID) {\r\n        this._myCommitSaveCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCommitSaveIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDMap = this._myCommitSaveIDCallbacks.get(valueID);\r\n        if (valueIDMap == null) {\r\n            this._myCommitSaveIDCallbacks.set(valueID, new Map());\r\n            valueIDMap = this._myCommitSaveIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDMap.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCommitSaveIDEventListener(valueID, callbackID) {\r\n        let valueIDMap = this._myCommitSaveIDCallbacks.get(valueID);\r\n        if (valueIDMap != null) {\r\n            valueIDMap.delete(callbackID);\r\n        }\r\n    }\r\n\r\n    registerLoadEventListener(callbackID, callback) {\r\n        this._myLoadCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterLoadEventListener(callbackID) {\r\n        this._myLoadCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerLoadIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDMap = this._myLoadIDCallbacks.get(valueID);\r\n        if (valueIDMap == null) {\r\n            this._myLoadIDCallbacks.set(valueID, new Map());\r\n            valueIDMap = this._myLoadIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDMap.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterLoadIDEventListener(valueID, callbackID) {\r\n        let valueIDMap = this._myLoadIDCallbacks.get(valueID);\r\n        if (valueIDMap != null) {\r\n            valueIDMap.delete(callbackID);\r\n        }\r\n    }\r\n};",
        "PP.Timer = class Timer {\r\n    constructor(duration, autoStart = true) {\r\n        this._myDuration = duration;\r\n        this._myOnEndCallbacks = new Map();     // Signature: callback()\r\n\r\n        this._myIsDone = false;\r\n        this._myStarted = false;\r\n\r\n        if (autoStart) {\r\n            this.start();\r\n        } else {\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    start(duration = null) {\r\n        this.reset(duration);\r\n        this._myStarted = true;\r\n    }\r\n\r\n    reset(duration = null) {\r\n        if (duration != null) {\r\n            this._myDuration = Math.max(0, duration);\r\n        }\r\n\r\n        this._myTimer = this._myDuration;\r\n        this._myIsDone = false;\r\n        this._myStarted = false;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.isRunning()) {\r\n            this._myTimer = Math.max(0, this._myTimer - dt);\r\n            if (this._myTimer == 0) {\r\n                this._done();\r\n            }\r\n        }\r\n    }\r\n\r\n    isDone() {\r\n        return this._myIsDone;\r\n    }\r\n\r\n    isStarted() {\r\n        return this._myStarted;\r\n    }\r\n\r\n    isRunning() {\r\n        return this.isStarted() && !this.isDone();\r\n    }\r\n\r\n    getDuration() {\r\n        return this._myDuration;\r\n    }\r\n\r\n    setDuration(duration) {\r\n        this._myDuration = Math.max(0, duration);\r\n    }\r\n\r\n    getTimer() {\r\n        return this._myTimer;\r\n    }\r\n\r\n    getPercentage() {\r\n        let percentage = 1;\r\n        if (this._myTimer > 0) {\r\n            percentage = (this._myDuration - this._myTimer) / this._myDuration;\r\n        }\r\n        return Math.pp_clamp(percentage, 0, 1);\r\n    }\r\n\r\n    onEnd(callback, id = null) {\r\n        this._myOnEndCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterOnEnd(id = null) {\r\n        this._myOnEndCallbacks.delete(id);\r\n    }\r\n\r\n    _done() {\r\n        this._myTimer = 0;\r\n        this._myIsDone = true;\r\n        if (this._myOnEndCallbacks.size > 0) {\r\n            for (let callback of this._myOnEndCallbacks.values()) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n};",
        "WL.registerComponent(\"pp-audio-listener\", {\r\n    _mySpatial: { type: WL.Type.Bool, default: true },\r\n}, {\r\n    init: function () {\r\n        this._myOrigin = new Float32Array(3);\r\n        this._myForward = new Float32Array(3);\r\n        this._myUp = new Float32Array(3);\r\n    },\r\n    update: function () {\r\n        if (!this._mySpatial) return;\r\n\r\n        this.object.pp_getPosition(this._myOrigin);\r\n        this.object.pp_getForward(this._myForward);\r\n        this.object.pp_getUp(this._myUp);\r\n\r\n        Howler.pos(this._myOrigin[0], this._myOrigin[1], this._myOrigin[2]);\r\n        Howler.orientation(this._myForward[0], this._myForward[1], this._myForward[2],\r\n            this._myUp[0], this._myUp[1], this._myUp[2]);\r\n    },\r\n});",
        "PP.AudioManager = class AudioManager {\r\n    constructor() {\r\n        this._myAudioSetupMap = new Map();\r\n    }\r\n\r\n    createAudioPlayer(audioSetupID) {\r\n        return new PP.AudioPlayer(this.getAudioSetup(audioSetupID));\r\n    }\r\n\r\n    getAudioSetup(id) {\r\n        return this._myAudioSetupMap.get(id);\r\n    }\r\n\r\n    addAudioSetup(id, audioSetup, preload = true) {\r\n        this._myAudioSetupMap.set(id, audioSetup);\r\n        if (preload) {\r\n            this.createAudioPlayer(id);\r\n        }\r\n    }\r\n\r\n    removeAudioSetup(id) {\r\n        this._myAudioSetupMap.delete(id);\r\n    }\r\n\r\n    setVolume(volume) {\r\n        Howler.volume(volume);\r\n    }\r\n\r\n    setMute(mute) {\r\n        Howler.mute(mute);\r\n    }\r\n\r\n    stop() {\r\n        Howler.stop();\r\n    }\r\n};",
        "WL.registerComponent(\"pp-audio-manager\", {\r\n}, {\r\n    init: function () {\r\n        PP.myAudioManager = new PP.AudioManagerClass();\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n    }\r\n});\r\n\r\nPP.myAudioManager = null;",
        "PP.AudioEvent = {\r\n    END: \"end\",\r\n    STOP: \"stop\",\r\n    LOAD: \"load\",\r\n    LOAD_ERROR: \"loaderror\",\r\n    PLAY: \"play\",\r\n    PLAY_ERROR: \"playerror\",\r\n    PAUSE: \"pause\",\r\n    MUTE: \"mute\",\r\n    VOLUME: \"volume\",\r\n    RATE: \"rate\",\r\n    SEEK: \"seek\",\r\n    FADE: \"fade\",\r\n    UNLOCK: \"unlock\"\r\n};\r\n\r\nPP.AudioPlayer = class AudioPlayer {\r\n    constructor(audioSetupOrAudioFilePath) {\r\n        if (typeof audioSetupOrAudioFilePath === 'string') {\r\n            this._myAudioSetup = new PP.AudioSetup(audioSetupOrAudioFile);\r\n        } else {\r\n            this._myAudioSetup = audioSetupOrAudioFilePath.clone();\r\n        }\r\n\r\n        this._myAudio = new Howl({\r\n            src: [this._myAudioSetup.myAudioFilePath],\r\n            loop: this._myAudioSetup.myLoop,\r\n            volume: this._myAudioSetup.myVolume,\r\n            autoplay: this._myAudioSetup.myAutoplay,\r\n            rate: this._myAudioSetup.myRate,\r\n            pool: this._myAudioSetup.myPool,\r\n            preload: true\r\n        });\r\n\r\n        this._myAudio._pannerAttr.refDistance = this._myAudioSetup.myReferenceDistance;\r\n\r\n        this._myLastAudioID = null;\r\n\r\n        this._myCallbackMap = new Map();\r\n        for (let eventKey in PP.AudioEvent) {\r\n            this._myCallbackMap.set(PP.AudioEvent[eventKey], new Map());    // Signature: callback(audioID)\r\n        }\r\n\r\n        this._addListeners();\r\n    }\r\n\r\n    play() {\r\n        let audioID = this._myAudio.play();\r\n        if (audioID != null) {\r\n            this._myLastAudioID = audioID;\r\n\r\n            this.updatePosition(this._myAudioSetup.myPosition, true);\r\n            this.updatePitch(this._myAudioSetup.myPitch, true);\r\n            this.updateVolume(this._myAudioSetup.myVolume, true);\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        this._myAudio.stop();\r\n    }\r\n\r\n    pause() {\r\n        this._myAudio.pause();\r\n    }\r\n\r\n    resume() {\r\n        this._myAudio.play();\r\n    }\r\n\r\n    isPlaying(checkOnlyLast = false) {\r\n        let isPlaying = false;\r\n\r\n        if (checkOnlyLast) {\r\n            isPlaying = this._myAudio.playing(this._myLastAudioID);\r\n        }\r\n        else {\r\n            isPlaying = this._myAudio.playing();\r\n        }\r\n\r\n        return isPlaying;\r\n    }\r\n\r\n    isLoaded() {\r\n        return this._myAudio.state() == \"loaded\";\r\n    }\r\n\r\n    fade(fromVolume, toVolume, duration, updateOnlyLast = false) {\r\n        this.setVolume(toVolume);\r\n\r\n        if (updateOnlyLast) {\r\n            this._myAudio.fade(fromVolume, toVolume, duration * 1000, this._myLastAudioID);\r\n        } else {\r\n            this._myAudio.fade(fromVolume, toVolume, duration * 1000);\r\n        }\r\n    }\r\n\r\n    updatePosition(position, updateOnlyLast = false) {\r\n        this.setPosition(position);\r\n\r\n        if (this._myAudioSetup.mySpatial && position) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.pos(position[0], position[1], position[2], this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.pos(position[0], position[1], position[2]);\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePitch(pitch, updateOnlyLast = false) {\r\n        this.updateRate(pitch, updateOnlyLast);\r\n    }\r\n\r\n    updateRate(rate, updateOnlyLast = false) {\r\n        this.setRate(rate);\r\n\r\n        if (rate != null) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.rate(rate, this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.rate(rate);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateVolume(volume, updateOnlyLast = false) {\r\n        this.setVolume(volume);\r\n\r\n        if (volume != null) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.volume(volume, this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.volume(volume);\r\n            }\r\n        }\r\n    }\r\n\r\n    setSpatial(spatial) {\r\n        this._myAudioSetup.mySpatial = spatial;\r\n    }\r\n\r\n    setPosition(position) {\r\n        this._myAudioSetup.myPosition = position;\r\n    }\r\n\r\n    setPitch(pitch) {\r\n        this._myAudioSetup.myPitch = pitch;\r\n    }\r\n\r\n    setRate(rate) {\r\n        this._myAudioSetup.myRate = rate;\r\n    }\r\n\r\n    setVolume(volume) {\r\n        this._myAudioSetup.myVolume = volume;\r\n    }\r\n\r\n    getDuration() {\r\n        return this._myAudio.duration();\r\n    }\r\n\r\n    getVolume() {\r\n        return this._myAudioSetup.myVolume;\r\n    }\r\n\r\n    getPitch() {\r\n        return this._myAudioSetup.myPitch;\r\n    }\r\n\r\n    getRate() {\r\n        return this._myAudioSetup.myRate;\r\n    }\r\n\r\n    registerAudioEventListener(audioEvent, listenerID, callback) {\r\n        this._myCallbackMap.get(audioEvent).set(listenerID, callback);\r\n    }\r\n\r\n    unregisterAudioEventListener(audioEvent, listenerID) {\r\n        this._myCallbackMap.get(audioEvent).delete(listenerID);\r\n    }\r\n\r\n    _addListeners() {\r\n        for (let eventKey in PP.AudioEvent) {\r\n            let event = PP.AudioEvent[eventKey];\r\n            this._myAudio.on(event, function (audioID) {\r\n                let callbacks = this._myCallbackMap.get(event);\r\n                for (let callback of callbacks.values()) {\r\n                    callback(audioID);\r\n                }\r\n            }.bind(this));\r\n        }\r\n    }\r\n};",
        "PP.AudioSetup = class AudioSetup {\r\n    constructor(audioFilePath = null) {\r\n        this.myAudioFilePath = (audioFilePath) ? audioFilePath.slice(0) : null;\r\n\r\n        this.myLoop = false;\r\n        this.myAutoplay = false;\r\n\r\n        this.myVolume = 1.0;\r\n        this._myRate = 1.0; //From 0.5 to 4.0\r\n\r\n        this.myPool = 5;\r\n\r\n        //Spatial\r\n        this.myPosition = null;\r\n        this.mySpatial = true;\r\n        this.myReferenceDistance = 1.0; // At this distance (and closer) the volume is not reduced\r\n    }\r\n\r\n    clone() {\r\n        let audioSetup = new PP.AudioSetup();\r\n\r\n        audioSetup.myAudioFilePath = this.myAudioFilePath.slice(0);\r\n\r\n        audioSetup.myLoop = this.myLoop;\r\n        audioSetup.myAutoplay = this.myAutoplay;\r\n\r\n        audioSetup.myVolume = this.myVolume;\r\n        audioSetup.myPitch = this.myPitch;\r\n        audioSetup.myRate = this.myRate;\r\n\r\n        audioSetup.myPool = this.myPool;\r\n\r\n        //Spatial\r\n        audioSetup.myPosition = this.myPosition;\r\n        audioSetup.mySpatial = this.mySpatial;\r\n        audioSetup.myReferenceDistance = this.myReferenceDistance;\r\n\r\n        return audioSetup;\r\n    }\r\n\r\n    get myPitch() {\r\n        return this._myRate;\r\n    }\r\n\r\n    get myRate() {\r\n        return this._myRate;\r\n    }\r\n\r\n    set myPitch(pitch) {\r\n        this._myRate = pitch;\r\n    }\r\n\r\n    set myRate(rate) {\r\n        this._myRate = rate;\r\n    }\r\n};",
        "WL.registerComponent('pp-mute-all', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        Howler.mute(true);\r\n    },\r\n    update: function (dt) {\r\n    },\r\n});",
        "WL.registerComponent(\"activate-on-select\", {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myTrigger: { type: WL.Type.Object },\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        if (this._myHandedness == 0) {\r\n            this._myGamepad = PP.myLeftGamepad;\r\n        } else {\r\n            this._myGamepad = PP.myRightGamepad;\r\n        }\r\n\r\n        this._myPhysx = this.object.pp_getComponent(\"physx\");\r\n\r\n        this._myTriggerPhysx = this._myTrigger.pp_getComponent(\"physx\");\r\n        this._myTriggerPhysx.onCollision(this._onCollision.bind(this));\r\n\r\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.PRESS_START, this, this._selectPressStart.bind(this));\r\n        this._myGamepad.registerButtonEventListener(PP.ButtonType.SELECT, PP.ButtonEvent.PRESS_END, this, this._selectPressEnd.bind(this));\r\n\r\n        this._myPhysx.active = false;\r\n        this._myTriggerPhysx.active = false;\r\n\r\n        this._myCollisionAudio = Global.myAudioManager.createAudioPlayer(SfxID.COLLISION);\r\n        this._myCollisionPitch = this._myCollisionAudio.getPitch();\r\n\r\n        this._myAnalyticsTimer = new PP.Timer(0);\r\n\r\n        this._myHandednessType = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n    },\r\n    update(dt) {\r\n        this._myAnalyticsTimer.update(dt);\r\n\r\n        if (!Global.myEnableSelectPhysx || PP.InputUtils.getInputSourceType(this._myHandednessType) != PP.InputSourceType.GAMEPAD) {\r\n            this._myPhysx.active = false;\r\n            this._myTriggerPhysx.active = false;\r\n        }\r\n    },\r\n    _selectPressStart() {\r\n        if (Global.myEnableSelectPhysx && PP.InputUtils.getInputSourceType(this._myHandednessType) == PP.InputSourceType.GAMEPAD) {\r\n            this._myPhysx.active = true;\r\n            this._myTriggerPhysx.active = true;\r\n\r\n            if (this._myAnalyticsTimer.isDone()) {\r\n                this._myAnalyticsTimer.start(20);\r\n\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"select_physx_actived\", {\r\n                        \"value\": 1\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _selectPressEnd() {\r\n        this._myPhysx.active = false;\r\n        this._myTriggerPhysx.active = false;\r\n    },\r\n    _onCollision(type, physx) {\r\n        if (type == WL.CollisionEventType.TriggerTouch) {\r\n            if (physx.object.pp_getComponent(\"evidence-component\") != null) {\r\n                let intensity = 0.1;\r\n                let pulseInfo = this._myGamepad.getPulseInfo();\r\n                if (pulseInfo.myIntensity <= intensity) {\r\n                    this._myGamepad.pulse(intensity, 0.1);\r\n                }\r\n\r\n                this._myCollisionAudio.setPosition(this.object.pp_getPosition());\r\n                this._myCollisionAudio.setPitch(Math.pp_random(this._myCollisionPitch - 0.15, this._myCollisionPitch + 0.05));\r\n                this._myCollisionAudio.play();\r\n            }\r\n        }\r\n    }\r\n});",
        "WL.registerComponent(\"adjust-materials\", {\r\n    _myFogAlpha: { type: WL.Type.Float, default: 0 }, //0.330\r\n    _mySpecularMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _my1: { type: WL.Type.Material },\r\n    _my2: { type: WL.Type.Material },\r\n    _my3: { type: WL.Type.Material },\r\n    _my4: { type: WL.Type.Material },\r\n    _my5: { type: WL.Type.Material },\r\n    _my6: { type: WL.Type.Material },\r\n    _my7: { type: WL.Type.Material },\r\n    _my8: { type: WL.Type.Material },\r\n    _my9: { type: WL.Type.Material },\r\n    _my10: { type: WL.Type.Material },\r\n    _my11: { type: WL.Type.Material },\r\n    _my12: { type: WL.Type.Material },\r\n    _my13: { type: WL.Type.Material },\r\n    _my14: { type: WL.Type.Material },\r\n    _my15: { type: WL.Type.Material },\r\n    _my16: { type: WL.Type.Material }\r\n}, {\r\n    init: function () {\r\n        if (this.active) {\r\n            this._myMaterials = [];\r\n            this._mySpecularColors = [];\r\n            for (let i = 1; i < 17; i++) {\r\n                let material = \"_my\".concat(i);\r\n                this[material].fogColor = [0, 0, 0, this._myFogAlpha];\r\n                this._myMaterials.push(this[material]);\r\n\r\n                this._mySpecularColors.push(this[material].specularColor.pp_clone());\r\n                let specularColor = this[material].specularColor.vec_scale(this._mySpecularMultiplier);\r\n                specularColor[3] = this[material].specularColor[3];\r\n\r\n                this[material].specularColor = specularColor;\r\n            }\r\n        }\r\n    },\r\n    start() {\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Fog Alpha\", this._myFogAlpha, 0.1, 3, 0, 1));\r\n        this._myLastFogAlpha = PP.myEasyTuneVariables.get(\"Fog Alpha\");\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Specular Multiplier\", this._mySpecularMultiplier, 1, 3, 0, 3));\r\n        this._myLastSpecularMultiplier = PP.myEasyTuneVariables.get(\"Specular Multiplier\");\r\n    },\r\n    update(dt) {\r\n        let fogAlpha = PP.myEasyTuneVariables.get(\"Fog Alpha\");\r\n        if (fogAlpha != this._myLastFogAlpha) {\r\n            this._myLastFogAlpha = fogAlpha;\r\n            for (let material of this._myMaterials) {\r\n                material.fogColor = [0, 0, 0, fogAlpha];\r\n            }\r\n        }\r\n\r\n        let specularMultiplier = PP.myEasyTuneVariables.get(\"Specular Multiplier\");\r\n        if (specularMultiplier != this._myLastSpecularMultiplier) {\r\n            this._myLastSpecularMultiplier = specularMultiplier;\r\n            for (let i = 0; i < this._myMaterials.length; i++) {\r\n                let specularColor = this._mySpecularColors[i].vec_scale(specularMultiplier);\r\n                specularColor[3] = this._mySpecularColors[i][3];\r\n\r\n                this._myMaterials[i].specularColor = specularColor;\r\n            }\r\n        }\r\n    }\r\n});",
        "WL.registerComponent(\"clear-console-on-session\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myFirstTime = true;\r\n        WL.onXRSessionStart.push(function () {\r\n            if (this._myFirstTime) {\r\n                this._myFirstTime = false;\r\n                console.clear();\r\n            }\r\n        }.bind(this));\r\n    },\r\n    update: function (dt) {\r\n    }\r\n});",
        "WL.registerComponent(\"color-on-select\", {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myPhysxMaterial: { type: WL.Type.Material },\r\n    _myIdleMaterial: { type: WL.Type.Material }\r\n}, {\r\n    init: function () {\r\n        this._myDiffuseColor = vec4_create();\r\n        this._myAmbientColor = vec4_create();\r\n        this._mySpecularColor = vec4_create();\r\n    },\r\n    start: function () {\r\n        if (this._myHandedness == 0) {\r\n            this._myGamepad = PP.myLeftGamepad;\r\n        } else {\r\n            this._myGamepad = PP.myRightGamepad;\r\n        }\r\n\r\n        this._myFirstUpdate = true;\r\n        this._myPrevSelectValue = -1;\r\n\r\n        this._myHandednessType = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n    },\r\n    update() {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            this._myPhysxMaterialDiffuseColor = this._myPhysxMaterial.diffuseColor.pp_clone();\r\n            this._myIdleMaterialDiffuseColor = this._myIdleMaterial.diffuseColor.pp_clone();\r\n\r\n            this._myPhysxMaterialAmbientColor = this._myPhysxMaterial.ambientColor.pp_clone();\r\n            this._myIdleMaterialAmbientColor = this._myIdleMaterial.ambientColor.pp_clone();\r\n\r\n            this._myPhysxMaterialSpecularColor = this._myPhysxMaterial.specularColor.pp_clone();\r\n            this._myIdleMaterialSpecularColor = this._myIdleMaterial.specularColor.pp_clone();\r\n\r\n            this._myMaterial = this.object.pp_getComponentHierarchy(\"mesh\").material.clone();\r\n            PP.MeshUtils.setMaterial(this.object, this._myMaterial);\r\n        } else {\r\n            let selectValue = Math.pp_mapToRange(this._myGamepad.getButtonInfo(PP.ButtonType.SELECT).getValue(), 0.1, 0.85, 0, 1);\r\n            if (!Global.myEnableSelectPhysx || PP.InputUtils.getInputSourceType(this._myHandednessType) != PP.InputSourceType.GAMEPAD) {\r\n                selectValue = 0;\r\n            }\r\n\r\n            if (selectValue != this._myPrevSelectValue) {\r\n                this._myDiffuseColor[0] = Math.pp_lerp(this._myIdleMaterialDiffuseColor[0], this._myPhysxMaterialDiffuseColor[0], selectValue);\r\n                this._myDiffuseColor[1] = Math.pp_lerp(this._myIdleMaterialDiffuseColor[1], this._myPhysxMaterialDiffuseColor[1], selectValue);\r\n                this._myDiffuseColor[2] = Math.pp_lerp(this._myIdleMaterialDiffuseColor[2], this._myPhysxMaterialDiffuseColor[2], selectValue);\r\n                this._myDiffuseColor[3] = 1;\r\n                this._myMaterial.diffuseColor = this._myDiffuseColor;\r\n\r\n                this._myAmbientColor[0] = Math.pp_lerp(this._myIdleMaterialAmbientColor[0], this._myPhysxMaterialAmbientColor[0], selectValue);\r\n                this._myAmbientColor[1] = Math.pp_lerp(this._myIdleMaterialAmbientColor[1], this._myPhysxMaterialAmbientColor[1], selectValue);\r\n                this._myAmbientColor[2] = Math.pp_lerp(this._myIdleMaterialAmbientColor[2], this._myPhysxMaterialAmbientColor[2], selectValue);\r\n                this._myAmbientColor[3] = 1;\r\n                this._myMaterial.ambientColor = this._myAmbientColor;\r\n\r\n                this._mySpecularColor[0] = Math.pp_lerp(this._myIdleMaterialSpecularColor[0], this._myPhysxMaterialSpecularColor[0], selectValue);\r\n                this._mySpecularColor[1] = Math.pp_lerp(this._myIdleMaterialSpecularColor[1], this._myPhysxMaterialSpecularColor[1], selectValue);\r\n                this._mySpecularColor[2] = Math.pp_lerp(this._myIdleMaterialSpecularColor[2], this._myPhysxMaterialSpecularColor[2], selectValue);\r\n                this._mySpecularColor[3] = 1;\r\n                this._myMaterial.specularColor = this._mySpecularColor;\r\n            }\r\n\r\n            this._myPrevSelectValue = selectValue;\r\n        }\r\n\r\n    }\r\n});",
        "WL.registerComponent(\"credits-visualizer\", {\r\n    _myWondermelon: { type: WL.Type.Object }\r\n}, {\r\n    init: function () {\r\n        this._myFSM = new PP.FSM();\r\n        this._myFSM.addState(\"hide\", this._hideUpdate.bind(this));\r\n        this._myFSM.addState(\"visible\", this._visibleUpdate.bind(this));\r\n        this._myFSM.addState(\"spawning\", this._spawn.bind(this));\r\n        this._myFSM.addState(\"unspawning\", this._unspawn.bind(this));\r\n\r\n        this._myFSM.addTransition(\"hide\", \"spawning\", \"spawn\");\r\n        this._myFSM.addTransition(\"spawning\", \"visible\", \"end\");\r\n        this._myFSM.addTransition(\"visible\", \"unspawning\", \"unspawn\");\r\n        this._myFSM.addTransition(\"unspawning\", \"hide\", \"end\");\r\n    },\r\n    start: function () {\r\n        this._myText = this.object.pp_getComponentHierarchy(\"text\");\r\n        this._myText.material = this._myText.material.clone();\r\n        this._myTextColor = this._myText.material.color.pp_clone();\r\n\r\n        let color = this._myText.material.color;\r\n        color[3] = 0;\r\n        this._myText.material.color = color;\r\n        this._myText.active = false;\r\n\r\n        this._myGrabbable = this._myWondermelon.pp_getComponent(\"pp-grabbable\");\r\n\r\n        this._myWondermelonGrabTime = 0;\r\n        this._mySpawnTimer = new PP.Timer(1.5);\r\n        this._myHideScale = 0.85;\r\n\r\n        this._myAppearAudio = Global.myAudioManager.createAudioPlayer(SfxID.TITLE_APPEAR);\r\n        this._myDisappearAudio = Global.myAudioManager.createAudioPlayer(SfxID.TITLE_DISAPPEAR);\r\n        this._myAppearAudio.setPosition(this.object.pp_getPosition());\r\n        this._myDisappearAudio.setPosition(this.object.pp_getPosition());\r\n        this._myAppearAudio.setVolume(1);\r\n        this._myDisappearAudio.setVolume(0.7);\r\n\r\n        this._myFSM.init(\"hide\");\r\n    },\r\n    update(dt) {\r\n        this._myFSM.update(dt);\r\n    },\r\n    _hideUpdate(dt) {\r\n        if (this._myGrabbable.isGrabbed() && Global.myIsInMenu) {\r\n            this._myWondermelonGrabTime += dt;\r\n            if (this._myWondermelonGrabTime > 2.5) {\r\n                this._myText.active = true;\r\n                this._myWondermelonGrabTime = 0;\r\n                this._mySpawnTimer.start();\r\n\r\n                this._myAppearAudio.play();\r\n                this._myFSM.perform(\"spawn\");\r\n\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"credits_shown\", {\r\n                        \"value\": 1\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            this._myWondermelonGrabTime = 0;\r\n        }\r\n    },\r\n    _visibleUpdate(dt) {\r\n        if (!this._myGrabbable.isGrabbed()) {\r\n            this._myWondermelonGrabTime += dt;\r\n            if (this._myWondermelonGrabTime > 1) {\r\n                this._myWondermelonGrabTime = 0;\r\n                this._mySpawnTimer.start();\r\n                this._myDisappearAudio.play();\r\n                this._myFSM.perform(\"unspawn\");\r\n            }\r\n        } else {\r\n            this._myWondermelonGrabTime = 0;\r\n        }\r\n    },\r\n    _spawn(dt) {\r\n        if (this._mySpawnTimer.isRunning()) {\r\n            this._mySpawnTimer.update(dt);\r\n\r\n            let tempColor = [0, 0, 0, 1];\r\n\r\n            tempColor[0] = Math.pp_interpolate(0, this._myTextColor[0], this._mySpawnTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n            tempColor[1] = Math.pp_interpolate(0, this._myTextColor[1], this._mySpawnTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n            tempColor[2] = Math.pp_interpolate(0, this._myTextColor[2], this._mySpawnTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n\r\n            this._myText.material.color = tempColor;\r\n\r\n            let easing = t => t * (2 - t);\r\n            this._myText.object.pp_setScaleLocal(Math.pp_interpolate(this._myHideScale, 1, this._mySpawnTimer.getPercentage(), easing));\r\n\r\n            if (this._mySpawnTimer.isDone()) {\r\n                this._myFSM.perform(\"end\");\r\n            }\r\n        }\r\n    },\r\n    _unspawn(dt) {\r\n        if (this._mySpawnTimer.isRunning()) {\r\n            this._mySpawnTimer.update(dt);\r\n\r\n            let tempColor = [0, 0, 0, 1];\r\n\r\n            tempColor[0] = Math.pp_interpolate(this._myTextColor[0], 0, this._mySpawnTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n            tempColor[1] = Math.pp_interpolate(this._myTextColor[1], 0, this._mySpawnTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n            tempColor[2] = Math.pp_interpolate(this._myTextColor[2], 0, this._mySpawnTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n\r\n            this._myText.material.color = tempColor;\r\n\r\n            let easing = t => t * t;\r\n            let scale = Math.pp_interpolate(1, this._myHideScale, this._mySpawnTimer.getPercentage(), easing);\r\n            this._myText.object.pp_setScaleLocal(scale);\r\n\r\n            if (this._mySpawnTimer.isDone()) {\r\n                this._myText.active = false;\r\n                this._myFSM.perform(\"end\");\r\n            }\r\n        }\r\n    }\r\n});",
        "WL.registerComponent('pp-deactivate-on-first-update', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myFirst = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._myFirst) {\r\n            this._myFirst = false;\r\n            this.object.pp_setActiveHierarchy(false);\r\n        }\r\n    },\r\n});",
        "WL.registerComponent(\"display-leaderboard\", {\r\n    _myName: { type: WL.Type.String, default: '' },\r\n    _myIsLocal: { type: WL.Type.Bool, default: false },\r\n    _myNamesText: { type: WL.Type.Object },\r\n    _myScoresText: { type: WL.Type.Object },\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myNamesTextComponent = this._myNamesText.pp_getComponent(\"text\");\r\n        this._myScoresTextComponent = this._myScoresText.pp_getComponent(\"text\");\r\n    },\r\n    update: function (dt) {\r\n    },\r\n    onActivate: function () {\r\n        PP.CAUtils.getLeaderboard(this._myName, true, this._myIsLocal, 10, this._onLeaderboardRetrieved.bind(this));\r\n    },\r\n    _onLeaderboardRetrieved(leaderboard) {\r\n        let namesText = \"\";\r\n        let scoresText = \"\";\r\n\r\n        let maxRankDigit = 0;\r\n        for (let value of leaderboard) {\r\n            let rank = value.rank + 1;\r\n            if (rank.toFixed(0).length > maxRankDigit) {\r\n                maxRankDigit = rank.toFixed(0).length;\r\n            }\r\n        }\r\n\r\n        for (let value of leaderboard) {\r\n            let rank = value.rank + 1;\r\n            let fixedRank = rank.toFixed(0);\r\n            while (fixedRank.length < maxRankDigit) {\r\n                fixedRank = \"0\".concat(fixedRank);\r\n            }\r\n\r\n            namesText = namesText.concat(fixedRank, \" - \", value.displayName, \"\\n\\n\");\r\n\r\n            let convertedScore = this._convertTime(value.score);\r\n            scoresText = scoresText.concat(convertedScore, \"\\n\\n\");\r\n        }\r\n\r\n        this._myNamesTextComponent.text = namesText;\r\n        this._myScoresTextComponent.text = scoresText;\r\n    },\r\n    _convertTime(score) {\r\n        let time = Math.floor(score / 1000);\r\n\r\n        let hours = Math.floor(time / 3600);\r\n        time -= hours * 3600;\r\n        let minutes = Math.floor(time / 60);\r\n        time -= minutes * 60;\r\n        let seconds = Math.floor(time);\r\n\r\n\r\n        let secondsText = (seconds.toFixed(0).length < 2) ? \"0\".concat(seconds.toFixed(0)) : seconds.toFixed(0);\r\n        let minutesText = (minutes.toFixed(0).length < 2) ? \"0\".concat(minutes.toFixed(0)) : minutes.toFixed(0);\r\n        let hoursText = (hours.toFixed(0).length < 2) ? \"0\".concat(hours.toFixed(0)) : hours.toFixed(0);\r\n\r\n        let convertedTime = hoursText.concat(\":\", minutesText, \":\", secondsText);\r\n\r\n        return convertedTime;\r\n    }\r\n});",
        "class EIECADummyServer {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError) {\r\n        let leaderboard = null;\r\n\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            leaderboard = [\r\n                { rank: 0, displayName: \"An\", score: 0 },\r\n                { rank: 1, displayName: \"Error\", score: 0 },\r\n                { rank: 2, displayName: \"Has\", score: 0 },\r\n                { rank: 3, displayName: \"Occurred\", score: 0 },\r\n                { rank: 4, displayName: \"While\", score: 0 },\r\n                { rank: 5, displayName: \"Trying\", score: 0 },\r\n                { rank: 6, displayName: \"To\", score: 0 },\r\n                { rank: 7, displayName: \"Retrieve\", score: 0 },\r\n                { rank: 8, displayName: \"The\", score: 0 },\r\n                { rank: 9, displayName: \"Leaderboard\", score: 0 }\r\n            ];\r\n        } else {\r\n            if (isAroundPlayer) {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"Login\", score: 0 },\r\n                    { rank: 1, displayName: \"And\", score: 0 },\r\n                    { rank: 2, displayName: \"Play\", score: 0 },\r\n                    { rank: 3, displayName: \"On\", score: 0 },\r\n                    { rank: 4, displayName: \"Construct\", score: 0 },\r\n                    { rank: 5, displayName: \"Arcade\", score: 0 },\r\n                    { rank: 6, displayName: \"To\", score: 0 },\r\n                    { rank: 7, displayName: \"Submit\", score: 0 },\r\n                    { rank: 8, displayName: \"Your\", score: 0 },\r\n                    { rank: 9, displayName: \"Score\", score: 0 }\r\n                ];\r\n            } else {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"The\", score: 0 },\r\n                    { rank: 1, displayName: \"Leaderboard\", score: 0 },\r\n                    { rank: 2, displayName: \"Is\", score: 0 },\r\n                    { rank: 3, displayName: \"Available\", score: 0 },\r\n                    { rank: 4, displayName: \"Only\", score: 0 },\r\n                    { rank: 5, displayName: \"When\", score: 0 },\r\n                    { rank: 6, displayName: \"Playing\", score: 0 },\r\n                    { rank: 7, displayName: \"On\", score: 0 },\r\n                    { rank: 8, displayName: \"Construct\", score: 0 },\r\n                    { rank: 9, displayName: \"Arcade\", score: 0 }\r\n                ];\r\n            }\r\n        }\r\n\r\n        while (leaderboard.length > scoresAmount) {\r\n            leaderboard.pop();\r\n        }\r\n\r\n        if (callbackOnDone) {\r\n            callbackOnDone(leaderboard);\r\n        }\r\n    }\r\n\r\n    submitScore(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError) {\r\n        if (callbackOnDone) {\r\n            callbackOnDone();\r\n        }\r\n    }\r\n\r\n    getUser(callbackOnDone, callbackOnError) {\r\n        let user = {};\r\n        user.displayName = \"mr NOT\";\r\n\r\n        if (callbackOnDone) {\r\n            callbackOnDone(user);\r\n        }\r\n    }\r\n}\r\n",
        "WL.registerComponent(\"enable-debug-shortcuts\", {\r\n    _myShortcutsEnabled: { type: WL.Type.Bool, default: false },\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        Global.myDebugShortcutsEnabled = this._myShortcutsEnabled;\r\n        if (this._myShortcutsEnabled) {\r\n            if (WL.xrSession) {\r\n                this._onXRSessionStart(WL.xrSession);\r\n            }\r\n            WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        }\r\n    },\r\n    update: function (dt) {\r\n    },\r\n    _onXRSessionStart: function (session) {\r\n        if (PP.XRUtils.isDeviceEmulated()) {\r\n            Global.myDebugShortcutsPress = 1;\r\n        } else {\r\n            Global.myDebugShortcutsPress = 2;\r\n        }\r\n    }\r\n});\r\n\r\n",
        "WL.registerComponent('evidence-objects', {\r\n    _myTrialTimer: { type: WL.Type.Object },\r\n    _myVentTimer: { type: WL.Type.Object },\r\n    _myTuciaDrawing: { type: WL.Type.Object },\r\n    _myCPlusPlusPrimer: { type: WL.Type.Object },\r\n    _myPiano: { type: WL.Type.Object },\r\n    _myMiccoTheBear: { type: WL.Type.Object },\r\n    _myStaringCube: { type: WL.Type.Object },\r\n    _myWaterLily: { type: WL.Type.Object },\r\n    _myLoL: { type: WL.Type.Object },\r\n    _myDrinkMeEarring: { type: WL.Type.Object },\r\n    _mySkate: { type: WL.Type.Object },\r\n    _myNotCoin: { type: WL.Type.Object },\r\n    _myPsi: { type: WL.Type.Object },\r\n    _myWonderland: { type: WL.Type.Object },\r\n    _myEthereum: { type: WL.Type.Object },\r\n    _myMrNOTEvidence: { type: WL.Type.Object },\r\n    _myHeart: { type: WL.Type.Object },\r\n    _myAntMainCharacter: { type: WL.Type.Object },\r\n    _myHaloSword: { type: WL.Type.Object },\r\n    _myFox: { type: WL.Type.Object },\r\n    _myPICO_8: { type: WL.Type.Object },\r\n    _myEggplant: { type: WL.Type.Object },\r\n    _myVR: { type: WL.Type.Object },\r\n    _myTrophy: { type: WL.Type.Object },\r\n    _myFamily: { type: WL.Type.Object },\r\n    _myMirror: { type: WL.Type.Object },\r\n    _myWayfinder: { type: WL.Type.Object },\r\n    _myEveryeye: { type: WL.Type.Object },\r\n    _myAloeVera: { type: WL.Type.Object },\r\n}, {\r\n    init: function () {\r\n        Global.myGameObjects.set(GameObjectType.TRIAL_TIMER, this._myTrialTimer);\r\n        Global.myGameObjects.set(GameObjectType.VENT_TIMER, this._myVentTimer);\r\n        Global.myGameObjects.set(GameObjectType.TUCIA_DRAWING, this._myTuciaDrawing);\r\n        Global.myGameObjects.set(GameObjectType.CPLUSPLUS_PRIMER, this._myCPlusPlusPrimer);\r\n        Global.myGameObjects.set(GameObjectType.PIANO, this._myPiano);\r\n        Global.myGameObjects.set(GameObjectType.MICCO_THE_BEAR, this._myMiccoTheBear);\r\n        Global.myGameObjects.set(GameObjectType.STARING_CUBE, this._myStaringCube);\r\n        Global.myGameObjects.set(GameObjectType.WATER_LILY, this._myWaterLily);\r\n        Global.myGameObjects.set(GameObjectType.LOL, this._myLoL);\r\n        Global.myGameObjects.set(GameObjectType.DRINK_ME_EARRING, this._myDrinkMeEarring);\r\n        Global.myGameObjects.set(GameObjectType.SKATE, this._mySkate);\r\n        Global.myGameObjects.set(GameObjectType.SHATTERED_COIN, this._myNotCoin);\r\n        Global.myGameObjects.set(GameObjectType.PSI, this._myPsi);\r\n        Global.myGameObjects.set(GameObjectType.WONDERLAND, this._myWonderland);\r\n        Global.myGameObjects.set(GameObjectType.ETHEREUM, this._myEthereum);\r\n        Global.myGameObjects.set(GameObjectType.MR_NOT_EVIDENCE, this._myMrNOTEvidence);\r\n        Global.myGameObjects.set(GameObjectType.HEART, this._myHeart);\r\n        Global.myGameObjects.set(GameObjectType.ANT_MAIN_CHARACTER, this._myAntMainCharacter);\r\n        Global.myGameObjects.set(GameObjectType.HALO_SWORD, this._myHaloSword);\r\n        Global.myGameObjects.set(GameObjectType.FOX, this._myFox);\r\n        Global.myGameObjects.set(GameObjectType.PICO_8, this._myPICO_8);\r\n        Global.myGameObjects.set(GameObjectType.EGGPLANT, this._myEggplant);\r\n        Global.myGameObjects.set(GameObjectType.VR, this._myVR);\r\n        Global.myGameObjects.set(GameObjectType.TROPHY, this._myTrophy);\r\n        Global.myGameObjects.set(GameObjectType.FAMILY, this._myFamily);\r\n        Global.myGameObjects.set(GameObjectType.MIRROR, this._myMirror);\r\n        Global.myGameObjects.set(GameObjectType.WAYFINDER, this._myWayfinder);\r\n        Global.myGameObjects.set(GameObjectType.EVERYEYE, this._myEveryeye);\r\n        Global.myGameObjects.set(GameObjectType.ALOE_VERA, this._myAloeVera);\r\n\r\n        let cloneParams = new PP.CloneParams();\r\n        cloneParams.myComponentsToInclude.push(\"mesh\");\r\n        cloneParams.myComponentsToInclude.push(\"text\");\r\n        cloneParams.myComponentsToInclude.push(\"text-color-fog\");\r\n        Global.myMeshObjects.set(GameObjectType.TRIAL_TIMER, this._myTrialTimer.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.VENT_TIMER, this._myVentTimer.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.TUCIA_DRAWING, this._myTuciaDrawing.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.CPLUSPLUS_PRIMER, this._myCPlusPlusPrimer.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.PIANO, this._myPiano.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.MICCO_THE_BEAR, this._myMiccoTheBear.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.STARING_CUBE, this._myStaringCube.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.WATER_LILY, this._myWaterLily.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.LOL, this._myLoL.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.DRINK_ME_EARRING, this._myDrinkMeEarring.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.SKATE, this._mySkate.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.SHATTERED_COIN, this._myNotCoin.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.PSI, this._myPsi.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.WONDERLAND, this._myWonderland.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.ETHEREUM, this._myEthereum.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.MR_NOT_EVIDENCE, this._myMrNOTEvidence.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.HEART, this._myHeart.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.ANT_MAIN_CHARACTER, this._myAntMainCharacter.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.HALO_SWORD, this._myHaloSword.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.FOX, this._myFox.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.PICO_8, this._myPICO_8.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.EGGPLANT, this._myEggplant.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.VR, this._myVR.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.TROPHY, this._myTrophy.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.FAMILY, this._myFamily.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.MIRROR, this._myMirror.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.WAYFINDER, this._myWayfinder.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.EVERYEYE, this._myEveryeye.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.ALOE_VERA, this._myAloeVera.pp_clone(cloneParams));\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n    },\r\n});\r\n\r\n",
        "WL.registerComponent(\"fireworks\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    update() {\r\n        if (PP.GamepadUtils.areButtonsPressEnd([PP.myRightGamepad, PP.ButtonType.SQUEEZE])) {\r\n            Global.myParticlesManager.fireworks([0, 5, -5], 2.5, [3, 3, 3]);\r\n        }\r\n    }\r\n});",
        "\r\nvar GameObjectType = {\r\n    MR_NOT: 0,\r\n    COIN: 1,\r\n    ARCADE_STICK_DISPUTE: 2,\r\n    ARCADE_STICK_CHAT: 3,\r\n    ARCADE_LEADERBOARD_DISPUTE: 4,\r\n    ARCADE_LEADERBOARD_CHAT: 5,\r\n    WONDERMELON: 6,\r\n    ZESTY_MARKET: 7,\r\n    FLOPPY_DISK: 8,\r\n    TRIAL_TIMER: 9,\r\n    TUCIA_DRAWING: 10,\r\n    CPLUSPLUS_PRIMER: 11,\r\n    PIANO: 12,\r\n    MICCO_THE_BEAR: 13,\r\n    STARING_CUBE: 14,\r\n    WATER_LILY: 15,\r\n    LOL: 16,\r\n    DRINK_ME_EARRING: 17,\r\n    SKATE: 18,\r\n    MR_NOT_CLONE: 19,\r\n    SHATTERED_COIN: 20,\r\n    NOT_COIN: 21,\r\n    PSI: 22,\r\n    VENT_TIMER: 23,\r\n    WONDERLAND: 24,\r\n    ETHEREUM: 25,\r\n    MR_NOT_EVIDENCE: 26,\r\n    HEART: 27,\r\n    ANT_MAIN_CHARACTER: 28,\r\n    HALO_SWORD: 29,\r\n    FOX: 30,\r\n    PICO_8: 31,\r\n    EGGPLANT: 32,\r\n    VR: 33,\r\n    TROPHY: 34,\r\n    FAMILY: 35,\r\n    MIRROR: 36,\r\n    WAYFINDER: 37,\r\n    EVERYEYE: 38,\r\n    ALOE_VERA: 39,\r\n};\r\n",
        "WL.registerComponent('get-player-transform', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n        Global.myPlayerPosition = this.object.pp_getPosition();\r\n        Global.myPlayerRotation = this.object.pp_getRotation();\r\n        Global.myPlayerForward = this.object.pp_getForward();\r\n        if (PP.XRUtils.isDeviceEmulated()) {\r\n            Global.myPlayerForward = [0, 0, -1];\r\n        }\r\n        Global.myPlayerUp = this.object.pp_getUp();\r\n    },\r\n});",
        "WL.registerComponent(\"hand-animator\", {\r\n    _myHandPieceObject: { type: WL.Type.Object },\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myHandObject = WL.scene.addObject(this.object);\r\n        this._myHandObject.pp_rotateObject([0, 180, 0]);\r\n\r\n        let cloneParams = new PP.CloneParams();\r\n        cloneParams.myIgnoreNonCloneable = true;\r\n        let handPieceBase = this._myHandPieceObject.pp_clone(cloneParams);\r\n        handPieceBase.pp_setParent(this._myHandObject);\r\n\r\n        let xDistance = 0.005;\r\n        let yDistance = 0.005;\r\n        let zDistance = 0.01;\r\n\r\n        let leftMultiplier = -1;\r\n        if (this._myHandedness == PP.HandednessIndex.RIGHT) {\r\n            leftMultiplier = 1;\r\n        }\r\n\r\n        let rotations = [[0, 0, 0], [0, 0, -90 * leftMultiplier], [0, 0, 180], [0, 0, 90 * leftMultiplier], [180, 0, -90],\r\n        [180, 0, (leftMultiplier > 0) ? 180 : 0], [180, 0, 90], [180, 0, (leftMultiplier < 0) ? 180 : 0]];\r\n        let endPositions = [[-xDistance * leftMultiplier, yDistance, -zDistance], [xDistance * -leftMultiplier, -yDistance, -zDistance], [xDistance * leftMultiplier, -yDistance, -zDistance], [xDistance * leftMultiplier, yDistance, -zDistance],\r\n        [xDistance, -yDistance * leftMultiplier, zDistance], [xDistance, yDistance * leftMultiplier, zDistance], [-xDistance, yDistance * leftMultiplier, zDistance], [-xDistance, -yDistance * leftMultiplier, zDistance]];\r\n\r\n        let elementsToRemove = [7, 5, 4];\r\n        if (this._myHandedness == PP.HandednessIndex.RIGHT) {\r\n            elementsToRemove = [7, 6, 5];\r\n        }\r\n\r\n        for (let index of elementsToRemove) {\r\n            rotations.pp_removeIndex(index);\r\n            endPositions.pp_removeIndex(index);\r\n        }\r\n\r\n        let startPosition = [0, 0, 0];\r\n\r\n        this._myHandPieces = [];\r\n\r\n        for (let i = 0; i < rotations.length; i++) {\r\n            let piece = null;\r\n            if (i == rotations.length - 1) {\r\n                piece = handPieceBase;\r\n            } else {\r\n                piece = handPieceBase.pp_clone(cloneParams);\r\n            }\r\n\r\n            piece.pp_rotateObject(rotations[i]);\r\n            this._myHandPieces[i] = new HandPiece(piece, startPosition, endPositions[i]);\r\n        }\r\n\r\n        this._myGamepad = PP.myGamepads[PP.InputUtils.getHandednessByIndex(this._myHandedness)];\r\n\r\n        this._myAppearList = [];\r\n        this._myStarted = false;\r\n\r\n        this._myPulseTimer = new PP.Timer(0.25);\r\n\r\n        this._myHandPose = new PP.HandPose(PP.InputUtils.getHandednessByIndex(this._myHandedness));\r\n        this._myHandPose.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myHandPose.update(dt);\r\n\r\n        for (let piece of this._myHandPieces) {\r\n            if (PP.InputUtils.getInputSourceType(this._myHandPose._myHandedness) == PP.InputSourceType.GAMEPAD) {\r\n                piece.update(dt, this._myGamepad.getButtonInfo(PP.ButtonType.SQUEEZE).myValue);\r\n            } else {\r\n                let pressValue = 0;\r\n                if (this._myGamepad.getButtonInfo(PP.ButtonType.SELECT).myIsPressed || this._myGamepad.getButtonInfo(PP.ButtonType.SQUEEZE).myIsPressed) {\r\n                    pressValue = 1;\r\n                }\r\n\r\n                piece.update(dt, pressValue);\r\n            }\r\n\r\n            piece.setVisible(this._myHandPose.isValid());\r\n        }\r\n\r\n        if (this._myAppearList.length > 0) {\r\n            let first = this._myAppearList[0];\r\n            first[1].update(dt);\r\n            if (first[1].isDone()) {\r\n                this._myHandPieces[first[0]].start();\r\n                this._myAppearList.shift();\r\n            }\r\n        }\r\n\r\n        if (this._myStarted && !this.isDone()) {\r\n            this._myPulseTimer.update(dt);\r\n            if (this._myPulseTimer.isDone()) {\r\n                this._myGamepad.pulse(0.5);\r\n            }\r\n        }\r\n    },\r\n    begin: function () {\r\n        this._myStarted = true;\r\n        this._myAppearList = [];\r\n\r\n        let indexList = [];\r\n        for (let i = 0; i < this._myHandPieces.length; i++) {\r\n            indexList[i] = i;\r\n        }\r\n\r\n        let firstTime = true;\r\n        while (indexList.length > 0) {\r\n            let randomIndex = Math.pp_randomInt(0, indexList.length - 1);\r\n            let index = indexList.pp_removeIndex(randomIndex);\r\n\r\n            let randomTimer = Math.pp_random(0.15, 0.45);\r\n            if (firstTime) {\r\n                randomTimer = 0.1;\r\n                firstTime = false;\r\n            }\r\n\r\n            this._myAppearList.push([index, new PP.Timer(randomTimer)]);\r\n        }\r\n    },\r\n    isDone: function () {\r\n        let done = true;\r\n\r\n        for (let piece of this._myHandPieces) {\r\n            done = done && piece.isDone();\r\n        }\r\n\r\n        return done;\r\n    },\r\n    skip: function () {\r\n        for (let piece of this._myHandPieces) {\r\n            piece.skip();\r\n        }\r\n\r\n        this._myAppearList = [];\r\n    }\r\n});\r\n\r\nclass HandPiece {\r\n    constructor(object, startPosition, endPosition) {\r\n        this._myObject = object;\r\n        this._myStartPosition = startPosition;\r\n        this._myEndPosition = endPosition;\r\n\r\n        this._myCurrentPosition = startPosition.slice(0);\r\n\r\n        this._myIsVisible = false;\r\n        this._myIsActive = false;\r\n        this._myObject.pp_setActive(this._myIsVisible);\r\n\r\n        this._myScale = 0;\r\n        this._myObject.pp_setScale(this._myScale);\r\n\r\n        this._myTimer = new PP.Timer(1);\r\n\r\n        this._myAudio = Global.myAudioManager.createAudioPlayer(SfxID.HAND_PIECE_APPEAR);\r\n        this._myAudio.setPitch(Math.pp_random(0.7, 1));\r\n    }\r\n\r\n    start() {\r\n        this._myIsActive = true;\r\n\r\n        this._myAudio.play();\r\n    }\r\n\r\n    update(dt, interpolateValue) {\r\n        if (this._myIsActive) {\r\n            if (this._myTimer.isRunning()) {\r\n                this._myTimer.update(dt);\r\n\r\n                this._myScale = PP.EasingFunction.easeInOut(this._myTimer.getPercentage());\r\n                this._myObject.pp_setScale(this._myScale);\r\n\r\n                this._myAudio.updatePosition(this._myObject.pp_getPosition());\r\n            }\r\n\r\n            glMatrix.vec3.lerp(this._myCurrentPosition, this._myEndPosition, this._myStartPosition, interpolateValue);\r\n            this._myObject.pp_setPositionLocal(this._myCurrentPosition);\r\n        }\r\n    }\r\n\r\n    isDone() {\r\n        return this._myScale == 1;\r\n    }\r\n\r\n    skip() {\r\n        this._myIsActive = true;\r\n\r\n        this._myTimer.reset();\r\n\r\n        this._myAudio.stop();\r\n\r\n        this._myScale = 1;\r\n        this._myObject.pp_setScale(this._myScale);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myIsVisible != (this._myIsActive && visible)) {\r\n            this._myIsVisible = this._myIsActive && visible;\r\n            this._myObject.pp_setActive(this._myIsVisible);\r\n        }\r\n    }\r\n}",
        "WL.registerComponent(\"light-fade-in\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myLight = this.object.pp_getComponent(\"light\");\r\n        this._myLightColor = this._myLight.color.pp_clone();\r\n\r\n        this._myLight.color[0] = 0;\r\n        this._myLight.color[1] = 0;\r\n        this._myLight.color[2] = 0;\r\n\r\n        this._myFadeTimer = new PP.Timer(Global.myLightFadeInTime);\r\n        this._myFadeOutTimer = new PP.Timer(Global.myLightFadeInTime);\r\n\r\n        this._myLastFadeOut = false;\r\n    },\r\n    update(dt) {\r\n        if (!Global.myStartFadeOut && this._myFadeTimer.isRunning()) {\r\n            this._myFadeTimer.update(dt);\r\n\r\n            this._myLight.color[0] = this._myLightColor[0] * PP.EasingFunction.easeOut(this._myFadeTimer.getPercentage());\r\n            this._myLight.color[1] = this._myLightColor[1] * PP.EasingFunction.easeOut(this._myFadeTimer.getPercentage());\r\n            this._myLight.color[2] = this._myLightColor[2] * PP.EasingFunction.easeOut(this._myFadeTimer.getPercentage());\r\n        }\r\n\r\n        if (!this._myLastFadeOut && Global.myStartFadeOut) {\r\n            this._myFadeOutTimer.start(Global.myLightFadeInTime);\r\n        }\r\n        this._myLastFadeOut = Global.myStartFadeOut;\r\n\r\n        if (Global.myStartFadeOut) {\r\n            if (this._myFadeOutTimer.isRunning()) {\r\n                this._myFadeOutTimer.update(dt);\r\n\r\n                this._myLight.color[0] = this._myLightColor[0] * (1 - PP.EasingFunction.easeIn(this._myFadeOutTimer.getPercentage()));\r\n                this._myLight.color[1] = this._myLightColor[1] * (1 - PP.EasingFunction.easeIn(this._myFadeOutTimer.getPercentage()));\r\n                this._myLight.color[2] = this._myLightColor[2] * (1 - PP.EasingFunction.easeIn(this._myFadeOutTimer.getPercentage()));\r\n            }\r\n        }\r\n\r\n    },\r\n    onActivate: function () {\r\n        this._myFadeTimer.start(Global.myLightFadeInTime);\r\n    },\r\n    onDeactivate: function () {\r\n        this._myLight.color[0] = 0;\r\n        this._myLight.color[1] = 0;\r\n        this._myLight.color[2] = 0;\r\n    },\r\n});",
        "WL.registerComponent(\"material-container\", {\r\n    _myTitle: { type: WL.Type.Material },\r\n    _mySubtitle: { type: WL.Type.Material },\r\n    _myText: { type: WL.Type.Material },\r\n    _myBigText: { type: WL.Type.Material },\r\n    _myTitlePatch: { type: WL.Type.Object },\r\n    _myBigBlatherPatch: { type: WL.Type.Object },\r\n}, {\r\n    init: function () {\r\n        Global.myMaterials = {};\r\n        Global.myMaterials.myTitle = this._myTitle.clone();\r\n        Global.myMaterials.mySubtitle = this._mySubtitle.clone();\r\n        Global.myMaterials.myText = this._myText.clone();\r\n        Global.myMaterials.myBigText = this._myBigText.clone();\r\n\r\n        Global.myTitlePatchObject = this._myTitlePatch;\r\n        Global.myBigBlatherPatchObject = this._myBigBlatherPatch;\r\n        Global.myBigBlatherPatchObject.pp_setActive(false);\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n    }\r\n});",
        "WL.registerComponent('menu-objects', {\r\n    _myCoin: { type: WL.Type.Object },\r\n    _myNotCoin: { type: WL.Type.Object },\r\n    _myArcadeStickDispute: { type: WL.Type.Object },\r\n    _myArcadeStickChat: { type: WL.Type.Object },\r\n    _myArcadLeaderboardeDispute: { type: WL.Type.Object },\r\n    _myArcadLeaderboardeChat: { type: WL.Type.Object },\r\n    _myWondermelon: { type: WL.Type.Object },\r\n    _myZestyMarket: { type: WL.Type.Object },\r\n    _myFloppyDisk: { type: WL.Type.Object }\r\n}, {\r\n    init: function () {\r\n        Global.myGameObjects.set(GameObjectType.COIN, this._myCoin);\r\n        Global.myGameObjects.set(GameObjectType.NOT_COIN, this._myNotCoin);\r\n        Global.myGameObjects.set(GameObjectType.ARCADE_STICK_DISPUTE, this._myArcadeStickDispute);\r\n        Global.myGameObjects.set(GameObjectType.ARCADE_STICK_CHAT, this._myArcadeStickChat);\r\n        Global.myGameObjects.set(GameObjectType.ARCADE_LEADERBOARD_DISPUTE, this._myArcadLeaderboardeDispute);\r\n        Global.myGameObjects.set(GameObjectType.ARCADE_LEADERBOARD_CHAT, this._myArcadLeaderboardeChat);\r\n        Global.myGameObjects.set(GameObjectType.WONDERMELON, this._myWondermelon);\r\n        Global.myGameObjects.set(GameObjectType.ZESTY_MARKET, this._myZestyMarket);\r\n        Global.myGameObjects.set(GameObjectType.FLOPPY_DISK, this._myFloppyDisk);\r\n\r\n        let cloneParams = new PP.CloneParams();\r\n        cloneParams.myComponentsToInclude.push(\"mesh\");\r\n        Global.myMeshObjects.set(GameObjectType.ARCADE_STICK_DISPUTE, this._myArcadeStickDispute.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.ARCADE_STICK_CHAT, this._myArcadeStickChat.pp_clone(cloneParams));\r\n\r\n        cloneParams.myComponentsToInclude.push(\"text\");\r\n        cloneParams.myComponentsToInclude.push(\"text-color-fog\");\r\n        Global.myMeshObjects.set(GameObjectType.COIN, this._myCoin.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.NOT_COIN, this._myNotCoin.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.ARCADE_LEADERBOARD_DISPUTE, this._myArcadLeaderboardeDispute.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.ARCADE_LEADERBOARD_CHAT, this._myArcadLeaderboardeChat.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.WONDERMELON, this._myWondermelon.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.ZESTY_MARKET, this._myZestyMarket.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.FLOPPY_DISK, this._myFloppyDisk.pp_clone(cloneParams));\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n    },\r\n});\r\n\r\n",
        "WL.registerComponent('mr_NOT_object', {\r\n    _myMrNOT: { type: WL.Type.Object },\r\n    _myMrNOTClone: { type: WL.Type.Object },\r\n}, {\r\n    init: function () {\r\n        Global.myGameObjects.set(GameObjectType.MR_NOT, this._myMrNOT);\r\n        Global.myGameObjects.set(GameObjectType.MR_NOT_CLONE, this._myMrNOTClone);\r\n\r\n        let cloneParams = new PP.CloneParams();\r\n        cloneParams.myComponentsToInclude.push(\"mesh\");\r\n        Global.myMeshObjects.set(GameObjectType.MR_NOT, this._myMrNOT.pp_clone(cloneParams));\r\n        Global.myMeshObjects.set(GameObjectType.MR_NOT_CLONE, this._myMrNOTClone.pp_clone(cloneParams));\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n    },\r\n});\r\n\r\n",
        "WL.registerComponent(\"mr_not_mirror\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n    },\r\n    update: function (dt) {\r\n        if (Global.myUpdateReady) {\r\n            let difference = this.object.pp_getPosition().vec3_sub(Global.myPlayerPosition);\r\n            let diffLength = difference.vec3_length();\r\n\r\n            let distanceFactor = Math.pp_mapToRange(diffLength, 0.1, 0.5, 0.9, 0);\r\n\r\n            let forward = this.object.pp_getUp();\r\n            let playerForward = Global.myPlayerForward;\r\n            if (!forward.vec3_isConcordant(playerForward)) {\r\n                playerForward = playerForward.vec3_negate();\r\n            }\r\n\r\n            let angle = Math.pp_toDegrees(forward.vec3_angleRadians(playerForward));\r\n\r\n            let angleFactor = Math.pp_mapToRange(angle, 10, 45, 0.9, 0);\r\n\r\n            let alpha = Math.pp_clamp(angleFactor * distanceFactor, 0, 0.6);\r\n\r\n            PP.MeshUtils.setAlpha(this.object, alpha);\r\n        }\r\n    }\r\n});",
        "class NotEnough {\r\n    constructor(audioPosition = null) {\r\n        this._myTimer = new PP.Timer(1, false);\r\n        this._myExtraTimer = new PP.Timer(2, false);\r\n        this._myNotEnoughAudio = Global.myAudioManager.createAudioPlayer(SfxID.NOT_ENOUGH);\r\n        this._myAudioPosition = audioPosition;\r\n    }\r\n\r\n    start() {\r\n        this._myTimer.start();\r\n\r\n        if (this._myAudioPosition && false) {\r\n            this._myNotEnoughAudio.setPosition(this._myAudioPosition);\r\n        } else {\r\n            this._updateAudioPosition();\r\n        }\r\n\r\n        this._myNotEnoughAudio.play();\r\n\r\n        this._myLeftTimer = new PP.Timer(0);\r\n        this._myRightTimer = new PP.Timer(0);\r\n\r\n        this._myLastLeftIntensity = 0.4;\r\n        this._myLastRightIntensity = 0.4;\r\n\r\n        if (Math.pp_random() < 0.5) {\r\n            this._myLastRightIntensity = 0.7;\r\n        } else {\r\n            this._myLastLeftIntensity = 0.7;\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        this._myTimer.reset();\r\n        Global.myPlayerRumbleObject.pp_resetPositionLocal();\r\n        Global.myTitlesRumbleObject.pp_resetPositionLocal();\r\n        this._myExtraTimer.start();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myTimer.isRunning()) {\r\n            this._myTimer.update(dt);\r\n\r\n            this._updateAudioPosition();\r\n\r\n            let rumbleValue = 0.04;\r\n            Global.myPlayerRumbleObject.pp_setPositionLocal([Math.pp_random(-rumbleValue, rumbleValue), Math.pp_random(-rumbleValue, rumbleValue), Math.pp_random(-rumbleValue, rumbleValue)]);\r\n            rumbleValue = 8;\r\n            Global.myTitlesRumbleObject.pp_setPositionLocal([Math.pp_random(-rumbleValue, rumbleValue), Math.pp_random(-rumbleValue, rumbleValue), Math.pp_random(-rumbleValue, rumbleValue)]);\r\n\r\n            this._myLeftTimer.update(dt);\r\n            if (this._myLeftTimer.isDone()) {\r\n                this._myLeftTimer.start(Math.pp_random(0.25, 0.4));\r\n\r\n                let intensity = Math.pp_random(0.3, 0.5);\r\n                if (this._myLastLeftIntensity < 0.55) {\r\n                    intensity = Math.pp_random(0.65, 0.8);\r\n                }\r\n                this._myLastLeftIntensity = intensity;\r\n\r\n                PP.myLeftGamepad.pulse(intensity, this._myLeftTimer.getDuration() + 0.05);\r\n            }\r\n\r\n            this._myRightTimer.update(dt);\r\n            if (this._myRightTimer.isDone()) {\r\n                this._myRightTimer.start(Math.pp_random(0.25, 0.4));\r\n\r\n                let intensity = Math.pp_random(0.3, 0.5);\r\n                if (this._myLastRightIntensity < 0.55) {\r\n                    intensity = Math.pp_random(0.65, 0.8);\r\n                }\r\n                this._myLastRightIntensity = intensity;\r\n\r\n                PP.myRightGamepad.pulse(intensity, this._myRightTimer.getDuration() + 0.05);\r\n            }\r\n\r\n            if (this._myTimer.isDone()) {\r\n                this.stop();\r\n\r\n                PP.myLeftGamepad.pulse(this._myLastLeftIntensity, Math.pp_random(0.25, 0.35));\r\n                PP.myRightGamepad.pulse(this._myLastRightIntensity, Math.pp_random(0.25, 0.35));\r\n            }\r\n\r\n        }\r\n\r\n        if (this._myExtraTimer.isRunning()) {\r\n            this._myExtraTimer.update(dt);\r\n            this._updateAudioPosition();\r\n        }\r\n    }\r\n\r\n    _updateAudioPosition() {\r\n        let position = Global.myPlayerPosition.vec3_clone();\r\n        position.vec3_add(Global.myPlayerUp.vec3_scale(0.15), position);\r\n        position.vec3_add(Global.myPlayerForward.vec3_scale(0.5), position);\r\n        this._myNotEnoughAudio.updatePosition(position);\r\n    }\r\n\r\n    isNotEnoughing() {\r\n        return this._myTimer.isRunning();\r\n    }\r\n}",
        "WL.registerComponent(\"palette-visualizer\", {\r\n    _myPaletteObject: { type: WL.Type.Object },\r\n    _myPaletteObjectScaleFactor: { type: WL.Type.Float, default: 1 },\r\n    _myOffsetX: { type: WL.Type.Float, default: 0.05 },\r\n    _myOffsetY: { type: WL.Type.Float, default: 0.05 },\r\n    _myCloneMaterial: { type: WL.Type.Bool, default: false },\r\n    _my1: { type: WL.Type.Material },\r\n    _my2: { type: WL.Type.Material },\r\n    _my3: { type: WL.Type.Material },\r\n    _my4: { type: WL.Type.Material },\r\n    _my5: { type: WL.Type.Material },\r\n    _my6: { type: WL.Type.Material },\r\n    _my7: { type: WL.Type.Material },\r\n    _my8: { type: WL.Type.Material },\r\n    _my9: { type: WL.Type.Material },\r\n    _my10: { type: WL.Type.Material },\r\n    _my11: { type: WL.Type.Material },\r\n    _my12: { type: WL.Type.Material },\r\n    _my13: { type: WL.Type.Material },\r\n    _my14: { type: WL.Type.Material },\r\n    _my15: { type: WL.Type.Material },\r\n    _my16: { type: WL.Type.Material }\r\n}, {\r\n    init: function () {\r\n        this._myMeshes = [];\r\n\r\n        this._myMaterials = [];\r\n        for (let i = 1; i < 17; i++) {\r\n            let material = \"_my\".concat(i);\r\n            if (this._myCloneMaterial) {\r\n                this._myMaterials.push(this[material].clone());\r\n            } else {\r\n                this._myMaterials.push(this[material]);\r\n            }\r\n        }\r\n\r\n        this._myColumns = Math.ceil(Math.sqrt(this._myMaterials.length));\r\n        this._myRows = Math.ceil(this._myMaterials.length / this._myColumns);\r\n    },\r\n    start: function () {\r\n        let cloneParams = new PP.CloneParams();\r\n        cloneParams.myComponentsToInclude.push(\"mesh\");\r\n\r\n        let positions = this._createPositions();\r\n        for (let i = 0; i < this._myMaterials.length; i++) {\r\n            let newObject = this._myPaletteObject.pp_clone(cloneParams);\r\n\r\n            newObject.pp_setParent(this.object);\r\n            newObject.pp_setPositionLocal(positions[i]);\r\n            newObject.pp_scaleObject(this._myPaletteObjectScaleFactor);\r\n            newObject.pp_resetRotationLocal();\r\n            newObject.pp_setActive(true);\r\n\r\n            PP.MeshUtils.setMaterial(newObject, this._myMaterials[i], false);\r\n        }\r\n    },\r\n    update: function (dt) {\r\n    },\r\n    _createPositions() {\r\n        let positions = [];\r\n        let startingRowPosition = vec3_create();\r\n        let startingColumnPosition = vec3_create();\r\n\r\n        let halfColumn = Math.floor(this._myColumns / 2);\r\n        startingColumnPosition[0] = -(this._myOffsetX * halfColumn);\r\n        if (this._myColumns % 2 == 0) {\r\n            startingColumnPosition[0] += this._myOffsetX / 2;\r\n        }\r\n\r\n        let halfRow = Math.floor(this._myRows / 2);\r\n        startingRowPosition[1] = +(this._myOffsetX * halfRow);\r\n        if (this._myRows % 2 == 0) {\r\n            startingRowPosition[1] -= this._myOffsetX / 2;\r\n        }\r\n\r\n        for (let i = 0; i < this._myRows; i++) {\r\n            let rowPosition = startingRowPosition.pp_clone();\r\n            rowPosition[1] -= this._myOffsetY * i;\r\n            for (let j = 0; j < this._myColumns; j++) {\r\n                let position = rowPosition.pp_clone();\r\n                position.vec3_add(startingColumnPosition, position);\r\n                position[0] += this._myOffsetX * j;\r\n\r\n                positions.push(position);\r\n            }\r\n        }\r\n\r\n        return positions;\r\n    }\r\n});",
        "class ParticlesManager {\r\n    constructor() {\r\n        this._myParticlesList = [];\r\n    }\r\n\r\n    update(dt) {\r\n        for (let particles of this._myParticlesList) {\r\n            particles.update(dt);\r\n        }\r\n\r\n        this._myParticlesList.pp_removeAll(element => element.isDone());\r\n    }\r\n\r\n    explosion(position, radius, objectScale, objectType, noFog = false) {\r\n        let explosionParticles = new ExplosionParticles(position, radius, objectScale, objectType, noFog);\r\n        this._myParticlesList.push(explosionParticles);\r\n    }\r\n\r\n    fireworks(position, radius, objectScale) {\r\n        let explosionParticles = new FireworkParticles(position, radius, objectScale);\r\n        this._myParticlesList.push(explosionParticles);\r\n    }\r\n\r\n    mrNOTParticles(position) {\r\n        let explosionParticles = new MrNOTParticles(position, 3, [1, 1, 1].vec3_scale(PP.myEasyTuneVariables.get(\"mr NOT Clone Scale\")));\r\n        this._myParticlesList.push(explosionParticles);\r\n    }\r\n}\r\n\r\nclass ExplosionParticles {\r\n    constructor(position, radius, objectScale, objectType, noFog) {\r\n        this._myPosition = position.slice(0);\r\n        this._myScale = objectScale[0];\r\n        this._myRadius = radius;\r\n        this._myObjectType = objectType;\r\n        this._myNoFog = noFog;\r\n\r\n        this._myTimer = new PP.Timer(PP.myEasyTuneVariables.get(\"Explosion Particles Duration\"));\r\n        this._mySpawnTimer = new PP.Timer(0);\r\n        this._myParticles = [];\r\n\r\n        this._myLastScale = 1;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myTimer.isRunning()) {\r\n            this._myTimer.update(dt);\r\n\r\n            this._mySpawnTimer.update(dt);\r\n            if (this._mySpawnTimer.isDone()) {\r\n                for (let i = 0; i < PP.myEasyTuneVariables.get(\"Explosion Particles Amount\"); i++) {\r\n                    this._myParticles.push(this._createParticle());\r\n                }\r\n                this._mySpawnTimer.start(PP.myEasyTuneVariables.get(\"Explosion Particles Delay\"));\r\n            }\r\n        }\r\n\r\n        for (let particle of this._myParticles) {\r\n            particle.update(dt);\r\n        }\r\n\r\n        this._myParticles.pp_removeAll(element => element.isDone());\r\n\r\n    }\r\n\r\n    isDone() {\r\n        return this._myTimer.isDone() && this._myParticles.length == 0;\r\n    }\r\n\r\n    _createParticle() {\r\n        let direction = [0, 0, 1];\r\n        direction = direction.vec3_rotate([Math.pp_random(-180, 180), Math.pp_random(-180, 180), Math.pp_random(-180, 180)]);\r\n\r\n        let radius = Math.pp_random(this._myRadius * 0.75, this._myRadius * 1.25);\r\n        let position = direction.vec3_scale(radius).vec3_add(this._myPosition);\r\n\r\n        let minScale = 0.1;\r\n        let maxScale = 0.25;\r\n        let half = (maxScale + minScale) / 2;\r\n\r\n        let scale = half;\r\n\r\n        if (this._myLastScale >= 0) {\r\n            let ottave = (maxScale - minScale) / 8;\r\n            if (this._myLastScale > half) {\r\n                scale = Math.pp_random(this._myScale * minScale, this._myScale * (half + ottave));\r\n            } else {\r\n                scale = Math.pp_random(this._myScale * (half - ottave), this._myScale * maxScale);\r\n            }\r\n        }\r\n\r\n        this._myLastScale = scale;\r\n\r\n        return new ExplosionParticle(position, scale, this._myObjectType, this._myNoFog);\r\n    }\r\n}\r\n\r\nclass FireworkParticles {\r\n    constructor(position, radius, objectScale) {\r\n        this._myPosition = position.slice(0);\r\n        this._myScale = objectScale[0];\r\n        this._myRadius = radius;\r\n\r\n        this._myTimer = new PP.Timer(5);\r\n        this._mySpawnTimer = new PP.Timer(0);\r\n        this._myParticles = [];\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myTimer.isRunning()) {\r\n            this._myTimer.update(dt);\r\n\r\n            this._mySpawnTimer.update(dt);\r\n            if (this._mySpawnTimer.isDone()) {\r\n                for (let i = 0; i < 5; i++) {\r\n                    this._myParticles.push(this._createParticle());\r\n                }\r\n                this._mySpawnTimer.start(PP.myEasyTuneVariables.get(\"Explosion Particles Delay\"));\r\n            }\r\n        }\r\n\r\n        for (let particle of this._myParticles) {\r\n            particle.update(dt);\r\n        }\r\n\r\n        this._myParticles.pp_removeAll(element => element.isDone());\r\n\r\n    }\r\n\r\n    isDone() {\r\n        return this._myTimer.isDone() && this._myParticles.length == 0;\r\n    }\r\n\r\n    _createParticle() {\r\n        let direction = [0, 0, 1];\r\n        direction = direction.vec3_rotate([Math.pp_random(-180, 180), Math.pp_random(-180, 180), Math.pp_random(-180, 180)]);\r\n\r\n        let radius = Math.pp_random(this._myRadius * 0.2, this._myRadius);\r\n        let position = direction.vec3_scale(radius).vec3_add(this._myPosition);\r\n        let scale = Math.pp_random(this._myScale * 0.1, this._myScale * 0.25);\r\n\r\n        let random = 0;\r\n        while (random == 0) {\r\n            random = Math.pp_randomInt(1, 39);\r\n            if (random == 18 || random == 19 || random == 18) {\r\n                random = 0;\r\n            }\r\n        }\r\n\r\n        return new ExplosionParticle(position, scale, random, true);\r\n    }\r\n}\r\n\r\nclass MrNOTParticles {\r\n    constructor(position, radius, objectScale) {\r\n        this._myPosition = position.slice(0);\r\n        this._myScale = objectScale[0];\r\n        this._myRadius = radius;\r\n\r\n        this._myTimer = new PP.Timer(1);\r\n        this._mySpawnTimer = new PP.Timer(0);\r\n        this._myParticles = [];\r\n\r\n        this._myIsInFrontOfPlayer = 0;\r\n        this._myInFrontOfPlayerCreated = false;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myTimer.isRunning()) {\r\n            this._myTimer.update(dt);\r\n\r\n            this._mySpawnTimer.update(dt);\r\n            if (this._mySpawnTimer.isDone()) {\r\n                let numberOfParticles = 3;\r\n                for (let i = 0; i < numberOfParticles; i++) {\r\n                    this._myParticles.push(this._createParticle(i == numberOfParticles - 1));\r\n                }\r\n                this._mySpawnTimer.start(PP.myEasyTuneVariables.get(\"Explosion Particles Delay\"));\r\n\r\n                this._myIsInFrontOfPlayer = (this._myIsInFrontOfPlayer + 1) % 2;\r\n                this._myInFrontOfPlayerCreated = false;\r\n            }\r\n        }\r\n\r\n        for (let particle of this._myParticles) {\r\n            particle.update(dt);\r\n        }\r\n\r\n        this._myParticles.pp_removeAll(element => element.isDone());\r\n\r\n    }\r\n\r\n    isDone() {\r\n        return this._myTimer.isDone() && this._myParticles.length == 0;\r\n    }\r\n\r\n    _createParticle(isLast) {\r\n        let direction = [0, 0, 1];\r\n        direction = direction.vec3_rotate([Math.pp_random(-180, 180), Math.pp_random(-180, 180), Math.pp_random(-180, 180)]);\r\n\r\n        let radius = Math.pp_random(this._myRadius * 0.75, this._myRadius);\r\n        let position = direction.vec3_scale(radius).vec3_add(this._myPosition);\r\n        position.vec3_add([0, -0.6, 0], position);\r\n        let scale = Math.pp_random(this._myScale * 1.5, this._myScale * (1.5 + 0.15));\r\n\r\n        if (!this._myInFrontOfPlayerCreated && this._myIsInFrontOfPlayer == 0) {\r\n            let checkFrontVector = position.vec3_sub(Global.myPlayerPosition);\r\n            let angle = checkFrontVector.vec3_angle(Global.myPlayerForward);\r\n\r\n            if (angle < 25) {\r\n                this._myInFrontOfPlayerCreated = true;\r\n            } else if (isLast) {\r\n                let attempts = 100;\r\n                while (attempts > 0 && angle >= 25) {\r\n                    attempts--;\r\n                    direction.vec3_set(0, 0, 1);\r\n                    direction.vec3_rotate([Math.pp_random(-180, 180), Math.pp_random(-180, 180), Math.pp_random(-180, 180)], direction);\r\n                    direction.vec3_scale(radius, position).vec3_add(this._myPosition, position);\r\n                    position.vec3_add([0, -0.6, 0], position);\r\n\r\n                    position.vec3_sub(Global.myPlayerPosition, checkFrontVector);\r\n                    angle = checkFrontVector.vec3_angle(Global.myPlayerForward);\r\n                }\r\n            }\r\n        }\r\n\r\n        return new MrNOTParticle(position, scale, GameObjectType.MR_NOT, true);\r\n    }\r\n}\r\n\r\nclass ExplosionParticle {\r\n    constructor(position, scale, objectType, noFog) {\r\n        this._myNoFog = noFog;\r\n        this._myObjectType = objectType;\r\n        if (this._myNoFog) {\r\n            this._myObject = Global.myMeshNoFogObjectPoolMap.getObject(objectType);\r\n        } else {\r\n            this._myObject = Global.myMeshObjectPoolMap.getObject(objectType);\r\n        }\r\n        this._myObject.pp_setPosition(position);\r\n        this._myObject.pp_setScale(scale);\r\n        this._myScale = this._myObject.pp_getScale();\r\n        this._myObject.pp_setRotation([Math.pp_random(-180, 180), Math.pp_random(-180, 180), Math.pp_random(-180, 180)]);\r\n        this._myObject.pp_setActive(true);\r\n\r\n        this._myTimer = new PP.Timer(PP.myEasyTuneVariables.get(\"Explosion Particle Life\"));\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myTimer.isRunning()) {\r\n            this._myTimer.update(dt);\r\n\r\n            let scaleMultiplier = Math.pp_interpolate(1, PP.myEasyTuneVariables.get(\"Unspawn Menu Scale\"), this._myTimer.getPercentage());\r\n            this._myObject.pp_setScale(this._myScale.vec3_scale(scaleMultiplier));\r\n\r\n            if (this._myTimer.isDone()) {\r\n                if (this._myNoFog) {\r\n                    Global.myMeshNoFogObjectPoolMap.releaseObject(this._myObjectType, this._myObject);\r\n                } else {\r\n                    Global.myMeshObjectPoolMap.releaseObject(this._myObjectType, this._myObject);\r\n                }\r\n                this._myObject = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    isDone() {\r\n        return this._myTimer.isDone();\r\n    }\r\n}\r\n\r\nclass MrNOTParticle {\r\n    constructor(position, scale, objectType, noFog) {\r\n        this._myNoFog = noFog;\r\n        this._myObjectType = objectType;\r\n        if (this._myNoFog) {\r\n            this._myObject = Global.myMeshNoFogObjectPoolMap.getObject(objectType);\r\n        } else {\r\n            this._myObject = Global.myMeshObjectPoolMap.getObject(objectType);\r\n        }\r\n        this._myObject.pp_setPosition(position);\r\n        this._myObject.pp_setScale(scale);\r\n        this._myScale = this._myObject.pp_getScale();\r\n        this._myObject.pp_lookAt(Global.myPlayerPosition, [0, 1, 0]);\r\n        this._myObject.pp_setActive(true);\r\n\r\n        this._myTimer = new PP.Timer(PP.myEasyTuneVariables.get(\"Explosion Particle Life\"));\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myTimer.isRunning()) {\r\n            this._myTimer.update(dt);\r\n\r\n            let scaleMultiplier = Math.pp_interpolate(1, PP.myEasyTuneVariables.get(\"Unspawn Menu Scale\"), this._myTimer.getPercentage());\r\n            this._myObject.pp_setScale(this._myScale.vec3_scale(scaleMultiplier));\r\n\r\n            if (this._myTimer.isDone()) {\r\n                if (this._myNoFog) {\r\n                    Global.myMeshNoFogObjectPoolMap.releaseObject(this._myObjectType, this._myObject);\r\n                } else {\r\n                    Global.myMeshObjectPoolMap.releaseObject(this._myObjectType, this._myObject);\r\n                }\r\n                this._myObject = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    isDone() {\r\n        return this._myTimer.isDone();\r\n    }\r\n}",
        "WL.registerComponent('physx-collector-component', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myCollisionsCollector = null;\r\n        this._myPhysx = this.object.pp_getComponent(\"physx\");\r\n        if (this._myPhysx) {\r\n            this._myCollisionsCollector = new PP.PhysXCollisionCollector(this._myPhysx);\r\n        }\r\n    },\r\n    getCollisionsCollector() {\r\n        return this._myCollisionsCollector;\r\n    },\r\n    onActivate() {\r\n        if (this._myCollisionsCollector) {\r\n            this._myCollisionsCollector.setActive(true);\r\n        }\r\n    },\r\n    onDeactivate() {\r\n        if (this._myCollisionsCollector) {\r\n            this._myCollisionsCollector.setActive(false);\r\n        }\r\n    },\r\n    pp_clone(clone) {\r\n        if (clone._myCollisionsCollector == null) {\r\n            clone._myPhysx = clone.object.pp_getComponent(\"physx\");\r\n            if (clone._myPhysx) {\r\n                clone._myCollisionsCollector = new PP.PhysXCollisionCollector(clone._myPhysx);\r\n            }\r\n        }\r\n    }\r\n});",
        "WL.registerComponent(\"pulse-on-grab\", {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        if (this._myHandedness == 0) {\r\n            this._myGamepad = PP.myLeftGamepad;\r\n        } else {\r\n            this._myGamepad = PP.myRightGamepad;\r\n        }\r\n\r\n        let grab = this.object.pp_getComponent(\"pp-grabber-hand\");\r\n        grab.registerGrabEventListener(this, this._onGrab.bind(this));\r\n        grab.registerThrowEventListener(this, this._onThrow.bind(this));\r\n\r\n        this._myGrabAudio = Global.myAudioManager.createAudioPlayer(SfxID.GRAB);\r\n        this._myThrowAudio = Global.myAudioManager.createAudioPlayer(SfxID.THROW);\r\n\r\n        this._myGrabPitch = this._myGrabAudio.getPitch();\r\n        this._myThrowPitch = this._myThrowAudio.getPitch();\r\n\r\n        this._myHandednessType = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n    },\r\n    _onGrab() {\r\n        let intensity = 0.2;\r\n        let pulseInfo = this._myGamepad.getPulseInfo();\r\n        if (pulseInfo.myIntensity <= intensity) {\r\n            this._myGamepad.pulse(intensity, 0.1);\r\n        }\r\n\r\n        this._myGrabAudio.setPosition(this.object.pp_getPosition());\r\n        this._myGrabAudio.setPitch(Math.pp_random(this._myGrabPitch - 0.15, this._myGrabPitch + 0.05));\r\n        this._myGrabAudio.play();\r\n\r\n        if (!Global.myHasGrabbedTrackedHandsEventSent) {\r\n            if (PP.InputUtils.getInputSourceType(this._myHandednessType) == PP.InputSourceType.HAND) {\r\n                Global.myHasGrabbedTrackedHandsEventSent = true;\r\n\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"has_grabbed_with_tracked_hands\", {\r\n                        \"value\": 1\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _onThrow() {\r\n        let intensity = 0.09;\r\n        let pulseInfo = this._myGamepad.getPulseInfo();\r\n        if (pulseInfo.myIntensity <= intensity) {\r\n            this._myGamepad.pulse(intensity, 0.1);\r\n        }\r\n\r\n        this._myThrowAudio.setPosition(this.object.pp_getPosition());\r\n        this._myThrowAudio.setPitch(Math.pp_random(this._myThrowPitch - 0.15, this._myThrowPitch + 0.05));\r\n        this._myThrowAudio.play();\r\n    },\r\n});",
        "WL.registerComponent(\"random-material\", {\r\n    _my1: { type: WL.Type.Material },\r\n    _my2: { type: WL.Type.Material },\r\n    _my3: { type: WL.Type.Material },\r\n    _my4: { type: WL.Type.Material },\r\n    _my5: { type: WL.Type.Material },\r\n    _my6: { type: WL.Type.Material },\r\n    _my7: { type: WL.Type.Material },\r\n    _my8: { type: WL.Type.Material },\r\n    _my9: { type: WL.Type.Material },\r\n    _my10: { type: WL.Type.Material },\r\n    _my11: { type: WL.Type.Material },\r\n    _my12: { type: WL.Type.Material },\r\n    _my13: { type: WL.Type.Material },\r\n    _my14: { type: WL.Type.Material },\r\n    _my15: { type: WL.Type.Material },\r\n    _my16: { type: WL.Type.Material }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myMaterials = [];\r\n        for (let i = 1; i < 17; i++) {\r\n            let material = \"_my\".concat(i);\r\n            this._myMaterials.push(this[material].clone());\r\n        }\r\n    },\r\n    update: function (dt) {\r\n    },\r\n    onActivate: function () {\r\n        if (Global.myUpdateReady) {\r\n            this._randomMaterial();\r\n        }\r\n    },\r\n    _randomMaterial: function () {\r\n        let meshes = this.object.pp_getComponentsHierarchy(\"mesh\");\r\n\r\n        for (let mesh of meshes) {\r\n            let randomMaterial = Math.pp_randomPick(this._myMaterials);\r\n            mesh.material.ambientColor = randomMaterial.ambientColor;\r\n            mesh.material.diffuseColor = randomMaterial.diffuseColor;\r\n        }\r\n    }\r\n});",
        "WL.registerComponent(\"ring-animator\", {\r\n    _myRingHeight: { type: WL.Type.Float, default: 1.0 },\r\n    _myRingOut: { type: WL.Type.Object },\r\n    _myRingMiddle: { type: WL.Type.Object }\r\n}, {\r\n    init: function () {\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true);\r\n        this._myFSM.addState(\"move up\", this.moveUp.bind(this));\r\n        this._myFSM.addState(\"done\");\r\n\r\n        this._myFSM.addTransition(\"move up\", \"done\", \"end\");\r\n\r\n        Global.myRingHeight = this._myRingHeight;\r\n        Global.myRingRadius = 0.64;\r\n    },\r\n    start: function () {\r\n        this._myRingOut.pp_setPosition([0, -1, 0]);\r\n        this._myRingMiddle.pp_setPosition([0, -1, 0]);\r\n\r\n        this._myRingOutAudio = Global.myAudioManager.createAudioPlayer(SfxID.RING_RISE);\r\n    },\r\n    update: function (dt) {\r\n        if (!Global.myUpdateReady) {\r\n            this._myRingOut.pp_setActive(false);\r\n            this._myRingMiddle.pp_setActive(false);\r\n        }\r\n\r\n        this._myFSM.update(dt);\r\n    },\r\n    begin: function () {\r\n        this._myFSM.init(\"move up\", this.initMoveUp.bind(this));\r\n    },\r\n    initMoveUp: function () {\r\n        this._myRingOut.pp_setActive(true);\r\n        this._myRingMiddle.pp_setActive(true);\r\n\r\n        PP.MeshUtils.setAlpha(this._myRingOut, 0);\r\n        PP.MeshUtils.setAlpha(this._myRingMiddle, 0);\r\n\r\n        this._myRingOut.pp_setPosition([0, -this._myRingOut.pp_getScale()[1] - 0.001, 0]);\r\n        this._myRingMiddle.pp_setPosition([0, -this._myRingMiddle.pp_getScale()[1] - 0.001, 0]);\r\n\r\n        this._myTimer = new PP.Timer(5.3);\r\n        this._myAudioTimer = new PP.Timer(0.25);\r\n    },\r\n    moveUp: function (dt, fsm) {\r\n        this._myTimer.update(dt);\r\n        this._myAudioTimer.update(dt);\r\n        if (this._myAudioTimer.isDone()) {\r\n            this._myAudioTimer.reset();\r\n\r\n            this._myRingOutAudio.play();\r\n        }\r\n\r\n        let alphaInterpolationValue = Math.pp_mapToRange(this._myTimer.getPercentage(), 0, 0.5, 0, 1);\r\n        let easing = -(Math.cos(Math.PI * alphaInterpolationValue) - 1) / 2;\r\n        let alphaValue = easing;\r\n        PP.MeshUtils.setAlpha(this._myRingOut, alphaValue);\r\n        PP.MeshUtils.setAlpha(this._myRingMiddle, alphaValue);\r\n\r\n        let startPositionRingOut = -0.2;\r\n        let startPositionRingMiddle = -0.6;\r\n\r\n        this._myRingOut.pp_setPosition([0, Math.pp_interpolate(startPositionRingOut, this._myRingHeight, this._myTimer.getPercentage(), PP.EasingFunction.easeOut), 0]);\r\n        this._myRingMiddle.pp_setPosition([0, Math.pp_interpolate(startPositionRingMiddle, this._myRingHeight, this._myTimer.getPercentage(), PP.EasingFunction.easeOut), 0]);\r\n\r\n        this._myRingOutAudio.updatePosition(this._myRingOut.pp_getPosition());\r\n\r\n        if (this._myTimer.isDone()) {\r\n            this._myTimer.reset();\r\n\r\n            this._myRingOut.pp_setPosition([0, this._myRingHeight, 0]);\r\n            this._myRingMiddle.pp_setPosition([0, this._myRingHeight, 0]);\r\n\r\n            PP.MeshUtils.setAlpha(this._myRingOut, 1);\r\n            PP.MeshUtils.setAlpha(this._myRingMiddle, 1);\r\n\r\n            fsm.perform(\"end\");\r\n        }\r\n    },\r\n    isDone: function () {\r\n        return this._myFSM.isInState(\"done\");\r\n    },\r\n    skip: function () {\r\n        this._myRingOut.pp_setActive(true);\r\n        this._myRingMiddle.pp_setActive(true);\r\n\r\n        this._myRingOut.pp_setPosition([0, this._myRingHeight, 0]);\r\n        this._myRingMiddle.pp_setPosition([0, this._myRingHeight, 0]);\r\n\r\n        PP.MeshUtils.setAlpha(this._myRingOut, 1);\r\n        PP.MeshUtils.setAlpha(this._myRingMiddle, 1);\r\n\r\n        this._myRingOutAudio.stop();\r\n\r\n        this._myFSM.perform(\"end\");\r\n    }\r\n});",
        "WL.registerComponent(\"ring-sfx-on-collision\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myPhysx = this.object.pp_getComponent(\"physx\");\r\n        //this._myPhysx.onCollision(this._onCollision.bind(this));\r\n        this._myPhysxToIgnore = [];\r\n\r\n        this._myCollisionAudio = Global.myAudioManager.createAudioPlayer(SfxID.COLLISION);\r\n        this._myCollisionPitch = this._myCollisionAudio.getPitch();\r\n    },\r\n    update: function (dt) {\r\n        if (this._myPhysx.active) {\r\n            this._myPhysx.active = false;\r\n        }\r\n\r\n        if (this._myPhysxToIgnore.length > 0) {\r\n            for (let element of this._myPhysxToIgnore) {\r\n                element[1].update(dt);\r\n            }\r\n            this._myPhysxToIgnore.pp_removeAll(element => element[1].isDone());\r\n        }\r\n    },\r\n    _onCollision(type, physx) {\r\n        if (type == WL.CollisionEventType.Touch) {\r\n            let evidence = physx.object.pp_getComponent(\"evidence-component\");\r\n            let timeActive = 1.5;\r\n            //timeActive = 0;\r\n            if (evidence != null && evidence.getTimeActive() >= timeActive) {\r\n                if (!this._myPhysxToIgnore.pp_has(element => element[0].pp_equals(physx.object))) {\r\n                    this._myCollisionAudio.setPosition(physx.object.pp_getPosition());\r\n                    this._myCollisionAudio.setPitch(Math.pp_random(this._myCollisionPitch - 0.15, this._myCollisionPitch + 0.05));\r\n                    this._myCollisionAudio.play();\r\n                }\r\n            }\r\n        } else if (type == WL.CollisionEventType.TouchLost) {\r\n            if (physx.object.pp_getComponent(\"evidence-component\") != null) {\r\n                this._myPhysxToIgnore.push([physx.object, new PP.Timer(0.1)]);\r\n            }\r\n        }\r\n    }\r\n});",
        "WL.registerComponent(\"set-fog-color\", {\r\n    _myAlpha: { type: WL.Type.Float, default: 0 }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        PP.MeshUtils.setClonedMaterials(this.object);\r\n        PP.MeshUtils.setFogColor(this.object, [0, 0, 0, this._myAlpha]);\r\n    },\r\n    update: function (dt) {\r\n    }\r\n});",
        "WL.registerComponent(\"set-specular-color\", {\r\n    _myBrightness: { type: WL.Type.Int, default: 0 }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        PP.MeshUtils.setClonedMaterials(this.object);\r\n        PP.MeshUtils.setSpecularColor(this.object, PP.ColorUtils.hsvToRgb([0, 0, this._myBrightness / 255, 1]));\r\n    },\r\n    update: function (dt) {\r\n    }\r\n});",
        "class StatisticsManager {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    start() {\r\n        Global.myStatistics = new Statistics();\r\n        Global.myStatistics.load();\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n\r\n        this._mySaveTimer = new PP.Timer(20);\r\n        this._myCommitOnEndTimer = new PP.Timer(0);\r\n\r\n        Global.mySaveManager.registerClearEventListener(this, this._onClear.bind(this));\r\n    }\r\n\r\n    update(dt) {\r\n        this._myCommitOnEndTimer.update(dt);\r\n        this._mySaveTimer.update(dt);\r\n        if (this._mySaveTimer.isDone()) {\r\n            this._mySaveTimer.start();\r\n            Global.myStatistics.save();\r\n        }\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        session.addEventListener('visibilitychange', function (event) {\r\n            if (event.session.visibilityState != \"visible\") {\r\n                this._onXRSessionInterrupt();\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._onXRSessionInterrupt();\r\n    }\r\n\r\n    _onXRSessionInterrupt() {\r\n        if (this._myCommitOnEndTimer.isDone()) {\r\n            this._myCommitOnEndTimer.start(20);\r\n            Global.myStatistics.save();\r\n            this._sendAnalytics();\r\n        }\r\n    }\r\n\r\n    _onClear() {\r\n        this._myCommitOnEndTimer.start(20);\r\n        this._sendAnalytics();\r\n        Global.myStatistics.load();\r\n    }\r\n\r\n    _sendAnalytics() {\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"play_time\", {\r\n                \"value\": (Global.myStatistics.myTotalPlayTime - Global.myStatistics.myTotalPlayTimeOnLoad).toFixed(2)\r\n            });\r\n\r\n            if ((Global.myStatistics.myEvidencesThrown - Global.myStatistics.myEvidencesThrownOnLoad) > 0) {\r\n                gtag(\"event\", \"evidences_thrown\", {\r\n                    \"value\": (Global.myStatistics.myEvidencesThrown - Global.myStatistics.myEvidencesThrownOnLoad)\r\n                });\r\n            }\r\n\r\n            if ((Global.myStatistics.myEvidencesMissed - Global.myStatistics.myEvidencesMissedOnLoad) > 0) {\r\n                gtag(\"event\", \"evidences_missed\", {\r\n                    \"value\": (Global.myStatistics.myEvidencesMissed - Global.myStatistics.myEvidencesMissedOnLoad)\r\n                });\r\n            }\r\n\r\n            if ((Global.myStatistics.myEvidencesPunched - Global.myStatistics.myEvidencesPunchedOnLoad) > 0) {\r\n                gtag(\"event\", \"evidences_punched\", {\r\n                    \"value\": (Global.myStatistics.myEvidencesPunched - Global.myStatistics.myEvidencesPunchedOnLoad)\r\n                });\r\n            }\r\n\r\n            if ((Global.myStatistics.myMrNOTDismissed - Global.myStatistics.myMrNOTDismissedOnLoad) > 0) {\r\n                gtag(\"event\", \"mr_NOT_dismissed\", {\r\n                    \"value\": (Global.myStatistics.myMrNOTDismissed - Global.myStatistics.myMrNOTDismissedOnLoad)\r\n                });\r\n            }\r\n\r\n            if ((Global.myStatistics.myMrNOTClonesDismissed - Global.myStatistics.myMrNOTClonesDismissedOnLoad) > 0) {\r\n                gtag(\"event\", \"mr_NOT_clones_dismissed\", {\r\n                    \"value\": (Global.myStatistics.myMrNOTClonesDismissed - Global.myStatistics.myMrNOTClonesDismissedOnLoad)\r\n                });\r\n            }\r\n        }\r\n\r\n        Global.myStatistics.syncOnLoadVariables();\r\n    }\r\n}\r\n\r\nclass Statistics {\r\n\r\n    constructor() {\r\n        this.myTotalPlayTime = 0;\r\n        this.myTrialPlayTime = 0;\r\n        this.myTrialPlayCount = 0;\r\n        this.myTrialPlayCountResettable = 0;\r\n        this.myTrialCompletedCount = 0;\r\n        this.myTrialBestTime = 0;\r\n        this.myChatPlayTime = 0;\r\n        this.myChatPlayCount = 0;\r\n        this.myChatBestTime = 0;\r\n        this.myDisputePlayTime = 0;\r\n        this.myDisputePlayCount = 0;\r\n        this.myDisputeBestTime = 0;\r\n        this.myEvidencesThrown = 0;\r\n        this.myEvidencesMissed = 0;\r\n        this.myEvidencesPunched = 0;\r\n        this.myMrNOTClonesDismissed = 0;\r\n        this.myMrNOTClonesDismissedResettable = 0;\r\n        this.myMrNOTDismissed = 0;\r\n\r\n        this.myTotalPlayTimeOnLoad = 0;\r\n        this.myEvidencesThrownOnLoad = 0;\r\n        this.myEvidencesMissedOnLoad = 0;\r\n        this.myEvidencesPunchedOnLoad = 0;\r\n        this.myMrNOTClonesDismissedOnLoad = 0;\r\n        this.myMrNOTDismissedOnLoad = 0;\r\n    }\r\n\r\n    load() {\r\n        this.myTotalPlayTime = Global.mySaveManager.loadNumber(\"total_play_time\", 0);\r\n\r\n        this.myTrialPlayTime = Global.mySaveManager.loadNumber(\"trial_play_time\", 0);\r\n        this.myTrialPlayCount = Global.mySaveManager.loadNumber(\"trial_play_count\", 0);\r\n        this.myTrialPlayCountResettable = Global.mySaveManager.loadNumber(\"trial_play_count_resettable\", 0);\r\n        this.myTrialCompletedCount = Global.mySaveManager.loadNumber(\"trial_completed_count\", 0);\r\n        this.myTrialBestTime = Global.mySaveManager.loadNumber(\"trial_best_time\", -1);\r\n\r\n        this.myChatPlayTime = Global.mySaveManager.loadNumber(\"chat_play_time\", 0);\r\n        this.myChatPlayCount = Global.mySaveManager.loadNumber(\"chat_play_count\", 0);\r\n        this.myChatBestTime = Global.mySaveManager.loadNumber(\"chat_best_time\", -1);\r\n\r\n        this.myDisputePlayTime = Global.mySaveManager.loadNumber(\"dispute_play_time\", 0);\r\n        this.myDisputePlayCount = Global.mySaveManager.loadNumber(\"dispute_play_count\", 0);\r\n        this.myDisputeBestTime = Global.mySaveManager.loadNumber(\"dispute_best_time\", -1);\r\n\r\n        this.myEvidencesThrown = Global.mySaveManager.loadNumber(\"evidences_thrown\", 0);\r\n        this.myEvidencesMissed = Global.mySaveManager.loadNumber(\"evidences_missed\", 0);\r\n        this.myEvidencesPunched = Global.mySaveManager.loadNumber(\"evidences_punched\", 0);\r\n        this.myMrNOTClonesDismissed = Global.mySaveManager.loadNumber(\"mr_NOT_clones_dismissed\", 0);\r\n        this.myMrNOTClonesDismissedResettable = Global.mySaveManager.loadNumber(\"mr_NOT_clones_dismissed_resettable\", 0);\r\n        this.myMrNOTDismissed = Global.mySaveManager.loadNumber(\"mr_NOT_dismissed\", 0);\r\n\r\n        this.syncOnLoadVariables();\r\n    }\r\n\r\n    syncOnLoadVariables() {\r\n        this.myTotalPlayTimeOnLoad = this.myTotalPlayTime;\r\n        this.myEvidencesThrownOnLoad = this.myEvidencesThrown;\r\n        this.myEvidencesMissedOnLoad = this.myEvidencesMissed;\r\n        this.myEvidencesPunchedOnLoad = this.myEvidencesPunched;\r\n        this.myMrNOTClonesDismissedOnLoad = this.myMrNOTClonesDismissed;\r\n        this.myMrNOTDismissedOnLoad = this.myMrNOTDismissed;\r\n    }\r\n\r\n    save() {\r\n        if (this.myTotalPlayTime < this.myTrialPlayTime + this.myChatPlayTime + this.myDisputePlayTime) {\r\n            this.myTotalPlayTime = this.myTrialPlayTime + this.myChatPlayTime + this.myDisputePlayTime;\r\n        }\r\n\r\n        Global.mySaveManager.save(\"total_play_time\", this.myTotalPlayTime);\r\n\r\n        Global.mySaveManager.save(\"trial_play_time\", this.myTrialPlayTime);\r\n        Global.mySaveManager.save(\"trial_play_count\", this.myTrialPlayCount);\r\n        Global.mySaveManager.save(\"trial_play_count_resettable\", this.myTrialPlayCountResettable);\r\n        Global.mySaveManager.save(\"trial_completed_count\", this.myTrialCompletedCount);\r\n        Global.mySaveManager.save(\"trial_best_time\", this.myTrialBestTime);\r\n\r\n        Global.mySaveManager.save(\"chat_play_time\", this.myChatPlayTime);\r\n        Global.mySaveManager.save(\"chat_play_count\", this.myChatPlayCount);\r\n        Global.mySaveManager.save(\"chat_best_time\", this.myChatBestTime);\r\n\r\n        Global.mySaveManager.save(\"dispute_play_time\", this.myDisputePlayTime);\r\n        Global.mySaveManager.save(\"dispute_play_count\", this.myDisputePlayCount);\r\n        Global.mySaveManager.save(\"dispute_best_time\", this.myDisputeBestTime);\r\n\r\n        Global.mySaveManager.save(\"evidences_thrown\", this.myEvidencesThrown);\r\n        Global.mySaveManager.save(\"evidences_missed\", this.myEvidencesMissed);\r\n        Global.mySaveManager.save(\"evidences_punched\", this.myEvidencesPunched);\r\n        Global.mySaveManager.save(\"mr_NOT_clones_dismissed\", this.myMrNOTClonesDismissed);\r\n        Global.mySaveManager.save(\"mr_NOT_clones_dismissed_resettable\", this.myMrNOTClonesDismissedResettable);\r\n        Global.mySaveManager.save(\"mr_NOT_dismissed\", this.myMrNOTDismissed);\r\n    }\r\n}",
        "WL.registerComponent(\"statistics-text-displayer\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myText = this.object.pp_getComponent(\"text\");\r\n        this._myTextPosition = this._myText.object.pp_getPosition();\r\n        this._myTempDirection1 = [];\r\n        this._myTempDirection2 = [];\r\n\r\n        this._myTimer = new PP.Timer(0.5);\r\n\r\n        this._mySendAnalytics = true;\r\n        this._myAnalyticsTimer = new PP.Timer(0);\r\n        this._myUp = [0, 1, 0];\r\n    },\r\n    update: function (dt) {\r\n        this._myAnalyticsTimer.update(dt);\r\n\r\n        this._myTimer.update(dt);\r\n        if (this._myTimer.isDone()) {\r\n            this._myTimer.start();\r\n            this._updateStatistics();\r\n        }\r\n\r\n        this._checkStatisticsViewed(dt);\r\n    },\r\n    _updateStatistics() {\r\n        let text = \"\";\r\n        text = text.concat(\"Total Play Time: \", this._convertTimeToString(Global.myStatistics.myTotalPlayTime), \"\\n\\n\");\r\n        text = text.concat(\"Trial Play Time: \", this._convertTimeToString(Global.myStatistics.myTrialPlayTime), \"\\n\");\r\n        text = text.concat(\"Trial Best Time: \", this._convertTimeToString(Global.myStatistics.myTrialBestTime), \"\\n\");\r\n        text = text.concat(\"Trial Played: \", Global.myStatistics.myTrialPlayCount, \"\\n\");\r\n        text = text.concat(\"Trial Completed: \", Global.myStatistics.myTrialCompletedCount, \"\\n\\n\");\r\n        text = text.concat(\"Chat Play Time: \", this._convertTimeToString(Global.myStatistics.myChatPlayTime), \"\\n\");\r\n        text = text.concat(\"Chat Best Time: \", this._convertTimeToString(Global.myStatistics.myChatBestTime), \"\\n\");\r\n        text = text.concat(\"Chat Played: \", Global.myStatistics.myChatPlayCount, \"\\n\\n\");\r\n        text = text.concat(\"Dispute Play Time: \", this._convertTimeToString(Global.myStatistics.myDisputePlayTime), \"\\n\");\r\n        text = text.concat(\"Dispute Best Time: \", this._convertTimeToString(Global.myStatistics.myDisputeBestTime), \"\\n\");\r\n        text = text.concat(\"Dispute Played: \", Global.myStatistics.myDisputePlayCount, \"\\n\\n\");\r\n        text = text.concat(\"Evidences Thrown: \", Global.myStatistics.myEvidencesThrown, \"\\n\");\r\n        text = text.concat(\"Evidences Missed: \", Global.myStatistics.myEvidencesMissed, \"\\n\\n\");\r\n        text = text.concat(\"mr NOT Clones Dismissed: \", Global.myStatistics.myMrNOTClonesDismissed, \"\\n\");\r\n        text = text.concat(\"mr NOT Dismissed: \", Global.myStatistics.myMrNOTDismissed);\r\n\r\n        this._myText.text = text;\r\n    },\r\n    _convertTimeToString(time) {\r\n        if (time < 0) {\r\n            return \"-\";\r\n        }\r\n\r\n        time = Math.floor(time);\r\n\r\n        let hours = Math.floor(time / 3600);\r\n        time -= hours * 3600;\r\n        let minutes = Math.floor(time / 60);\r\n        time -= minutes * 60;\r\n        let seconds = Math.floor(time);\r\n\r\n        let string = \"\";\r\n        string = string.concat((hours.toFixed(0).length < 2) ? \"0\".concat(hours.toFixed(0)) : hours.toFixed(0), \":\");\r\n        string = string.concat((minutes.toFixed(0).length < 2) ? \"0\".concat(minutes.toFixed(0)) : minutes.toFixed(0), \":\");\r\n        string = string.concat((seconds.toFixed(0).length < 2) ? \"0\".concat(seconds.toFixed(0)) : seconds.toFixed(0));\r\n\r\n        return string;\r\n    },\r\n    _checkStatisticsViewed() {\r\n        if (this._myAnalyticsTimer.isDone()) {\r\n            if (this._mySendAnalytics) {\r\n                let height = Global.myPlayerPosition[1];\r\n                if (height < 0.9) {\r\n                    let angle = Global.myPlayerForward.vec3_angle(this._myUp);\r\n                    if (Math.abs(angle) < 80 && Math.abs(Global.myPlayerPosition[0]) < 0.7 && Math.abs(Global.myPlayerPosition[2]) < 0.7) {\r\n                        this._myTextPosition.vec3_sub(Global.myPlayerPosition, this._myTempDirection1);\r\n                        this._myTempDirection1.vec3_removeComponentAlongAxis(this._myUp, this._myTempDirection1);\r\n                        Global.myPlayerForward.vec3_removeComponentAlongAxis(this._myUp, this._myTempDirection2);\r\n\r\n                        let angleToText = Math.abs(this._myTempDirection1.vec3_angle(this._myTempDirection2));\r\n                        if (angleToText < 70) {\r\n                            if (Global.myGoogleAnalytics) {\r\n                                gtag(\"event\", \"statistics_viewed\", {\r\n                                    \"value\": 1\r\n                                });\r\n                            }\r\n                            this._mySendAnalytics = false;\r\n                            this._myAnalyticsTimer.start(20);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                let height = Global.myPlayerPosition[1];\r\n                if (height > 1.2) {\r\n                    this._mySendAnalytics = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n});",
        "WL.registerComponent(\"text-color-fog\", {\r\n    _myShadeFactorMaxAngle: { type: WL.Type.Float, default: 0 }\r\n}, {\r\n    init: function () {\r\n        this._myDown = [0, -1, 0];\r\n        this._myTempVec3 = vec3_create();\r\n        this._myTempVec4 = vec4_create();\r\n        this._myFogAlpha = 0.33;\r\n    },\r\n    start: function () {\r\n        this._myFirstUpdate = true;\r\n    },\r\n    update: function (dt) {\r\n        if (Global.myUpdateReady) {\r\n            if (this._myFirstUpdate) {\r\n                this._myFirstUpdate = false;\r\n                this._myTextComponents = this.object.pp_getComponentsHierarchy(\"text\");\r\n\r\n                for (let textComponent of this._myTextComponents) {\r\n                    textComponent.material = textComponent.material.clone();\r\n                }\r\n\r\n                this._myColor = this._myTextComponents[0].material.color.pp_clone();\r\n            }\r\n\r\n            let distance = Global.myPlayerPosition.vec3_sub(this.object.pp_getPosition(this._myTempVec3), this._myTempVec3).vec3_length();\r\n            let fogFactor = this._fogFactorExp2(distance, this._myFogAlpha * 0.2);\r\n\r\n            for (let textComponent of this._myTextComponents) {\r\n                let color = this._computeLightColor(this._myTempVec4.pp_copy(this._myColor), textComponent.object.pp_getForward(this._myTempVec3));\r\n\r\n                this._myTempVec4[0] = Math.pp_lerp(color[0], 0, fogFactor);\r\n                this._myTempVec4[1] = Math.pp_lerp(color[1], 0, fogFactor);\r\n                this._myTempVec4[2] = Math.pp_lerp(color[2], 0, fogFactor);\r\n                this._myTempVec4[3] = textComponent.material.color[3];\r\n\r\n                textComponent.material.color = this._myTempVec4;\r\n            }\r\n        }\r\n    },\r\n    _computeLightColor(color, forward) {\r\n        let angle = forward.vec3_angle(this._myDown);\r\n        let shadeFactor = 1;\r\n\r\n        if (this._myShadeFactorMaxAngle > 0.001 && angle < this._myShadeFactorMaxAngle) {\r\n            shadeFactor = Math.pp_lerp(shadeFactor, 0.2, 1 - angle / this._myShadeFactorMaxAngle);\r\n        }\r\n\r\n        color[0] = color[0] * shadeFactor;\r\n        color[1] = color[1] * shadeFactor;\r\n        color[2] = color[2] * shadeFactor;\r\n\r\n        return color;\r\n    },\r\n    _fogFactorExp2(dist, density) {\r\n        let LOG2 = -1.442695;\r\n        let d = density * dist;\r\n        return 1.0 - Math.pp_clamp(Math.pow(2, d * d * LOG2), 0.0, 1.0);\r\n    },\r\n    pp_clone(clone) {\r\n        clone._myShadeFactorMaxAngle = this._myShadeFactorMaxAngle;\r\n    }\r\n});",
        "WL.registerComponent(\"toggle-active\", {\r\n    _myObject: { type: WL.Type.Object }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myActive = true;\r\n    },\r\n    update: function (dt) {\r\n        if (PP.myLeftGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).isPressEnd()) {\r\n            this._myObject.pp_setActive(!this._myActive);\r\n            this._myActive = !this._myActive;\r\n        }\r\n    }\r\n});",
        "WL.registerComponent(\"top-down-view\", {\r\n    _myHeight: { type: WL.Type.Float, default: 40.0 }\r\n}, {\r\n    start: function () {\r\n        this.object.pp_lookTo([0, 1, 0]);\r\n        this.object.pp_translate([0, this._myHeight, 0]);\r\n    },\r\n});",
        "\r\nPP.ToolHandedness = {\r\n    NONE: null,\r\n    LEFT: \"left\",\r\n    RIGHT: \"right\",\r\n};\r\n\r\nPP.ToolInputSourceType = {\r\n    NONE: null,\r\n    GAMEPAD: 0,\r\n    HAND: 1\r\n};",
        "class ArcadeState extends PP.State {\r\n    constructor(isDispute) {\r\n        super();\r\n\r\n        this._myIsDispute = isDispute;\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"    Arcade\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"first_wait\", new PP.TimerState(0, \"end\"));\r\n        this._myFSM.addState(\"vent\", new VentState(this._buildVentSetup(), this._buildEvidenceSetupList()));\r\n        this._myFSM.addState(\"defeat\", new ArcadeResultState(isDispute));\r\n        this._myFSM.addState(\"done\");\r\n\r\n        this._myFSM.addTransition(\"init\", \"first_wait\", \"start\");\r\n        this._myFSM.addTransition(\"first_wait\", \"vent\", \"end\");\r\n        this._myFSM.addTransition(\"vent\", \"defeat\", \"lost\");\r\n        this._myFSM.addTransition(\"vent\", \"defeat\", \"completed\");\r\n        this._myFSM.addTransition(\"defeat\", \"done\", \"end\", this._backToMenu.bind(this));\r\n        this._myFSM.addTransition(\"done\", \"first_wait\", \"start\");\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._myParentFSM = null;\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        if (!this._myFSM.isInState(\"defeat\")) {\r\n            Global.myArcadeDuration += dt;\r\n            if (this._myIsDispute) {\r\n                Global.myStatistics.myDisputePlayTime += dt;\r\n            } else {\r\n                Global.myStatistics.myChatPlayTime += dt;\r\n            }\r\n        }\r\n\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    init(fsm) {\r\n    }\r\n\r\n    start(fsm, transitionID) {\r\n        this._myParentFSM = fsm;\r\n        this._myFSM.perform(\"start\");\r\n        Global.myArcadeDuration = 0;\r\n\r\n        if (this._myIsDispute) {\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"arcade_dispute_started\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n\r\n            Global.myStatistics.myDisputePlayCount += 1;\r\n        } else {\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"arcade_chat_started\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n\r\n            Global.myStatistics.myChatPlayCount += 1;\r\n        }\r\n    }\r\n\r\n    end(fsm, transitionID) {\r\n    }\r\n\r\n    _backToMenu(fsm) {\r\n        this._myParentFSM.perform(MainTransitions.End);\r\n    }\r\n\r\n    _buildVentSetup() {\r\n        if (this._myIsDispute) {\r\n            return this._disputeVentSetup();\r\n        }\r\n\r\n        return this._chatVentSetup();\r\n    }\r\n\r\n    //Evidences that appear later in the trial appear later in time in the arcade\r\n    _buildEvidenceSetupList() {\r\n        let evidenceSetupList = [];\r\n\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.VENT_TIMER, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.ZESTY_MARKET, new ValueOverTime(3, 0, 60, 120, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TUCIA_DRAWING, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.CPLUSPLUS_PRIMER, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PIANO, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.MICCO_THE_BEAR, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WATER_LILY, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.LOL, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.DRINK_ME_EARRING, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.STARING_CUBE, new ValueOverTime(1, 3, 60, 120, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TROPHY, 5));\r\n\r\n        let secondStarTime = 40;\r\n        let secondEndTime = 80;\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WONDERMELON, new ValueOverTime(0, 5, secondStarTime, secondEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PSI, new ValueOverTime(0, 5, secondStarTime, secondEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WONDERLAND, new ValueOverTime(0, 5, secondStarTime, secondEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.VR, new ValueOverTime(0, 5, secondStarTime, secondEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.EGGPLANT, new ValueOverTime(0, 5, secondStarTime, secondEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PICO_8, new ValueOverTime(0, 5, secondStarTime, secondEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.EVERYEYE, new ValueOverTime(0, 5, secondStarTime, secondEndTime, true)));\r\n\r\n        let thirdStarTime = 90;\r\n        let thirdEndTime = 130;\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.ANT_MAIN_CHARACTER, new ValueOverTime(0, 5, thirdStarTime, thirdEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.SHATTERED_COIN, new ValueOverTime(0, 5, thirdStarTime, thirdEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.HEART, new ValueOverTime(0, 5, thirdStarTime, thirdEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.HALO_SWORD, new ValueOverTime(0, 5, thirdStarTime, thirdEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.FOX, new ValueOverTime(0, 5, thirdStarTime, thirdEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.FAMILY, new ValueOverTime(0, 5, thirdStarTime, thirdEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.MIRROR, new ValueOverTime(0, 5, thirdStarTime, thirdEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.ALOE_VERA, new ValueOverTime(0, 5, thirdStarTime, thirdEndTime, true)));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.MR_NOT_EVIDENCE, new ValueOverTime(0, 5, thirdStarTime, thirdEndTime, true)));\r\n\r\n        let lastStarTime = 140;\r\n        let lastEndTime = 180;\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WAYFINDER, new ValueOverTime(0, 5, lastStarTime, lastEndTime, true)));\r\n\r\n        return evidenceSetupList;\r\n    }\r\n}",
        "class IntroState extends PP.State {\r\n    constructor() {\r\n        super();\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"    Intro\");\r\n        this._myFSM.addState(\"wait_session\", this.waitSession.bind(this));\r\n        this._myFSM.addState(\"wait_start\", this.waitStart.bind(this));\r\n        this._myFSM.addState(\"move_ring\", this.checkRingCompleted.bind(this));\r\n        this._myFSM.addState(\"spawn_hands\", this.handsUpdate.bind(this));\r\n        this._myFSM.addState(\"show_title\", new ShowTitleState());\r\n        this._myFSM.addState(\"done\");\r\n        //this._myFSM.addState(\"test\");\r\n\r\n        this._myFSM.addTransition(\"wait_session\", \"wait_start\", \"end\");\r\n        this._myFSM.addTransition(\"wait_start\", \"move_ring\", \"end\", this.startRing.bind(this));\r\n        this._myFSM.addTransition(\"move_ring\", \"spawn_hands\", \"end\", this.startHands.bind(this));\r\n        this._myFSM.addTransition(\"spawn_hands\", \"show_title\", \"end\");\r\n        this._myFSM.addTransition(\"show_title\", \"done\", \"end\", this.endIntro.bind(this));\r\n\r\n        //skip\r\n        this._myFSM.addTransition(\"wait_start\", \"move_ring\", \"skip\");\r\n        this._myFSM.addTransition(\"move_ring\", \"spawn_hands\", \"skip\", this.skipRing.bind(this));\r\n        this._myFSM.addTransition(\"spawn_hands\", \"show_title\", \"skip\", this.skipHands.bind(this));\r\n        this._myFSM.addTransition(\"show_title\", \"done\", \"skip\", this.skipIntro.bind(this));\r\n        //this._myFSM.addTransition(\"move_ring\", \"test\", \"skip\", this.skipRing.bind(this));\r\n\r\n        this._myTimer = new PP.Timer(2.5);\r\n\r\n        this._myIntroDuration = 0;\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        this._myXRSessionStartCalled = false;\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myFSM.update(dt);\r\n\r\n        if (!this._myFSM.isInState(\"wait_session\")) {\r\n            this._myIntroDuration += dt;\r\n        }\r\n\r\n        let trialStartedOnce = Global.mySaveManager.loadBool(\"trial_started_once\", false);\r\n        let introViewed = Global.mySaveManager.loadNumber(\"intro_viewed\", 0);\r\n\r\n        if ((trialStartedOnce && introViewed >= 3) || Global.myDebugShortcutsEnabled) {\r\n            if (!this._myFSM.isInState(\"wait_session\") && PP.myRightGamepad.getButtonInfo(PP.ButtonType.SELECT).isPressEnd((PP.XRUtils.isDeviceEmulated()) ? 1 : 3)) {\r\n                while (!this._myFSM.isInState(\"done\") && !this._myFSM.isInState(\"test\")) {\r\n                    this._myFSM.perform(\"skip\");\r\n                }\r\n\r\n                if (Global.myGoogleAnalytics) {\r\n                    gtag(\"event\", \"intro_skipped\", {\r\n                        \"value\": 1\r\n                    });\r\n\r\n                    gtag(\"event\", \"intro_done\", {\r\n                        \"value\": 1\r\n                    });\r\n\r\n                    gtag(\"event\", \"intro_skipped_time\", {\r\n                        \"value\": this._myIntroDuration.toFixed(2)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    init(fsm) {\r\n        this._myParentFSM = fsm;\r\n        this._myFSM.init(\"wait_session\");\r\n    }\r\n\r\n    waitSession(dt, fsm) {\r\n        if (WL.xrSession && Global.myUpdateReady) {\r\n            let currentVersion = Global.mySaveManager.loadNumber(\"game_version\", 0);\r\n            console.log(\"Game Version:\", currentVersion);\r\n\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"xr_enter_session\", {\r\n                    \"value\": 1\r\n                });\r\n\r\n                PP.CAUtils.getUser(function () {\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"xr_enter_session_logged_in\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }, null, false);\r\n            }\r\n\r\n            fsm.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    waitStart(dt, fsm) {\r\n        this._myTimer.update(dt);\r\n\r\n        if (this._myTimer.isDone()) {\r\n            fsm.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    startRing(fsm) {\r\n        Global.myRingAnimator.begin();\r\n        this._myTimer.start(0.75);\r\n    }\r\n\r\n    checkRingCompleted(dt, fsm) {\r\n        if (Global.myRingAnimator.isDone()) {\r\n            this._myTimer.update(dt);\r\n        }\r\n\r\n        if (this._myTimer.isDone()) {\r\n            fsm.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    startHands(fsm) {\r\n        let timer = Math.pp_random(0.4, 0.8);\r\n        let startFirst = Math.pp_randomInt(0, 1);\r\n        if (startFirst == 0) {\r\n            this._myLeftHandTimer = new PP.Timer(0);\r\n            this._myRightHandTimer = new PP.Timer(timer);\r\n        } else {\r\n            this._myLeftHandTimer = new PP.Timer(timer);\r\n            this._myRightHandTimer = new PP.Timer(0);\r\n        }\r\n\r\n        this._myTimer.start(1.25);\r\n    }\r\n\r\n    handsUpdate(dt, fsm) {\r\n        this._myLeftHandTimer.update(dt);\r\n        this._myRightHandTimer.update(dt);\r\n\r\n        if (this._myLeftHandTimer.isDone()) {\r\n            this._myLeftHandTimer.reset();\r\n            Global.myLeftHandAnimator.begin();\r\n        }\r\n\r\n        if (this._myRightHandTimer.isDone()) {\r\n            this._myRightHandTimer.reset();\r\n            Global.myRightHandAnimator.begin();\r\n        }\r\n\r\n        if (Global.myLeftHandAnimator.isDone() && Global.myRightHandAnimator.isDone()) {\r\n            this._myTimer.update(dt);\r\n        }\r\n\r\n        if (this._myTimer.isDone()) {\r\n            fsm.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    skipRing() {\r\n        Global.myRingAnimator.skip();\r\n    }\r\n\r\n    skipHands() {\r\n        Global.myLeftHandAnimator.skip();\r\n        Global.myRightHandAnimator.skip();\r\n    }\r\n\r\n    endIntro(fsm) {\r\n        this._myParentFSM.perform(MainTransitions.End);\r\n\r\n        let introViewed = Global.mySaveManager.loadNumber(\"intro_viewed\", 0);\r\n        introViewed += 1;\r\n        Global.mySaveManager.save(\"intro_viewed\", introViewed);\r\n\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"intro_viewed\", {\r\n                \"value\": 1\r\n            });\r\n\r\n            gtag(\"event\", \"intro_done\", {\r\n                \"value\": 1\r\n            });\r\n\r\n            if (!this._myXRSessionStartCalled) {\r\n                gtag(\"event\", \"xr_session_not_started\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    skipIntro(fsm, transition) {\r\n        transition.myFromState.myObject.end(fsm, transition);\r\n        this._myParentFSM.perform(MainTransitions.Skip);\r\n\r\n        if (Global.myGoogleAnalytics) {\r\n            if (!this._myXRSessionStartCalled) {\r\n                gtag(\"event\", \"xr_session_not_started\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        this._myXRSessionStartCalled = true;\r\n    }\r\n}",
        "class MainFSM {\r\n    constructor() {\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Main\", true);\r\n\r\n        this._buildFSM();\r\n\r\n        this._myMusic = Global.myAudioManager.createAudioPlayer(SfxID.YOU_KNOW);\r\n        this._myStartMusicTimer = new PP.Timer(1.8, false);\r\n        this._myStartMusicTimerAfterLoad = new PP.Timer(0.2, false);\r\n        this._myStopMusicTimer = new PP.Timer(0, false);\r\n\r\n        this._myIsMusicPlaying = false;\r\n        this._myMusicVolume = this._myMusic.getVolume();\r\n    }\r\n\r\n    init() {\r\n        this._myFSM.init(MainStates.Intro);\r\n    }\r\n\r\n    update(dt) {\r\n        this._manageMusic(dt);\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    _buildFSM() {\r\n        this._myFSM.addState(MainStates.Intro, new IntroState());\r\n        this._myFSM.addState(MainStates.Menu, new MenuState());\r\n        this._myFSM.addState(MainStates.Trial, new TrialState());\r\n        this._myFSM.addState(MainStates.ArcadeHard, new ArcadeState(true));\r\n        this._myFSM.addState(MainStates.ArcadeNormal, new ArcadeState(false));\r\n\r\n        this._myFSM.addTransition(MainStates.Intro, MainStates.Menu, MainTransitions.End);\r\n        this._myFSM.addTransition(MainStates.Intro, MainStates.Menu, MainTransitions.Skip);\r\n\r\n        this._myFSM.addTransition(MainStates.Menu, MainStates.Trial, MainTransitions.StartTrial);\r\n        this._myFSM.addTransition(MainStates.Menu, MainStates.ArcadeHard, MainTransitions.StartArcadeHard);\r\n        this._myFSM.addTransition(MainStates.Menu, MainStates.ArcadeNormal, MainTransitions.StartArcadeNormal);\r\n        this._myFSM.addTransition(MainStates.Menu, MainStates.Menu, MainTransitions.Reset);\r\n\r\n        this._myFSM.addTransition(MainStates.Trial, MainStates.Menu, MainTransitions.End);\r\n        this._myFSM.addTransition(MainStates.ArcadeHard, MainStates.Menu, MainTransitions.End);\r\n        this._myFSM.addTransition(MainStates.ArcadeNormal, MainStates.Menu, MainTransitions.End);\r\n    }\r\n\r\n    _manageMusic(dt) {\r\n        if (Global.myPlayMusic) {\r\n            Global.myPlayMusic = false;\r\n            if (!this._myIsMusicPlaying) {\r\n                this._myStartMusicTimer.start();\r\n            }\r\n        }\r\n\r\n        if (Global.myStopMusic) {\r\n            Global.myStopMusic = false;\r\n            if (this._myIsMusicPlaying) {\r\n                this._myStopMusicTimer.start();\r\n            }\r\n        }\r\n\r\n        if (this._myStartMusicTimer.isRunning()) {\r\n            this._myStartMusicTimer.update(dt);\r\n        }\r\n\r\n        if (this._myStartMusicTimer.isDone()) {\r\n            if (this._myMusic.isLoaded()) {\r\n                this._myStartMusicTimerAfterLoad.start();\r\n                this._myStartMusicTimer.reset();\r\n            }\r\n        }\r\n\r\n        if (this._myStartMusicTimerAfterLoad.isRunning()) {\r\n            this._myStartMusicTimerAfterLoad.update(dt);\r\n            if (this._myStartMusicTimerAfterLoad.isDone()) {\r\n                if (!this._myMusic.isPlaying()) {\r\n                    this._myMusic.play();\r\n                }\r\n                this._myMusic.fade(0, this._myMusicVolume, 6);\r\n                this._myStartMusicTimerAfterLoad.reset();\r\n\r\n                this._myIsMusicPlaying = true;\r\n            }\r\n        }\r\n\r\n        if (this._myStopMusicTimer.isRunning()) {\r\n            this._myStopMusicTimer.update(dt);\r\n            if (this._myStopMusicTimer.isDone()) {\r\n                this._myMusic.fade(this._myMusicVolume, 0, 0.05);\r\n                //this._myMusic.updateVolume(0);\r\n                this._myStopMusicTimer.reset();\r\n                this._myIsMusicPlaying = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar MainStates = {\r\n    Intro: \"Intro\",\r\n    Menu: \"Menu\",\r\n    Trial: \"Trial\",\r\n    ArcadeHard: \"ArcadeHard\",\r\n    ArcadeNormal: \"ArcadeNormal\",\r\n};\r\n\r\nvar MainTransitions = {\r\n    End: \"End\",\r\n    Skip: \"Skip\",\r\n    StartTrial: \"StartTrial\",\r\n    StartArcadeHard: \"StartArcadeHard\",\r\n    StartArcadeNormal: \"StartArcadeNormal\",\r\n    Reset: \"Reset\"\r\n};",
        "class MenuState extends PP.State {\r\n    constructor() {\r\n        super();\r\n\r\n        this._myResetCount = 0;\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"    Menu\");\r\n        this._myFSM.addState(\"ready\", this._readyUpdate.bind(this));\r\n        this._myFSM.addState(\"unspawning_reset\", this._unspawn.bind(this));\r\n        this._myFSM.addState(\"unspawning_restart\", this._unspawn.bind(this));\r\n        this._myFSM.addState(\"unspawning_arcade_dispute\", this._unspawn.bind(this));\r\n        this._myFSM.addState(\"unspawning_arcade_chat\", this._unspawn.bind(this));\r\n        this._myFSM.addState(\"unspawning_trial\", this._unspawn.bind(this));\r\n        this._myFSM.addState(\"done\");\r\n\r\n        this._myFSM.addTransition(\"ready\", \"unspawning_arcade_dispute\", \"unspawn_arcade_dispute\", this._startUnspawning.bind(this));\r\n        this._myFSM.addTransition(\"ready\", \"unspawning_arcade_chat\", \"unspawn_arcade_chat\", this._startUnspawning.bind(this));\r\n        this._myFSM.addTransition(\"ready\", \"unspawning_trial\", \"unspawn_trial\", this._startUnspawning.bind(this));\r\n        this._myFSM.addTransition(\"ready\", \"unspawning_reset\", \"unspawn_reset\", this._startUnspawningReset.bind(this));\r\n        this._myFSM.addTransition(\"ready\", \"unspawning_restart\", \"unspawn_restart\", this._startUnspawningRestart.bind(this));\r\n        this._myFSM.addTransition(\"unspawning_arcade_dispute\", \"done\", \"end\", this._endArcadeHard.bind(this));\r\n        this._myFSM.addTransition(\"unspawning_arcade_chat\", \"done\", \"end\", this._endArcadeNormal.bind(this));\r\n        this._myFSM.addTransition(\"unspawning_trial\", \"done\", \"end\", this._endTrial.bind(this));\r\n        this._myFSM.addTransition(\"unspawning_reset\", \"done\", \"end\", this._endReset.bind(this));\r\n        this._myFSM.addTransition(\"unspawning_restart\", \"done\", \"end\", this._endRestart.bind(this));\r\n\r\n        this._myMenuItems = [];\r\n        this._myStartTrial = null;\r\n        this._myStartTrialCompleted = null;\r\n        this._myFloppyDisk = null;\r\n        this._myCurrentMenuItems = [];\r\n\r\n        this._myMenuTitle = new MenuTitle(Global.myTitlesObject, Global.myTitleObject, Global.mySubtitleObject);\r\n\r\n        this._myNotEnough = new NotEnough();\r\n\r\n        this._fillMenuItems();\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Unspawn Menu Time\", 0.1, 0.1, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Unspawn Menu Scale\", 2.5, 1, 3));\r\n\r\n        this._myMenuDuration = 0;\r\n        this._myFirstTime = true;\r\n\r\n        this._myButtonPressed = Global.mySaveManager.loadBool(\"button_pressed\", false);\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myMenuDuration += dt;\r\n        this._myFSM.update(dt);\r\n        this._myNotEnough.update(dt);\r\n\r\n        if (!this._myButtonPressed) {\r\n            for (let key in PP.ButtonType) {\r\n                let resultLeft = PP.myLeftGamepad.getButtonInfo(PP.ButtonType[key]).isPressStart();\r\n                let resultRight = PP.myRightGamepad.getButtonInfo(PP.ButtonType[key]).isPressStart();\r\n\r\n                if (resultLeft || resultRight) {\r\n                    this._myButtonPressed = true;\r\n                    Global.mySaveManager.save(\"button_pressed\", true);\r\n\r\n                    if (Global.myGoogleAnalytics) {\r\n                        gtag(\"event\", \"button_pressed\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    start(fsm, transitionID) {\r\n        this._myParentFSM = fsm;\r\n\r\n        let trialStartedOnce = Global.mySaveManager.loadBool(\"trial_started_once\", false);\r\n        let trialPhase = Global.mySaveManager.loadNumber(\"trial_phase\", 1);\r\n        let trialCompleted = Global.mySaveManager.loadBool(\"trial_completed\", false);\r\n        if (trialCompleted || (trialStartedOnce && trialPhase >= 2)) {\r\n            this._myCurrentMenuItems = [];\r\n\r\n            if (trialCompleted) {\r\n                this._myCurrentMenuItems.push(this._myStartTrialCompleted);\r\n            } else {\r\n                this._myCurrentMenuItems.push(this._myStartTrial);\r\n            }\r\n\r\n            for (let item of this._myMenuItems) {\r\n                this._myCurrentMenuItems.push(item);\r\n            }\r\n        } else {\r\n            this._myCurrentMenuItems = [];\r\n            this._myCurrentMenuItems.push(this._myStartTrial);\r\n        }\r\n\r\n        let times = [];\r\n        if (this._myFirstTime) {\r\n            times[0] = 0.35;\r\n            this._myFirstTime = false;\r\n        } else {\r\n            times[0] = Math.pp_random(0.15, 0.55);\r\n        }\r\n        for (let i = 1; i < this._myCurrentMenuItems.length; i++) {\r\n            times[i] = times[i - 1] + Math.pp_random(0.15, 0.55);\r\n        }\r\n\r\n        for (let item of this._myCurrentMenuItems) {\r\n            let randomIndex = Math.pp_randomInt(0, times.length - 1);\r\n            let timeBeforeFirstSpawn = times.pp_removeIndex(randomIndex);\r\n            item.init(timeBeforeFirstSpawn);\r\n        }\r\n\r\n        this._myMenuTitle.spawn(Math.pp_random(0.35, 0.7));\r\n\r\n        this._myFSM = this._myFSM.clone();\r\n        this._myFSM.init(\"ready\");\r\n\r\n        this._myResetCount = 0;\r\n\r\n        Global.myIsInMenu = true;\r\n\r\n        Global.myEnableSelectPhysx = trialCompleted || (trialStartedOnce && trialPhase >= 2);\r\n\r\n        Global.myPlayMusic = true;\r\n\r\n        this._myMenuDuration = 0;\r\n    }\r\n\r\n    end() {\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"menu_time\", {\r\n                \"value\": this._myMenuDuration.toFixed(2)\r\n            });\r\n        }\r\n\r\n        Global.myIsInMenu = false;\r\n    }\r\n\r\n    _readyUpdate(dt, fsm) {\r\n        for (let item of this._myCurrentMenuItems) {\r\n            item.update(dt);\r\n        }\r\n\r\n        this._myMenuTitle.update(dt);\r\n\r\n        if (Global.myDebugShortcutsEnabled) {\r\n            //TEMP REMOVE THIS\r\n            if (PP.myRightGamepad.getButtonInfo(PP.ButtonType.SELECT).isPressEnd(Global.myDebugShortcutsPress)) {\r\n                this._myFSM.perform(\"unspawn_trial\");\r\n            }\r\n\r\n            //TEMP REMOVE THIS\r\n            if (PP.myLeftGamepad.getButtonInfo(PP.ButtonType.SQUEEZE).isPressEnd(Global.myDebugShortcutsPress)) {\r\n                this._myFSM.perform(\"unspawn_arcade_dispute\");\r\n                //this._myNotEnough.start();\r\n                //Global.myParticlesManager.mrNOTParticles(Global.myPlayerPosition);\r\n            }\r\n\r\n            //TEMP REMOVE THIS\r\n            if (PP.myLeftGamepad.getButtonInfo(PP.ButtonType.SELECT).isPressEnd(Global.myDebugShortcutsPress)) {\r\n                this._myFSM.perform(\"unspawn_restart\");\r\n            }\r\n        }\r\n    }\r\n\r\n    _startUnspawning(fsm) {\r\n        this._startUnspawningInternal();\r\n    }\r\n\r\n\r\n    _startUnspawningInternal(evidenceMinDelay = 0.2, evidenceMaxDelay = 0.25, titleMinDelay = 0.35, titleMaxDelay = 0.7) {\r\n        this._myUnspawnList = [];\r\n\r\n        let indexList = [];\r\n        for (let i = 0; i < this._myCurrentMenuItems.length; i++) {\r\n            if (this._myCurrentMenuItems[i].canUnspawn()) {\r\n                indexList.push(i);\r\n            }\r\n\r\n            this._myCurrentMenuItems[i].setAutoSpawn(false);\r\n        }\r\n\r\n        while (indexList.length > 0) {\r\n            let randomIndex = Math.pp_randomInt(0, indexList.length - 1);\r\n            let index = indexList.pp_removeIndex(randomIndex);\r\n\r\n            let randomTimer = Math.pp_random(evidenceMinDelay, evidenceMaxDelay);\r\n            this._myUnspawnList.push([index, new PP.Timer(randomTimer)]);\r\n        }\r\n\r\n        this._myMenuTitle.unspawn(Math.pp_random(titleMinDelay, titleMaxDelay));\r\n    }\r\n\r\n    _startUnspawningRestart(fsm) {\r\n        this._startUnspawningInternal();\r\n    }\r\n\r\n    _startUnspawningReset(fsm) {\r\n        this._myResetCount = 0;\r\n\r\n        let fullReset = this._myFloppyDisk.getGrabTime() >= 5;\r\n        if (!fullReset) {\r\n\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"save_reset\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n\r\n            Global.mySaveManager.save(\"trial_started_once\", false);\r\n            Global.mySaveManager.save(\"trial_completed\", false);\r\n            Global.mySaveManager.save(\"trial_phase\", 1);\r\n\r\n            Global.myStatistics.myTrialPlayCountResettable = 0;\r\n            Global.myStatistics.myMrNOTClonesDismissedResettable = 0;\r\n            Global.mySaveManager.save(\"trial_play_count_resettable\", 0);\r\n            Global.mySaveManager.save(\"mr_NOT_clones_dismissed_resettable\", 0);\r\n\r\n            this._myNotEnough.start();\r\n        } else {\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"save_reset_full\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n\r\n            Global.mySaveManager.clear();\r\n            Global.mySaveManager.save(\"game_version\", Global.myGameVersion);\r\n            this._myNotEnough.start();\r\n            Global.myParticlesManager.mrNOTParticles(Global.myPlayerPosition);\r\n        }\r\n\r\n        this._startUnspawningInternal(0, 0, 0, 0);\r\n    }\r\n\r\n    _unspawn(dt, fsm) {\r\n        if (this._myUnspawnList.length > 0) {\r\n            let first = this._myUnspawnList[0];\r\n            first[1].update(dt);\r\n            if (first[1].isDone()) {\r\n                this._myCurrentMenuItems[first[0]].unspawn();\r\n                this._myUnspawnList.shift();\r\n            }\r\n\r\n            let moreDeleted = false;\r\n            for (let element of this._myUnspawnList) {\r\n                element[1].update(0);\r\n                if (element[1].isDone()) {\r\n                    moreDeleted = true;\r\n                    this._myCurrentMenuItems[element[0]].unspawn();\r\n                }\r\n            }\r\n\r\n            if (moreDeleted) {\r\n                this._myUnspawnList.pp_removeAll(element => element[1].isDone());\r\n            }\r\n        }\r\n\r\n        for (let item of this._myCurrentMenuItems) {\r\n            item.update(dt);\r\n        }\r\n\r\n        this._myMenuTitle.update(dt);\r\n\r\n        let done = true;\r\n        for (let item of this._myCurrentMenuItems) {\r\n            done = done && item.isInactive();\r\n        }\r\n        done = done && this._myMenuTitle.isHidden();\r\n\r\n        if (done && !this._myNotEnough.isNotEnoughing()) {\r\n            fsm.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    _endArcadeHard(fsm) {\r\n        this._myParentFSM.perform(MainTransitions.StartArcadeHard);\r\n    }\r\n\r\n    _endArcadeNormal(fsm) {\r\n        this._myParentFSM.perform(MainTransitions.StartArcadeNormal);\r\n    }\r\n\r\n    _endTrial(fsm) {\r\n        this._myParentFSM.performDelayed(MainTransitions.StartTrial);\r\n    }\r\n\r\n    _endReset(fsm) {\r\n        this._myParentFSM.perform(MainTransitions.Reset);\r\n    }\r\n\r\n    _endRestart(fsm) {\r\n        this._myParentFSM.perform(MainTransitions.Reset);\r\n    }\r\n\r\n    _fillMenuItems() {\r\n        let positions = [];\r\n        let ringHeight = Global.myRingHeight;\r\n        let ringRadius = Global.myRingRadius;\r\n        let rotation = 45;\r\n\r\n        let initialPosition = [0, ringHeight, -ringRadius];\r\n        positions.push(initialPosition.vec3_clone());\r\n        positions.push(initialPosition.vec3_rotateAxis(rotation, [0, 1, 0]));\r\n        positions.push(initialPosition.vec3_rotateAxis(-rotation, [0, 1, 0]));\r\n        positions.push(initialPosition.vec3_rotateAxis(rotation * 2, [0, 1, 0]));\r\n        positions.push(initialPosition.vec3_rotateAxis(-rotation * 2, [0, 1, 0]));\r\n        positions.push(initialPosition.vec3_rotateAxis(rotation * 3, [0, 1, 0]));\r\n        positions.push(initialPosition.vec3_rotateAxis(-rotation * 3, [0, 1, 0]));\r\n        positions.push(initialPosition.vec3_rotateAxis(-rotation * 4, [0, 1, 0]));\r\n\r\n        {\r\n            let startTrial = new MenuItem(Global.myGameObjects.get(GameObjectType.COIN), GameObjectType.COIN, positions[0], function () {\r\n                if (this._myFSM.isInState(\"ready\")) {\r\n                    this._myFSM.perform(\"unspawn_trial\");\r\n                    this._myResetCount = 0;\r\n                }\r\n            }.bind(this));\r\n            this._myStartTrial = startTrial;\r\n        }\r\n\r\n        {\r\n            let startTrialCompleted = new MenuItem(Global.myGameObjects.get(GameObjectType.NOT_COIN), GameObjectType.NOT_COIN, positions[0], function () {\r\n                if (this._myFSM.isInState(\"ready\")) {\r\n                    this._myFSM.perform(\"unspawn_trial\");\r\n                    this._myResetCount = 0;\r\n                }\r\n            }.bind(this));\r\n            this._myStartTrialCompleted = startTrialCompleted;\r\n        }\r\n\r\n        {\r\n            let startArcadeHard = new MenuItem(Global.myGameObjects.get(GameObjectType.ARCADE_STICK_DISPUTE), GameObjectType.ARCADE_STICK_DISPUTE, positions[2], function () {\r\n                if (this._myFSM.isInState(\"ready\")) {\r\n                    this._myFSM.perform(\"unspawn_arcade_dispute\");\r\n                    this._myResetCount = 0;\r\n                }\r\n            }.bind(this));\r\n            this._myMenuItems.push(startArcadeHard);\r\n        }\r\n\r\n        {\r\n            let startArcadeNormal = new MenuItem(Global.myGameObjects.get(GameObjectType.ARCADE_STICK_CHAT), GameObjectType.ARCADE_STICK_CHAT, positions[1], function () {\r\n                if (this._myFSM.isInState(\"ready\")) {\r\n                    this._myFSM.perform(\"unspawn_arcade_chat\");\r\n                    this._myResetCount = 0;\r\n                }\r\n            }.bind(this));\r\n            this._myMenuItems.push(startArcadeNormal);\r\n        }\r\n\r\n        {\r\n            let leaderboardArcadeHard = new MenuItem(Global.myGameObjects.get(GameObjectType.ARCADE_LEADERBOARD_DISPUTE), GameObjectType.ARCADE_LEADERBOARD_DISPUTE, positions[4], function () {\r\n                if (this._myFSM.isInState(\"ready\")) {\r\n                    //get leaderboard object and component and ask for a refresh\r\n                    this._myResetCount = 0;\r\n                }\r\n            }.bind(this));\r\n            this._myMenuItems.push(leaderboardArcadeHard);\r\n        }\r\n\r\n        {\r\n            let leaderboardArcadeNormal = new MenuItem(Global.myGameObjects.get(GameObjectType.ARCADE_LEADERBOARD_CHAT), GameObjectType.ARCADE_LEADERBOARD_CHAT, positions[3], function () {\r\n                if (this._myFSM.isInState(\"ready\")) {\r\n                    //get leaderboard object and component and ask for a refresh\r\n                    this._myResetCount = 0;\r\n                }\r\n            }.bind(this));\r\n            this._myMenuItems.push(leaderboardArcadeNormal);\r\n        }\r\n\r\n        {\r\n            let zestyMarket = new MenuItem(Global.myGameObjects.get(GameObjectType.ZESTY_MARKET), GameObjectType.ZESTY_MARKET, positions[6], function () {\r\n                if (this._myFSM.isInState(\"ready\")) {\r\n                    this._myResetCount = 0;\r\n                    let zestyComponent = this._myZestyObject.getObject().pp_getComponentHierarchy(\"zesty-banner\");\r\n                    if (zestyComponent) {\r\n                        if (zestyComponent.banner != null) {\r\n                            let onZestySuccess = function () {\r\n                                Global.myUnmute = true;\r\n                                Howler.mute(true);\r\n\r\n                                zestyComponent.executeClick();\r\n\r\n                                if (Global.myGoogleAnalytics) {\r\n                                    gtag(\"event\", \"zesty_market_opened\", {\r\n                                        \"value\": 1\r\n                                    });\r\n                                }\r\n                            }.bind(this);\r\n\r\n                            PP.XRUtils.openLinkPersistent(zestyComponent.banner.url, true, true, 15, onZestySuccess);\r\n                        } else {\r\n                            PP.XRUtils.openLinkPersistent(\"https://www.zesty.market\", true, true, 15,\r\n                                function () {\r\n                                    Global.myUnmute = true;\r\n                                    Howler.mute(true);\r\n\r\n                                    if (Global.myGoogleAnalytics) {\r\n                                        gtag(\"event\", \"zesty_market_opened\", {\r\n                                            \"value\": 1\r\n                                        });\r\n                                    }\r\n                                }.bind(this)\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }.bind(this));\r\n            this._myMenuItems.push(zestyMarket);\r\n            this._myZestyObject = zestyMarket;\r\n        }\r\n\r\n        {\r\n            let floppyDisk = new MenuItem(Global.myGameObjects.get(GameObjectType.FLOPPY_DISK), GameObjectType.FLOPPY_DISK, positions[5], function () {\r\n                if (this._myFSM.isInState(\"ready\")) {\r\n                    this._myResetCount++;\r\n\r\n                    if (this._myResetCount >= 5) {\r\n                        this._myFSM.perform(\"unspawn_reset\");\r\n                    }\r\n                }\r\n            }.bind(this));\r\n            this._myMenuItems.push(floppyDisk);\r\n            this._myFloppyDisk = floppyDisk;\r\n        }\r\n\r\n        {\r\n            let wondermelon = new MenuItem(Global.myGameObjects.get(GameObjectType.WONDERMELON), GameObjectType.WONDERMELON, positions[7], function () {\r\n                PP.XRUtils.openLinkPersistent(\"https://signor-pipo.itch.io/not-enough\", true, true, 15,\r\n                    function () {\r\n                        Global.myUnmute = true;\r\n                        Howler.mute(true);\r\n\r\n                        if (Global.myGoogleAnalytics) {\r\n                            gtag(\"event\", \"not_enough_opened\", {\r\n                                \"value\": 1\r\n                            });\r\n                        }\r\n                    }.bind(this)\r\n                );\r\n            }.bind(this));\r\n            this._myMenuItems.push(wondermelon);\r\n        }\r\n    }\r\n}\r\n\r\nclass MenuItem {\r\n    constructor(object, objectType, position, callbackOnFall = null) {\r\n        this._myObject = object;\r\n        this._myObjectType = objectType;\r\n        this._myPosition = position.slice(0);\r\n        this._myFacing = [0, 0, 0].vec3_sub(position).vec3_removeComponentAlongAxis([0, 1, 0]);\r\n        this._myPhysx = this._myObject.pp_getComponentHierarchy(\"physx\");\r\n        this._myGrabbable = this._myObject.pp_getComponentHierarchy(\"pp-grabbable\");\r\n        this._myScale = this._myObject.pp_getScale();\r\n\r\n        this._myTimer = new PP.Timer(0);\r\n        this._myAudioTimer = new PP.Timer(0);\r\n\r\n        this._myCallbackOnFall = callbackOnFall;\r\n\r\n        this._myAutoSpawn = true;\r\n\r\n        this._myThrowTimer = new PP.Timer(5, false);\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n\r\n        this._myFSM = new PP.FSM();\r\n\r\n        //this._myFSM.setDebugLogActive(true, \"        Menu Item\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"inactive\", this._inactiveUpdate.bind(this));\r\n        this._myFSM.addState(\"spawning\", this._spawning.bind(this));\r\n        this._myFSM.addState(\"ready\", this._readyUpdate.bind(this));\r\n        this._myFSM.addState(\"unspawning\", this._unspawning.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"inactive\", \"reset\", this._reset.bind(this));\r\n        this._myFSM.addTransition(\"inactive\", \"spawning\", \"spawn\", this._startSpawn.bind(this));\r\n        this._myFSM.addTransition(\"spawning\", \"ready\", \"end\", this._startReady.bind(this));\r\n        this._myFSM.addTransition(\"spawning\", \"unspawning\", \"unspawn\", this._startUnspawn.bind(this));\r\n        this._myFSM.addTransition(\"ready\", \"unspawning\", \"unspawn\", this._startUnspawn.bind(this));\r\n        this._myFSM.addTransition(\"unspawning\", \"inactive\", \"end\", this._startInactive.bind(this));\r\n        this._myFSM.addTransition(\"inactive\", \"inactive\", \"reset\", this._reset.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._myParticlesRadius = 0.225;\r\n\r\n        this._myAppearAudio = null;\r\n        this._myDisappearAudio = null;\r\n\r\n        this._myGrabTime = 0;\r\n        this._myCollisionCallbackID = null;\r\n    }\r\n\r\n    init(timeBeforeFirstSpawn) {\r\n        this._myFSM.perform(\"reset\", timeBeforeFirstSpawn);\r\n    }\r\n\r\n    update(dt) {\r\n        this._myFSM.update(dt);\r\n        this._myThrowTimer.update(dt);\r\n\r\n        if (this._myGrabbable.isGrabbed()) {\r\n            this._myGrabTime += dt;\r\n        }\r\n    }\r\n\r\n    setAutoSpawn(autoSpawn) {\r\n        this._myAutoSpawn = autoSpawn;\r\n    }\r\n\r\n    unspawn() {\r\n        this._myFSM.perform(\"unspawn\");\r\n    }\r\n\r\n    canUnspawn() {\r\n        return this._myFSM.canPerform(\"unspawn\");\r\n    }\r\n\r\n    getObject() {\r\n        return this._myObject;\r\n    }\r\n\r\n    isInactive() {\r\n        return this._myFSM.isInState(\"inactive\");\r\n    }\r\n\r\n    getGrabTime() {\r\n        return this._myGrabTime;\r\n    }\r\n\r\n    _reset(fsm, transition, timeBeforeFirstSpawn) {\r\n        this._disableObject();\r\n        this._myTimer.start(timeBeforeFirstSpawn);\r\n        this._myAutoSpawn = true;\r\n    }\r\n\r\n    _inactiveUpdate(dt, fsm) {\r\n        this._myTimer.update(dt);\r\n        if (this._myTimer.isDone() && this._myAutoSpawn) {\r\n            fsm.perform(\"spawn\");\r\n        }\r\n    }\r\n\r\n    _startSpawn() {\r\n        if (this._myAppearAudio == null) {\r\n            this._myAppearAudio = Global.myAudioManager.createAudioPlayer(SfxID.EVIDENCE_APPEAR);\r\n            this._myDisappearAudio = Global.myAudioManager.createAudioPlayer(SfxID.EVIDENCE_DISAPPEAR);\r\n        }\r\n\r\n        let position = this._myPosition.pp_clone();\r\n\r\n        let evidenceComponent = this._myObject.pp_getComponentHierarchy(\"evidence-component\");\r\n        if (evidenceComponent) {\r\n            let heightDisplacement = evidenceComponent.getHeightDisplacement();\r\n            if (Math.abs(heightDisplacement) > 0.0001) {\r\n                position.vec3_add([0, heightDisplacement, 0], position);\r\n            }\r\n        }\r\n\r\n        this._myObject.pp_setPosition(position);\r\n        this._myObject.pp_setScale(0);\r\n        this._myObject.pp_translate([0, 0.2, 0]);\r\n        this._myObject.pp_lookTo(this._myFacing, [0, 1, 0]);\r\n        this._myObject.pp_setActive(true);\r\n\r\n        this._myPhysx.kinematic = true;\r\n        this._myPhysx.linearVelocity = [0, 0, 0];\r\n        this._myPhysx.angularVelocity = [0, 0, 0];\r\n\r\n        this._myTimer.start(1);\r\n        this._myThrowTimer.reset();\r\n\r\n        this._myAudioTimer.start(0.2);\r\n        this._myAppearAudio.setPosition(position);\r\n        this._myAppearAudio.setPitch(Math.pp_random(0.85, 1.05));\r\n\r\n        this._myHitFloor = false;\r\n        this._myGrabTime = 0;\r\n\r\n        this._myGrabbable.registerGrabEventListener(this, this._onGrab.bind(this));\r\n        this._myGrabbable.registerThrowEventListener(this, this._onThrow.bind(this));\r\n\r\n        this._myCollisionCallbackID = this._myPhysx.onCollision(this._onCollision.bind(this));\r\n    }\r\n\r\n    _spawning(dt) {\r\n        if (this._myAudioTimer.isRunning()) {\r\n            this._myAudioTimer.update(dt);\r\n            if (this._myAudioTimer.isDone()) {\r\n                this._myAppearAudio.play();\r\n            }\r\n        }\r\n\r\n        this._myTimer.update(dt);\r\n\r\n        let scaleMultiplier = PP.EasingFunction.easeInOut(this._myTimer.getPercentage());\r\n        this._myObject.pp_setScale(this._myScale.vec3_scale(scaleMultiplier));\r\n\r\n        this._myAppearAudio.updatePosition(this._myObject.pp_getPosition());\r\n\r\n        if (this._myTimer.isDone()) {\r\n            this._myFSM.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    _startReady() {\r\n        this._myObject.pp_setScale(this._myScale);\r\n        if (!this._myGrabbable.isGrabbed()) {\r\n            this._myPhysx.kinematic = false;\r\n        }\r\n    }\r\n\r\n    _readyUpdate(dt) {\r\n        if (this._myObject.pp_getPosition()[1] <= -10 || this._myObject.pp_getPosition()[1] > 20 || this._myObject.pp_getPosition().vec3_length() > 50) {\r\n            this._myHitFloor = true;\r\n            this._myFSM.perform(\"unspawn\");\r\n        }\r\n    }\r\n\r\n    _startUnspawn() {\r\n        if (this._myHitFloor) {\r\n            //Global.myStatistics.myEvidencesThrown += 1;\r\n        }\r\n\r\n        this._myTimer.start(PP.myEasyTuneVariables.get(\"Unspawn Menu Time\"));\r\n\r\n        this._myDisappearAudio.setPosition(this._myObject.pp_getPosition());\r\n        this._myDisappearAudio.setPitch(Math.pp_random(0.85, 1.05));\r\n        this._myDisappearAudio.play();\r\n    }\r\n\r\n    _unspawning(dt) {\r\n        this._myTimer.update(dt);\r\n\r\n        let scaleMultiplier = Math.pp_interpolate(1, PP.myEasyTuneVariables.get(\"Unspawn Menu Scale\"), this._myTimer.getPercentage());\r\n        this._myObject.pp_setScale(this._myScale.vec3_scale(scaleMultiplier));\r\n\r\n        //this._myDisappearAudio.updatePosition(this._myObject.pp_getPosition());\r\n\r\n        if (this._myTimer.isDone()) {\r\n            Global.myParticlesManager.explosion(this._myObject.pp_getPosition(), this._myParticlesRadius, this._myScale, this._myObjectType);\r\n            this._myFSM.perform(\"end\");\r\n            if (this._myCallbackOnFall && PP.XRUtils.isXRSessionActive() && Global.myXRSessionActiveOpenLinkExtraCheck && this._myThrowTimer.isRunning()) {\r\n                this._myCallbackOnFall();\r\n            }\r\n        }\r\n    }\r\n\r\n    _startInactive() {\r\n        this._disableObject();\r\n        this._myTimer.start(1);\r\n    }\r\n\r\n    _onGrab() {\r\n        this._myGrabTime = 0;\r\n        this._myThrowTimer.reset();\r\n    }\r\n\r\n    _onThrow() {\r\n        this._myThrowTimer.start();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._myThrowTimer.reset();\r\n    }\r\n\r\n    _disableObject() {\r\n        if (this._myPhysx.active) {\r\n            this._myPhysx.linearVelocity = [0, 0, 0];\r\n            this._myPhysx.angularVelocity = [0, 0, 0];\r\n            this._myObject.pp_setPosition([0, -10, 0]);\r\n        }\r\n        this._myObject.pp_setActive(false);\r\n        this._myGrabbable.unregisterGrabEventListener(this);\r\n        this._myGrabbable.unregisterThrowEventListener(this);\r\n        if (this._myCollisionCallbackID != null) {\r\n            this._myPhysx.removeCollisionCallback(this._myCollisionCallbackID);\r\n            this._myCollisionCallbackID = null;\r\n        }\r\n    }\r\n\r\n    _onCollision() {\r\n        if (!this._myGrabbable.isGrabbed() && this._myPhysx.active && this._myPhysx.kinematic &&\r\n            (this._myFSM.getCurrentState().myID == \"spawning\")) {\r\n            this._myPhysx.kinematic = false;\r\n        }\r\n    }\r\n}\r\n\r\nclass MenuTitle {\r\n    constructor(titlesObject, titleObject, subtitleObject) {\r\n        this._myTitlesObject = titlesObject;\r\n        this._myTitleObject = titleObject;\r\n        this._mySubtitleObject = subtitleObject;\r\n\r\n        this._myTitleText = this._myTitleObject.pp_getComponent(\"text\");\r\n        this._myTitleTextColor = this._myTitleText.material.outlineColor.pp_clone();\r\n        this._mySubtitleText = this._mySubtitleObject.pp_getComponent(\"text\");\r\n        this._mySubtitleTextColor = this._mySubtitleText.material.outlineColor.pp_clone();\r\n\r\n        this._myStartTimer = new PP.Timer(1, false);\r\n        this._myStartAppearAudioTimer = new PP.Timer(0.3, false);\r\n        this._myTimer = new PP.Timer(1, false);\r\n\r\n        this._myFSM = new PP.FSM();\r\n\r\n        //this._myFSM.setDebugLogActive(true, \"        Menu Title\");\r\n        this._myFSM.addState(\"spawn\", this._spawnUpdate.bind(this));\r\n        this._myFSM.addState(\"unspawn\", this._unspawnUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"spawn\", \"unspawn\", \"unspawn\");\r\n        this._myFSM.addTransition(\"unspawn\", \"spawn\", \"spawn\");\r\n\r\n        this._myFSM.init(\"spawn\");\r\n\r\n        this._myAppearAudio = Global.myAudioManager.createAudioPlayer(SfxID.TITLE_APPEAR);\r\n        this._myDisappearAudio = Global.myAudioManager.createAudioPlayer(SfxID.TITLE_DISAPPEAR);\r\n\r\n        //Setup\r\n        this._mySpawnTime = 1.5;\r\n        this._myHideScale = 0.95;\r\n    }\r\n\r\n    spawn(timeToStart) {\r\n        if (!this._myTitleText.active) {\r\n            this._myTitleObject.pp_setActive(true);\r\n            this._mySubtitleObject.pp_setActive(true);\r\n            Global.myTitlePatchObject.pp_setActive(true);\r\n\r\n            this._myTitleCenterPosition = [0, 168, -184];\r\n            this._myAppearAudio.setPosition(this._myTitleCenterPosition);\r\n            this._myDisappearAudio.setPosition(this._myTitleCenterPosition);\r\n\r\n            this._myTimer.start(this._mySpawnTime);\r\n            this._myStartAppearAudioTimer.start(0.4);\r\n        }\r\n\r\n        this._myStartTimer.start(timeToStart + 0.4);\r\n        this._myFSM.perform(\"spawn\");\r\n    }\r\n\r\n    unspawn(timeToStart) {\r\n        this._myTimer.start(this._mySpawnTime);\r\n        this._myStartTimer.start(timeToStart);\r\n        this._myFSM.perform(\"unspawn\");\r\n\r\n        this._myDisappearAudio.play();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    isHidden() {\r\n        return !this._myTimer.isRunning();\r\n    }\r\n\r\n    _spawnUpdate(dt) {\r\n        if (this._myStartAppearAudioTimer.isRunning()) {\r\n            this._myStartAppearAudioTimer.update(dt);\r\n            if (this._myStartAppearAudioTimer.isDone()) {\r\n                this._myAppearAudio.play();\r\n            }\r\n        }\r\n\r\n        this._myStartTimer.update(dt);\r\n        if (this._myStartTimer.isDone()) {\r\n            if (this._myTimer.isRunning()) {\r\n                this._myTimer.update(dt);\r\n\r\n                let tempColor = [0, 0, 0, 1];\r\n\r\n                tempColor[0] = Math.pp_interpolate(0, this._myTitleTextColor[0], this._myTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n                tempColor[1] = Math.pp_interpolate(0, this._myTitleTextColor[1], this._myTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n                tempColor[2] = Math.pp_interpolate(0, this._myTitleTextColor[2], this._myTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n\r\n                this._myTitleText.material.outlineColor = tempColor;\r\n\r\n                tempColor[0] = Math.pp_interpolate(0, this._mySubtitleTextColor[0], this._myTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n                tempColor[1] = Math.pp_interpolate(0, this._mySubtitleTextColor[1], this._myTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n                tempColor[2] = Math.pp_interpolate(0, this._mySubtitleTextColor[2], this._myTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n\r\n                this._mySubtitleText.material.outlineColor = tempColor;\r\n\r\n                let easing = t => t * (2 - t);\r\n                this._myTitlesObject.pp_setScale(Math.pp_interpolate(this._myHideScale, 1, this._myTimer.getPercentage(), easing));\r\n            }\r\n\r\n            if (this._myTimer.isDone()) {\r\n                this._myTimer.reset();\r\n            }\r\n        }\r\n    }\r\n\r\n    _unspawnUpdate(dt) {\r\n        this._myStartTimer.update(dt);\r\n        if (this._myStartTimer.isDone()) {\r\n            if (this._myTimer.isRunning()) {\r\n                this._myTimer.update(dt);\r\n                let tempColor = [0, 0, 0, 1];\r\n\r\n                tempColor[0] = Math.pp_interpolate(this._myTitleTextColor[0], 0, this._myTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n                tempColor[1] = Math.pp_interpolate(this._myTitleTextColor[1], 0, this._myTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n                tempColor[2] = Math.pp_interpolate(this._myTitleTextColor[2], 0, this._myTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n\r\n                this._myTitleText.material.outlineColor = tempColor;\r\n\r\n                tempColor[0] = Math.pp_interpolate(this._mySubtitleTextColor[0], 0, this._myTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n                tempColor[1] = Math.pp_interpolate(this._mySubtitleTextColor[1], 0, this._myTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n                tempColor[2] = Math.pp_interpolate(this._mySubtitleTextColor[2], 0, this._myTimer.getPercentage(), PP.EasingFunction.easeInOut);\r\n\r\n                this._mySubtitleText.material.outlineColor = tempColor;\r\n\r\n                let easing = t => t * t;\r\n                let scale = Math.pp_interpolate(1, this._myHideScale, this._myTimer.getPercentage(), easing);\r\n                this._myTitlesObject.pp_setScale(scale);\r\n            }\r\n\r\n            if (this._myTimer.isDone()) {\r\n                this._myTimer.reset();\r\n                this._myTitleObject.pp_setActive(false);\r\n                this._mySubtitleObject.pp_setActive(false);\r\n                Global.myTitlePatchObject.pp_setActive(false);\r\n            }\r\n        }\r\n    }\r\n\r\n}",
        "class ShowTitleState extends PP.State {\r\n    constructor() {\r\n        super();\r\n        this._myTitlesObject = WL.scene.addObject(Global.myScene);\r\n        this._myTitlesRumbleObject = WL.scene.addObject(this._myTitlesObject);\r\n        this._myTitle = WL.scene.addObject(null);\r\n        this._mySubtitle = WL.scene.addObject(null);\r\n\r\n        Global.myTitlesObject = this._myTitlesObject;\r\n        Global.myTitlesRumbleObject = this._myTitlesRumbleObject;\r\n        Global.myTitleObject = this._myTitle;\r\n        Global.mySubtitleObject = this._mySubtitle;\r\n\r\n        this._myTitleTextComponent = this._myTitle.addComponent('text');\r\n        this._myTitleTextComponent.alignment = WL.Alignment.Left;\r\n        this._myTitleTextComponent.justification = WL.Justification.Line;\r\n        this._myTitleTextComponent.material = Global.myMaterials.myTitle.clone();\r\n        this._myTitleTextComponent.text = \" \";\r\n        this._myTitleTextComponent.text = \"\";\r\n        //this._myTitle.addComponent('pp-easy-transform');\r\n        //this._myTitle.addComponent('pp-easy-text-color', { \"_myColorType\": 1, \"_mySetAsDefault\": true });\r\n\r\n        //this._mySubtitle.addComponent('pp-easy-transform');\r\n        //this._mySubtitle.addComponent('pp-easy-text-color', { \"_myColorType\": 1, \"_mySetAsDefault\": true });\r\n        this._mySubtitleTextComponent = this._mySubtitle.addComponent('text');\r\n        this._mySubtitleTextComponent.alignment = WL.Alignment.Left;\r\n        this._mySubtitleTextComponent.justification = WL.Justification.Line;\r\n        this._mySubtitleTextComponent.material = Global.myMaterials.mySubtitle.clone();\r\n        this._mySubtitleTextComponent.text = \" \";\r\n        this._mySubtitleTextComponent.text = \"\";\r\n\r\n        this._myTitlesObjectPosition = [-10, 133, -164];\r\n        this._myTitlesObject.pp_setPosition(this._myTitlesObjectPosition);\r\n\r\n        this._myTitle.pp_setPosition([-100, 153, -196]);\r\n        this._myTitle.pp_setScale(550);\r\n        this._myTitle.pp_setRotation([40, 0, 0]);\r\n\r\n        this._mySubtitle.pp_setPosition([-108.5, 81.5, -148]);\r\n        this._mySubtitle.pp_setScale(240);\r\n        this._mySubtitle.pp_setRotation([40, 0, 0]);\r\n\r\n        this._myTitle.pp_setParent(this._myTitlesRumbleObject);\r\n        this._mySubtitle.pp_setParent(this._myTitlesRumbleObject);\r\n        Global.myTitlePatchObject.pp_setParent(this._myTitlesRumbleObject);\r\n\r\n        this._myTitleCenterPosition = [0, 168, -184];\r\n        this._mySubtitleCenterPosition = [0, 87, -144];\r\n\r\n        this._myCharAudios = [];\r\n        this._myCharAudios[0] = Global.myAudioManager.createAudioPlayer(SfxID.BLATHER_1);\r\n        this._myCharAudios[1] = Global.myAudioManager.createAudioPlayer(SfxID.BLATHER_0);\r\n        this._myCharAudios[0].setVolume(0.5);\r\n        this._myCharAudios[1].setVolume(0.5);\r\n\r\n        this._myNotEnough = new NotEnough(this._mySubtitleCenterPosition);\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"        Show Title\");\r\n        this._myFSM.addState(\"show_title\", this.showTitle.bind(this));\r\n        this._myFSM.addState(\"show_sub_1\", this.showSub1.bind(this));\r\n        this._myFSM.addState(\"show_sub_IS\", this.showSubIS.bind(this));\r\n        this._myFSM.addState(\"show_sub_2\", this.showSub2.bind(this));\r\n        this._myFSM.addState(\"done\");\r\n\r\n        this._myFSM.addTransition(\"show_title\", \"show_sub_1\", \"end\", this.prepareShowSub1.bind(this));\r\n        this._myFSM.addTransition(\"show_sub_1\", \"show_sub_IS\", \"end\", this.prepareShowSubIS.bind(this));\r\n        this._myFSM.addTransition(\"show_sub_IS\", \"show_sub_2\", \"end\", this.prepareShowSub2.bind(this));\r\n        this._myFSM.addTransition(\"show_sub_2\", \"done\", \"end\");\r\n\r\n        this._myCharMinTime = 0.1;\r\n        this._myCharMaxTime = 0.1;\r\n    }\r\n\r\n    start() {\r\n        this._myFSM.init(\"show_title\", this.prepareShowTitle.bind(this));\r\n    }\r\n\r\n    end(fsm, transition, state) {\r\n        if (transition.myID == \"skip\") {\r\n            this._skip();\r\n        }\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myFSM.update(dt);\r\n        if (this._myFSM.isInState(\"done\")) {\r\n            fsm.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    prepareShowTitle(fsm) {\r\n        this._myCharAudios[0].setPosition(this._myTitleCenterPosition);\r\n        this._myCharAudios[1].setPosition(this._myTitleCenterPosition);\r\n\r\n        this._myCharMinTime = 0.5;\r\n        this._myCharMaxTime = 0.5;\r\n\r\n        this._myCharTimer = new PP.Timer(Math.pp_random(this._myCharMinTime, this._myCharMaxTime));\r\n        this._myWaitTimer = new PP.Timer(1);\r\n        this._myChars = \"mr NOT\";\r\n        this._myCurrChar = 0;\r\n    }\r\n\r\n    showTitle(dt, fsm) {\r\n        if (this._myCurrChar != this._myChars.length) {\r\n            this._myCharTimer.update(dt);\r\n            if (this._myCharTimer.isDone()) {\r\n                this._myCharTimer.start(Math.pp_random(this._myCharMinTime, this._myCharMaxTime));\r\n\r\n                let currentCharacter = this._myChars[this._myCurrChar];\r\n\r\n                if (currentCharacter != ' ') {\r\n                    let player = this._myCharAudios[this._myCurrChar % 2];\r\n                    player.play();\r\n                }\r\n\r\n                this._myTitleTextComponent.text = this._myTitleTextComponent.text.concat(currentCharacter);\r\n\r\n                this._myCurrChar++;\r\n            }\r\n        } else {\r\n            this._myWaitTimer.update(dt);\r\n            if (this._myWaitTimer.isDone()) {\r\n                fsm.perform(\"end\");\r\n            }\r\n        }\r\n    }\r\n\r\n    prepareShowSub1(fsm) {\r\n        this._myCharAudios[0].setPosition(this._mySubtitleCenterPosition);\r\n        this._myCharAudios[1].setPosition(this._mySubtitleCenterPosition);\r\n\r\n        this._myCharMinTime = 0.15;\r\n        this._myCharMaxTime = 0.15;\r\n\r\n        this._myCharTimer = new PP.Timer(Math.pp_random(this._myCharMinTime, this._myCharMaxTime));\r\n        this._myWaitTimer = new PP.Timer(0.05);\r\n        this._myChars = \"enough\";\r\n        this._myCurrChar = 0;\r\n    }\r\n\r\n    showSub1(dt, fsm) {\r\n        if (this._myCurrChar != this._myChars.length) {\r\n            this._myCharTimer.update(dt);\r\n            if (this._myCharTimer.isDone()) {\r\n                this._myCharTimer.start(Math.pp_random(this._myCharMinTime, this._myCharMaxTime));\r\n\r\n                let currentCharacter = this._myChars[this._myCurrChar];\r\n\r\n                if (currentCharacter != ' ') {\r\n                    let player = this._myCharAudios[this._myCurrChar % 2];\r\n                    player.play();\r\n                }\r\n\r\n                this._mySubtitleTextComponent.text = this._mySubtitleTextComponent.text.concat(currentCharacter);\r\n\r\n                this._myCurrChar++;\r\n            }\r\n        } else {\r\n            this._myWaitTimer.update(dt);\r\n            if (this._myWaitTimer.isDone()) {\r\n                fsm.perform(\"end\");\r\n            }\r\n        }\r\n    }\r\n\r\n    prepareShowSubIS(fsm) {\r\n        this._myNotEnough.start();\r\n\r\n        this._mySubtitleTextComponent.text = this._mySubtitleTextComponent.text.concat(\" IS \");\r\n    }\r\n\r\n    showSubIS(dt, fsm) {\r\n        this._myNotEnough.update(dt);\r\n        if (!this._myNotEnough.isNotEnoughing()) {\r\n            fsm.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    prepareShowSub2(fsm) {\r\n        this._myCharAudios[0].setPosition(this._mySubtitleCenterPosition);\r\n        this._myCharAudios[1].setPosition(this._mySubtitleCenterPosition);\r\n\r\n        this._myCharMinTime = 0.15;\r\n        this._myCharMaxTime = 0.15;\r\n\r\n        this._myCharTimer = new PP.Timer(0);\r\n        this._myChars = \"enough\";\r\n        this._myCurrChar = 0;\r\n\r\n        this._myWaitTimer = new PP.Timer(0);\r\n    }\r\n\r\n    showSub2(dt, fsm) {\r\n        this.showSub1(dt, fsm);\r\n    }\r\n\r\n    _skip() {\r\n        this._myCharAudios[0].stop();\r\n        this._myCharAudios[1].stop();\r\n\r\n        this._myNotEnough.stop();\r\n\r\n        this._myTitleTextComponent.text = \"mr NOT\";\r\n        this._mySubtitleTextComponent.text = \"enough IS enough\";\r\n    }\r\n}",
        "class TrialState extends PP.State {\r\n    constructor() {\r\n        super();\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"    Trial\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"first_blather\", new BlatherState(this._firstBlatherSentences(), false));\r\n        this._myFSM.addState(\"first_blather_hint\", new BlatherState(this._firstBlatherHintSentences(), false));\r\n        this._myFSM.addState(\"first_vent\", new VentState(this._firstVentSetup(), this._firstEvidenceSetupList()));\r\n        this._myFSM.addState(\"first_defeat_blather\", new BlatherState(this._firstDefeatBlatherSentences(), true));\r\n        this._myFSM.addState(\"second_blather\", new BlatherState(this._secondBlatherSentences(), false));\r\n        this._myFSM.addState(\"second_vent\", new VentState(this._secondVentSetup(), this._secondEvidenceSetupList()));\r\n        this._myFSM.addState(\"second_defeat_blather\", new BlatherState(this._secondDefeatBlatherSentences(), true));\r\n        this._myFSM.addState(\"third_blather\", new BlatherState(this._thirdBlatherSentences(), false));\r\n        this._myFSM.addState(\"third_vent\", new VentState(this._thirdVentSetup(), this._thirdEvidenceSetupList()));\r\n        this._myFSM.addState(\"third_defeat_blather\", new BlatherState(this._thirdDefeatBlatherSentences(), true));\r\n        this._myFSM.addState(\"MrNOT_blather\", new BlatherState(this._mrNOTBlatherSentences(), true));\r\n        this._myFSM.addState(\"MrNOT_vent\", new MrNOTVentState());\r\n        this._myFSM.addState(\"MrNOT_defeat_blather\", new BlatherState(this._mrNOTDefeatBlatherSentences(), true));\r\n        this._myFSM.addState(\"it_will_always_be_not_enough\", new BlatherState(this._NOTENOUGHBlatherSentences(), true));\r\n        this._myFSM.addState(\"done\");\r\n\r\n        this._myFSM.addTransition(\"init\", \"first_blather\", \"start_1\");\r\n        this._myFSM.addTransition(\"init\", \"first_blather_hint\", \"start_1_hint\");\r\n        this._myFSM.addTransition(\"init\", \"second_blather\", \"start_2\");\r\n        this._myFSM.addTransition(\"init\", \"third_blather\", \"start_3\");\r\n        this._myFSM.addTransition(\"init\", \"MrNOT_blather\", \"start_4\");\r\n\r\n        this._myFSM.addTransition(\"first_blather\", \"first_vent\", \"end\");\r\n        this._myFSM.addTransition(\"first_blather_hint\", \"first_vent\", \"end\");\r\n        this._myFSM.addTransition(\"first_vent\", \"first_defeat_blather\", \"lost\", this._trialPhaseLost.bind(this, 1));\r\n        this._myFSM.addTransition(\"first_vent\", \"second_blather\", \"completed\", this._trialPhaseCompleted.bind(this, 1));\r\n\r\n        this._myFSM.addTransition(\"second_blather\", \"second_vent\", \"end\");\r\n        this._myFSM.addTransition(\"second_vent\", \"second_defeat_blather\", \"lost\", this._trialPhaseLost.bind(this, 2));\r\n        this._myFSM.addTransition(\"second_vent\", \"third_blather\", \"completed\", this._trialPhaseCompleted.bind(this, 2));\r\n\r\n        this._myFSM.addTransition(\"third_blather\", \"third_vent\", \"end\");\r\n        this._myFSM.addTransition(\"third_vent\", \"third_defeat_blather\", \"lost\", this._trialPhaseLost.bind(this, 3));\r\n        this._myFSM.addTransition(\"third_vent\", \"MrNOT_blather\", \"completed\", this._trialPhaseCompleted.bind(this, 3));\r\n\r\n        this._myFSM.addTransition(\"MrNOT_blather\", \"MrNOT_vent\", \"end\");\r\n        this._myFSM.addTransition(\"MrNOT_vent\", \"MrNOT_defeat_blather\", \"lost\", this._trialPhaseLost.bind(this, 4));\r\n        this._myFSM.addTransition(\"MrNOT_vent\", \"it_will_always_be_not_enough\", \"completed\", this._trialPhaseCompleted.bind(this, 4));\r\n\r\n        this._myFSM.addTransition(\"it_will_always_be_not_enough\", \"done\", \"end\", this._gameCompleted.bind(this));\r\n\r\n        this._myFSM.addTransition(\"first_defeat_blather\", \"done\", \"end\", this._backToMenu.bind(this, 1));\r\n        this._myFSM.addTransition(\"second_defeat_blather\", \"done\", \"end\", this._backToMenu.bind(this, 2));\r\n        this._myFSM.addTransition(\"third_defeat_blather\", \"done\", \"end\", this._backToMenu.bind(this, 3));\r\n        this._myFSM.addTransition(\"MrNOT_defeat_blather\", \"done\", \"end\", this._backToMenu.bind(this, 4));\r\n\r\n        this._myFSM.addTransition(\"done\", \"first_blather\", \"start_1\");\r\n        this._myFSM.addTransition(\"done\", \"first_blather_hint\", \"start_1_hint\");\r\n        this._myFSM.addTransition(\"done\", \"second_blather\", \"start_2\");\r\n        this._myFSM.addTransition(\"done\", \"third_blather\", \"start_3\");\r\n        this._myFSM.addTransition(\"done\", \"MrNOT_blather\", \"start_4\");\r\n\r\n        let states = this._myFSM.getStates();\r\n        for (let state of states) {\r\n            this._myFSM.addTransition(state.myID, \"done\", \"skip\", this._backToMenu.bind(this, 1));\r\n        }\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._myParentFSM = null;\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        Global.myTrialDuration += dt;\r\n        Global.myStatistics.myTrialPlayTime += dt;\r\n\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    init(fsm) {\r\n    }\r\n\r\n    start(fsm, transitionID) {\r\n        this._myParentFSM = fsm;\r\n        Global.myTrialDuration = 0;\r\n        this._myTrialStartedFromBegin = false;\r\n        Global.myStatistics.myTrialPlayCount += 1;\r\n        Global.myStatistics.myTrialPlayCountResettable += 1;\r\n\r\n        let trialPhase = Global.mySaveManager.loadNumber(\"trial_phase\", 1);\r\n\r\n        if (trialPhase == 1) {\r\n            this._myTrialStartedFromBegin = true;\r\n        }\r\n\r\n        let transition = \"start_\".concat(trialPhase);\r\n\r\n        let giveHint = false;\r\n        giveHint = trialPhase == 1 && Global.myStatistics.myTrialPlayCountResettable >= 7 && Global.myStatistics.myMrNOTClonesDismissedResettable <= 0;\r\n        if (giveHint) {\r\n            transition = transition.concat(\"_hint\");\r\n\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"trial_hint_viewed_phase_\".concat(trialPhase), {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n        }\r\n\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"trial_started\", {\r\n                \"value\": 1\r\n            });\r\n\r\n            gtag(\"event\", \"trial_started_phase_\".concat(trialPhase), {\r\n                \"value\": 1\r\n            });\r\n        }\r\n\r\n        this._myFSM.perform(transition);\r\n    }\r\n\r\n    end(fsm, transitionID) {\r\n        Global.mySaveManager.save(\"trial_started_once\", true);\r\n    }\r\n\r\n    _trialPhaseCompleted(trialPhase, fsm) {\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"trial_completed_phase_\".concat(trialPhase), {\r\n                \"value\": 1\r\n            });\r\n        }\r\n\r\n        if (trialPhase == 4) {\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"trial_time\", {\r\n                    \"value\": Global.myTrialDuration.toFixed(2)\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    _trialPhaseLost(trialPhase, fsm) {\r\n        if (Global.myGoogleAnalytics) {\r\n            gtag(\"event\", \"trial_lost_phase_\".concat(trialPhase), {\r\n                \"value\": 1\r\n            });\r\n\r\n            gtag(\"event\", \"trial_lost_time_phase_\".concat(trialPhase), {\r\n                \"value\": Global.myVentDuration.toFixed(2)\r\n            });\r\n\r\n            gtag(\"event\", \"trial_time\", {\r\n                \"value\": Global.myTrialDuration.toFixed(2)\r\n            });\r\n\r\n            if (Global.myStatistics.myTrialCompletedCount <= 0) {\r\n                gtag(\"event\", \"trial_lost_time_before_completed_phase_\".concat(trialPhase), {\r\n                    \"value\": Global.myVentDuration.toFixed(2)\r\n                });\r\n            }\r\n\r\n            if (trialPhase == 1 && Global.myStatistics.myTrialCompletedCount <= 0) {\r\n                let clonesOnlyPunched = Global.myStatistics.myMrNOTClonesDismissed > 0 && Global.myStatistics.myMrNOTClonesDismissed == Global.myStatistics.myEvidencesPunched;\r\n                if (Global.myStatistics.myMrNOTClonesDismissed <= 0 || clonesOnlyPunched) {\r\n                    gtag(\"event\", \"trial_lost_before_first_dismiss\", {\r\n                        \"value\": 1\r\n                    });\r\n\r\n                    if (clonesOnlyPunched) {\r\n                        gtag(\"event\", \"trial_lost_only_punched\", {\r\n                            \"value\": 1\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (trialPhase == 1 && !Global.mySaveManager.loadBool(\"mr_NOT_clones_seen\", false)) {\r\n                gtag(\"event\", \"trial_lost_before_first_clone_seen\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    _backToMenu(trialPhase, fsm) {\r\n        Global.mySaveManager.save(\"trial_phase\", trialPhase);\r\n        this._myParentFSM.perform(MainTransitions.End);\r\n    }\r\n\r\n    _gameCompleted(fsm) {\r\n        if (this._myTrialStartedFromBegin) {\r\n            if (Global.myStatistics.myTrialBestTime < 0 || Global.myTrialDuration < Global.myStatistics.myTrialBestTime) {\r\n                Global.myStatistics.myTrialBestTime = Global.myTrialDuration;\r\n            }\r\n\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"trial_completed_from_start\", {\r\n                    \"value\": 1\r\n                });\r\n\r\n                gtag(\"event\", \"trial_completed_from_start_time\", {\r\n                    \"value\": Global.myTrialDuration.toFixed(2)\r\n                });\r\n            }\r\n        }\r\n\r\n        Global.mySaveManager.save(\"trial_phase\", 1);\r\n        Global.mySaveManager.save(\"trial_completed\", true);\r\n        Global.myStatistics.myTrialCompletedCount += 1;\r\n        this._myParentFSM.perform(MainTransitions.End);\r\n    }\r\n\r\n    _firstBlatherSentences() {\r\n        let sentences = [];\r\n\r\n        sentences.push(new Sentence(\"Glad to see you again\"));\r\n        sentences.push(new Sentence(\"Maybe we could have a little conversation\"));\r\n        sentences.push(new Sentence(\"Why don't you show me what you have learned so far?\", 2.5, 1.5));\r\n\r\n        return sentences;\r\n    }\r\n\r\n    _firstBlatherHintSentences() {\r\n        let sentences = [];\r\n\r\n        sentences.push(new Sentence(\"Glad to see you again\"));\r\n        sentences.push(new Sentence(\"Maybe we could have a little conversation\"));\r\n        sentences.push(new Sentence(\"Why don't you THROW me what you have learned so far?\", 2.5, 1.5));\r\n\r\n        return sentences;\r\n    }\r\n\r\n    _firstDefeatBlatherSentences() {\r\n        let sentences = [];\r\n\r\n        sentences.push(new Sentence(\"Don't even bother\", 2.5, 2));\r\n\r\n        return sentences;\r\n    }\r\n\r\n    _secondBlatherSentences() {\r\n        let sentences = [];\r\n\r\n        sentences.push(new Sentence(\"After our last time together\", 1, 0));\r\n        sentences.push(new Sentence(\"I see you have tried many things\"));\r\n        sentences.push(new Sentence(\"Were they worth your time?\", 2.5, 1.5));\r\n\r\n        return sentences;\r\n    }\r\n\r\n    _secondDefeatBlatherSentences() {\r\n        let sentences = [];\r\n\r\n        sentences.push(new Sentence(\"Stop wasting my time too\", 2.5, 2));\r\n\r\n        return sentences;\r\n    }\r\n\r\n    _thirdBlatherSentences() {\r\n        let sentences = [];\r\n\r\n        sentences.push(new Sentence(\"I've watched you jump from one thing to another\", 1, 0));\r\n        sentences.push(new Sentence(\"hoping to find what's yours\"));\r\n        sentences.push(new Sentence(\"Don't you realize how meaningless this is?\", 2.5, 1.5));\r\n\r\n        return sentences;\r\n    }\r\n\r\n    _thirdDefeatBlatherSentences() {\r\n        let sentences = [];\r\n\r\n        sentences.push(new Sentence(\"There is no purpose left for you\", 2.5, 2));\r\n\r\n        return sentences;\r\n    }\r\n\r\n    _mrNOTBlatherSentences() {\r\n        let sentences = [];\r\n\r\n        sentences.push(new Sentence(\"enough IS enough\", 0.1, 0));\r\n\r\n        return sentences;\r\n    }\r\n\r\n    _mrNOTDefeatBlatherSentences() {\r\n        let sentences = [];\r\n\r\n        sentences.push(new Sentence(\"\", 2, 1.5));\r\n\r\n        return sentences;\r\n    }\r\n\r\n    _NOTENOUGHBlatherSentences() {\r\n        let sentences = [];\r\n\r\n        sentences.push(new Sentence(\"You may think you are stronger now\"));\r\n        sentences.push(new Sentence(\"You may feel free from others' judgment\", 2, 0));\r\n        sentences.push(new Sentence(\"and from your own\"));\r\n        sentences.push(new Sentence(\"You may fool yourself into believing this...\", 1.75, 0.75));\r\n        sentences.push(new Sentence(\"But after all has been said and done\", 0.75, 0));\r\n        sentences.push(new Sentence(\"you KNOW\", 0.75, 0));\r\n        sentences.push(new Sentence(\"it will always be...\", 1.75, 0.75));\r\n        sentences.push(new Sentence(\"NOT ENOUGH\", 4, 4, true));\r\n\r\n        return sentences;\r\n    }\r\n\r\n    _invitationSentences() {\r\n        let sentences = [];\r\n\r\n        sentences.push(new Sentence(\"My dearest puppet\", 1.75, 0.75));\r\n        sentences.push(new Sentence(\"did you miss me?\"));\r\n        sentences.push(new Sentence(\"I did\", 2.5, 1.5));\r\n\r\n        sentences.push(new Sentence(\"Why don’t you STAND UP\", 1, 0));\r\n        sentences.push(new Sentence(\"SQUEEZE those buttons\", 1, 0));\r\n        sentences.push(new Sentence(\"and get ready to THROW?\"));\r\n\r\n        sentences.push(new Sentence(\"I am here for you\", 1.75, 0.75));\r\n        sentences.push(new Sentence(\"don’t make me wait\", 2.5, 1.5));\r\n\r\n        return sentences;\r\n    }\r\n\r\n    _firstEvidenceSetupList() {\r\n        let evidenceSetupList = [];\r\n\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TRIAL_TIMER, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.ZESTY_MARKET, 3));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TUCIA_DRAWING, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.CPLUSPLUS_PRIMER, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PIANO, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.MICCO_THE_BEAR, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WATER_LILY, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.LOL, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.DRINK_ME_EARRING, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.STARING_CUBE, 1));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TROPHY, 5));\r\n\r\n        return evidenceSetupList;\r\n    }\r\n\r\n    _secondEvidenceSetupList() {\r\n        let evidenceSetupList = [];\r\n\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TRIAL_TIMER, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.ZESTY_MARKET, 4));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TUCIA_DRAWING, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.CPLUSPLUS_PRIMER, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PIANO, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.MICCO_THE_BEAR, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WATER_LILY, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.LOL, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.DRINK_ME_EARRING, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.STARING_CUBE, 2));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TROPHY, 5));\r\n\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WONDERMELON, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PSI, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WONDERLAND, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.VR, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.EGGPLANT, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PICO_8, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.EVERYEYE, 10));\r\n\r\n        return evidenceSetupList;\r\n    }\r\n\r\n    _thirdEvidenceSetupList() {\r\n        let evidenceSetupList = [];\r\n\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TRIAL_TIMER, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.ZESTY_MARKET, 4));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TUCIA_DRAWING, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.CPLUSPLUS_PRIMER, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PIANO, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.MICCO_THE_BEAR, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WATER_LILY, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.LOL, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.DRINK_ME_EARRING, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.STARING_CUBE, 3));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TROPHY, 5));\r\n\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WONDERMELON, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PSI, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WONDERLAND, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.VR, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.EGGPLANT, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PICO_8, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.EVERYEYE, 5));\r\n\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.ANT_MAIN_CHARACTER, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.SHATTERED_COIN, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.HEART, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.HALO_SWORD, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.FOX, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.FAMILY, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.MIRROR, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.ALOE_VERA, 10));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.MR_NOT_EVIDENCE, 10));\r\n\r\n        return evidenceSetupList;\r\n    }\r\n}",
        "//Overall Deep Clone not implemented\r\nWL.MeshComponent.prototype.pp_clone = function (clone, deepCloneParams, extraData) {\r\n    if (deepCloneParams.shouldDeepCloneComponentVariable(\"mesh\", \"material\")) {\r\n        clone.material = this.material.clone();\r\n    } else {\r\n        clone.material = this.material;\r\n    }\r\n\r\n    clone.mesh = this.mesh;\r\n    clone.skin = this.skin;\r\n};\r\n\r\nWL.CollisionComponent.prototype.pp_clone = function (clone, deepCloneParams, extraData) {\r\n    clone.collider = this.collider;\r\n    clone.extents = this.extents.slice(0);\r\n    clone.group = this.group;\r\n};\r\n\r\nWL.TextComponent.prototype.pp_clone = function (clone, deepCloneParams, extraData) {\r\n    if (deepCloneParams.shouldDeepCloneComponent(\"text\")) {\r\n        clone.text = this.text.slice(0);\r\n    } else {\r\n        clone.text = this.text;\r\n    }\r\n\r\n    if (deepCloneParams.shouldDeepCloneComponentVariable(\"text\", \"material\")) {\r\n        clone.material = this.material.clone();\r\n    } else {\r\n        clone.material = this.material;\r\n    }\r\n\r\n    clone.alignment = this.alignment;\r\n    clone.justification = this.justification;\r\n};\r\n\r\n//TEMP not complete\r\nWL.PhysXComponent.prototype.pp_clone = function (clone, deepCloneParams, extraData) {\r\n    clone.angularDamping = this.angularDamping;\r\n    clone.angularVelocity = this.angularVelocity.slice(0);\r\n\r\n    clone.dynamicFriction = this.dynamicFriction;\r\n\r\n    clone.extents = this.extents.slice(0);\r\n\r\n    clone.kinematic = this.kinematic;\r\n\r\n    clone.linearDamping = this.linearDamping;\r\n    clone.linearVelocity = this.linearVelocity.slice(0);\r\n\r\n    clone.mass = this.mass;\r\n    clone.restitution = this.restitution;\r\n    clone.shape = this.shape;\r\n    clone.static = this.static;\r\n    clone.staticFriction = this.staticFriction;\r\n};\r\n\r\nObject.defineProperty(WL.MeshComponent.prototype, \"pp_clone\", { enumerable: false });\r\nObject.defineProperty(WL.CollisionComponent.prototype, \"pp_clone\", { enumerable: false });\r\nObject.defineProperty(WL.TextComponent.prototype, \"pp_clone\", { enumerable: false });\r\nObject.defineProperty(WL.PhysXComponent.prototype, \"pp_clone\", { enumerable: false });",
        "_WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].proto.init = function () {\r\n    /* VR session cache, in case in VR */\r\n    this.session = null;\r\n    this.collisionMask = (1 << this.collisionGroup);\r\n    this.maxDistance = 100;\r\n\r\n    this.doubleClickTimer = 0;\r\n    this.tripleClickTimer = 0;\r\n    this.multipleClickObject = null;\r\n    this.multipleClickDelay = 0.3;\r\n};\r\n\r\n_WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].proto.update = function (dt) {\r\n    if (this.doubleClickTimer > 0) {\r\n        this.doubleClickTimer -= dt;\r\n    }\r\n\r\n    if (this.tripleClickTimer > 0) {\r\n        this.tripleClickTimer -= dt;\r\n    }\r\n\r\n    this.doUpdate(false);\r\n};\r\n\r\n_WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].proto.hoverBehaviour = function (rayHit, doClick) {\r\n    if (rayHit.hitCount > 0) {\r\n        if (!this.hoveringObject || !this.hoveringObject.equals(rayHit.objects[0])) {\r\n            /* Unhover previous, if exists */\r\n            if (this.hoveringObject) {\r\n                let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n\r\n                /* Cursor up */\r\n                if (this.isDown && this.isDown == this.lastIsDown) {\r\n                    if (cursorTarget) cursorTarget.onUp(this.hoveringObject, this);\r\n                    this.globalTarget.onUp(this.hoveringObject, this);\r\n                    this.lastIsDown = false;\r\n                }\r\n\r\n                if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n                this.globalTarget.onUnhover(this.hoveringObject, this);\r\n            }\r\n\r\n            /* Hover new object */\r\n            this.hoveringObject = rayHit.objects[0];\r\n            if (this.styleCursor) WL.canvas.style.cursor = \"pointer\";\r\n\r\n            let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n            if (cursorTarget) {\r\n                this.hoveringObjectTarget = cursorTarget;\r\n                cursorTarget.onHover(this.hoveringObject, this);\r\n            }\r\n            this.globalTarget.onHover(this.hoveringObject, this);\r\n        }\r\n\r\n        if (this.hoveringObjectTarget) {\r\n            this.hoveringObjectTarget.onMove(this.hoveringObject, this);\r\n        }\r\n\r\n        let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n\r\n        /* Cursor down */\r\n        if (this.isDown !== this.lastIsDown) {\r\n            if (this.isDown) {\r\n                if (cursorTarget) cursorTarget.onDown(this.hoveringObject, this);\r\n                this.globalTarget.onDown(this.hoveringObject, this);\r\n            }\r\n        }\r\n\r\n        /* Click */\r\n        if (doClick) {\r\n            if (this.tripleClickTimer > 0 && this.multipleClickObject && this.multipleClickObject.equals(this.hoveringObject)) {\r\n                if (cursorTarget) cursorTarget.onTripleClick(this.hoveringObject, this);\r\n                this.globalTarget.onTripleClick(this.hoveringObject, this);\r\n\r\n                this.tripleClickTimer = 0;\r\n            } else if (this.doubleClickTimer > 0 && this.multipleClickObject && this.multipleClickObject.equals(this.hoveringObject)) {\r\n                if (cursorTarget) cursorTarget.onDoubleClick(this.hoveringObject, this);\r\n                this.globalTarget.onDoubleClick(this.hoveringObject, this);\r\n\r\n                this.tripleClickTimer = this.multipleClickDelay;\r\n                this.doubleClickTimer = 0;\r\n            } else {\r\n                if (cursorTarget) cursorTarget.onClick(this.hoveringObject, this);\r\n                this.globalTarget.onClick(this.hoveringObject, this);\r\n\r\n                this.tripleClickTimer = 0;\r\n                this.doubleClickTimer = this.multipleClickDelay;\r\n                this.multipleClickObject = this.hoveringObject;\r\n            }\r\n        }\r\n\r\n        /* Cursor up */\r\n        if (this.isDown !== this.lastIsDown) {\r\n            if (!this.isDown) {\r\n                if (cursorTarget) cursorTarget.onUp(this.hoveringObject, this);\r\n                this.globalTarget.onUp(this.hoveringObject, this);\r\n            }\r\n        }\r\n    } else if (this.hoveringObject && rayHit.hitCount == 0) {\r\n        let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n\r\n        /* Cursor up */\r\n        if (this.isDown && this.isDown == this.lastIsDown) {\r\n            if (cursorTarget) cursorTarget.onUp(this.hoveringObject, this);\r\n            this.globalTarget.onUp(this.hoveringObject, this);\r\n            this.lastIsDown = false;\r\n        }\r\n\r\n        if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n        this.globalTarget.onUnhover(this.hoveringObject, this);\r\n\r\n        this.hoveringObject = null;\r\n        this.hoveringObjectTarget = null;\r\n        if (this.styleCursor) WL.canvas.style.cursor = \"default\";\r\n    }\r\n\r\n    if (this.hoveringObject) {\r\n        this.lastIsDown = this.isDown;\r\n    }\r\n};",
        "_WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].proto.init = function () {\r\n    this.hoverFunctions = [];\r\n    this.unHoverFunctions = [];\r\n    this.clickFunctions = [];\r\n    this.doubleClickFunctions = [];\r\n    this.tripleClickFunctions = [];\r\n    this.moveFunctions = [];\r\n    this.downFunctions = [];\r\n    this.upFunctions = [];\r\n};\r\n\r\n_WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].proto.onDoubleClick = function (object, cursor) {\r\n    for (let f of this.doubleClickFunctions) f(object, cursor);\r\n};\r\n\r\n_WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].proto.addDoubleClickFunction = function (f) {\r\n    this._validateCallback(f);\r\n    this.doubleClickFunctions.push(f);\r\n};\r\n\r\n_WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].proto.removeDoubleClickFunction = function (f) {\r\n    this._validateCallback(f);\r\n    this._removeItemOnce(this.doubleClickFunctions, f);\r\n};\r\n\r\n_WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].proto.onTripleClick = function (object, cursor) {\r\n    for (let f of this.tripleClickFunctions) f(object, cursor);\r\n};\r\n\r\n_WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].proto.addTripleClickFunction = function (f) {\r\n    this._validateCallback(f);\r\n    this.tripleClickFunctions.push(f);\r\n};\r\n\r\n_WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].proto.removeTripleClickFunction = function (f) {\r\n    this._validateCallback(f);\r\n    this._removeItemOnce(this.tripleClickFunctions, f);\r\n};",
        "WL.registerComponent('pp-console-vr', {\n    _myHandedness: { type: WL.Type.Enum, values: ['none', 'left', 'right'], default: 'none' },\n    _myOverrideBrowserConsole: { type: WL.Type.Bool, default: true },\n    _myShowOnStart: { type: WL.Type.Bool, default: false },\n    _myShowVisibilityButton: { type: WL.Type.Bool, default: true },\n    _myPulseOnNewMessage: { type: WL.Type.Enum, values: ['never', 'always', 'when hidden'], default: 'when hidden' },\n    _myPlaneMaterial: { type: WL.Type.Material, default: null },\n    _myTextMaterial: { type: WL.Type.Material, default: null }\n}, {\n    init: function () {\n        this._myWidget = new PP.ConsoleVRWidget();\n    },\n    start: function () {\n        let additionalSetup = {};\n        additionalSetup.myHandedness = [null, 'left', 'right'][this._myHandedness];\n        additionalSetup.myOverrideBrowserConsole = this._myOverrideBrowserConsole;\n        additionalSetup.myShowOnStart = this._myShowOnStart;\n        additionalSetup.myShowVisibilityButton = this._myShowVisibilityButton;\n        additionalSetup.myPulseOnNewMessage = this._myPulseOnNewMessage;\n        additionalSetup.myPlaneMaterial = this._myPlaneMaterial;\n        additionalSetup.myTextMaterial = this._myTextMaterial;\n\n        this._myWidget.start(this.object, additionalSetup);\n    },\n    update: function (dt) {\n        this._myWidget.update(dt);\n    }\n});\n",
        "/* Doesn't support\n    - Placeholder like %d and other similar kind of way to build strings\n    - Object to string will result in [Object object]\n    - Some messages are not intercepted, like the error from glMatrix.mat4.invert(null, null)\n*/\n\nPP.ConsoleVRWidget = class ConsoleVRWidget {\n\n    constructor() {\n        this._myWidgetFrame = new PP.WidgetFrame(\"C\", 0);\n        this._myWidgetFrame.registerWidgetVisibleChangedEventListener(this, this._widgetVisibleChanged.bind(this));\n\n        this._mySetup = new PP.ConsoleVRWidgetSetup();\n        this._myAdditionalSetup = null;\n\n        this._myUI = new PP.ConsoleVRWidgetUI();\n\n        this._myMessages = [];\n\n        this._myOldBrowserConsole = [];\n        this._myOldConsoleVR = [];\n\n        this._myTypeFilters = [];\n        for (let key in PP.ConsoleVRWidget.MessageType) {\n            this._myTypeFilters[PP.ConsoleVRWidget.MessageType[key]] = false;\n        }\n\n        this._myScrollUp = false;\n        this._myScrollDown = false;\n        this._myScrollOffset = 0;\n        this._myScrollTimer = 0;\n        this._myScrollThumbstickTimer = 0;\n\n        this._myPulseTimer = 0;\n\n        this._myGamepadScrollActive = true;\n        if (this._mySetup.myGamepadScrollOnlyOnHover) {\n            this._myGamepadScrollActive = false;\n        }\n    }\n\n    start(parentObject, additionalSetup) {\n        this._myLeftGamepad = PP.myLeftGamepad; //@EDIT get gamepad LEFT here based on how you store it in your game\n        this._myRightGamepad = PP.myRightGamepad; //@EDIT get gamepad RIGHT here based on how you store it in your game\n\n        this._myAdditionalSetup = additionalSetup;\n\n        this._myWidgetFrame.start(parentObject, additionalSetup);\n\n        this._myUI.build(this._myWidgetFrame.getWidgetObject(), this._mySetup, additionalSetup);\n        this._myUI.setVisible(this._myWidgetFrame.myIsWidgetVisible);\n        this._setNotifyIconActive(false);\n\n        this._addListeners();\n\n        this._overrideConsolesFunctions();\n    }\n\n    //This must be done only when all the setup is complete, to avoid issues with other part of the code calling the console and then triggering the console vr while not ready yet\n    _overrideConsolesFunctions() {\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.LOG] = console.log;\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.ERROR] = console.error;\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.WARN] = console.warn;\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.INFO] = console.info;\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.DEBUG] = console.debug;\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.ASSERT] = console.assert;\n        this._myOldBrowserConsoleClear = console.clear;\n\n        if (this._myAdditionalSetup.myOverrideBrowserConsole) {\n            console.log = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.LOG, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\n            console.error = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\n            console.warn = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.WARN, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\n            console.info = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.INFO, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\n            console.debug = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.DEBUG, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\n            console.assert = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.ASSERT, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\n            console.clear = this._clearConsole.bind(this, true, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\n\n            window.addEventListener('error', function (errorEvent) {\n                this._consolePrint(PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.WINDOW, \"Uncaught\", errorEvent.error.stack);\n            }.bind(this));\n\n            window.addEventListener('unhandledrejection', function (errorEvent) {\n                this._consolePrint(PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.WINDOW, \"Uncaught (in promise)\", errorEvent.reason);\n            }.bind(this));\n        }\n\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.LOG] = PP.ConsoleVR.log;\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.ERROR] = PP.ConsoleVR.error;\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.WARN] = PP.ConsoleVR.warn;\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.INFO] = PP.ConsoleVR.info;\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.DEBUG] = PP.ConsoleVR.debug;\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.ASSERT] = PP.ConsoleVR.assert;\n        this._myOldConsoleVRClear = PP.ConsoleVR.clear;\n\n        PP.ConsoleVR.log = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.LOG, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\n        PP.ConsoleVR.error = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\n        PP.ConsoleVR.warn = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.WARN, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\n        PP.ConsoleVR.info = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.INFO, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\n        PP.ConsoleVR.debug = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.DEBUG, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\n        PP.ConsoleVR.assert = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.ASSERT, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\n        PP.ConsoleVR.clear = this._clearConsole.bind(this, true, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\n    }\n\n    update(dt) {\n        this._myWidgetFrame.update(dt);\n\n        if (this._myWidgetFrame.myIsWidgetVisible) {\n            this._updateScroll(dt);\n        }\n\n        this._updateGamepadsExtraActions(dt);\n    }\n\n    //Text section\n\n    _updateText(messageType) {\n        let consoleText = \"\";\n\n        if (!this._myTypeFilters[messageType]) {\n            let linesCount = 0;\n            let i = this._myMessages.length - 1;\n\n            let scrollLinesToSkip = Math.round(this._myScrollOffset);\n\n            while (i >= 0 && linesCount < this._mySetup.myMaxLines) {\n                let message = this._myMessages[i];\n\n                //skip filtered messages\n                if (this._myTypeFilters[message.myType]) {\n                    i -= 1;\n                    continue;\n                }\n\n                let messageLines = message.myLines.length;\n\n                //compute line to skip due to scroll offset\n                let linesToSkip = 0;\n                if (scrollLinesToSkip > 0) {\n                    let additionalEmptyLines = 0;\n                    if (i != this._myMessages.length - 1) {\n                        additionalEmptyLines = this._mySetup.myLinesBetweenMessages;\n                    }\n\n                    if (scrollLinesToSkip >= messageLines + additionalEmptyLines) { // + empty lines between messages\n                        scrollLinesToSkip -= messageLines + additionalEmptyLines;\n                        linesToSkip = messageLines + additionalEmptyLines;\n                    } else {\n                        linesToSkip = scrollLinesToSkip;\n                        scrollLinesToSkip = 0;\n                    }\n                }\n\n                //add empty lines between messages\n                if (i != this._myMessages.length - 1) {\n                    let emptyLinesToSkip = this._mySetup.myLinesBetweenMessages - Math.max(this._mySetup.myLinesBetweenMessages - linesToSkip, 0);\n                    let emptyLinesToShow = this._mySetup.myLinesBetweenMessages - emptyLinesToSkip;\n                    if (linesCount + emptyLinesToShow > this._mySetup.myMaxLines) {\n                        emptyLinesToShow = this._myMaxLines - linesCount;\n                    }\n\n                    for (let j = 0; j < emptyLinesToShow; j++) {\n                        consoleText = (\"\\n\").concat(consoleText);\n                    }\n\n                    linesCount += emptyLinesToShow;\n                    linesToSkip -= emptyLinesToSkip;\n                }\n\n                //computing the number of message lines to show\n                let linesToShow = messageLines - linesToSkip;\n                if (linesCount + linesToShow > this._mySetup.myMaxLines) {\n                    linesToShow = this._mySetup.myMaxLines - linesCount;\n                }\n\n                if (linesToShow > 0) {\n                    if (message.myType == messageType) {\n                        //if the message is the same type of this message text component, add the message lines\n\n                        let linesToPrint = message.myLines.slice(messageLines - linesToShow - linesToSkip, messageLines - linesToSkip);\n                        let text = linesToPrint.join(\"\\n\");\n                        consoleText = (text.concat(\"\\n\")).concat(consoleText);\n\n                        linesCount += linesToShow;\n                    } else {\n                        //otherwise add empty lines, so that the text component with the correct type will have space to show this message\n\n                        for (let j = 0; j < linesToShow; j++) {\n                            consoleText = (\"\\n\").concat(consoleText);\n                        }\n\n                        linesCount += linesToShow;\n                    }\n                }\n\n                i -= 1;\n            }\n        }\n\n        consoleText = this._mySetup.myMessagesTextStartString.concat(consoleText);\n\n        this._myUI.myMessagesTextComponents[messageType].text = consoleText;\n    }\n\n    _consolePrint(consoleFunction, sender, ...args) {\n        if (consoleFunction != PP.ConsoleVRWidget.ConsoleFunction.ASSERT || (args.length > 0 && !args[0])) {\n            let message = this._argsToMessage(consoleFunction, ...args);\n            this._addMessage(message);\n\n            if (this._myMessages.length >= this._mySetup.myMaxMessages + this._mySetup.myMaxMessagesDeletePad) {\n                this._myMessages = this._myMessages.slice(this._myMessages.length - this._mySetup.myMaxMessages);\n                this._clampScrollOffset();\n            }\n\n            this._updateAllTexts();\n\n            this._pulseGamepad();\n        }\n\n        switch (sender) {\n            case PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE:\n                this._myOldBrowserConsole[consoleFunction].apply(console, args);\n                break;\n            case PP.ConsoleVRWidget.Sender.CONSOLE_VR:\n                this._myOldConsoleVR[consoleFunction].apply(PP.ConsoleVR, args);\n                break;\n            default:\n                break;\n        }\n    }\n\n    _argsToMessage(consoleFunction, ...args) {\n        if (consoleFunction == PP.ConsoleVRWidget.ConsoleFunction.ASSERT) {\n            args = args.slice(1);\n            args.splice(0, 0, this._mySetup.myAssertStartString);\n        }\n\n        let messageType = this._consoleFunctionToMessageType(consoleFunction);\n\n        let formattedText = this._formatArgs(...args);\n\n        let lines = this._splitLongLines(formattedText);\n\n        if (messageType == PP.ConsoleVRWidget.MessageType.DEBUG) {\n            messageType = PP.ConsoleVRWidget.MessageType.LOG;\n        } else if (messageType == PP.ConsoleVRWidget.MessageType.EXCEPTION || messageType == PP.ConsoleVRWidget.MessageType.ASSERT) {\n            messageType = PP.ConsoleVRWidget.MessageType.ERROR;\n        }\n\n\n        let message = new PP.ConsoleVRWidget.Message(messageType, lines);\n\n        return message;\n    }\n\n    _consoleFunctionToMessageType(consoleFunction) {\n        let messageType = PP.ConsoleVRWidget.MessageType.LOG;\n\n        if (consoleFunction < PP.ConsoleVRWidget.ConsoleFunction.DEBUG) {\n            messageType = consoleFunction;\n        } else if (consoleFunction == PP.ConsoleVRWidget.ConsoleFunction.DEBUG) {\n            messageType = PP.ConsoleVRWidget.MessageType.LOG;\n        } else {\n            messageType = PP.ConsoleVRWidget.MessageType.ERROR;\n        }\n\n        return messageType;\n    }\n\n    //Here the formatting using placeholder like %d could be implemented in the future\n    _formatArgs(...args) {\n        let stringifiedArgs = [];\n        for (let i = 0; i < args.length; i++) {\n            stringifiedArgs.push(this._stringifyItem(args[i]));\n        }\n\n        let formattedString = stringifiedArgs.join(\" \");\n\n        return formattedString;\n    }\n\n    _stringifyItem(item) {\n        if (typeof item === 'object') {\n            let stringifiedItem = null;\n            let linesBetweenItems = this._isArray(item) ? 0 : 2;\n\n            try {\n                if (!this._isFloat32Array(item)) {\n                    stringifiedItem = JSON.stringify(item, null, linesBetweenItems); //first try with default replacer\n                } else {\n                    let arrayCopy = []; // I do this just cause Float32Array does not print like normal Array\n                    for (let i = 0; i < item.length; i++) {\n                        arrayCopy[i] = item[i];\n                    }\n                    stringifiedItem = JSON.stringify(arrayCopy, null, linesBetweenItems); //first try with default replacer\n                }\n            } catch (error) {\n                let cache = new WeakSet();\n                stringifiedItem = JSON.stringify(item, function (key, value) {\n                    if (typeof value === 'object' && value !== null) {\n                        if (cache.has(value)) {\n                            return \"<stringify error: object already stringified>\"; //try to avoid circular reference, a repeated object will be caught in this check too sadly\n                        }\n                        cache.add(value);\n                    }\n                    return value;\n                }, linesBetweenItems);\n            }\n\n            if (this._isArray(item)) {\n                stringifiedItem = stringifiedItem.split(\",\").join(\", \");\n            }\n\n            return stringifiedItem;\n        }\n\n        return item;\n    }\n\n    _splitLongLines(messageText) {\n        let linesToSplit = messageText.split(\"\\n\");\n        let lines = [];\n        for (let i = 0; i < linesToSplit.length; i++) {\n            let lineToSplit = linesToSplit[i];\n\n            if (lineToSplit.length > this._mySetup.myMaxCharactersPerLine) {\n                let spacesAtStart = this._getSpacesAtStart(lineToSplit);\n                let spaceToAdd = this._mySetup.myTabString.concat(spacesAtStart);\n                let lineSplits = 0;\n\n                while (lineToSplit.length > this._mySetup.myMaxCharactersPerLine && lineSplits < this._mySetup.myMaxLineSplits) {\n                    let firstSub = lineToSplit.substr(0, this._mySetup.myMaxCharactersPerLine - 1);\n                    let secondSub = lineToSplit.substr(this._mySetup.myMaxCharactersPerLine - 1);\n                    secondSub = spaceToAdd.concat(secondSub);\n\n                    lines.push(firstSub);\n\n                    lineToSplit = secondSub;\n                    lineSplits++;\n                }\n                lines.push(lineToSplit);\n            } else {\n                lines.push(lineToSplit);\n            }\n        }\n\n        return lines;\n    }\n\n    _getSpacesAtStart(text) {\n        let spaces = \"\";\n        let i = 0;\n\n        while (i < text.length && text[i] == ' ') {\n            spaces = spaces.concat(\" \");\n            i++;\n        }\n\n        return spaces;\n    }\n\n    _addMessage(message) {\n        let hasSameInfoAsPrev = false;\n        if (this._myMessages.length > 0) {\n            let lastMessage = this._myMessages[this._myMessages.length - 1];\n            if (lastMessage.hasSameInfo(message)) {\n                lastMessage.increaseCount();\n                hasSameInfoAsPrev = true;\n            }\n        }\n\n        if (!hasSameInfoAsPrev) {\n            this._myMessages.push(message);\n        }\n\n        this._adjustScrollOffsetAfterMessageAdded(message, hasSameInfoAsPrev);\n        this._updateNotifyIcon(message);\n    }\n\n    //if you have scrolled, new messages does not move the scroll position\n    _adjustScrollOffsetAfterMessageAdded(message, hasSameInfoAsPrev) {\n        if (!hasSameInfoAsPrev && !(this._myTypeFilters[message.myType]) && this._myScrollOffset > 0) {\n            this._myScrollOffset += message.myLines.length + this._mySetup.myLinesBetweenMessages;\n        }\n    }\n\n    _updateAllTexts() {\n        if (this._myWidgetFrame.myIsWidgetVisible) {\n            for (let key in PP.ConsoleVRWidget.MessageType) {\n                this._updateText(PP.ConsoleVRWidget.MessageType[key]);\n            }\n        }\n    }\n\n    _updateNotifyIcon(message) {\n        if (!(this._myTypeFilters[message.myType]) && this._myScrollOffset > 0) {\n            this._setNotifyIconActive(true);\n        }\n    }\n\n    _updateScroll(dt) {\n        if (this._myScrollUp) {\n            this._myScrollTimer += dt;\n            while (this._myScrollTimer > this._mySetup.myScrollDelay) {\n                this._myScrollTimer -= this._mySetup.myScrollDelay;\n                this._myScrollOffset += this._mySetup.myScrollAmount;\n            }\n        } else if (this._myScrollDown) {\n            this._myScrollTimer += dt;\n            while (this._myScrollTimer > this._mySetup.myScrollDelay) {\n                this._myScrollTimer -= this._mySetup.myScrollDelay;\n                this._myScrollOffset -= this._mySetup.myScrollAmount;\n            }\n        }\n\n        this._clampScrollOffset();\n\n        if (this._myScrollUp || this._myScrollDown) {\n            this._updateAllTexts();\n        }\n\n        if (this._myScrollOffset == 0) {\n            this._setNotifyIconActive(false);\n        }\n    }\n\n    _clampScrollOffset() {\n        let maxScroll = this._getMaxScrollOffset();\n        this._myScrollOffset = Math.min(Math.max(this._myScrollOffset, 0), maxScroll); //clamp \n    }\n\n    _getMaxScrollOffset() {\n        return Math.max(this._getLinesCount() - this._mySetup.myMaxLines, 0);\n    }\n\n    _getLinesCount() {\n        let linesCount = 0;\n        for (let message of this._myMessages) {\n            if (!this._myTypeFilters[message.myType]) {\n                linesCount += message.myLines.length + this._mySetup.myLinesBetweenMessages;\n            }\n        }\n        linesCount -= this._mySetup.myLinesBetweenMessages; //empty line is added only between messages\n        linesCount = Math.max(linesCount, 0);\n\n        return linesCount;\n    }\n\n    //Listener section\n\n    _addListeners() {\n        let ui = this._myUI;\n\n        for (let key in PP.ConsoleVRWidget.MessageType) {\n            let cursorTarget = ui.myFilterButtonsCursorTargetComponents[PP.ConsoleVRWidget.MessageType[key]];\n            let backgroundMaterial = ui.myFilterButtonsBackgroundComponents[PP.ConsoleVRWidget.MessageType[key]].material;\n            let textMaterial = ui.myFilterButtonsTextComponents[PP.ConsoleVRWidget.MessageType[key]].material;\n\n            cursorTarget.addTripleClickFunction(this._resetFilters.bind(this, PP.ConsoleVRWidget.MessageType[key]));\n            cursorTarget.addDoubleClickFunction(this._filterAllButOne.bind(this, PP.ConsoleVRWidget.MessageType[key], textMaterial));\n            cursorTarget.addClickFunction(this._toggleFilter.bind(this, PP.ConsoleVRWidget.MessageType[key], textMaterial));\n            cursorTarget.addHoverFunction(this._filterHover.bind(this, PP.ConsoleVRWidget.MessageType[key], backgroundMaterial));\n            cursorTarget.addUnHoverFunction(this._filterUnHover.bind(this, PP.ConsoleVRWidget.MessageType[key], backgroundMaterial));\n        }\n\n        {\n            let cursorTarget = ui.myClearButtonCursorTargetComponent;\n            let backgroundMaterial = ui.myClearButtonBackgroundComponent.material;\n\n            cursorTarget.addClickFunction(this._clearConsole.bind(this));\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\n            cursorTarget.addUnHoverFunction(this._genericUnHover.bind(this, backgroundMaterial));\n        }\n\n        {\n            let cursorTarget = ui.myUpButtonCursorTargetComponent;\n            let backgroundMaterial = ui.myUpButtonBackgroundComponent.material;\n\n            cursorTarget.addDoubleClickFunction(this._instantScrollUp.bind(this, true));\n            cursorTarget.addDownFunction(this._setScrollUp.bind(this, true));\n            cursorTarget.addUpFunction(this._setScrollUp.bind(this, false));\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\n            cursorTarget.addUnHoverFunction(this._genericUnHover.bind(this, backgroundMaterial));\n        }\n\n        {\n            let cursorTarget = ui.myDownButtonCursorTargetComponent;\n            let backgroundMaterial = ui.myDownButtonBackgroundComponent.material;\n\n            cursorTarget.addDoubleClickFunction(this._instantScrollDown.bind(this));\n            cursorTarget.addDownFunction(this._setScrollDown.bind(this, true));\n            cursorTarget.addUpFunction(this._setScrollDown.bind(this, false));\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\n            cursorTarget.addUnHoverFunction(this._genericUnHover.bind(this, backgroundMaterial));\n        }\n\n        {\n            let cursorTarget = ui.myNotifyIconCursorTargetComponent;\n            let backgroundMaterial = ui.myNotifyIconBackgroundComponent.material;\n\n            cursorTarget.addClickFunction(this._instantScrollDown.bind(this));\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\n            cursorTarget.addUnHoverFunction(this._notifyIconUnHover.bind(this));\n        }\n\n        ui.myPointerCursorTargetComponent.addHoverFunction(this._setGamepadScrollActive.bind(this, true));\n        ui.myPointerCursorTargetComponent.addUnHoverFunction(this._setGamepadScrollActive.bind(this, false));\n    }\n\n    _resetFilters(messageType) {\n        if (this._myWidgetFrame.myIsWidgetVisible) {\n            for (let key in PP.ConsoleVRWidget.MessageType) {\n                let backgroundMaterial = this._myUI.myFilterButtonsBackgroundComponents[PP.ConsoleVRWidget.MessageType[key]].material;\n                let filterTextMaterial = this._myUI.myFilterButtonsTextComponents[PP.ConsoleVRWidget.MessageType[key]].material;\n\n                this._myTypeFilters[PP.ConsoleVRWidget.MessageType[key]] = false;\n                filterTextMaterial.color = this._mySetup.myMessageTypeColors[PP.ConsoleVRWidget.MessageType[key]];\n                if (PP.ConsoleVRWidget.MessageType[key] != messageType) {\n                    backgroundMaterial.color = this._mySetup.myBackgroundColor;\n                }\n            }\n\n            this._clampScrollOffset();\n            this._updateAllTexts();\n        }\n    }\n\n    _filterAllButOne(messageType) {\n        if (this._myWidgetFrame.myIsWidgetVisible) {\n            for (let key in PP.ConsoleVRWidget.MessageType) {\n                let backgroundMaterial = this._myUI.myFilterButtonsBackgroundComponents[PP.ConsoleVRWidget.MessageType[key]].material;\n                let filterTextMaterial = this._myUI.myFilterButtonsTextComponents[PP.ConsoleVRWidget.MessageType[key]].material;\n                if (PP.ConsoleVRWidget.MessageType[key] != messageType) {\n                    this._myTypeFilters[PP.ConsoleVRWidget.MessageType[key]] = true;\n                    backgroundMaterial.color = this._mySetup.myFilterButtonDisabledBackgroundColor;\n                    filterTextMaterial.color = this._mySetup.myFilterButtonDisabledTextColor;\n                } else {\n                    this._myTypeFilters[PP.ConsoleVRWidget.MessageType[key]] = false;\n                    filterTextMaterial.color = this._mySetup.myMessageTypeColors[messageType];\n                }\n            }\n\n            this._clampScrollOffset();\n            this._updateAllTexts();\n        }\n    }\n\n    _toggleFilter(messageType, textMaterial) {\n        if (this._myWidgetFrame.myIsWidgetVisible) {\n\n            this._myTypeFilters[messageType] = !this._myTypeFilters[messageType];\n            if (this._myTypeFilters[messageType]) {\n                textMaterial.color = this._mySetup.myFilterButtonDisabledTextColor;\n            } else {\n                textMaterial.color = this._mySetup.myMessageTypeColors[messageType];\n            }\n\n            this._clampScrollOffset();\n            this._updateAllTexts();\n        }\n    }\n\n    _clearConsole(codeDrivenClear = false, sender = null) {\n        if (this._myWidgetFrame.myIsWidgetVisible || codeDrivenClear) {\n            this._myMessages = [];\n            this._clampScrollOffset();\n            this._updateAllTexts();\n\n            if (codeDrivenClear) {\n                switch (sender) {\n                    case PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE:\n                        this._myOldBrowserConsoleClear.apply(console);\n                        break;\n                    case PP.ConsoleVRWidget.Sender.CONSOLE_VR:\n                        this._myOldConsoleVRClear.apply(PP.ConsoleVR);\n                        break;\n                    default:\n                        break;\n                }\n            } else if (this._mySetup.myClearBrowserConsoleWhenClearPressed) {\n                PP.ConsoleVR._myRealClear();\n            }\n        }\n    }\n\n    _setScrollUp(value) {\n        if (this._myWidgetFrame.myIsWidgetVisible || !value) {\n            if (value) {\n                this._myScrollTimer = 0;\n            }\n\n            this._myScrollUp = value;\n        }\n    }\n\n    _setScrollDown(value) {\n        if (this._myWidgetFrame.myIsWidgetVisible || !value) {\n            if (value) {\n                this._myScrollTimer = 0;\n            }\n\n            this._myScrollDown = value;\n        }\n    }\n\n    _instantScrollUp() {\n        if (this._myWidgetFrame.myIsWidgetVisible) {\n            this._myScrollOffset = this._getMaxScrollOffset();\n            this._updateAllTexts();\n        }\n    }\n\n    _instantScrollDown() {\n        if (this._myWidgetFrame.myIsWidgetVisible) {\n            this._myScrollOffset = 0;\n            this._setNotifyIconActive(false);\n            this._updateAllTexts();\n        }\n    }\n\n    _setNotifyIconActive(active) {\n        this._myUI.myNotifyIconPanel.pp_setActiveHierarchy(active && this._myWidgetFrame.myIsWidgetVisible);\n    }\n\n    _notifyIconUnHover() {\n        let material = this._myUI.myNotifyIconBackgroundComponent.material;\n        material.color = this._mySetup.myNotifyIconColor;\n    }\n\n    _filterHover(messageType, material) {\n        this._genericHover(material);\n    }\n\n    _filterUnHover(messageType, material) {\n        if (this._myTypeFilters[messageType]) {\n            material.color = this._mySetup.myFilterButtonDisabledBackgroundColor;\n        } else {\n            material.color = this._mySetup.myBackgroundColor;\n        }\n    }\n\n    _genericHover(material) {\n        material.color = this._mySetup.myButtonHoverColor;\n    }\n\n    _genericUnHover(material) {\n        material.color = this._mySetup.myBackgroundColor;\n    }\n\n    //Gamepad section\n\n    _updateGamepadsExtraActions(dt) {\n        if (this._myLeftGamepad && this._myRightGamepad) {\n            if ((this._myLeftGamepad.getButtonInfo(PP.ButtonType.THUMBSTICK).isPressStart() && this._myRightGamepad.getButtonInfo(PP.ButtonType.THUMBSTICK).myIsPressed) ||\n                (this._myRightGamepad.getButtonInfo(PP.ButtonType.THUMBSTICK).isPressStart() && this._myLeftGamepad.getButtonInfo(PP.ButtonType.THUMBSTICK).myIsPressed)) {\n                this._toggleVisibility();\n            }\n\n            this._myPulseTimer = Math.max(this._myPulseTimer - dt, 0);\n\n            this._updateScrollWithThumbstick(dt);\n        }\n    }\n\n    _toggleVisibility() {\n        this._myWidgetFrame.toggleVisibility();\n    }\n\n    _widgetVisibleChanged(visible) {\n        this._myUI.setVisible(visible);\n        if (visible) {\n            this._updateAllTexts();\n        }\n    }\n\n    _updateScrollWithThumbstick(dt) {\n        if (this._myWidgetFrame.myIsWidgetVisible && this._myGamepadScrollActive) {\n            let axes = [0, 0];\n            if (this._mySetup.myScrollThumbstickHandedness == PP.ToolHandedness.LEFT) {\n                axes = this._myLeftGamepad.getAxesInfo().myAxes;\n            } else if (this._mySetup.myScrollThumbstickHandedness == PP.ToolHandedness.RIGHT) {\n                axes = this._myRightGamepad.getAxesInfo().myAxes;\n            }\n\n            if (Math.abs(axes[1]) > this._mySetup.myScrollThumbstickMinThreshold) {\n                this._myScrollThumbstickTimer += dt;\n\n                while (this._myScrollThumbstickTimer > this._mySetup.myScrollThumbstickDelay) {\n                    this._myScrollThumbstickTimer -= this._mySetup.myScrollThumbstickDelay;\n\n                    let normalizedScrollAmount = (Math.abs(axes[1]) - this._mySetup.myScrollThumbstickMinThreshold) / (1 - this._mySetup.myScrollThumbstickMinThreshold);\n                    this._myScrollOffset += Math.sign(axes[1]) * normalizedScrollAmount * this._mySetup.myScrollThumbstickAmount;\n                }\n\n                this._clampScrollOffset();\n                this._updateAllTexts();\n            } else {\n                this._myScrollThumbstickTimer = 0;\n            }\n        }\n    }\n\n    _pulseGamepad() {\n        if (this._myLeftGamepad && this._myRightGamepad) {\n            let pulseType = this._myAdditionalSetup.myPulseOnNewMessage;\n            let pulseEnabled = pulseType == PP.ConsoleVRWidget.PulseOnNewMessage.ALWAYS || (!this._myWidgetFrame.myIsWidgetVisible && pulseType == PP.ConsoleVRWidget.PulseOnNewMessage.WHEN_HIDDEN);\n            if (pulseEnabled && this._myPulseTimer == 0) {\n                if (this._myAdditionalSetup.myHandedness == PP.ToolHandedness.RIGHT) {\n                    this._myRightGamepad.pulse(this._mySetup.myPulseIntensity, this._mySetup.myPulseDuration);\n                } else {\n                    this._myLeftGamepad.pulse(this._mySetup.myPulseIntensity, this._mySetup.myPulseDuration);\n                }\n                this._myPulseTimer = this._mySetup.myPulseDelay;\n            }\n        }\n    }\n\n    _isArray(item) {\n        return Array.isArray(item) || this._isFloat32Array(item);\n    }\n\n    _isFloat32Array(item) {\n        return item && item.constructor && item.constructor.name == \"Float32Array\";\n    }\n\n    _setGamepadScrollActive(active) {\n        this._myGamepadScrollActive = active;\n\n        if (!this._mySetup.myGamepadScrollOnlyOnHover) {\n            this._myGamepadScrollActive = true;\n        }\n    }\n};\n\nPP.ConsoleVRWidget.ConsoleFunction = {\n    INFO: 0,\n    WARN: 1,\n    ERROR: 2,\n    LOG: 3,\n    DEBUG: 4,\n    ASSERT: 5\n};\n\nPP.ConsoleVRWidget.Sender = {\n    BROWSER_CONSOLE: 0,\n    CONSOLE_VR: 1,\n    WINDOW: 2\n};\n\nPP.ConsoleVRWidget.PulseOnNewMessage = {\n    NEVER: 0,\n    ALWAYS: 1,\n    WHEN_HIDDEN: 2,\n};\n\nPP.ConsoleVRWidget.MessageType = {\n    INFO: 0,\n    WARN: 1,\n    ERROR: 2,\n    LOG: 3\n};\n\nPP.ConsoleVRWidget.Message = class Message {\n    constructor(messageType, messageLines) {\n        this.myType = messageType;\n        this.myLines = messageLines;\n\n        this._myOriginalText = messageLines.join(\"\\n\");\n\n        this._myMessagesCount = 1;\n    }\n\n    hasSameInfo(message) {\n        return this._myOriginalText == message._myOriginalText && this.myType == message.myType;\n    }\n\n    increaseCount() {\n        this._myMessagesCount += 1;\n\n        let countString = ((\"(x\").concat(this._myMessagesCount)).concat(\") \");\n\n        let text = this._myOriginalText.slice(0);\n        text = countString.concat(text);\n        this.myLines = text.split(\"\\n\");\n    }\n};\n\nPP.ConsoleVR = {\n    _myRealLog: console.log,\n    _myRealError: console.error,\n    _myRealWarn: console.warn,\n    _myRealInfo: console.info,\n    _myRealDebug: console.debug,\n    _myRealAssert: console.assert,\n    _myRealClear: console.clear,\n    _myAffectBrowserConsole: true,\n\n    log: function (...args) {\n        if (this._myAffectBrowserConsole) {\n            this._myRealLog.apply(console, args);\n        }\n    },\n    error: function (...args) {\n        if (this._myAffectBrowserConsole) {\n            this._myRealError.apply(console, args);\n        }\n    },\n    warn: function (...args) {\n        if (this._myAffectBrowserConsole) {\n            this._myRealWarn.apply(console, args);\n        }\n    },\n    info: function (...args) {\n        if (this._myAffectBrowserConsole) {\n            this._myRealInfo.apply(console, args);\n        }\n    },\n    debug: function (...args) {\n        if (this._myAffectBrowserConsole) {\n            this._myRealDebug.apply(console, args);\n        }\n    },\n    assert: function (...args) {\n        if (this._myAffectBrowserConsole) {\n            this._myRealAssert.apply(console, args);\n        }\n    },\n    clear: function () {\n        if (this._myAffectBrowserConsole) {\n            this._myRealClear.apply(console);\n        }\n    },\n    setAffectBrowserConsole: function (affectBrowserConsole) {\n        this._myAffectBrowserConsole = affectBrowserConsole;\n    }\n};",
        "PP.ConsoleVRWidgetSetup = class ConsoleVRWidgetSetup {\n\n    constructor() {\n        this._initializeBuildSetup();\n        this._initializeRuntimeSetup();\n    }\n\n    _initializeBuildSetup() {\n        //General\n        this.myBackgroundColor = [46 / 255, 46 / 255, 46 / 255, 1];\n\n        this.myCursorTargetCollisionCollider = 2; // box\n        this.myCursorTargetCollisionGroup = 7; //keep this in sync with ConsoleVRSetup\n        this.myCursorTargetCollisionThickness = 0.001;\n\n        this.myDefaultTextColor = [255 / 255, 255 / 255, 255 / 255, 1];\n\n        this.myTextAlignment = 2; // center\n        this.myTextJustification = 2; // middle\n        this.myTextOutlineRange = [0.45, 0.45];\n        this.myTextColor = this.myDefaultTextColor;\n        this.myTextOutlineColor = this.myDefaultTextColor;\n\n        this.myMessageTypeColors = [];\n        this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.LOG] = this.myDefaultTextColor;\n        this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.ERROR] = [255 / 255, 40 / 255, 40 / 255, 1];\n        this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.WARN] = [250 / 255, 220 / 255, 40 / 255, 1];\n        this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.INFO] = [60 / 255, 200 / 255, 255 / 255, 1];\n\n        //Messages\n        this.myMessagesPanelPosition = [0, 0.075, 0];\n\n        this.myMessagesBackgroundScale = [0.34, 0.15, 1];\n\n        {\n            let xPaddingPercentage = 0.03;\n            let yPaddingPercentage = xPaddingPercentage * this.myMessagesBackgroundScale[0] / this.myMessagesBackgroundScale[1] * 0.8; //a bit less padding\n            let xPosition = -this.myMessagesBackgroundScale[0] + this.myMessagesBackgroundScale[0] * xPaddingPercentage;\n            let yPosition = this.myMessagesBackgroundScale[1] - this.myMessagesBackgroundScale[1] * yPaddingPercentage;\n            this.myMessagesTextsPanelPosition = [xPosition, yPosition, 0.007];\n        }\n        this.myMessagesTextsPanelScale = [0.1, 0.1, 0.1];\n\n        this.myMessagesTextStartString = \".\\n\"; // to avoid issue with text component padding\n        this.myMessagesTextAlignment = 1; // left\n        this.myMessagesTextJustification = 3; // top\n        this.myMessagesTextOutlineRange = [0.45, 0.45];\n\n        this.myMessagesTextPositions = [];\n        this.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType.LOG] = [0, 0, 0.00001];\n        this.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType.ERROR] = [0, 0, 0];\n        this.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType.WARN] = [0, 0, 0];\n        this.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType.INFO] = [0, 0, 0];\n\n        this.myMessagesTextColors = [];\n        this.myMessagesTextColors[PP.ConsoleVRWidget.MessageType.LOG] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.LOG];\n        this.myMessagesTextColors[PP.ConsoleVRWidget.MessageType.ERROR] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.ERROR];\n        this.myMessagesTextColors[PP.ConsoleVRWidget.MessageType.WARN] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.WARN];\n        this.myMessagesTextColors[PP.ConsoleVRWidget.MessageType.INFO] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.INFO];\n\n        this.myMessagesTextOutlineColors = [];\n        this.myMessagesTextOutlineColors[PP.ConsoleVRWidget.MessageType.LOG] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.LOG];\n        this.myMessagesTextOutlineColors[PP.ConsoleVRWidget.MessageType.ERROR] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.ERROR];\n        this.myMessagesTextOutlineColors[PP.ConsoleVRWidget.MessageType.WARN] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.WARN];\n        this.myMessagesTextOutlineColors[PP.ConsoleVRWidget.MessageType.INFO] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.INFO];\n\n        //Buttons     \n        this.myButtonsPanelPosition = [0, -0.11, 0.015];\n\n        this.myButtonBackgroundScale = [0.04, 0.02, 1];\n\n        this.myButtonTextPosition = [0, 0, 0.0065];\n        this.myButtonTextScale = [0.18, 0.18, 0.18];\n        this.myButtonTextAlignment = this.myTextAlignment;\n        this.myButtonTextJustification = this.myTextJustification;\n        this.myButtonTextOutlineRange = this.myTextOutlineRange;\n        this.myButtonTextColor = this.myTextColor;\n        this.myButtonTextOutlineColor = this.myTextOutlineColor;\n\n        this.myButtonCursorTargetPosition = [0, 0, 0];\n        this.myButtonCursorTargetPosition[2] = this.myButtonTextPosition[2];\n\n        this.myButtonsCollisionCollider = this.myCursorTargetCollisionCollider;\n        this.myButtonsCollisionGroup = this.myCursorTargetCollisionGroup;\n        this.myButtonsCollisionExtents = this.myButtonBackgroundScale.slice(0);\n        this.myButtonsCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myClearButtonTextLabel = \"clear\";\n        this.myUpButtonTextLabel = \"up\";\n        this.myDownButtonTextLabel = \"down\";\n\n        this.myFilterButtonsTextColors = [];\n        this.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType.LOG] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.LOG];\n        this.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType.ERROR] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.ERROR];\n        this.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType.WARN] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.WARN];\n        this.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType.INFO] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.INFO];\n\n        this.myFilterButtonsTextOutlineColors = [];\n        this.myFilterButtonsTextOutlineColors[PP.ConsoleVRWidget.MessageType.LOG] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.LOG];\n        this.myFilterButtonsTextOutlineColors[PP.ConsoleVRWidget.MessageType.ERROR] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.ERROR];\n        this.myFilterButtonsTextOutlineColors[PP.ConsoleVRWidget.MessageType.WARN] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.WARN];\n        this.myFilterButtonsTextOutlineColors[PP.ConsoleVRWidget.MessageType.INFO] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.INFO];\n\n        this.myFilterButtonsTextLabel = [];\n        this.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType.LOG] = \"log\";\n        this.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType.ERROR] = \"error\";\n        this.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType.WARN] = \"warn\";\n        this.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType.INFO] = \"info\";\n\n        //Buttons positioning\n        {\n            let numberOfButtons = 7;\n            let buttonsHorizontalSpace = Math.max(0.68, this.myButtonBackgroundScale[0] * numberOfButtons);\n            //2 at start, 3 between filters, 4 spaces between filter and clear and 4 spaces between clear and up/down, 1 space between up and down, 1 at end\n            let numberOfSpacesBetweenButtons = 2 + 3 + 4 + 4 + 1 + 2;\n            let spaceWidth = Math.max((buttonsHorizontalSpace - numberOfButtons * this.myButtonBackgroundScale[0] * 2) / numberOfSpacesBetweenButtons, 0);\n            let halfButtonWidth = this.myButtonBackgroundScale[0];\n            let initialPosition = - buttonsHorizontalSpace / 2;\n\n            this.myFilterButtonsPositions = [];\n            this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.LOG] = [initialPosition + spaceWidth * 2 + halfButtonWidth, 0, 0];\n            this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.ERROR] = [this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.LOG][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\n            this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.WARN] = [this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.ERROR][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\n            this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.INFO] = [this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.WARN][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\n\n            this.myClearButtonPosition = [this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.INFO][0] + halfButtonWidth + spaceWidth * 4 + halfButtonWidth, 0, 0];\n            this.myUpButtonPosition = [this.myClearButtonPosition[0] + halfButtonWidth + spaceWidth * 4 + halfButtonWidth, 0, 0];\n            this.myDownButtonPosition = [this.myUpButtonPosition[0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\n        }\n\n        //Notify Icon\n        this.myNotifyIconBackgroundScale = [0.01, 0.01, 1];\n\n        this.myNotifyIconPanelPositions = [];\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE] = [0, 0, 0];\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE][0] = -this.myMessagesBackgroundScale[0] + this.myNotifyIconBackgroundScale[0] + 0.01;\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE][1] = -this.myMessagesBackgroundScale[1] + this.myNotifyIconBackgroundScale[1] + 0.01;\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE][2] = this.myMessagesTextsPanelPosition[2] - 0.00001; //prevent glitches with text\n\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.LEFT] = this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE];\n\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.RIGHT] = this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE];\n\n        this.myNotifyIconCursorTargetPosition = [0, 0, 0];\n        this.myNotifyIconCursorTargetPosition[2] = this.myButtonsPanelPosition[2] + this.myButtonTextPosition[2] - this.myMessagesTextsPanelPosition[2]; // a little behind the button target to avoid hiding it\n\n        this.myNotifyIconCollisionExtents = this.myNotifyIconBackgroundScale.slice(0);\n        this.myNotifyIconCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myNotifyIconColor = [210 / 255, 210 / 255, 210 / 255, 1];\n\n        //Pointer\n        this.myPointerCollisionCollider = this.myCursorTargetCollisionCollider;\n        this.myPointerCollisionGroup = this.myCursorTargetCollisionGroup;\n\n        {\n            let spaceBetweenMessagesAndButtons = Math.abs((this.myMessagesPanelPosition[1] - this.myMessagesBackgroundScale[1]) - (this.myButtonsPanelPosition[1] + this.myButtonBackgroundScale[1]));\n            let pointerCollisionHalfHeight = this.myMessagesBackgroundScale[1] + this.myButtonBackgroundScale[1] + spaceBetweenMessagesAndButtons / 2;\n            this.myPointerCollisionExtents = [this.myMessagesBackgroundScale[0], pointerCollisionHalfHeight, this.myCursorTargetCollisionThickness];\n        }\n\n        this.myPointerCursorTargetPosition = [0, 0, 0];\n        this.myPointerCursorTargetPosition[1] = (this.myMessagesPanelPosition[1] + this.myMessagesBackgroundScale[1]) - this.myPointerCollisionExtents[1];\n        this.myPointerCursorTargetPosition[2] = this.myButtonsPanelPosition[2] + this.myButtonTextPosition[2] - 0.0001; // a little behind the button target to avoid hiding it\n    }\n\n    _initializeRuntimeSetup() {\n        this.myTabString = \"    \";\n        this.myAssertStartString = \"Assertion failed:\";\n\n        this.myMaxCharactersPerLine = 100;\n        this.myMaxLineSplits = 10; //prevent infinite splitting\n        this.myMaxLines = 22;\n        this.myMaxMessages = 2000;\n        this.myMaxMessagesDeletePad = 2000; // to prevent deleting at every message, delay the delete after the limit is exceed by this value\n\n        this.myLinesBetweenMessages = 1;\n\n        this.myButtonHoverColor = [150 / 255, 150 / 255, 150 / 255, 1];\n        this.myButtonDisabledTextColor = this.myBackgroundColor;\n        this.myButtonDisabledBackgroundColor = [110 / 255, 110 / 255, 110 / 255, 1];\n\n        this.myFilterButtonDisabledTextColor = this.myButtonDisabledTextColor;\n        this.myFilterButtonDisabledBackgroundColor = this.myButtonDisabledBackgroundColor;\n\n        this.myScrollDelay = 0.1;\n        this.myScrollAmount = 1;\n        this.myScrollThumbstickHandedness = PP.ToolHandedness.RIGHT;\n        this.myScrollThumbstickDelay = 0.1;\n        this.myScrollThumbstickMinThreshold = 0.2;\n        this.myScrollThumbstickAmount = 3;\n\n        this.myPulseDelay = 5;\n        this.myPulseIntensity = 0.3;\n        this.myPulseDuration = 0.085;\n\n        this.myClearBrowserConsoleWhenClearPressed = true;\n\n        this.myGamepadScrollOnlyOnHover = true;\n    }\n};",
        "PP.ConsoleVRWidgetUI = class ConsoleVRWidgetUI {\n\n    build(parentObject, setup, additionalSetup) {\n        this._myParentObject = parentObject;\n        this._mySetup = setup;\n        this._myAdditionalSetup = additionalSetup;\n\n        this._myPlaneMesh = PP.MeshUtils.createPlaneMesh();\n\n        this._createSkeleton();\n        this._setTransforms();\n        this._addComponents();\n    }\n\n    setVisible(visible) {\n        this.myPivotObject.pp_setActiveHierarchy(visible);\n    }\n\n    //Skeleton\n    _createSkeleton() {\n        this.myPivotObject = WL.scene.addObject(this._myParentObject);\n\n        this._createMessagesSkeleton();\n        this._createButtonsSkeleton();\n        this._createPointerSkeleton();\n    }\n\n    _createMessagesSkeleton() {\n        this.myMessagesPanel = WL.scene.addObject(this.myPivotObject);\n        this.myMessagesBackground = WL.scene.addObject(this.myMessagesPanel);\n        this.myMessagesTextsPanel = WL.scene.addObject(this.myMessagesPanel);\n\n        this.myMessagesTexts = [];\n        for (let key in PP.ConsoleVRWidget.MessageType) {\n            this.myMessagesTexts[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myMessagesTextsPanel);\n        }\n\n        this.myNotifyIconPanel = WL.scene.addObject(this.myMessagesPanel);\n        this.myNotifyIconBackground = WL.scene.addObject(this.myNotifyIconPanel);\n        this.myNotifyIconCursorTarget = WL.scene.addObject(this.myNotifyIconPanel);\n    }\n\n    _createButtonsSkeleton() {\n        this.myButtonsPanel = WL.scene.addObject(this.myPivotObject);\n\n        this.myFilterButtonsPanels = [];\n        this.myFilterButtonsBackgrounds = [];\n        this.myFilterButtonsTexts = [];\n        this.myFilterButtonsCursorTargets = [];\n\n        for (let key in PP.ConsoleVRWidget.MessageType) {\n            this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myButtonsPanel);\n            this.myFilterButtonsBackgrounds[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]]);\n            this.myFilterButtonsTexts[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]]);\n            this.myFilterButtonsCursorTargets[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]]);\n        }\n\n        this.myClearButtonPanel = WL.scene.addObject(this.myButtonsPanel);\n        this.myClearButtonBackground = WL.scene.addObject(this.myClearButtonPanel);\n        this.myClearButtonText = WL.scene.addObject(this.myClearButtonPanel);\n        this.myClearButtonCursorTarget = WL.scene.addObject(this.myClearButtonPanel);\n\n        this.myUpButtonPanel = WL.scene.addObject(this.myButtonsPanel);\n        this.myUpButtonBackground = WL.scene.addObject(this.myUpButtonPanel);\n        this.myUpButtonText = WL.scene.addObject(this.myUpButtonPanel);\n        this.myUpButtonCursorTarget = WL.scene.addObject(this.myUpButtonPanel);\n\n        this.myDownButtonPanel = WL.scene.addObject(this.myButtonsPanel);\n        this.myDownButtonBackground = WL.scene.addObject(this.myDownButtonPanel);\n        this.myDownButtonText = WL.scene.addObject(this.myDownButtonPanel);\n        this.myDownButtonCursorTarget = WL.scene.addObject(this.myDownButtonPanel);\n    }\n\n    _createPointerSkeleton() {\n        this.myPointerCursorTarget = WL.scene.addObject(this.myPivotObject);\n    }\n\n    //Transforms\n    _setTransforms() {\n        this.myPivotObject.setDirty();\n\n        this._setMessagesTransforms();\n        this._setButtonsTransforms();\n        this._setPointerTransform();\n    }\n\n    _setMessagesTransforms() {\n        this.myMessagesPanel.setTranslationLocal(this._mySetup.myMessagesPanelPosition);\n        this.myMessagesBackground.scale(this._mySetup.myMessagesBackgroundScale);\n\n        this.myMessagesTextsPanel.setTranslationLocal(this._mySetup.myMessagesTextsPanelPosition);\n        this.myMessagesTextsPanel.scale(this._mySetup.myMessagesTextsPanelScale);\n        for (let key in PP.ConsoleVRWidget.MessageType) {\n            this.myMessagesTexts[PP.ConsoleVRWidget.MessageType[key]].setTranslationLocal(this._mySetup.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType[key]]);\n        }\n\n        this.myNotifyIconPanel.setTranslationLocal(this._mySetup.myNotifyIconPanelPositions[this._myAdditionalSetup.myHandedness]);\n        this.myNotifyIconBackground.scale(this._mySetup.myNotifyIconBackgroundScale);\n        this.myNotifyIconCursorTarget.setTranslationLocal(this._mySetup.myNotifyIconCursorTargetPosition);\n    }\n\n    _setButtonsTransforms() {\n        this.myButtonsPanel.setTranslationLocal(this._mySetup.myButtonsPanelPosition);\n\n        //Filter Buttons\n        for (let key in PP.ConsoleVRWidget.MessageType) {\n            this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]].setTranslationLocal(this._mySetup.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType[key]]);\n\n            this.myFilterButtonsBackgrounds[PP.ConsoleVRWidget.MessageType[key]].scale(this._mySetup.myButtonBackgroundScale);\n\n            this.myFilterButtonsTexts[PP.ConsoleVRWidget.MessageType[key]].setTranslationLocal(this._mySetup.myButtonTextPosition);\n            this.myFilterButtonsTexts[PP.ConsoleVRWidget.MessageType[key]].scale(this._mySetup.myButtonTextScale);\n\n            this.myFilterButtonsCursorTargets[PP.ConsoleVRWidget.MessageType[key]].setTranslationLocal(this._mySetup.myButtonCursorTargetPosition);\n        }\n\n        //Clear\n        {\n            this.myClearButtonPanel.setTranslationLocal(this._mySetup.myClearButtonPosition);\n\n            this.myClearButtonBackground.scale(this._mySetup.myButtonBackgroundScale);\n\n            this.myClearButtonText.setTranslationLocal(this._mySetup.myButtonTextPosition);\n            this.myClearButtonText.scale(this._mySetup.myButtonTextScale);\n\n            this.myClearButtonCursorTarget.setTranslationLocal(this._mySetup.myButtonCursorTargetPosition);\n        }\n\n        //Up\n        {\n            this.myUpButtonPanel.setTranslationLocal(this._mySetup.myUpButtonPosition);\n\n            this.myUpButtonBackground.scale(this._mySetup.myButtonBackgroundScale);\n\n            this.myUpButtonText.setTranslationLocal(this._mySetup.myButtonTextPosition);\n            this.myUpButtonText.scale(this._mySetup.myButtonTextScale);\n\n            this.myUpButtonCursorTarget.setTranslationLocal(this._mySetup.myButtonCursorTargetPosition);\n        }\n\n        //Down\n        {\n            this.myDownButtonPanel.setTranslationLocal(this._mySetup.myDownButtonPosition);\n\n            this.myDownButtonBackground.scale(this._mySetup.myButtonBackgroundScale);\n\n            this.myDownButtonText.setTranslationLocal(this._mySetup.myButtonTextPosition);\n            this.myDownButtonText.scale(this._mySetup.myButtonTextScale);\n\n            this.myDownButtonCursorTarget.setTranslationLocal(this._mySetup.myButtonCursorTargetPosition);\n        }\n    }\n\n    _setPointerTransform() {\n        this.myPointerCursorTarget.setTranslationLocal(this._mySetup.myPointerCursorTargetPosition);\n    }\n\n    //Components\n    _addComponents() {\n        this._addMessagesComponents();\n        this._addButtonsComponents();\n        this._addPointerComponents();\n    }\n\n    _addMessagesComponents() {\n        let messagesBackgroundMeshComp = this.myMessagesBackground.addComponent('mesh');\n        messagesBackgroundMeshComp.mesh = this._myPlaneMesh;\n        messagesBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        messagesBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\n\n        this.myMessagesTextComponents = [];\n        for (let key in PP.ConsoleVRWidget.MessageType) {\n            let textComp = this.myMessagesTexts[PP.ConsoleVRWidget.MessageType[key]].addComponent('text');\n\n            textComp.alignment = this._mySetup.myMessagesTextAlignment;\n            textComp.justification = this._mySetup.myMessagesTextJustification;\n            textComp.material = this._myAdditionalSetup.myTextMaterial.clone();\n            textComp.material.color = this._mySetup.myMessagesTextColors[PP.ConsoleVRWidget.MessageType[key]];\n            textComp.material.outlineColor = this._mySetup.myMessagesTextOutlineColors[PP.ConsoleVRWidget.MessageType[key]];\n            textComp.material.outlineRange = this._mySetup.myMessagesTextOutlineRange;\n            textComp.text = this._mySetup.myMessagesTextStartString;\n\n            this.myMessagesTextComponents[PP.ConsoleVRWidget.MessageType[key]] = textComp;\n        }\n\n        this.myNotifyIconBackgroundComponent = this.myNotifyIconBackground.addComponent('mesh');\n        this.myNotifyIconBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myNotifyIconBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myNotifyIconBackgroundComponent.material.color = this._mySetup.myNotifyIconColor;\n\n        this.myNotifyIconCursorTargetComponent = this.myNotifyIconCursorTarget.addComponent('cursor-target');\n\n        this.myNotifyIconCollisionComponent = this.myNotifyIconCursorTarget.addComponent('collision');\n        this.myNotifyIconCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myNotifyIconCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myNotifyIconCollisionComponent.extents = this._mySetup.myNotifyIconCollisionExtents;\n    }\n\n    _addButtonsComponents() {\n        //worship the code copy pasteness\n\n        this.myFilterButtonsBackgroundComponents = [];\n        this.myFilterButtonsTextComponents = [];\n        this.myFilterButtonsCursorTargetComponents = [];\n        this.myFilterButtonsCollisionComponents = [];\n\n        //Filter Buttons\n        for (let key in PP.ConsoleVRWidget.MessageType) {\n            let buttonBackgroundMeshComp = this.myFilterButtonsBackgrounds[PP.ConsoleVRWidget.MessageType[key]].addComponent('mesh');\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\n\n            let buttonTextComp = this.myFilterButtonsTexts[PP.ConsoleVRWidget.MessageType[key]].addComponent('text');\n            this._setupButtonTextComponent(buttonTextComp);\n            buttonTextComp.material.color = this._mySetup.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType[key]];\n            buttonTextComp.material.outlineColor = this._mySetup.myFilterButtonsTextOutlineColors[PP.ConsoleVRWidget.MessageType[key]];\n            buttonTextComp.text = this._mySetup.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType[key]];\n\n            let buttonCursorTargetComp = this.myFilterButtonsCursorTargets[PP.ConsoleVRWidget.MessageType[key]].addComponent('cursor-target');\n\n            let buttonCollisionComp = this.myFilterButtonsCursorTargets[PP.ConsoleVRWidget.MessageType[key]].addComponent('collision');\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\n\n            this.myFilterButtonsBackgroundComponents[PP.ConsoleVRWidget.MessageType[key]] = buttonBackgroundMeshComp;\n            this.myFilterButtonsTextComponents[PP.ConsoleVRWidget.MessageType[key]] = buttonTextComp;\n            this.myFilterButtonsCursorTargetComponents[PP.ConsoleVRWidget.MessageType[key]] = buttonCursorTargetComp;\n            this.myFilterButtonsCollisionComponents[PP.ConsoleVRWidget.MessageType[key]] = buttonCollisionComp;\n        }\n\n        //Clear \n        {\n            let buttonBackgroundMeshComp = this.myClearButtonBackground.addComponent('mesh');\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\n\n            let buttonTextComp = this.myClearButtonText.addComponent('text');\n            this._setupButtonTextComponent(buttonTextComp);\n            buttonTextComp.text = this._mySetup.myClearButtonTextLabel;\n\n            let buttonCursorTargetComp = this.myClearButtonCursorTarget.addComponent('cursor-target');\n\n            let buttonCollisionComp = this.myClearButtonCursorTarget.addComponent('collision');\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\n\n            this.myClearButtonBackgroundComponent = buttonBackgroundMeshComp;\n            this.myClearButtonTextComponent = buttonTextComp;\n            this.myClearButtonCursorTargetComponent = buttonCursorTargetComp;\n            this.myClearButtonCollisionComponent = buttonCollisionComp;\n        }\n\n        //Up \n        {\n            let buttonBackgroundMeshComp = this.myUpButtonBackground.addComponent('mesh');\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\n\n            let buttonTextComp = this.myUpButtonText.addComponent('text');\n            this._setupButtonTextComponent(buttonTextComp);\n            buttonTextComp.text = this._mySetup.myUpButtonTextLabel;\n\n            let buttonCursorTargetComp = this.myUpButtonCursorTarget.addComponent('cursor-target');\n\n            let buttonCollisionComp = this.myUpButtonCursorTarget.addComponent('collision');\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\n\n            this.myUpButtonBackgroundComponent = buttonBackgroundMeshComp;\n            this.myUpButtonTextComponent = buttonTextComp;\n            this.myUpButtonCursorTargetComponent = buttonCursorTargetComp;\n            this.myUpButtonCollisionComponent = buttonCollisionComp;\n        }\n\n        //Down \n        {\n            let buttonBackgroundMeshComp = this.myDownButtonBackground.addComponent('mesh');\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\n\n            let buttonTextComp = this.myDownButtonText.addComponent('text');\n            this._setupButtonTextComponent(buttonTextComp);\n            buttonTextComp.text = this._mySetup.myDownButtonTextLabel;\n\n            let buttonCursorTargetComp = this.myDownButtonCursorTarget.addComponent('cursor-target');\n\n            let buttonCollisionComp = this.myDownButtonCursorTarget.addComponent('collision');\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\n\n            this.myDownButtonBackgroundComponent = buttonBackgroundMeshComp;\n            this.myDownButtonTextComponent = buttonTextComp;\n            this.myDownButtonCursorTargetComponent = buttonCursorTargetComp;\n            this.myDownButtonCollisionComponent = buttonCollisionComp;\n        }\n    }\n\n    _addPointerComponents() {\n        this.myPointerCursorTargetComponent = this.myPointerCursorTarget.addComponent('cursor-target');\n        this.myPointerCursorTargetComponent.myPreventPulseOnHover = true;\n\n        let collisionComp = this.myPointerCursorTarget.addComponent('collision');\n        collisionComp.collider = this._mySetup.myPointerCollisionCollider;\n        collisionComp.group = 1 << this._mySetup.myPointerCollisionGroup;\n        collisionComp.extents = this._mySetup.myPointerCollisionExtents;\n\n        this.myPointerCollisionComponent = collisionComp;\n    }\n\n    _setupButtonTextComponent(textComponent) {\n        textComponent.alignment = this._mySetup.myTextAlignment;\n        textComponent.justification = this._mySetup.myTextJustification;\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\n        textComponent.material.outlineRange = this._mySetup.myTextOutlineRange;\n        textComponent.material.color = this._mySetup.myTextColor;\n        textComponent.material.outlineColor = this._mySetup.myTextOutlineColor;\n        textComponent.text = \"\";\n    }\n};",
        "\nPP.WidgetFrame = class WidgetFrame {\n\n    constructor(widgetLetterID, buttonsColumnIndex) {\n        this.myIsWidgetVisible = true;\n        this.myIsPinned = false;\n\n        this._mySetup = new PP.WidgetFrameSetup(widgetLetterID, buttonsColumnIndex);\n        this._myAdditionalSetup = null;\n\n        this._myUI = new PP.WidgetFrameUI();\n\n        this._myWidgetVisibleChangedCallbacks = new Map();      // Signature: callback(isWidgetVisible)\n        this._myPinChangedCallbacks = new Map();                // Signature: callback(isPinned)\n    }\n\n    getWidgetObject() {\n        return this._myUI.myWidgetObject;\n    }\n\n    toggleVisibility() {\n        this._toggleVisibility(false, true);\n    }\n\n    togglePin() {\n        this._togglePin(false);\n    }\n\n    registerWidgetVisibleChangedEventListener(id, callback) {\n        this._myWidgetVisibleChangedCallbacks.set(id, callback);\n    }\n\n    unregisterWidgetVisibleChangedEventListener(id) {\n        this._myWidgetVisibleChangedCallbacks.delete(id);\n    }\n\n    registerPinChangedEventListener(id, callback) {\n        this._myPinChangedCallbacks.set(id, callback);\n    }\n\n    unregisterPinChangedEventListener(id) {\n        this._myPinChangedCallbacks.delete(id);\n    }\n\n    start(parentObject, additionalSetup) {\n        this._myAdditionalSetup = additionalSetup;\n\n        this._myUI.build(parentObject, this._mySetup, additionalSetup);\n        this._myUI.setVisibilityButtonVisible(additionalSetup.myShowVisibilityButton);\n        if (!additionalSetup.myShowOnStart) {\n            this._toggleVisibility(false, false);\n        }\n\n        this._addListeners();\n    }\n\n    update(dt) {\n        this._myUI.update(dt);\n    }\n\n    _addListeners() {\n        let ui = this._myUI;\n\n        ui.myPinButtonCursorTargetComponent.addClickFunction(this._togglePin.bind(this, true));\n        ui.myPinButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPinButtonBackgroundComponent.material));\n        ui.myPinButtonCursorTargetComponent.addUnHoverFunction(this._pinUnHover.bind(this, ui.myPinButtonBackgroundComponent.material));\n\n        if (this._myAdditionalSetup.myShowVisibilityButton) {\n            ui.myVisibilityButtonCursorTargetComponent.addClickFunction(this._toggleVisibility.bind(this, true, true));\n            ui.myVisibilityButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myVisibilityButtonBackgroundComponent.material));\n            ui.myVisibilityButtonCursorTargetComponent.addUnHoverFunction(this._visibilityUnHover.bind(this, ui.myVisibilityButtonBackgroundComponent.material));\n        }\n    }\n\n    _toggleVisibility(isButton, notify) {\n        this.myIsWidgetVisible = !this.myIsWidgetVisible;\n\n        this._myUI.setWidgetVisible(this.myIsWidgetVisible);\n\n        let textMaterial = this._myUI.myVisibilityButtonTextComponent.material;\n        let backgroundMaterial = this._myUI.myVisibilityButtonBackgroundComponent.material;\n        if (this.myIsWidgetVisible) {\n            textMaterial.color = this._mySetup.myDefaultTextColor;\n            if (!isButton) {\n                backgroundMaterial.color = this._mySetup.myBackgroundColor;\n            }\n        } else {\n            textMaterial.color = this._mySetup.myButtonDisabledTextColor;\n            if (!isButton) {\n                backgroundMaterial.color = this._mySetup.myButtonDisabledBackgroundColor;\n            }\n        }\n\n        if (notify) {\n            for (let callback of this._myWidgetVisibleChangedCallbacks.values()) {\n                callback(this.myIsWidgetVisible);\n            }\n        }\n    }\n\n    _togglePin(isButton) {\n        if (this.myIsWidgetVisible) {\n            this.myIsPinned = !this.myIsPinned;\n\n            this._myUI.setPinned(this.myIsPinned);\n\n            let textMaterial = this._myUI.myPinButtonTextComponent.material;\n            let backgroundMaterial = this._myUI.myPinButtonBackgroundComponent.material;\n            if (this.myIsPinned) {\n                textMaterial.color = this._mySetup.myDefaultTextColor;\n                if (!isButton) {\n                    backgroundMaterial.color = this._mySetup.myBackgroundColor;\n                }\n            } else {\n                textMaterial.color = this._mySetup.myButtonDisabledTextColor;\n                if (!isButton) {\n                    backgroundMaterial.color = this._mySetup.myButtonDisabledBackgroundColor;\n                }\n            }\n\n            for (let callback of this._myPinChangedCallbacks.values()) {\n                callback(this.myIsPinned);\n            }\n        }\n    }\n\n    _genericHover(material) {\n        material.color = this._mySetup.myButtonHoverColor;\n    }\n\n    _visibilityUnHover(material) {\n        if (this.myIsWidgetVisible) {\n            material.color = this._mySetup.myBackgroundColor;\n        } else {\n            material.color = this._mySetup.myButtonDisabledBackgroundColor;\n        }\n    }\n\n    _pinUnHover(material) {\n        if (this.myIsPinned) {\n            material.color = this._mySetup.myBackgroundColor;\n        } else {\n            material.color = this._mySetup.myButtonDisabledBackgroundColor;\n        }\n    }\n};",
        "PP.WidgetFrameSetup = class WidgetFrameSetup {\n\n    constructor(widgetLetterID, buttonsColumnIndex) {\n\n        this._initializeBuildSetup(widgetLetterID, buttonsColumnIndex);\n        this._initializeRuntimeSetup();\n    }\n\n    _initializeBuildSetup(widgetLetterID, buttonsColumnIndex) {\n        //General\n        this.myBackgroundColor = [46 / 255, 46 / 255, 46 / 255, 1];\n\n        this.myCursorTargetCollisionCollider = 2; // box\n        this.myCursorTargetCollisionGroup = 7;\n        this.myCursorTargetCollisionThickness = 0.001;\n\n        this.myDefaultTextColor = [255 / 255, 255 / 255, 255 / 255, 1];\n\n        this.myTextAlignment = 2; // center\n        this.myTextJustification = 2; // middle\n        this.myTextOutlineRange = [0.45, 0.45];\n        this.myTextColor = this.myDefaultTextColor;\n        this.myTextOutlineColor = this.myDefaultTextColor;\n\n\n        this.myVisibilityButtonBackgroundScale = [0.015, 0.015, 1];\n        this.myVisibilityButtonTextPosition = [0, 0, 0.007];\n        this.myVisibilityButtonTextScale = [0.18, 0.18, 0.18];\n\n        let distanceBetweenToolsVisibilityButtons = 0.01;\n        let buttonXOffset = this.myVisibilityButtonBackgroundScale[0] * (2 * buttonsColumnIndex) + distanceBetweenToolsVisibilityButtons * buttonsColumnIndex;\n\n        this.myVisibilityButtonPosition = [];\n        this.myVisibilityButtonPosition[PP.ToolHandedness.NONE] = {};\n        this.myVisibilityButtonPosition[PP.ToolHandedness.NONE].myPosition = [-0.3 + buttonXOffset, -0.205, 0.035];\n\n        this.myVisibilityButtonPosition[PP.ToolHandedness.LEFT] = {};\n        this.myVisibilityButtonPosition[PP.ToolHandedness.LEFT].myPosition = [-0.2 + buttonXOffset, 0.025, 0.015];\n\n        this.myVisibilityButtonPosition[PP.ToolHandedness.RIGHT] = {};\n        this.myVisibilityButtonPosition[PP.ToolHandedness.RIGHT].myPosition = [0.2 - buttonXOffset, 0.025, 0.015];\n\n        this.myVisibilityButtonText = widgetLetterID;\n\n        this.myVisibilityButtonCursorTargetPosition = [0, 0, 0];\n        this.myVisibilityButtonCursorTargetPosition[2] = this.myVisibilityButtonTextPosition[2];\n        this.myVisibilityButtonCollisionExtents = this.myVisibilityButtonBackgroundScale.slice(0);\n        this.myVisibilityButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myFlagButtonBackgroundScale = [0.0125, 0.0125, 1];\n        this.myFlagButtonTextPosition = [0, 0, 0.007];\n        this.myFlagButtonTextScale = [0.15, 0.15, 0.15];\n\n        let distanceBetweenFlagButtons = 0.0075;\n        let pinFlagIndex = 0;\n        let pinButtonYOffset = this.myVisibilityButtonBackgroundScale[1] + this.myFlagButtonBackgroundScale[1] + distanceBetweenFlagButtons +\n            this.myFlagButtonBackgroundScale[1] * (2 * pinFlagIndex) + distanceBetweenFlagButtons * pinFlagIndex;\n\n        this.myPinButtonPosition = [];\n        this.myPinButtonPosition[PP.ToolHandedness.NONE] = {};\n        this.myPinButtonPosition[PP.ToolHandedness.NONE].myPosition = this.myVisibilityButtonPosition[PP.ToolHandedness.NONE].myPosition.slice(0);\n        this.myPinButtonPosition[PP.ToolHandedness.NONE].myPosition[1] += pinButtonYOffset;\n\n        this.myPinButtonPosition[PP.ToolHandedness.LEFT] = {};\n        this.myPinButtonPosition[PP.ToolHandedness.LEFT].myPosition = this.myVisibilityButtonPosition[PP.ToolHandedness.LEFT].myPosition.slice(0);\n        this.myPinButtonPosition[PP.ToolHandedness.LEFT].myPosition[1] += pinButtonYOffset;\n\n        this.myPinButtonPosition[PP.ToolHandedness.RIGHT] = {};\n        this.myPinButtonPosition[PP.ToolHandedness.RIGHT].myPosition = this.myVisibilityButtonPosition[PP.ToolHandedness.RIGHT].myPosition.slice(0);\n        this.myPinButtonPosition[PP.ToolHandedness.RIGHT].myPosition[1] += pinButtonYOffset;\n\n        this.myPinButtonText = \"P\";\n\n        this.myPinButtonCursorTargetPosition = [0, 0, 0];\n        this.myPinButtonCursorTargetPosition[2] = this.myFlagButtonTextPosition[2];\n        this.myPinButtonCollisionExtents = this.myFlagButtonBackgroundScale.slice(0);\n        this.myPinButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n    }\n\n    _initializeRuntimeSetup() {\n        this._initializeObjectsTransforms();\n\n        this.myButtonHoverColor = [150 / 255, 150 / 255, 150 / 255, 1];\n        this.myButtonDisabledTextColor = this.myBackgroundColor;\n        this.myButtonDisabledBackgroundColor = [110 / 255, 110 / 255, 110 / 255, 1];\n    }\n\n    _initializeObjectsTransforms() {\n        this.myPivotObjectTransforms = this._createDefaultObjectTransforms();\n\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myRotation = [-0.645, 0.425, 0.25, 0.584];\n        glMatrix.quat.normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myRotation, this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myRotation);\n\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myRotation = [-0.645, -0.425, -0.25, 0.584];\n        glMatrix.quat.normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myRotation, this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myRotation);\n\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.HAND][PP.ToolHandedness.LEFT].myPosition = [-0.04, 0.045, -0.055];\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.HAND][PP.ToolHandedness.LEFT].myRotation = [0, 0.536, -0.43, 0.727];\n        glMatrix.quat.normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.HAND][PP.ToolHandedness.LEFT].myRotation, this.myPivotObjectTransforms[PP.ToolInputSourceType.HAND][PP.ToolHandedness.LEFT].myRotation);\n\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.HAND][PP.ToolHandedness.RIGHT].myPosition = [0.04, 0.045, -0.055];\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.HAND][PP.ToolHandedness.RIGHT].myRotation = [0, -0.536, 0.43, 0.727];\n        glMatrix.quat.normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.HAND][PP.ToolHandedness.RIGHT].myRotation, this.myPivotObjectTransforms[PP.ToolInputSourceType.HAND][PP.ToolHandedness.RIGHT].myRotation);\n\n        this.myWidgetObjectTransforms = this._createDefaultObjectTransforms();\n\n        this.myWidgetObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myPosition = [0.1, 0.23, -0.02];\n        this.myWidgetObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myPosition = [0.07, 0.23, -0.02];\n\n        this.myWidgetObjectTransforms[PP.ToolInputSourceType.HAND][PP.ToolHandedness.LEFT].myPosition = [0.1, 0.23, -0.02];\n        this.myWidgetObjectTransforms[PP.ToolInputSourceType.HAND][PP.ToolHandedness.RIGHT].myPosition = [0.07, 0.23, -0.02];\n\n    }\n\n    _createDefaultObjectTransforms() {\n        let defaultObjectTransforms = [];\n\n        for (let inputSourceTypeKey in PP.ToolInputSourceType) {\n            let inputSourceType = PP.ToolInputSourceType[inputSourceTypeKey];\n            defaultObjectTransforms[inputSourceType] = [];\n            for (let handednessKey in PP.ToolHandedness) {\n                let handedness = PP.ToolHandedness[handednessKey];\n                defaultObjectTransforms[inputSourceType][handedness] = {};\n                defaultObjectTransforms[inputSourceType][handedness].myPosition = [0, 0, 0];\n                defaultObjectTransforms[inputSourceType][handedness].myRotation = [0, 0, 0, 1];\n            }\n        }\n\n        return defaultObjectTransforms;\n    }\n};",
        "\nPP.WidgetFrameUI = class WidgetFrameUI {\n\n    constructor() {\n        this._myInputSourceType = null;\n\n        this._myParentObject = null;\n        this._myIsPinned = false;\n    }\n\n    build(parentObject, setup, additionalSetup) {\n        this._myParentObject = parentObject;\n        this._mySetup = setup;\n        this._myAdditionalSetup = additionalSetup;\n        this._myPlaneMesh = PP.MeshUtils.createPlaneMesh();\n\n        this._createSkeleton();\n        this._setTransforms();\n        this._addComponents();\n    }\n\n    setWidgetVisible(visible) {\n        this.myFlagsButtonPanel.pp_setActiveHierarchy(visible);\n        if (visible) {\n            this._updateObjectsTransforms(true);\n        }\n    }\n\n    setVisibilityButtonVisible(visible) {\n        this.myVisibilityButtonPanel.pp_setActiveHierarchy(visible);\n    }\n\n    setPinned(pinned) {\n        if (pinned != this._myIsPinned) {\n            this._myIsPinned = pinned;\n            if (this._myIsPinned) {\n                this.myPivotObject.pp_setParent(null);\n            } else {\n                this.myPivotObject.pp_setParent(this.myFixForwardObject);\n                this._updateObjectsTransforms(true);\n            }\n        }\n    }\n\n    update(dt) {\n        this._updateObjectsTransforms(false);\n    }\n\n    _updateObjectsTransforms(forceRefreshObjectsTransforms) {\n        let inputSourceType = PP.InputUtils.getInputSourceType(this._myAdditionalSetup.myHandedness);\n\n        if (inputSourceType != this._myInputSourceType || forceRefreshObjectsTransforms) {\n            this._myInputSourceType = inputSourceType;\n\n            if (!this._myIsPinned) {\n                this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myPosition);\n                this.myPivotObject.resetRotation();\n                this.myPivotObject.rotateObject(this._mySetup.myPivotObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myRotation);\n            }\n\n            this.myWidgetObject.setTranslationLocal(this._mySetup.myWidgetObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myPosition);\n            this.myWidgetObject.resetRotation();\n            this.myWidgetObject.rotateObject(this._mySetup.myWidgetObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myRotation);\n        }\n    }\n\n    //Skeleton\n    _createSkeleton() {\n        this.myFixForwardObject = WL.scene.addObject(this._myParentObject);\n        this.myFixForwardObject.pp_rotateObject([0, 180, 0]);\n        this.myPivotObject = WL.scene.addObject(this.myFixForwardObject);\n        this.myWidgetObject = WL.scene.addObject(this.myPivotObject);\n\n        this.myVisibilityButtonPanel = WL.scene.addObject(this.myPivotObject);\n        this.myVisibilityButtonBackground = WL.scene.addObject(this.myVisibilityButtonPanel);\n        this.myVisibilityButtonText = WL.scene.addObject(this.myVisibilityButtonPanel);\n        this.myVisibilityButtonCursorTarget = WL.scene.addObject(this.myVisibilityButtonPanel);\n\n        this.myFlagsButtonPanel = WL.scene.addObject(this.myPivotObject);\n\n        this.myPinButtonPanel = WL.scene.addObject(this.myFlagsButtonPanel);\n        this.myPinButtonBackground = WL.scene.addObject(this.myPinButtonPanel);\n        this.myPinButtonText = WL.scene.addObject(this.myPinButtonPanel);\n        this.myPinButtonCursorTarget = WL.scene.addObject(this.myPinButtonPanel);\n    }\n\n    //Transforms\n    _setTransforms() {\n        this.myPivotObject.setDirty();\n\n        this.myVisibilityButtonPanel.setTranslationLocal(this._mySetup.myVisibilityButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\n        this.myVisibilityButtonBackground.scale(this._mySetup.myVisibilityButtonBackgroundScale);\n        this.myVisibilityButtonText.setTranslationLocal(this._mySetup.myVisibilityButtonTextPosition);\n        this.myVisibilityButtonText.scale(this._mySetup.myVisibilityButtonTextScale);\n        this.myVisibilityButtonCursorTarget.setTranslationLocal(this._mySetup.myVisibilityButtonCursorTargetPosition);\n\n        this.myPinButtonPanel.setTranslationLocal(this._mySetup.myPinButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\n\n        this.myPinButtonBackground.scale(this._mySetup.myFlagButtonBackgroundScale);\n        this.myPinButtonText.setTranslationLocal(this._mySetup.myFlagButtonTextPosition);\n        this.myPinButtonText.scale(this._mySetup.myFlagButtonTextScale);\n        this.myPinButtonCursorTarget.setTranslationLocal(this._mySetup.myPinButtonCursorTargetPosition);\n    }\n\n    //Components\n    _addComponents() {\n        this.myVisibilityButtonBackgroundComponent = this.myVisibilityButtonBackground.addComponent('mesh');\n        this.myVisibilityButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myVisibilityButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myVisibilityButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myVisibilityButtonTextComponent = this.myVisibilityButtonText.addComponent('text');\n        this._setupButtonTextComponent(this.myVisibilityButtonTextComponent);\n        this.myVisibilityButtonTextComponent.text = this._mySetup.myVisibilityButtonText;\n\n        this.myVisibilityButtonCursorTargetComponent = this.myVisibilityButtonCursorTarget.addComponent('cursor-target');\n        this.myVisibilityButtonCollisionComponent = this.myVisibilityButtonCursorTarget.addComponent('collision');\n        this.myVisibilityButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myVisibilityButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myVisibilityButtonCollisionComponent.extents = this._mySetup.myVisibilityButtonCollisionExtents;\n\n        this.myPinButtonBackgroundComponent = this.myPinButtonBackground.addComponent('mesh');\n        this.myPinButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myPinButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myPinButtonBackgroundComponent.material.color = this._mySetup.myButtonDisabledBackgroundColor;\n\n        this.myPinButtonTextComponent = this.myPinButtonText.addComponent('text');\n        this._setupButtonTextComponent(this.myPinButtonTextComponent);\n        this.myPinButtonTextComponent.material.color = this._mySetup.myButtonDisabledTextColor;\n        this.myPinButtonTextComponent.text = this._mySetup.myPinButtonText;\n\n        this.myPinButtonCursorTargetComponent = this.myPinButtonCursorTarget.addComponent('cursor-target');\n\n        this.myPinButtonCollisionComponent = this.myPinButtonCursorTarget.addComponent('collision');\n        this.myPinButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPinButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPinButtonCollisionComponent.extents = this._mySetup.myPinButtonCollisionExtents;\n    }\n\n    _setupButtonTextComponent(textComponent) {\n        textComponent.alignment = this._mySetup.myTextAlignment;\n        textComponent.justification = this._mySetup.myTextJustification;\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\n        textComponent.material.outlineRange = this._mySetup.myTextOutlineRange;\n        textComponent.material.color = this._mySetup.myTextColor;\n        textComponent.material.outlineColor = this._mySetup.myTextOutlineColor;\n        textComponent.text = \"\";\n    }\n};",
        "//Don't move inside easy_object_tuners folder, otherwise it won't resolve the parent class dependency\r\n\r\nPP.EasyObjectTuner = class EasyObjectTuner {\r\n    constructor(object, variableName, setAsDefault, useTuneTarget) {\r\n        this._myObject = object;\r\n        this._myUseTuneTarget = useTuneTarget;\r\n        this._mySetAsDefault = setAsDefault;\r\n\r\n        this._myEasyObject = this._myObject;\r\n        if (this._myUseTuneTarget) {\r\n            this._myEasyObject = PP.myEasyTuneTarget;\r\n        }\r\n        this._myPrevEasyObject = null;\r\n\r\n        let variableNamePrefix = this._getVariableNamePrefix();\r\n\r\n        if (variableName == \"\") {\r\n            this._myEasyTuneVariableName = variableNamePrefix.concat(this._myObject.objectId);\r\n        } else {\r\n            this._myEasyTuneVariableName = variableNamePrefix.concat(variableName);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        let easyTuneVariable = this._createEasyTuneVariable(this._myEasyTuneVariableName);\r\n\r\n        PP.myEasyTuneVariables.add(easyTuneVariable);\r\n        if (this._mySetAsDefault) {\r\n            PP.setEasyTuneWidgetActiveVariable(this._myEasyTuneVariableName);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (PP.myEasyTuneVariables.isActive(this._myEasyTuneVariableName)) {\r\n            if (this._myUseTuneTarget) {\r\n                this._myEasyObject = PP.myEasyTuneTarget;\r\n            }\r\n\r\n            if (this._myPrevEasyObject != this._myEasyObject) {\r\n                this._myPrevEasyObject = this._myEasyObject;\r\n                if (this._myEasyObject) {\r\n                    let value = this._getObjectValue(this._myEasyObject);\r\n                    PP.myEasyTuneVariables.set(this._myEasyTuneVariableName, value, true);\r\n                } else {\r\n                    let value = this._getDefaultValue();\r\n                    PP.myEasyTuneVariables.set(this._myEasyTuneVariableName, value, true);\r\n                }\r\n            }\r\n\r\n            if (this._myEasyObject) {\r\n                this._updateObjectValue(this._myEasyObject, PP.myEasyTuneVariables.get(this._myEasyTuneVariableName));\r\n            }\r\n        }\r\n    }\r\n\r\n    updateVariableValue(value) {\r\n        PP.myEasyTuneVariables.set(this._myEasyTuneVariableName, value);\r\n    }\r\n};",
        "WL.registerComponent('pp-easy-tune', {\n    _myHandedness: { type: WL.Type.Enum, values: ['none', 'left', 'right'], default: 'none' },\n    _myShowOnStart: { type: WL.Type.Bool, default: false },\n    _myShowVisibilityButton: { type: WL.Type.Bool, default: true },\n    _myEnableAdditionalButtons: { type: WL.Type.Bool, default: false },\n    _myEnableChangeVariableShortcut: { type: WL.Type.Bool, default: true },\n    _myPlaneMaterial: { type: WL.Type.Material, default: null },\n    _myTextMaterial: { type: WL.Type.Material, default: null }\n}, {\n    init: function () {\n        //Examples\n        //Number: PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Speed\", 10.32, 0.01, 3));\n        //Int: PP.myEasyTuneVariables.add(new PP.EasyTuneInt(\"Lives\", 3, 1));\n        //Bool: PP.myEasyTuneVariables.add(new PP.EasyTuneBool(\"Run\", false));\n\n        PP.myEasyTuneVariables = new PP.EasyTuneVariables();\n\n        this._myWidget = new PP.EasyTuneWidget();\n        PP.setEasyTuneWidgetActiveVariable = function (variableName) {\n            this._myWidget.setActiveVariable(variableName);\n        }.bind(this);\n        PP.refreshEasyTuneWidget = function () {\n            this._myWidget.refresh();\n        }.bind(this);\n    },\n    start: function () {\n\n        let additionalSetup = {};\n        additionalSetup.myHandedness = [null, 'left', 'right'][this._myHandedness];\n        additionalSetup.myShowOnStart = this._myShowOnStart;\n        additionalSetup.myShowVisibilityButton = this._myShowVisibilityButton;\n        additionalSetup.myEnableAdditionalButtons = this._myEnableAdditionalButtons;\n        additionalSetup.myEnableChangeVariableShortcut = this._myEnableChangeVariableShortcut;\n        additionalSetup.myPlaneMaterial = this._myPlaneMaterial;\n        additionalSetup.myTextMaterial = this._myTextMaterial;\n\n        this._myWidget.start(this.object, additionalSetup, PP.myEasyTuneVariables._getInternalMap());\n    },\n    update: function (dt) {\n        this._myWidget.update(dt);\n    }\n});\n\nPP.myEasyTuneVariables = null;\n\nPP.myEasyTuneTarget = null;\n\nPP.setEasyTuneWidgetActiveVariable = function () {\n    console.log(\"setEasyTuneWidgetActiveVariable function not initialized yet\");\n};\n\nPP.refreshEasyTuneWidget = function () {\n    console.log(\"refreshEasyTuneWidget function not initialized yet\");\n};",
        "//Variable Map\nPP.EasyTuneVariables = class EasyTuneVariables {\n    constructor() {\n        this._myMap = new Map();\n    }\n\n    add(variable) {\n        this._myMap.set(variable.myName, variable);\n    }\n\n    remove(variableName) {\n        this._myMap.delete(variableName);\n    }\n\n    get(variableName) {\n        let variable = this._myMap.get(variableName);\n        if (variable) {\n            return variable.getValue();\n        }\n\n        return null;\n    }\n\n    set(variableName, value, resetInitialValue = false) {\n        let variable = this._myMap.get(variableName);\n        if (variable) {\n            variable.setValue(value, resetInitialValue);\n        }\n    }\n\n    isActive(variableName) {\n        let variable = this._myMap.get(variableName);\n        if (variable) {\n            return variable.myIsActive;\n        }\n\n        return false;\n    }\n\n    getEasyTuneVariable(variableName) {\n        return this._myMap.get(variableName);\n    }\n\n    _getInternalMap() {\n        return this._myMap;\n    }\n\n    registerValueChangedEventListener(variableName, callbackID, callback) {\n        this._myMap.get(variableName).registerValueChangedEventListener(callbackID, callback);\n    }\n\n    unregisterValueChangedEventListener(variableName, callbackID, callback) {\n        this._myMap.get(variableName).unregisterValueChangedEventListener(callbackID);\n    }\n};\n\n//Variable Types\nPP.EasyTuneVariableType = {\n    NONE: 0,\n    NUMBER: 1,\n    BOOL: 2,\n    EASY_TRANSFORM: 3\n};\n\nPP.EasyTuneVariable = class EasyTuneVariable {\n    constructor(name, type) {\n        this.myName = name.slice(0);\n        this.myType = type;\n\n        this.myValue = null;\n        this.myInitialValue = null;\n\n        this.myIsActive = false;\n\n        this._myValueChangedCallbacks = new Map();      // Signature: callback(name, value)\n    }\n\n    getValue() {\n        return this.myValue;\n    }\n\n    setValue(value, resetInitialValue = false) {\n        let oldValue = this.myValue;\n        this.myValue = value;\n\n        if (resetInitialValue) {\n            PP.EasyTuneVariable.prototype.setInitialValue.call(this, value);\n        }\n\n        PP.refreshEasyTuneWidget();\n\n        if (oldValue != value) {\n            this._triggerValueChangedCallback();\n        }\n    }\n\n    setInitialValue(value) {\n        this.myInitialValue = value;\n    }\n\n    registerValueChangedEventListener(id, callback) {\n        this._myValueChangedCallbacks.set(id, callback);\n    }\n\n    unregisterValueChangedEventListener(id) {\n        this._myValueChangedCallbacks.delete(id);\n    }\n\n    _triggerValueChangedCallback() {\n        if (this._myValueChangedCallbacks.size > 0) {\n            this._myValueChangedCallbacks.forEach(function (callback) { callback(this.myName, this.getValue()); }.bind(this));\n        }\n    }\n};\n\nPP.EasyTuneVariableArray = class EasyTuneVariableArray extends PP.EasyTuneVariable {\n    constructor(name, type, value) {\n        super(name, type);\n\n        PP.EasyTuneVariableArray.prototype.setValue.call(this, value, true);\n    }\n\n    getValue() {\n        return this.myValue.slice(0);\n    }\n\n    setValue(value, resetInitialValue = false) {\n        let oldValue = this.myValue;\n        this.myValue = value.slice(0);\n\n        if (resetInitialValue) {\n            PP.EasyTuneVariableArray.prototype.setInitialValue.call(this, value);\n        }\n\n        PP.refreshEasyTuneWidget();\n\n        if (oldValue == null || !oldValue.pp_equals(value)) {\n            this._triggerValueChangedCallback();\n        }\n    }\n\n    setInitialValue(value) {\n        this.myInitialValue = value.slice(0);\n    }\n};\n\n//NUMBER\n\nPP.EasyTuneNumberArray = class EasyTuneNumberArray extends PP.EasyTuneVariableArray {\n    constructor(name, value, stepPerSecond, decimalPlaces, min = null, max = null, editAllValuesTogether = false) {\n        super(name, PP.EasyTuneVariableType.NUMBER, value);\n\n        this.myDecimalPlaces = decimalPlaces;\n        this.myStepPerSecond = stepPerSecond;\n\n        this.myInitialStepPerSecond = this.myStepPerSecond;\n\n        this.myMin = min;\n        this.myMax = max;\n\n        this.myEditAllValuesTogether = editAllValuesTogether;\n\n        this._clampValue(true);\n    }\n\n    setMax(max) {\n        this.myMax = max;\n        this._clampValue(false);\n    }\n\n    setMin(min) {\n        this.myMin = min;\n        this._clampValue(false);\n    }\n\n    _clampValue(resetInitialValue) {\n        let clampedValue = this.myValue.vec_clamp(this.myMin, this.myMax);\n\n        if (!resetInitialValue) {\n            let clampedInitialValue = this.myInitialValue.vec_clamp(this.myMin, this.myMax);\n            let initialValueChanged = !clampedInitialValue.vec_equals(this.myInitialValue);\n            if (initialValueChanged) {\n                PP.EasyTuneVariableArray.prototype.setInitialValue.call(this, clampedInitialValue);\n            }\n        }\n\n        PP.EasyTuneVariableArray.prototype.setValue.call(this, clampedValue, resetInitialValue);\n    }\n};\n\nPP.EasyTuneNumber = class EasyTuneNumber extends PP.EasyTuneNumberArray {\n    constructor(name, value, stepPerSecond, decimalPlaces, min, max) {\n        super(name, [value], stepPerSecond, decimalPlaces, min, max);\n    }\n\n    getValue() {\n        return this.myValue[0];\n    }\n\n    setValue(value, resetInitialValue = false) {\n        super.setValue([value], resetInitialValue);\n    }\n\n    setInitialValue(value) {\n        super.setValue([value]);\n    }\n};\n\nPP.EasyTuneInt = class EasyTuneInt extends PP.EasyTuneNumber {\n    constructor(name, value, stepPerSecond, min, max) {\n        super(name, value, stepPerSecond, 0, min, max);\n    }\n};\n\nPP.EasyTuneIntArray = class EasyTuneIntArray extends PP.EasyTuneNumberArray {\n    constructor(name, value, stepPerSecond, min, max) {\n        let tempValue = value.slice(0);\n\n        for (let i = 0; i < value.length; i++) {\n            tempValue[i] = Math.round(tempValue[i]);\n        }\n\n        super(name, tempValue, stepPerSecond, 0, Math.round(min), Math.round(max));\n    }\n};\n\n//BOOL\n\nPP.EasyTuneBoolArray = class EasyTuneBoolArray extends PP.EasyTuneVariableArray {\n    constructor(name, value) {\n        super(name, PP.EasyTuneVariableType.BOOL, value);\n    }\n};\n\nPP.EasyTuneBool = class EasyTuneBool extends PP.EasyTuneBoolArray {\n    constructor(name, value) {\n        super(name, [value]);\n    }\n\n    getValue() {\n        return this.myValue[0];\n    }\n\n    setValue(value, resetInitialValue = false) {\n        super.setValue([value], resetInitialValue);\n    }\n\n    setInitialValue(value) {\n        super.setValue([value]);\n    }\n};\n\n//EASY TUNE EASY TRANSFORM\n\nPP.EasyTuneSimpleTransform = class EasyTuneSimpleTransform extends PP.EasyTuneVariable {\n    constructor(name, value, scaleAsOne = true, positionStepPerSecond = 1, rotationStepPerSecond = 50, scaleStepPerSecond = 1) {\n        super(name, PP.EasyTuneVariableType.EASY_TRANSFORM);\n\n        this.myDecimalPlaces = 3;\n\n        this.myPosition = value.mat4_getPosition();\n        this.myRotation = value.mat4_getRotationDegrees();\n        this.myScale = value.mat4_getScale();\n\n        let decimalPlacesMultiplier = Math.pow(10, this.myDecimalPlaces);\n        for (let i = 0; i < 3; i++) {\n            this.myScale[i] = Math.max(this.myScale[i], 1 / decimalPlacesMultiplier);\n        }\n\n        this.myScaleAsOne = scaleAsOne;\n\n        this.myPositionStepPerSecond = positionStepPerSecond;\n        this.myRotationStepPerSecond = rotationStepPerSecond;\n        this.myScaleStepPerSecond = scaleStepPerSecond;\n\n        this.myInitialPosition = this.myPosition.vec3_clone();\n        this.myInitialRotation = this.myRotation.vec3_clone();\n        this.myInitialScale = this.myScale.vec3_clone();\n\n        this.myInitialPositionStepPerSecond = this.myPositionStepPerSecond;\n        this.myInitialRotationStepPerSecond = this.myRotationStepPerSecond;\n        this.myInitialScaleStepPerSecond = this.myScaleStepPerSecond;\n\n        this.myTransform = mat4_create();\n        this.myTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\n\n        this.myTempTransform = mat4_create();\n    }\n\n    getValue() {\n        this.myTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\n        return this.myTransform.slice(0);\n    }\n\n    setValue(value, resetInitialValue = false) {\n        this.myTempTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\n\n        value.mat4_getPosition(this.myPosition);\n        value.mat4_getRotationDegrees(this.myRotation);\n        value.mat4_getScale(this.myScale);\n\n        this.myTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\n\n        if (resetInitialValue) {\n            PP.EasyTuneSimpleTransform.prototype.setInitialValue.call(this, value);\n        }\n\n        PP.refreshEasyTuneWidget();\n\n        if (!this.myTempTransform.pp_equals(this.myTransform)) {\n            this._triggerValueChangedCallback();\n        }\n    }\n\n    setInitialValue(value) {\n        this.myInitialPosition = value.mat4_getPosition();\n        this.myInitialRotation = value.mat4_getRotationDegrees();\n        this.myInitialScale = value.mat4_getScale();\n    }\n};",
        "PP.TimerState = class TimerState extends PP.State {\r\n    constructor(duration = 0, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        super();\r\n\r\n        this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n        this._myTransitionArgs = transitionArgs;\r\n\r\n        this._myTimer = new PP.Timer(duration, false);\r\n    }\r\n\r\n    setDuration(duration) {\r\n        this._myTimer.setDuration(duration);\r\n    }\r\n\r\n    setTransitionToPerformOnEnd(transitionToPerformOnEnd, ...transitionArgs) {\r\n        this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n        this._myTransitionArgs = transitionArgs;\r\n    }\r\n\r\n    onEnd(callback, id = null) {\r\n        this._myTimer.onEnd(callback, id);\r\n    }\r\n\r\n    unregisterOnEnd(id = null) {\r\n        this._myTimer.unregisterOnEnd(id);\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myTimer.update(dt);\r\n        if (this._myTimer.isDone()) {\r\n            if (this._myTransitionToPerformOnEnd != null) {\r\n                fsm.perform(this._myTransitionToPerformOnEnd, ...this._myTransitionArgs);\r\n            }\r\n        }\r\n    }\r\n\r\n    start(fsm, transition, duration = null, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        this._myTimer.start(duration);\r\n        if (transitionToPerformOnEnd != null) {\r\n            this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n            this._myTransitionArgs = transitionArgs;\r\n        }\r\n    }\r\n};",
        "class ArcadeResultState extends PP.State {\r\n    constructor(isDispute) {\r\n        super();\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"        Result\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"first_wait\", new PP.TimerState(1.5, \"end\"));\r\n        this._myFSM.addState(\"result\");\r\n        this._myFSM.addState(\"clean\", this._updateClean.bind(this));\r\n        this._myFSM.addState(\"second_wait\", new PP.TimerState(2, \"end\"));\r\n        this._myFSM.addState(\"done\");\r\n\r\n        this._myFSM.addTransition(\"init\", \"first_wait\", \"start\", this._prepareState.bind(this));\r\n        this._myFSM.addTransition(\"first_wait\", \"result\", \"end\", this._prepareResult.bind(this));\r\n        this._myFSM.addTransition(\"result\", \"clean\", \"end\", this._prepareClean.bind(this));\r\n        this._myFSM.addTransition(\"clean\", \"second_wait\", \"end\");\r\n        this._myFSM.addTransition(\"second_wait\", \"done\", \"end\", this._resultCompleted.bind(this));\r\n        this._myFSM.addTransition(\"done\", \"first_wait\", \"start\", this._prepareState.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"first_wait\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"second_wait\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"result\", \"done\", \"skip\", this._hideEvidences.bind(this));\r\n        this._myFSM.addTransition(\"clean\", \"done\", \"skip\", this._hideEvidences.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._myParentFSM = null;\r\n\r\n        let evidenceSetupList = [];\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.VENT_TIMER, 5, null, null, [CardinalPosition.NORTH], this._onTimerUnspawned.bind(this)));\r\n        this._myEvidenceManager = new EvidenceManager(evidenceSetupList);\r\n\r\n        this._myIsDispute = isDispute;\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myFSM.update(dt);\r\n        this._myEvidenceManager.update(dt);\r\n\r\n        if (Global.myDebugShortcutsEnabled) {\r\n            //TEMP REMOVE THIS\r\n            if (PP.myRightGamepad.getButtonInfo(PP.ButtonType.SELECT).isPressEnd(Global.myDebugShortcutsPress)) {\r\n                this._myFSM.perform(\"skip\");\r\n                this._resultCompleted();\r\n            }\r\n        }\r\n    }\r\n\r\n    _prepareState(fsm, transition) {\r\n    }\r\n\r\n    _prepareResult() {\r\n        this._myEvidenceManager.start();\r\n    }\r\n\r\n    _prepareClean() {\r\n        this._myEvidenceManager.clean();\r\n    }\r\n\r\n    _updateClean(dt, fsm) {\r\n        if (this._myEvidenceManager.isDone()) {\r\n            this._myFSM.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    _resultCompleted() {\r\n        this._myParentFSM.perform(\"end\");\r\n    }\r\n\r\n    _hideEvidences() {\r\n        this._myEvidenceManager.hide();\r\n    }\r\n\r\n    start(fsm, transition) {\r\n        this._myParentFSM = fsm;\r\n        this._myFSM.perform(\"start\");\r\n\r\n        if (this._myIsDispute) {\r\n            if (Global.myStatistics.myDisputeBestTime < 0 || Global.myVentDuration > Global.myStatistics.myDisputeBestTime) {\r\n                Global.myStatistics.myDisputeBestTime = Global.myVentDuration;\r\n            }\r\n\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"arcade_dispute_time\", {\r\n                    \"value\": Global.myVentDuration.toFixed(2)\r\n                });\r\n            }\r\n        } else {\r\n            if (Global.myStatistics.myChatBestTime < 0 || Global.myVentDuration > Global.myStatistics.myChatBestTime) {\r\n                Global.myStatistics.myChatBestTime = Global.myVentDuration;\r\n            }\r\n\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"arcade_chat_time\", {\r\n                    \"value\": Global.myVentDuration.toFixed(2)\r\n                });\r\n            }\r\n        }\r\n\r\n        let leaderboardID = \"enough-is-enough\";\r\n        if (this._myIsDispute) {\r\n            leaderboardID = leaderboardID.concat(\"-dispute\");\r\n        } else {\r\n            leaderboardID = leaderboardID.concat(\"-chat\");\r\n        }\r\n\r\n        let score = Math.floor(Global.myVentDuration * 1000);\r\n\r\n        PP.CAUtils.submitScore(leaderboardID, score);\r\n\r\n        Global.myIsInArcadeResult = true;\r\n    }\r\n\r\n    end(fsm, transitionID) {\r\n        if (!this._myFSM.isInState(\"done\")) {\r\n            this._myFSM.perform(\"skip\");\r\n        }\r\n\r\n        Global.myIsInArcadeResult = false;\r\n    }\r\n\r\n    _onTimerUnspawned(evidence) {\r\n        if (PP.XRUtils.isXRSessionActive() && evidence.hasBeenThrown()) {\r\n            this._myFSM.perform(\"end\");\r\n        }\r\n    }\r\n}",
        "class BlatherState extends PP.State {\r\n    constructor(sentences, isDefeat) {\r\n        super();\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"        Blather\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"first_wait\", new PP.TimerState(1.5, \"end\"));\r\n        //this._myFSM.addState(\"first_wait\", new PP.TimerState(5, \"end\")); // for trailer, emulator distance [0, 1.65, 1.7], speaker monitor volume 0.5\r\n        this._myFSM.addState(\"mr_not_appear\", this._updateMrNOTAppear.bind(this));\r\n        this._myFSM.addState(\"blather\", this._updateBlather.bind(this));\r\n        this._myFSM.addState(\"mr_not_disappear\", this._updateMrNOTDisappear.bind(this));\r\n        this._myFSM.addState(\"second_wait\", new PP.TimerState(0, \"end\"));\r\n        //this._myFSM.addState(\"second_wait\", new PP.TimerState(5, \"end\")); // for trailer\r\n        this._myFSM.addState(\"done\");\r\n\r\n        if (isDefeat) {\r\n            this._myFSM.addTransition(\"init\", \"first_wait\", \"start\", this._prepareState.bind(this));\r\n            this._myFSM.addTransition(\"first_wait\", \"blather\", \"end\", this._prepareBlather.bind(this));\r\n            this._myFSM.addTransition(\"blather\", \"second_wait\", \"end\");\r\n            this._myFSM.addTransition(\"second_wait\", \"done\", \"end\", this._startFight.bind(this));\r\n            this._myFSM.addTransition(\"done\", \"first_wait\", \"start\", this._prepareState.bind(this));\r\n        } else {\r\n            this._myFSM.addTransition(\"init\", \"first_wait\", \"start\", this._prepareState.bind(this));\r\n            this._myFSM.addTransition(\"first_wait\", \"mr_not_appear\", \"end\", this._prepareMrNOTAppear.bind(this));\r\n            this._myFSM.addTransition(\"mr_not_appear\", \"blather\", \"end\", this._prepareBlather.bind(this));\r\n            this._myFSM.addTransition(\"blather\", \"mr_not_disappear\", \"end\", this._prepareMrNOTDisappear.bind(this));\r\n            this._myFSM.addTransition(\"mr_not_disappear\", \"second_wait\", \"end\");\r\n            this._myFSM.addTransition(\"second_wait\", \"done\", \"end\", this._startFight.bind(this));\r\n            this._myFSM.addTransition(\"done\", \"first_wait\", \"start\", this._prepareState.bind(this));\r\n        }\r\n\r\n        this._myFSM.addTransition(\"init\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"first_wait\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"mr_not_appear\", \"done\", \"skip\", this._hideMrNOT.bind(this));\r\n        this._myFSM.addTransition(\"blather\", \"done\", \"skip\", this._hideBlather.bind(this));\r\n        this._myFSM.addTransition(\"mr_not_disappear\", \"done\", \"skip\", this._hideMrNOT.bind(this));\r\n        this._myFSM.addTransition(\"second_wait\", \"done\", \"skip\");\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._myParentFSM = null;\r\n\r\n        this._myTimer = new PP.Timer(1);\r\n\r\n        this._myBlather = new Blather(sentences, isDefeat);\r\n\r\n        this._myMrNOTAppearAudio = Global.myAudioManager.createAudioPlayer(SfxID.MR_NOT_APPEAR);\r\n        this._myMrNOTDisappearAudio = Global.myAudioManager.createAudioPlayer(SfxID.MR_NOT_DISAPPEAR);\r\n\r\n        //Setup\r\n        this._myFogAlphaMax = 0.7;\r\n        this._myFogAlphaMin = 0;\r\n        this._mySpawnTime = 3;\r\n        this._myUnspawnTime = 3.5;\r\n        this._myHideScale = 0.9;\r\n\r\n        this._myMrNOT = Global.myGameObjects.get(GameObjectType.MR_NOT);\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myFSM.update(dt);\r\n\r\n        if (Global.myDebugShortcutsEnabled) {\r\n            //TEMP REMOVE THIS\r\n            if (PP.myRightGamepad.getButtonInfo(PP.ButtonType.SELECT).isPressEnd(Global.myDebugShortcutsPress)) {\r\n                this._myFSM.perform(\"skip\");\r\n                this._startFight();\r\n            }\r\n        }\r\n    }\r\n\r\n    _prepareState(fsm, transition) {\r\n        transition.myToState.myObject.start(fsm, transition);\r\n    }\r\n\r\n    _prepareMrNOTAppear() {\r\n        this._myMrNOT.pp_setPosition([0, 11, -18]);\r\n        this._myMrNOT.pp_setRotation([40, 0, 0]);\r\n        //this._myMrNOT.pp_setRotation([30, 0, 0]);\r\n        this._myMrNOT.pp_setScale([5, 5, 5]);\r\n        PP.MeshUtils.setFogColor(this._myMrNOT, [0, 0, 0, this._myFogAlphaMax]);\r\n\r\n        Global.myLightFadeInTime = this._mySpawnTime * 2 / 3;\r\n\r\n        this._myTimer.start(this._mySpawnTime);\r\n\r\n        this._myMrNOT.pp_setActive(true);\r\n\r\n        this._myMrNOTAppearAudio.setPosition(this._myMrNOT.pp_getPosition());\r\n        this._myMrNOTDisappearAudio.setPosition(this._myMrNOT.pp_getPosition());\r\n        this._myMrNOTAppearAudio.play();\r\n    }\r\n\r\n    _updateMrNOTAppear(dt, fsm) {\r\n        if (this._myTimer.isRunning()) {\r\n            this._myTimer.update(dt);\r\n            let easing = t => t * (2 - t);\r\n            PP.MeshUtils.setFogColor(this._myMrNOT, [0, 0, 0, Math.pp_mapToRange(easing(this._myTimer.getPercentage()), 0, 1, this._myFogAlphaMax, this._myFogAlphaMin)]);\r\n            let currentScaleFactor = Math.pp_interpolate(this._myHideScale, 1, this._myTimer.getPercentage(), PP.EasingFunction.easeOut);\r\n\r\n            this._myMrNOT.pp_setScale([5, 5, 5]);\r\n            this._myMrNOT.pp_scaleObject([currentScaleFactor, currentScaleFactor, 1]);\r\n\r\n            if (this._myTimer.isDone()) {\r\n                this._myTimer.reset();\r\n                fsm.perform(\"end\");\r\n            }\r\n        }\r\n    }\r\n\r\n    _prepareBlather() {\r\n        this._myBlather.start();\r\n    }\r\n\r\n    _updateBlather(dt, fsm) {\r\n        this._myBlather.update(dt);\r\n        if (this._myBlather.isDone()) {\r\n            fsm.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    _prepareMrNOTDisappear() {\r\n        this._myTimer.start(this._myUnspawnTime);\r\n        Global.myLightFadeInTime = this._myUnspawnTime;\r\n        Global.myStartFadeOut = true;\r\n        this._myMrNOTDisappearAudio.play();\r\n    }\r\n\r\n    _updateMrNOTDisappear(dt, fsm) {\r\n        if (this._myTimer.isRunning()) {\r\n            this._myTimer.update(dt);\r\n            let easing = t => t * t;\r\n            PP.MeshUtils.setFogColor(this._myMrNOT, [0, 0, 0, Math.pp_mapToRange(this._myTimer.getPercentage(), 0.05, 0.8, this._myFogAlphaMin, this._myFogAlphaMax)]);\r\n            let currentScaleFactor = Math.pp_interpolate(1, this._myHideScale, this._myTimer.getPercentage(), easing);\r\n\r\n            this._myMrNOT.pp_setScale([5, 5, 5]);\r\n            this._myMrNOT.pp_scaleObject([currentScaleFactor, currentScaleFactor, 1]);\r\n\r\n            if (this._myTimer.isDone()) {\r\n                this._myTimer.reset();\r\n                this._hideMrNOT();\r\n                fsm.perform(\"end\");\r\n            }\r\n        }\r\n    }\r\n\r\n    _startFight() {\r\n        Global.myStartFadeOut = false;\r\n        this._myParentFSM.perform(\"end\");\r\n    }\r\n\r\n    _hideMrNOT() {\r\n        this._myMrNOT.pp_setActive(false);\r\n        Global.myStartFadeOut = false;\r\n    }\r\n\r\n    _hideBlather() {\r\n        this._hideMrNOT();\r\n        this._myBlather.skip();\r\n    }\r\n\r\n    start(fsm, transition) {\r\n        this._myParentFSM = fsm;\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    end(fsm, transitionID) {\r\n        if (!this._myFSM.isInState(\"done\")) {\r\n            this._myFSM.perform(\"skip\");\r\n        }\r\n    }\r\n}\r\n\r\nclass Blather {\r\n    constructor(sentences, isDefeat) {\r\n        this._myBlatherTextObject = WL.scene.addObject(Global.myScene);\r\n        this._myBlatherTextComponent = this._myBlatherTextObject.pp_addComponent(\"text\");\r\n        this._myBlatherTextComponent.text = \" \";\r\n        this._myBlatherTextComponent.text = \"\";\r\n        this._myBlatherTextComponent.alignment = WL.Alignment.Left;\r\n        this._myBlatherTextComponent.justification = WL.Justification.Line;\r\n        this._myBlatherTextComponent.material = Global.myMaterials.myText.clone();\r\n        //this._myBlatherTextComponent.material.outlineRange = [0.5, 0.5];\r\n        //this._myBlatherTextComponent.material.color = Global.myMaterials.myBigText.color;\r\n        //this._myBlatherTextObject.pp_addComponent(\"pp-easy-text-color\", { \"_myVariableName\": \"ciao\", \"_myColorType\": 0, \"_myColorModel\": 1 });\r\n\r\n\r\n        //this._myBlatherTextComponent.material.color = [90 / 255, 90 / 255, 100 / 255, 1];\r\n        //this._myBlatherTextComponent.material.outlineColor = [90 / 255, 90 / 255, 100 / 255, 1];\r\n        this._myBlatherTextObject.pp_setActive(false);\r\n\r\n        this._myBigBlatherTextObject = WL.scene.addObject(Global.myScene);\r\n        this._myBigBlatherTextComponent = this._myBigBlatherTextObject.pp_addComponent(\"text\");\r\n        this._myBigBlatherTextComponent.text = \" \";\r\n        this._myBigBlatherTextComponent.text = \"\";\r\n        this._myBigBlatherTextComponent.alignment = WL.Alignment.Left;\r\n        this._myBigBlatherTextComponent.justification = WL.Justification.Line;\r\n        this._myBigBlatherTextComponent.material = Global.myMaterials.myTitle.clone();\r\n        //this._myBigBlatherTextComponent.material.outlineRange = [0.5, 0.375];\r\n        //this._myBigBlatherTextComponent.material.outlineColor = this._myBigBlatherTextComponent.material.color;\r\n        //this._myBigBlatherTextComponent.material.color = [0, 0, 0, 0];\r\n        //this._myBigBlatherTextObject.pp_addComponent(\"pp-easy-text-color\", { \"_myVariableName\": \"ciao2\", \"_myColorType\": 0, \"_myColorModel\": 1 });\r\n        //this._myBigBlatherTextComponent.material.color = [90 / 255, 90 / 255, 100 / 255, 1];\r\n        //this._myBigBlatherTextComponent.material.outlineColor = [90 / 255, 90 / 255, 100 / 255, 1];\r\n\r\n        this._myBigBlatherTextObject.pp_setPosition([0, 4, -10.5]);\r\n        this._myBigBlatherTextObject.pp_setRotation([20, 0, 0]);\r\n        this._myBigBlatherTextObject.pp_setScale(19);\r\n\r\n        this._myBigBlatherPatchObject = Global.myBigBlatherPatchObject.pp_clone();\r\n        this._myBigBlatherPatchObject.pp_resetTransform();\r\n        this._myBigBlatherPatchObject.pp_setParent(this._myBigBlatherTextObject, false);\r\n        this._myBigBlatherPatchObject.pp_setScale(1);\r\n        this._myBigBlatherTextObject.pp_setActive(false);\r\n        this._myBigBlatherPatchObject.pp_setActive(false);\r\n\r\n        this._mySentences = sentences;\r\n\r\n        this._myTimerState = new PP.TimerState(1, \"end\");\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"            Blather\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"first_wait\", new PP.TimerState(isDefeat ? 1 : 1.25, \"end\"));\r\n        this._myFSM.addState(\"blather\", this._updateBlather.bind(this));\r\n        this._myFSM.addState(\"wait\", this._myTimerState);\r\n        this._myFSM.addState(\"second_wait\", this._myTimerState);\r\n        this._myFSM.addState(\"done\");\r\n\r\n        this._myFSM.addTransition(\"init\", \"first_wait\", \"start\", this._prepareState.bind(this));\r\n        this._myFSM.addTransition(\"first_wait\", \"blather\", \"end\", this._nextBlather.bind(this, true));\r\n        this._myFSM.addTransition(\"blather\", \"wait\", \"next\");\r\n        this._myFSM.addTransition(\"wait\", \"blather\", \"end\", this._nextBlather.bind(this, false));\r\n        this._myFSM.addTransition(\"blather\", \"second_wait\", \"end\");\r\n        this._myFSM.addTransition(\"second_wait\", \"done\", \"end\", this._done.bind(this));\r\n        this._myFSM.addTransition(\"done\", \"first_wait\", \"start\", this._prepareState.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"done\", \"skip\", this._done.bind(this));\r\n        this._myFSM.addTransition(\"first_wait\", \"done\", \"skip\", this._done.bind(this));\r\n        this._myFSM.addTransition(\"blather\", \"done\", \"skip\", this._done.bind(this));\r\n        this._myFSM.addTransition(\"wait\", \"done\", \"skip\", this._done.bind(this));\r\n        this._myFSM.addTransition(\"blather\", \"done\", \"skip\", this._done.bind(this));\r\n        this._myFSM.addTransition(\"second_wait\", \"done\", \"skip\", this._done.bind(this));\r\n\r\n        this._myIsDone = false;\r\n        this._myCurrentSenteceIndex = 0;\r\n        this._myCurrentCharacterIndex = 0;\r\n\r\n        this._myCharacterTimer = new PP.Timer(0.1);\r\n        this._myNextTimer = new PP.Timer(0.1);\r\n\r\n        this._myCharAudios = [];\r\n        this._myCharAudios[0] = Global.myAudioManager.createAudioPlayer(SfxID.BLATHER_1);\r\n        this._myCharAudios[1] = Global.myAudioManager.createAudioPlayer(SfxID.BLATHER_0);\r\n\r\n        this._myFSM.init(\"init\");\r\n    }\r\n\r\n    start() {\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    skip(dt) {\r\n        this._myFSM.perform(\"skip\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    isDone() {\r\n        return this._myIsDone;\r\n    }\r\n\r\n    _prepareState() {\r\n        this._myIsDone = false;\r\n        this._myCurrentSenteceIndex = -1;\r\n        this._myBlatherTextObject.pp_setActive(true);\r\n        this._myBigBlatherTextObject.pp_setActive(true);\r\n        this._myBigBlatherPatchObject.pp_setActive(false);\r\n    }\r\n\r\n    _nextBlather(speedStart) {\r\n        this._myIsDone = false;\r\n        this._myCurrentSenteceIndex++;\r\n        this._myCurrentCharacterIndex = 0;\r\n\r\n        if (this._mySentences[this._myCurrentSenteceIndex].myIsBigBlather) {\r\n            this._setBigBlatherPosition();\r\n            this._myBigBlatherPatchObject.pp_setActive(true);\r\n        } else {\r\n            this._setBlatherPosition();\r\n            this._myBigBlatherPatchObject.pp_setActive(false);\r\n        }\r\n\r\n        this._myCharacterTimer.start(speedStart ? 0 : 0.13);\r\n        this._myNextTimer.reset(1);\r\n    }\r\n\r\n    _updateBlather(dt, fsm) {\r\n        let sentence = this._mySentences[this._myCurrentSenteceIndex];\r\n\r\n        let textComponent = this._myBlatherTextComponent;\r\n        if (sentence.myIsBigBlather) {\r\n            textComponent = this._myBigBlatherTextComponent;\r\n        }\r\n\r\n        if (!this._myNextTimer.isRunning()) {\r\n            this._myCharacterTimer.update(dt);\r\n\r\n            if (this._myCurrentCharacterIndex != sentence.mySentence.length && this._myCharacterTimer.isDone()) {\r\n                let character = sentence.mySentence[this._myCurrentCharacterIndex];\r\n                textComponent.text = textComponent.text.concat(character);\r\n\r\n                if (character != ' ') {\r\n                    let player = this._myCharAudios[this._myCurrentCharacterIndex % 2];\r\n                    player.play();\r\n                }\r\n\r\n                if (sentence.myIsBigBlather) {\r\n                    this._myCharacterTimer.start(0.5);\r\n                } else {\r\n                    if (this._myCurrentCharacterIndex + 1 < sentence.mySentence.length &&\r\n                        (sentence.mySentence[this._myCurrentCharacterIndex + 1] == '.') ||\r\n                        (sentence.mySentence.includes(\"KNOW\") && this._myCurrentCharacterIndex > 2) ||\r\n                        (sentence.mySentence.includes(\"Why don't you THROW me what you have learned so far?\") && this._myCurrentCharacterIndex > 12 && this._myCurrentCharacterIndex < 20)) {\r\n                        this._myCharacterTimer.start(0.3);\r\n                    } else {\r\n                        this._myCharacterTimer.start(0.13);\r\n                    }\r\n                }\r\n\r\n                this._myCurrentCharacterIndex++;\r\n            }\r\n\r\n            if (this._myCurrentCharacterIndex == sentence.mySentence.length) {\r\n                this._myNextTimer.start(sentence.myTimeToWaitBeforeDisappearing);\r\n            }\r\n        } else {\r\n            this._myNextTimer.update(dt);\r\n            if (this._myNextTimer.isDone()) {\r\n                this._myTimerState.setDuration(sentence.myTimeToWaitAfterDisappearing);\r\n                if (this._myCurrentSenteceIndex < this._mySentences.length - 1) {\r\n                    textComponent.text = \"\";\r\n                    this._myBigBlatherPatchObject.pp_setActive(false);\r\n                    fsm.perform(\"next\");\r\n                } else {\r\n                    textComponent.text = \"\";\r\n                    this._myBigBlatherPatchObject.pp_setActive(false);\r\n                    fsm.perform(\"end\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _done() {\r\n        this._myBlatherTextComponent.text = \"\";\r\n        this._myBigBlatherTextComponent.text = \"\";\r\n        this._myBlatherTextObject.pp_setActive(false);\r\n        this._myBigBlatherTextObject.pp_setActive(false);\r\n        this._myBigBlatherPatchObject.pp_setActive(false);\r\n        this._myIsDone = true;\r\n    }\r\n\r\n    _setBlatherPosition() {\r\n        this._myBlatherTextObject.pp_setPosition([0, 2.074, -9]);\r\n        this._myBlatherTextObject.pp_setRotation([0, 0, 0]);\r\n        this._myBlatherTextObject.pp_setScale([3.5, 3.5, 3.5]);\r\n        //this._myBlatherTextObject.pp_setScale([5, 5, 5]); // for trailer\r\n\r\n        this._myCharAudios[0].setPosition(this._myBlatherTextObject.pp_getPosition());\r\n        this._myCharAudios[1].setPosition(this._myBlatherTextObject.pp_getPosition());\r\n\r\n        let multiplier = 1;\r\n        //multiplier = 5 / 3.5; // for trailer\r\n        let sentenceLength = this._mySentences[this._myCurrentSenteceIndex].mySentence.length;\r\n        let displacement = sentenceLength * 0.094 * multiplier;\r\n        if (this._mySentences[this._myCurrentSenteceIndex].mySentence.includes(\"enough IS enough\")) {\r\n            displacement = sentenceLength * 0.096 * multiplier;\r\n        } else if (this._mySentences[this._myCurrentSenteceIndex].mySentence.includes(\"it will always be...\")) {\r\n            displacement = sentenceLength * 0.09 * multiplier;\r\n        } else if (this._mySentences[this._myCurrentSenteceIndex].mySentence.includes(\"...\")) {\r\n            displacement = (sentenceLength - 1.5) * 0.094 * multiplier;\r\n        }\r\n        this._myBlatherTextObject.translateObject([-displacement, 0, 0]);\r\n    }\r\n\r\n    _setBigBlatherPosition() {\r\n        this._myBigBlatherTextObject.pp_setPosition([0, 4, -10.5]);\r\n        this._myBigBlatherTextObject.pp_setRotation([20, 0, 0]);\r\n        this._myBigBlatherTextObject.pp_setScale(19);\r\n\r\n        this._myCharAudios[0].setPosition(this._myBigBlatherTextObject.pp_getPosition());\r\n        this._myCharAudios[1].setPosition(this._myBigBlatherTextObject.pp_getPosition());\r\n\r\n        let sentenceLength = this._mySentences[this._myCurrentSenteceIndex].mySentence.length;\r\n        let displacement = sentenceLength * 0.6;\r\n        this._myBigBlatherTextObject.translateObject([-displacement, 0, 0]);\r\n\r\n        this._myBigBlatherPatchObject.pp_setPositionLocal([0, 0, 0]);\r\n        this._myBigBlatherPatchObject.pp_translateLocal([displacement / 19, 0, 0]);\r\n    }\r\n}\r\n\r\nclass Sentence {\r\n    constructor(sentence, timeToWaitBeforeDisappearing = 1.75, timeToWaitAfterDisappearing = 1.5, isBigBlather = false) {\r\n        this.mySentence = sentence;\r\n        this.myTimeToWaitBeforeDisappearing = timeToWaitBeforeDisappearing;\r\n        this.myTimeToWaitAfterDisappearing = timeToWaitAfterDisappearing;\r\n        this.myIsBigBlather = isBigBlather;\r\n    }\r\n}",
        "class EvidenceSetup {\r\n    constructor(objectType, randomChance, startSpawnTime = null, endSpawnTime = null, cardinalPositions = null, callbackOnUnspawned = null) {\r\n        this.myObjectType = objectType;\r\n        this.myRandomChance = randomChance;\r\n        this.myStartSpawnTime = startSpawnTime;\r\n        this.myEndSpawnTime = endSpawnTime;\r\n        this.myCardinalPositions = cardinalPositions;\r\n        this.myCallbackOnUnspawned = callbackOnUnspawned;\r\n    }\r\n}\r\n\r\nclass Evidence {\r\n    constructor(evidenceSetup, callbackOnUnspawned) {\r\n        this._myEvidenceSetup = evidenceSetup;\r\n        this._myCallbackOnUnspawned = callbackOnUnspawned;\r\n\r\n        this._myObject = Global.myGameObjects.get(this._myEvidenceSetup.myObjectType);\r\n        this._myObjectType = this._myEvidenceSetup.myObjectType;\r\n        this._myPhysx = this._myObject.pp_getComponentHierarchy(\"physx\");\r\n        this._myGrabbable = this._myObject.pp_getComponentHierarchy(\"pp-grabbable\");\r\n        this._myScale = this._myObject.pp_getScale();\r\n\r\n        this._myCurrentCardinalPosition = null;\r\n        this._myPosition = null;\r\n        this._myFacing = null;\r\n\r\n        this._myTimer = new PP.Timer(0);\r\n        this._mySpawnTimer = new PP.Timer(0);\r\n        this._myThrowTimer = new PP.Timer(5, false);\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"                Evidence Item\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"inactive\");\r\n        this._myFSM.addState(\"spawning\", this._spawning.bind(this));\r\n        this._myFSM.addState(\"ready\", this._readyUpdate.bind(this));\r\n        this._myFSM.addState(\"unspawning\", this._unspawning.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"inactive\", \"reset\", this._reset.bind(this));\r\n        this._myFSM.addTransition(\"inactive\", \"spawning\", \"spawn\", this._startSpawn.bind(this));\r\n        this._myFSM.addTransition(\"spawning\", \"ready\", \"end\", this._startReady.bind(this));\r\n        this._myFSM.addTransition(\"spawning\", \"unspawning\", \"unspawn\", this._startUnspawn.bind(this));\r\n        this._myFSM.addTransition(\"ready\", \"unspawning\", \"unspawn\", this._startUnspawn.bind(this));\r\n        this._myFSM.addTransition(\"unspawning\", \"inactive\", \"end\", this._startInactive.bind(this));\r\n        this._myFSM.addTransition(\"inactive\", \"inactive\", \"reset\", this._reset.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this.init();\r\n\r\n        this._myCollisionCount = 0;\r\n        this._myHasBeenThrown = false;\r\n\r\n        this._myParticlesRadius = 0.225;\r\n\r\n        this._myAudioTimer = new PP.Timer(0);\r\n        this._myAppearAudio = null;\r\n        this._myDisappearAudio = null;\r\n\r\n        this._myCollisionCallbackID = null;\r\n    }\r\n\r\n    getEvidenceSetup() {\r\n        return this._myEvidenceSetup;\r\n    }\r\n\r\n    init() {\r\n        this._myFSM.perform(\"reset\");\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myHasBeenThrown) {\r\n            this._myThrowTimer.update(dt);\r\n            if (this._myThrowTimer.isDone()) {\r\n                this._myHasBeenThrown = false;\r\n            }\r\n        }\r\n\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    spawn(position) {\r\n        this._myPosition = position.slice(0);\r\n        this._myFacing = [0, 0, 0].vec3_sub(position).vec3_removeComponentAlongAxis([0, 1, 0]);\r\n        this._myFSM.perform(\"spawn\");\r\n    }\r\n\r\n    unspawn(avoidParticles = false) {\r\n        this._myAvoidParticles = avoidParticles;\r\n        this._myFSM.perform(\"unspawn\");\r\n    }\r\n\r\n    canUnspawn() {\r\n        return this._myFSM.canPerform(\"unspawn\");\r\n    }\r\n\r\n    isInactive() {\r\n        return this._myFSM.isInState(\"inactive\");\r\n    }\r\n\r\n    hide() {\r\n        this._myFSM.init(\"inactive\");\r\n        this._disableObject();\r\n    }\r\n\r\n    canHit() {\r\n        let distanceFromCenter = this._myObject.pp_getPosition().vec3_removeComponentAlongAxis([0, 1, 0]).vec3_length();\r\n        let isHitState = this._myFSM.isInState(\"spawning\") || this._myFSM.isInState(\"ready\");\r\n        return isHitState && /*this._myHasBeenThrown &&*/ WL.xrSession && /*!this._myGrabbable.isGrabbed() &&*/ distanceFromCenter > Global.myRingRadius * 1.5/*(this._myGrabbable.isGrabbed() || this._myCollisionCount == 0)*/;\r\n    }\r\n\r\n    hasBeenThrown() {\r\n        return this._myHasBeenThrown;\r\n    }\r\n\r\n    _reset(fsm, transition) {\r\n        this._disableObject();\r\n    }\r\n\r\n    _startSpawn() {\r\n        if (this._myAppearAudio == null) {\r\n            this._myAppearAudio = Global.myAudioManager.createAudioPlayer(SfxID.EVIDENCE_APPEAR);\r\n            this._myDisappearAudio = Global.myAudioManager.createAudioPlayer(SfxID.EVIDENCE_DISAPPEAR);\r\n        }\r\n\r\n        this._myEvidenceComponent = this._myObject.pp_getComponentHierarchy(\"evidence-component\");\r\n        this._myEvidenceComponent.setCallbackOnHit(this._onHit.bind(this));\r\n        this._myEvidenceComponent.setCallbackOnBigHit(this._onBigHit.bind(this));\r\n        this._myEvidenceComponent.setEvidence(this);\r\n        this._myHasBeenThrown = false;\r\n        this._myThrowTimer.reset();\r\n\r\n        let position = this._myPosition.pp_clone();\r\n        let heightDisplacement = this._myEvidenceComponent.getHeightDisplacement();\r\n        if (Math.abs(heightDisplacement) > 0.0001) {\r\n            position.vec3_add([0, heightDisplacement, 0], position);\r\n        }\r\n\r\n        this._myObject.pp_setPosition(position);\r\n        this._myObject.pp_setScale(0);\r\n        this._myObject.pp_translate([0, 0.2, 0]);\r\n        this._myObject.pp_lookTo(this._myFacing, [0, 1, 0]);\r\n        this._myObject.pp_setActive(true);\r\n\r\n        this._myPhysx.kinematic = true;\r\n        this._myPhysx.linearVelocity = [0, 0, 0];\r\n        this._myPhysx.angularVelocity = [0, 0, 0];\r\n\r\n        this._mySpawnTimer.start(1);\r\n        this._myHitExplosion = false;\r\n        this._myBigHitExplosion = false;\r\n        this._myHitFloor = false;\r\n        this._myAvoidParticles = false;\r\n\r\n        this._myAudioTimer.start(0.2);\r\n        this._myAppearAudio.setPosition(position);\r\n        this._myAppearAudio.setPitch(Math.pp_random(0.85, 1.05));\r\n\r\n        this._myGrabbable.registerThrowEventListener(this, this._onThrow.bind(this));\r\n        this._myCollisionCallbackID = this._myPhysx.onCollision(this._onCollision.bind(this));\r\n    }\r\n\r\n    _spawning(dt) {\r\n        if (this._myAudioTimer.isRunning()) {\r\n            this._myAudioTimer.update(dt);\r\n            if (this._myAudioTimer.isDone()) {\r\n                this._myAppearAudio.play();\r\n            }\r\n        }\r\n\r\n        this._mySpawnTimer.update(dt);\r\n\r\n        let scaleMultiplier = PP.EasingFunction.easeInOut(this._mySpawnTimer.getPercentage());\r\n        this._myObject.pp_setScale(this._myScale.vec3_scale(scaleMultiplier));\r\n\r\n        this._myAppearAudio.updatePosition(this._myObject.pp_getPosition());\r\n\r\n        if (this._mySpawnTimer.isDone()) {\r\n            this._myFSM.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    _startReady() {\r\n        this._myObject.pp_setScale(this._myScale);\r\n        if (!this._myGrabbable.isGrabbed()) {\r\n            this._myPhysx.kinematic = false;\r\n        }\r\n    }\r\n\r\n    _readyUpdate(dt) {\r\n        if (this._myObject.pp_getPosition()[1] <= -10 || this._myObject.pp_getPosition()[1] > 20 || this._myObject.pp_getPosition().vec3_length() > 50) {\r\n            this._myHitFloor = true;\r\n            this._myFSM.perform(\"unspawn\");\r\n        }\r\n    }\r\n\r\n    _startUnspawn() {\r\n        if ((this._myHitFloor || this._myHitExplosion || this._myBigHitExplosion) && !Global.myIsInArcadeResult) {\r\n            Global.myStatistics.myEvidencesThrown += 1;\r\n            if ((this._myHitExplosion || this._myBigHitExplosion) && this._myGrabbable.isGrabbed()) {\r\n                Global.myStatistics.myEvidencesPunched += 1;\r\n            }\r\n\r\n            if (this._myHitFloor) {\r\n                Global.myStatistics.myEvidencesMissed += 1;\r\n            }\r\n\r\n        }\r\n\r\n        if (this._myBigHitExplosion) {\r\n            this._myPhysx.kinematic = true;\r\n        }\r\n\r\n        this._mySetKinematicTimer = this._myHitExplosion;\r\n\r\n        this._myTimer.start(PP.myEasyTuneVariables.get(\"Unspawn Menu Time\"));\r\n\r\n        if (!this._myHitExplosion && !this._myBigHitExplosion) {\r\n            this._myDisappearAudio.setPosition(this._myObject.pp_getPosition());\r\n            this._myDisappearAudio.setPitch(Math.pp_random(0.85, 1.05));\r\n            this._myDisappearAudio.play();\r\n        }\r\n    }\r\n\r\n    _unspawning(dt) {\r\n        this._myTimer.update(dt);\r\n\r\n        if (this._mySetKinematicTimer && this._myTimer.getPercentage() >= 0.7) {\r\n            this._myPhysx.kinematic = true;\r\n            this._mySetKinematicTimer = false;\r\n        }\r\n\r\n        let scaleMultiplier = Math.pp_interpolate(1, PP.myEasyTuneVariables.get(\"Unspawn Menu Scale\"), this._myTimer.getPercentage());\r\n        this._myObject.pp_setScale(this._myScale.vec3_scale(scaleMultiplier));\r\n\r\n        if (this._myTimer.isDone()) {\r\n            let scaleMultiplier = 1;\r\n            let radiusMultiplier = 1;\r\n            if (this._myHitExplosion) {\r\n                scaleMultiplier = 3;\r\n                radiusMultiplier = 1.5;\r\n            } else if (this._myBigHitExplosion) {\r\n                scaleMultiplier = 3;\r\n                radiusMultiplier = 2;\r\n            }\r\n\r\n            if (!this._myAvoidParticles) {\r\n                Global.myParticlesManager.explosion(this._myObject.pp_getPosition(), this._myParticlesRadius * radiusMultiplier, this._myScale.vec3_scale(scaleMultiplier), this._myObjectType);\r\n            }\r\n            this._myFSM.perform(\"end\");\r\n            this._myCallbackOnUnspawned(this);\r\n            if (this._myEvidenceSetup.myCallbackOnUnspawned) {\r\n                this._myEvidenceSetup.myCallbackOnUnspawned(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    _startInactive() {\r\n        this._disableObject();\r\n    }\r\n\r\n    _disableObject() {\r\n        if (this._myPhysx.active) {\r\n            this._myPhysx.linearVelocity = [0, 0, 0];\r\n            this._myPhysx.angularVelocity = [0, 0, 0];\r\n            this._myObject.pp_setPosition([0, -10, 0]);\r\n        }\r\n        this._myObject.pp_setActive(false);\r\n        this._myGrabbable.unregisterThrowEventListener(this);\r\n        if (this._myCollisionCallbackID != null) {\r\n            this._myPhysx.removeCollisionCallback(this._myCollisionCallbackID);\r\n            this._myCollisionCallbackID = null;\r\n        }\r\n    }\r\n\r\n    _onCollision(type) {\r\n        if (!this._myGrabbable.isGrabbed() && this._myPhysx.active && this._myPhysx.kinematic &&\r\n            (this._myFSM.getCurrentState().myID == \"spawning\")) {\r\n            this._myPhysx.kinematic = false;\r\n        }\r\n\r\n        if (type == WL.CollisionEventType.Touch || type == WL.CollisionEventType.TriggerTouch) {\r\n            this._myCollisionCount += 1;\r\n        } else if (type == WL.CollisionEventType.TouchLost || type == WL.CollisionEventType.TriggerTouchLost) {\r\n            this._myCollisionCount -= 1;\r\n        }\r\n    }\r\n\r\n    _onHit() {\r\n        this._myHitExplosion = true;\r\n        this._myFSM.perform(\"unspawn\");\r\n    }\r\n\r\n    _onBigHit() {\r\n        this._myBigHitExplosion = true;\r\n        this._myFSM.perform(\"unspawn\");\r\n    }\r\n\r\n    _onThrow() {\r\n        this._myHasBeenThrown = true;\r\n        this._myThrowTimer.start();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._myHasBeenThrown = false;\r\n    }\r\n}\r\n\r\nvar CardinalPosition = {\r\n    NORTH: 0,\r\n    NORTH_EAST: 1,\r\n    NORTH_WEST: 2,\r\n    EAST: 3,\r\n    WEST: 4,\r\n    SOUTH_EAST: 5,\r\n    SOUTH_WEST: 6,\r\n    SOUTH: 7\r\n};",
        "WL.registerComponent('evidence-component', {\r\n    _myHeightDisplacement: { type: WL.Type.Float, default: 0.0 }\r\n}, {\r\n    init: function () {\r\n        this._myCallbackOnHit = null;\r\n        this._myCallbackOnBigHit = null;\r\n        this._myEvidence = null;\r\n    },\r\n    start: function () {\r\n        this._myTimeActive = 0;\r\n    },\r\n    update: function (dt) {\r\n        this._myTimeActive += dt;\r\n    },\r\n    setCallbackOnHit: function (callback) {\r\n        this._myCallbackOnHit = callback;\r\n    },\r\n    setCallbackOnBigHit: function (callback) {\r\n        this._myCallbackOnBigHit = callback;\r\n    },\r\n    setEvidence: function (evidence) {\r\n        this._myEvidence = evidence;\r\n    },\r\n    getEvidence: function () {\r\n        return this._myEvidence;\r\n    },\r\n    getHeightDisplacement: function () {\r\n        return this._myHeightDisplacement;\r\n    },\r\n    hit: function (objectHit) {\r\n        if (this._myCallbackOnHit) {\r\n            this._myCallbackOnHit(objectHit, this);\r\n        }\r\n    },\r\n    bigHit: function (objectHit) {\r\n        if (this._myCallbackOnBigHit) {\r\n            this._myCallbackOnBigHit(objectHit, this);\r\n        }\r\n    },\r\n    getTimeActive() {\r\n        return this._myTimeActive;\r\n    },\r\n    onActivate() {\r\n        this._myTimeActive = 0;\r\n    },\r\n    onDeactivate() {\r\n        this._myTimeActive = 0;\r\n    }\r\n});\r\n\r\n",
        "class EvidenceManager {\r\n    constructor(evidenceSetupList) {\r\n        this._myInactiveEvidences = [];\r\n        this._myToUnspawnEvidences = [];\r\n        this._myActiveEvidences = [];\r\n        this._myToSpawnEvidences = [];\r\n\r\n        this._buildEvidences(evidenceSetupList);\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"            Evidence\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"manage\", this._updateManage.bind(this));\r\n        this._myFSM.addState(\"clean\", this._updateClean.bind(this));\r\n        this._myFSM.addState(\"explode\", this._updateExplode.bind(this));\r\n        this._myFSM.addState(\"done\");\r\n\r\n        this._myFSM.addTransition(\"init\", \"manage\", \"start\", this._prepareManage.bind(this));\r\n        this._myFSM.addTransition(\"manage\", \"clean\", \"startClean\", this._prepareClean.bind(this));\r\n        this._myFSM.addTransition(\"manage\", \"explode\", \"startExplode\", this._prepareExplode.bind(this));\r\n        this._myFSM.addTransition(\"clean\", \"done\", \"end\", this._evidencesHidden.bind(this));\r\n        this._myFSM.addTransition(\"explode\", \"done\", \"end\", this._evidencesHidden.bind(this));\r\n        this._myFSM.addTransition(\"done\", \"manage\", \"start\", this._prepareManage.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._myCardinalPositionsMap = new Map();\r\n        this._buildCardinalPositionsMap();\r\n    }\r\n\r\n    start() {\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._myFSM.update(dt);\r\n\r\n        if (Global.myDebugShortcutsEnabled) {\r\n            //TEMP REMOVE THIS\r\n            if (PP.myLeftGamepad.getButtonInfo(PP.ButtonType.SELECT).isPressEnd(Global.myDebugShortcutsPress)) {\r\n                for (let evidence of this._myActiveEvidences) {\r\n                    evidence[0].unspawn();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    explode() {\r\n        this._myFSM.perform(\"startExplode\");\r\n    }\r\n\r\n    clean() {\r\n        this._myFSM.perform(\"startClean\");\r\n    }\r\n\r\n    hide() {\r\n        this._myFSM.init(\"done\");\r\n\r\n        for (let evidence of this._myActiveEvidences) {\r\n            evidence[0].hide();\r\n        }\r\n\r\n        this._evidencesHidden();\r\n    }\r\n\r\n    isDone() {\r\n        return this._myFSM.isInState(\"done\");\r\n    }\r\n\r\n    _prepareManage(fsm) {\r\n        let cardinalPositions = [];\r\n        for (let key in CardinalPosition) {\r\n            cardinalPositions.push(CardinalPosition[key]);\r\n        }\r\n\r\n        let times = [];\r\n        times[0] = Math.pp_random(0.15, 0.55);\r\n        for (let i = 1; i < cardinalPositions.length; i++) {\r\n            times[i] = times[i - 1] + Math.pp_random(0.15, 0.55);\r\n        }\r\n\r\n        this._myToSpawnEvidences = [];\r\n\r\n        while (cardinalPositions.length > 0) {\r\n            let randomIndex = Math.pp_randomInt(0, cardinalPositions.length - 1);\r\n            let cardinalPosition = cardinalPositions.pp_removeIndex(randomIndex);\r\n\r\n            let evidence = this._getInactiveEvidence(cardinalPosition);\r\n            if (evidence) {\r\n                let time = times.shift();\r\n                this._myToSpawnEvidences.push([evidence, cardinalPosition, new PP.Timer(time)]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateManage(dt, fsm) {\r\n        for (let evidenceToSpawn of this._myToSpawnEvidences) {\r\n            evidenceToSpawn[2].update(dt);\r\n            if (evidenceToSpawn[2].isDone()) {\r\n                let evidence = evidenceToSpawn[0];\r\n                let cardinalPosition = evidenceToSpawn[1];\r\n                evidence.spawn(this._myCardinalPositionsMap.get(cardinalPosition));\r\n                this._myActiveEvidences.push([evidence, cardinalPosition]);\r\n            }\r\n        }\r\n\r\n        this._myToSpawnEvidences.pp_removeAll(element => element[2].isDone());\r\n\r\n        for (let evidenceToUnspawn of this._myToUnspawnEvidences) {\r\n            evidenceToUnspawn[1].update(dt);\r\n            if (evidenceToUnspawn[1].isDone()) {\r\n                let evidence = evidenceToUnspawn[0];\r\n                this._myInactiveEvidences.push(evidence);\r\n            }\r\n        }\r\n\r\n        this._myToUnspawnEvidences.pp_removeAll(element => element[1].isDone());\r\n\r\n        for (let evidence of this._myActiveEvidences) {\r\n            evidence[0].update(dt);\r\n        }\r\n    }\r\n\r\n    _prepareExplode(fsm) {\r\n        for (let evidence of this._myActiveEvidences) {\r\n            evidence[0].unspawn();\r\n        }\r\n    }\r\n\r\n    _updateExplode(dt, fsm) {\r\n        for (let evidence of this._myActiveEvidences) {\r\n            evidence[0].update(dt);\r\n        }\r\n\r\n        let done = true;\r\n        for (let item of this._myActiveEvidences) {\r\n            done = done && item[0].isInactive();\r\n        }\r\n\r\n        if (done) {\r\n            fsm.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    _prepareClean(fsm) {\r\n        this._myUnspawnList = [];\r\n\r\n        let indexList = [];\r\n        for (let i = 0; i < this._myActiveEvidences.length; i++) {\r\n            if (this._myActiveEvidences[i][0].canUnspawn()) {\r\n                indexList.push(i);\r\n            }\r\n        }\r\n\r\n        while (indexList.length > 0) {\r\n            let randomIndex = Math.pp_randomInt(0, indexList.length - 1);\r\n            let index = indexList.pp_removeIndex(randomIndex);\r\n\r\n            let randomTimer = Math.pp_random(0.20, 0.25);\r\n            if (this._myUnspawnList.length == 0) {\r\n                randomTimer += 0.2;\r\n            }\r\n            this._myUnspawnList.push([this._myActiveEvidences[index][0], new PP.Timer(randomTimer)]);\r\n        }\r\n    }\r\n\r\n    _updateClean(dt, fsm) {\r\n        if (this._myUnspawnList.length > 0) {\r\n            let first = this._myUnspawnList[0];\r\n            first[1].update(dt);\r\n            if (first[1].isDone()) {\r\n                first[0].unspawn();\r\n                this._myUnspawnList.shift();\r\n            }\r\n        }\r\n\r\n        for (let evidence of this._myActiveEvidences) {\r\n            evidence[0].update(dt);\r\n        }\r\n\r\n        let done = true;\r\n        for (let item of this._myActiveEvidences) {\r\n            done = done && item[0].isInactive();\r\n        }\r\n\r\n        if (done) {\r\n            fsm.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    _buildEvidences(evidenceSetupList) {\r\n        for (let evidenceSetup of evidenceSetupList) {\r\n            this._myInactiveEvidences.push(new Evidence(evidenceSetup, this._evidenceUnspawned.bind(this)));\r\n        }\r\n    }\r\n\r\n    _evidenceUnspawned(evidence) {\r\n        let evidenceRemoved = this._myActiveEvidences.pp_remove(element => element[0] === evidence);\r\n        this._myToUnspawnEvidences.push([evidenceRemoved[0], new PP.Timer(1)]);\r\n\r\n        let evidenceToSpawn = this._getInactiveEvidence(evidenceRemoved[1]);\r\n        this._myToSpawnEvidences.push([evidenceToSpawn, evidenceRemoved[1], new PP.Timer(0.5)]);\r\n    }\r\n\r\n    _evidencesHidden() {\r\n        for (let activeEvidence of this._myActiveEvidences) {\r\n            this._myInactiveEvidences.push(activeEvidence[0]);\r\n        }\r\n\r\n        for (let toUnspawnEvidence of this._myToUnspawnEvidences) {\r\n            this._myInactiveEvidences.push(toUnspawnEvidence[0]);\r\n        }\r\n\r\n        for (let toSpawnEvidence of this._myToSpawnEvidences) {\r\n            this._myInactiveEvidences.push(toSpawnEvidence[0]);\r\n        }\r\n\r\n        this._myToUnspawnEvidences = [];\r\n        this._myToSpawnEvidences = [];\r\n        this._myActiveEvidences = [];\r\n    }\r\n\r\n    _buildCardinalPositionsMap() {\r\n        let ringHeight = Global.myRingHeight;\r\n        let ringRadius = Global.myRingRadius;\r\n        let rotation = 45;\r\n\r\n        let initialPosition = [0, ringHeight, -ringRadius];\r\n\r\n        this._myCardinalPositionsMap.set(CardinalPosition.NORTH, initialPosition.vec3_clone());\r\n        this._myCardinalPositionsMap.set(CardinalPosition.NORTH_WEST, initialPosition.vec3_rotateAxis(rotation, [0, 1, 0]));\r\n        this._myCardinalPositionsMap.set(CardinalPosition.NORTH_EAST, initialPosition.vec3_rotateAxis(-rotation, [0, 1, 0]));\r\n        this._myCardinalPositionsMap.set(CardinalPosition.WEST, initialPosition.vec3_rotateAxis(rotation * 2, [0, 1, 0]));\r\n        this._myCardinalPositionsMap.set(CardinalPosition.EAST, initialPosition.vec3_rotateAxis(-rotation * 2, [0, 1, 0]));\r\n        this._myCardinalPositionsMap.set(CardinalPosition.SOUTH_WEST, initialPosition.vec3_rotateAxis(rotation * 3, [0, 1, 0]));\r\n        this._myCardinalPositionsMap.set(CardinalPosition.SOUTH_EAST, initialPosition.vec3_rotateAxis(-rotation * 3, [0, 1, 0]));\r\n        this._myCardinalPositionsMap.set(CardinalPosition.SOUTH, initialPosition.vec3_rotateAxis(-rotation * 4, [0, 1, 0]));\r\n    }\r\n\r\n    _getInactiveEvidence(cardinalPosition) {\r\n        let randomEvidence = null;\r\n\r\n        let validEvidences = [];\r\n        for (let evidence of this._myInactiveEvidences) {\r\n            let setup = evidence.getEvidenceSetup();\r\n            if ((setup.myCardinalPositions == null || setup.myCardinalPositions.includes(cardinalPosition)) &&\r\n                (setup.myStartSpawnTime == null || setup.myStartSpawnTime < Global.myVentDuration) &&\r\n                (setup.myEndSpawnTime == null || setup.myEndSpawnTime > Global.myVentDuration) &&\r\n                setup.myRandomChance.get(Global.myVentDuration) > 0) {\r\n                validEvidences.push(evidence);\r\n            }\r\n        }\r\n\r\n        // TEMP change with random unspawn instead of first one\r\n        if (validEvidences.length == 0) {\r\n            for (let unspawnEvidence of this._myToUnspawnEvidences) {\r\n                let setup = unspawnEvidence[0].getEvidenceSetup();\r\n                if ((setup.myCardinalPositions == null || setup.myCardinalPositions.includes(cardinalPosition)) &&\r\n                    (setup.myStartSpawnTime == null || setup.myStartSpawnTime < Global.myVentDuration) &&\r\n                    (setup.myEndSpawnTime == null || setup.myEndSpawnTime > Global.myVentDuration) &&\r\n                    setup.myRandomChance.get(Global.myVentDuration) > 0) {\r\n                    validEvidences.push(unspawnEvidence[0]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let randomChanceSum = 0;\r\n        for (let evidence of validEvidences) {\r\n            randomChanceSum += evidence.getEvidenceSetup().myRandomChance.get(Global.myVentDuration);\r\n        }\r\n\r\n        let random = Math.pp_randomInt(1, randomChanceSum);\r\n        let currentSum = 0;\r\n        for (let evidence of validEvidences) {\r\n            currentSum += evidence.getEvidenceSetup().myRandomChance.get(Global.myVentDuration);\r\n            if (random <= currentSum) {\r\n                randomEvidence = evidence;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this._myInactiveEvidences.pp_removeEqual(randomEvidence);\r\n        this._myToUnspawnEvidences.pp_remove(element => element[0] == randomEvidence);\r\n\r\n        return randomEvidence;\r\n    }\r\n}",
        "class MrNOT {\r\n    constructor(callbackOnPatienceOver, callbackOnReach, callbackOnExplosionDone) {\r\n        this._myObject = Global.myGameObjects.get(GameObjectType.MR_NOT);\r\n\r\n        this._myStartPosition = [0, 11, -18];\r\n        this._myRotation = [40, 0, 0];\r\n        this._myScale = [5, 5, 5];\r\n\r\n        this._myTargetPosition = [0, 1, 0];\r\n        this._myDirection = this._myTargetPosition.vec3_sub(this._myStartPosition);\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Time To Reach Target\", 60, 10, 3));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneInt(\"Max Patience\", 25, 10));\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Reach Distance\", 5, 10, 3));\r\n\r\n        this._myCallbackOnPatienceOver = callbackOnPatienceOver;\r\n        this._myCallbackOnReach = callbackOnReach;\r\n        this._myCallbackOnExplosionDone = callbackOnExplosionDone;\r\n\r\n        this._myFSM = new PP.FSM();\r\n\r\n        //this._myFSM.setDebugLogActive(true, \"        Mr NOT Clone\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"first_wait\", new PP.TimerState(0.05, \"end\"));\r\n        this._myFSM.addState(\"move\", this._move.bind(this));\r\n        this._myFSM.addState(\"explode\", this._exploding.bind(this));\r\n        this._myFSM.addState(\"disappear\", this._disappear.bind(this));\r\n        this._myFSM.addState(\"inactive\");\r\n\r\n        this._myFSM.addTransition(\"init\", \"first_wait\", \"start\", this._prepareMove.bind(this));\r\n        this._myFSM.addTransition(\"first_wait\", \"move\", \"end\", this._startMove.bind(this));\r\n        this._myFSM.addTransition(\"move\", \"explode\", \"explode\", this._prepareExplode.bind(this));\r\n        this._myFSM.addTransition(\"explode\", \"disappear\", \"end\", this._prepareDisappear.bind(this));\r\n        this._myFSM.addTransition(\"disappear\", \"inactive\", \"end\");\r\n        this._myFSM.addTransition(\"move\", \"inactive\", \"hide\");\r\n        this._myFSM.addTransition(\"explode\", \"inactive\", \"hide\");\r\n        this._myFSM.addTransition(\"disappear\", \"inactive\", \"hide\");\r\n        this._myFSM.addTransition(\"inactive\", \"first_wait\", \"start\", this._prepareMove.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._myCollisions = this._myObject.pp_getComponentsHierarchy(\"collision\");\r\n        this._myPhysx = this._myObject.pp_getComponentHierarchy(\"physx\");\r\n        this._myCollisionsCollector = this._myObject.pp_getComponentHierarchy(\"physx-collector-component\").getCollisionsCollector();\r\n\r\n        this._myExplodeAudio = Global.myAudioManager.createAudioPlayer(SfxID.MR_NOT_EXPLODE);\r\n        this._myHitAudio = Global.myAudioManager.createAudioPlayer(SfxID.CLONE_EXPLODE);\r\n        this._myAppearAudio = Global.myAudioManager.createAudioPlayer(SfxID.MR_NOT_FAST_APPEAR);\r\n\r\n        this._myRumbleScreen = new RumbleScreen();\r\n\r\n        //Setup\r\n        this._myReachTargetDistance = 5;\r\n        this._myMinTargetDistance = 7;\r\n        this._myMinParticleDistance = this._myScale[0] * 0.55;\r\n        this._myParticlesSize = 6.5;\r\n        this._myParticlesSizeMrNot = 0.9;\r\n        this._myMaxPatience = 1;\r\n        this._myPatienceRefill = 1;\r\n\r\n        this._myReachTargetDistance = PP.myEasyTuneVariables.get(\"Reach Distance\");\r\n\r\n        let directionAngle = this._myDirection.vec3_angle(this._myDirection.vec3_removeComponentAlongAxis([0, 1, 0]));\r\n        let distanceToIgnore = this._myReachTargetDistance / Math.cos(Math.pp_toRadians(directionAngle));\r\n\r\n        this._mySpeed = (this._myTargetPosition.vec3_sub(this._myStartPosition).vec3_length() - distanceToIgnore) / PP.myEasyTuneVariables.get(\"Time To Reach Target\");\r\n        this._myMaxPatience = PP.myEasyTuneVariables.get(\"Max Patience\");\r\n\r\n        this._myDebugActive = false;\r\n    }\r\n\r\n    start(dt) {\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    update(dt) {\r\n        if (Global.myDebugShortcutsEnabled) {\r\n            if (PP.myLeftGamepad.getButtonInfo(PP.ButtonType.SELECT).isPressEnd(Global.myDebugShortcutsPress)) {\r\n                //this._myCallbackOnPatienceOver();\r\n                //this._myFSM.perform(\"explode\");\r\n            }\r\n        }\r\n\r\n        this._myCollisionsCollector.update(dt);\r\n\r\n        this._myFSM.update(dt);\r\n\r\n        this._myRumbleScreen.update(dt);\r\n    }\r\n\r\n    isDone() {\r\n        return this._myFSM.isInState(\"inactive\");\r\n    }\r\n\r\n    hide() {\r\n        this._myRumbleScreen.stop();\r\n        this._myObject.pp_setActive(false);\r\n        this._myFSM.perform(\"hide\");\r\n    }\r\n\r\n    _prepareMove() {\r\n        PP.MeshUtils.setFogColor(this._myObject, [0, 0, 0, 0]);\r\n        this._myObject.pp_setPosition(this._myStartPosition);\r\n        this._myObject.pp_setScale(this._myScale);\r\n        this._myObject.pp_setRotation(this._myRotation);\r\n\r\n        for (let collision of this._myCollisions) {\r\n            if (collision.collider == WL.Collider.Sphere) {\r\n                collision.extents = [this._myScale[0] * 1.1, this._myScale[0] * 1.1, this._myScale[0] * 1.1];\r\n            } else {\r\n                collision.extents = [this._myScale[0], this._myScale[1], this._myScale[2] * 0.2];\r\n            }\r\n        }\r\n\r\n        this._myPhysx.extents = [this._myScale[0] * 0.018, this._myScale[1] * 0.018, this._myScale[2] * 0.025];\r\n\r\n        this._myCurrentPosition = [];\r\n        this._myObject.pp_getPosition(this._myCurrentPosition);\r\n\r\n        this._myPatience = this._myMaxPatience;\r\n\r\n        this._myAppearAudio.setPosition(this._myObject.pp_getPosition());\r\n        this._myAppearAudio.play();\r\n\r\n        this._myRumbleScreen.stop();\r\n\r\n        this._myRumbleScreen.start(0.3, 1.5);\r\n        PP.myRightGamepad.pulse(0.6, 0.3);\r\n        PP.myLeftGamepad.pulse(0.6, 0.3);\r\n    }\r\n\r\n    _startMove() {\r\n        this._myObject.pp_setActive(true);\r\n    }\r\n\r\n    _move(dt) {\r\n        this._myTargetPosition.vec3_sub(this._myStartPosition, this._myDirection);\r\n        this._myDirection.vec3_normalize(this._myDirection);\r\n        this._myDirection.vec3_scale(this._mySpeed * dt, this._myDirection);\r\n        this._myObject.pp_translateWorld(this._myDirection);\r\n\r\n        this._myObject.pp_getPosition(this._myCurrentPosition);\r\n        let distanceToTarget = this._myTargetPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myCurrentPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n        let distanceToTargetFromStart = this._myTargetPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myStartPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n        let distanceToCurrentFromStart = this._myStartPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myCurrentPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n\r\n        if (distanceToTarget < this._myReachTargetDistance || distanceToTargetFromStart < distanceToCurrentFromStart) {\r\n            if (this._myCallbackOnReach) {\r\n                this._myCallbackOnReach(this);\r\n            }\r\n        } else {\r\n            this._checkHit();\r\n\r\n            /*\r\n            let distanceToTarget = this._myTargetPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myCurrentPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n            if (distanceToTarget < 7) {\r\n                this._myCallbackOnPatienceOver();\r\n                this._myFSM.perform(\"explode\");\r\n            } \r\n            */\r\n        }\r\n    }\r\n\r\n    _checkHit(avoidCallbacks = false) {\r\n        let hit = false;\r\n        let hittingObjects = [];\r\n\r\n        let useCollider = false;\r\n        if (useCollider) {\r\n            let collidingComps = [];\r\n            for (let collision of this._myCollisions) {\r\n                collidingComps.push(collision.queryOverlaps());\r\n            }\r\n\r\n            if (collidingComps.length > 0) {\r\n                for (let i = 0; i < collidingComps[0].length; ++i) {\r\n                    let collidingComponent = collidingComps[0][i];\r\n                    if (collidingComponent.object.pp_getComponent(\"evidence-component\") != null) {\r\n                        let isColliding = true;\r\n                        for (let j = 1; j < collidingComps.length; ++j) {\r\n                            if (collidingComps[j].pp_find(element => element.equals(collidingComponent)) == null) {\r\n                                isColliding = false;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (isColliding) {\r\n                            let evidenceComponent = collidingComponent.object.pp_getComponent(\"evidence-component\");\r\n                            if (evidenceComponent && evidenceComponent.getEvidence() && evidenceComponent.getEvidence().canHit()) {\r\n                                hit = true;\r\n                                hittingObjects.push(collidingComponent.object);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let usePhysx = true;\r\n        if (usePhysx) {\r\n            let collisionsStart = this._myCollisionsCollector.getCollisionsStart();\r\n            if (collisionsStart.length > 0) {\r\n                for (let collision of collisionsStart) {\r\n                    let evidenceComponent = collision.pp_getComponent(\"evidence-component\");\r\n                    if (evidenceComponent && evidenceComponent.getEvidence() && evidenceComponent.getEvidence().canHit()) {\r\n                        hit = true;\r\n                        hittingObjects.push(collision);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hit) {\r\n            let patienceToRemove = 0;\r\n            for (let object of hittingObjects) {\r\n                this._myHitAudio.setPosition(object.pp_getPosition());\r\n                this._myHitAudio.setPitch(Math.pp_random(0.85, 1.05));\r\n                this._myHitAudio.play();\r\n\r\n                let evidence = object.pp_getComponent(\"evidence-component\");\r\n                evidence.bigHit(this._myObject);\r\n\r\n                patienceToRemove++;\r\n            }\r\n\r\n            if (!avoidCallbacks) {\r\n                this._myPatience -= patienceToRemove;\r\n\r\n                let distanceToTarget = this._myTargetPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myCurrentPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n\r\n                if (distanceToTarget > this._myMinTargetDistance) {\r\n                    this._myPatience = Math.max(this._myPatience, this._myPatienceRefill);\r\n                }\r\n\r\n                if (this._myPatience <= 0) {\r\n                    if (this._myDebugActive) {\r\n                        console.log(\"mr NOT dismissed - Duration -\", Global.myVentDuration.toFixed(3));\r\n                    }\r\n\r\n                    Global.myStatistics.myMrNOTDismissed += 1;\r\n                    this._myFSM.perform(\"explode\");\r\n                    this._myCallbackOnPatienceOver();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _prepareExplode() {\r\n        this._mySpawnDelays = [2.5, 2.3, 2.0, 1.5, 1.0, 0.7, 0.6, 0.5, 0.4, 0.3];\r\n        this._myExplodeTimer = new PP.Timer(20);\r\n        this._mySpawnParticlesTimer = new PP.Timer(this._mySpawnDelays[0]);\r\n\r\n        this._myMrNotUp = this._myObject.pp_getUp();\r\n        this._myMrNotRight = this._myObject.pp_getRight();\r\n        this._myMrNotForward = this._myObject.pp_getForward();\r\n\r\n        this._myObject.pp_getPosition(this._myCurrentPosition);\r\n        this._myParticlesPosition = null;\r\n        this._myParticlesPosition = this._getNextParticlePosition();\r\n\r\n        this._myPossibleGameObjectTypes = [\r\n            //GameObjectType.TRIAL_TIMER,\r\n            //GameObjectType.ZESTY_MARKET,\r\n            GameObjectType.TUCIA_DRAWING,\r\n            GameObjectType.CPLUSPLUS_PRIMER,\r\n            GameObjectType.PIANO,\r\n            GameObjectType.MICCO_THE_BEAR,\r\n            GameObjectType.WATER_LILY,\r\n            GameObjectType.LOL,\r\n            GameObjectType.DRINK_ME_EARRING,\r\n            GameObjectType.WONDERMELON,\r\n            GameObjectType.SHATTERED_COIN,\r\n            GameObjectType.PSI,\r\n            GameObjectType.WONDERLAND,\r\n            GameObjectType.ANT_MAIN_CHARACTER,\r\n            GameObjectType.HEART,\r\n            GameObjectType.HALO_SWORD,\r\n            GameObjectType.FOX,\r\n            GameObjectType.PICO_8,\r\n            GameObjectType.EGGPLANT,\r\n            GameObjectType.VR,\r\n            GameObjectType.TROPHY,\r\n            GameObjectType.FAMILY,\r\n            GameObjectType.MIRROR,\r\n            GameObjectType.WAYFINDER,\r\n            GameObjectType.EVERYEYE,\r\n            GameObjectType.ALOE_VERA,\r\n            //GameObjectType.MR_NOT_EVIDENCE,\r\n            //GameObjectType.STARING_CUBE,\r\n        ];\r\n    }\r\n\r\n    _exploding(dt) {\r\n        this._checkHit(true);\r\n\r\n        this._myExplodeTimer.update(dt);\r\n        if (this._myExplodeTimer.isDone()) {\r\n            this._myFSM.perform(\"end\");\r\n        }\r\n\r\n        this._mySpawnParticlesTimer.update(dt);\r\n        if (this._mySpawnParticlesTimer.isDone()) {\r\n            let delay = this._mySpawnDelays[0];\r\n            if (this._mySpawnDelays.length > 1) {\r\n                this._mySpawnDelays.shift();\r\n            }\r\n            this._mySpawnParticlesTimer.start(delay);\r\n            let type = Math.pp_randomPick(this._myPossibleGameObjectTypes);\r\n            Global.myParticlesManager.explosion(this._myParticlesPosition, 1.25, [this._myParticlesSize, this._myParticlesSize, this._myParticlesSize], type, true);\r\n\r\n            this._addPulse(this._myParticlesPosition, this._mySpawnDelays.length <= 1);\r\n\r\n            this._myExplodeAudio.setPosition(this._myParticlesPosition.pp_clone());\r\n            this._myExplodeAudio.setPitch(Math.pp_random(0.85, 1.05));\r\n            this._myExplodeAudio.play();\r\n\r\n            this._myParticlesPosition = this._getNextParticlePosition();\r\n\r\n            this._myRumbleScreen.start(Math.pp_random(0.4, 0.6), 1);\r\n        }\r\n    }\r\n\r\n    _addPulse(position, justRandom) {\r\n        let gamepad = PP.myLeftGamepad;\r\n        if (position.vec3_isConcordant([1, 0, 0])) {\r\n            gamepad = PP.myRightGamepad;\r\n        }\r\n\r\n        if (justRandom) {\r\n            gamepad = (Math.pp_random() < 0.5) ? PP.myLeftGamepad : PP.myRightGamepad;\r\n            if (gamepad == PP.myLeftGamepad && !PP.myRightGamepad.isPulsing()) {\r\n                gamepad = PP.myRightGamepad;\r\n            } else if (gamepad == PP.myRightGamepad && !PP.myLeftGamepad.isPulsing()) {\r\n                gamepad = PP.myLeftGamepad;\r\n            }\r\n        }\r\n\r\n        gamepad.pulse(Math.pp_random(0.4, 0.8), Math.pp_random(0.4, 0.6));\r\n    }\r\n\r\n    _prepareDisappear() {\r\n        this._myDisappearTimer = new PP.Timer(3);\r\n        this._myDisappearEndTimer = new PP.Timer(3, false);\r\n    }\r\n\r\n    _disappear(dt) {\r\n        if (this._myDisappearTimer.isRunning()) {\r\n            this._myDisappearTimer.update(dt);\r\n            if (this._myDisappearTimer.isDone()) {\r\n                this._myObject.pp_setActive(false);\r\n\r\n                Global.myParticlesManager.explosion(this._myCurrentPosition, 1.6, [this._myParticlesSizeMrNot, this._myParticlesSizeMrNot, this._myParticlesSizeMrNot], GameObjectType.MR_NOT, true);\r\n                this._myDisappearEndTimer.start();\r\n\r\n                let audioPosition = this._myMrNotForward.vec3_scale(this._myScale[2] * 0.675).vec3_add(this._myCurrentPosition);\r\n                //this._myMrNotUp.vec3_scale(1.35).vec3_add(audioPosition, audioPosition);\r\n                this._myExplodeAudio.setPosition(audioPosition);\r\n                this._myExplodeAudio.setPitch(1);\r\n                this._myExplodeAudio.play();\r\n\r\n                this._myRumbleScreen.start(Math.pp_random(0.4, 0.6), 1);\r\n                PP.myRightGamepad.pulse(0.6, 0.5);\r\n                PP.myLeftGamepad.pulse(0.6, 0.5);\r\n            }\r\n        }\r\n\r\n        if (this._myDisappearEndTimer.isRunning()) {\r\n            this._myDisappearEndTimer.update(dt);\r\n            if (this._myDisappearEndTimer.isDone()) {\r\n                this._myObject.pp_setActive(false);\r\n                this._myRumbleScreen.stop();\r\n                this._myFSM.perform(\"end\");\r\n            }\r\n        }\r\n    }\r\n\r\n    _getNextParticlePosition() {\r\n        let attempts = 100;\r\n        let distance = 0;\r\n\r\n        let position = [0, 0, 0];\r\n\r\n        while (attempts > 0) {\r\n            let randomX = Math.pp_random(0, this._myScale[0] * 0.6) * Math.pp_randomSign();\r\n            let randomY = Math.pp_random(0, this._myScale[1] * 0.6) * Math.pp_randomSign();\r\n            let randomZ = Math.pp_random(this._myScale[2] * 0.65, this._myScale[2] * 0.7);\r\n\r\n            this._myMrNotUp.vec3_scale(randomY, position);\r\n            this._myMrNotRight.vec3_scale(randomX).vec3_add(position, position);\r\n            if (position.vec3_length() > this._myScale[0] * 0.65) {\r\n                position.vec3_normalize(position).vec3_scale(Math.pp_random(this._myScale[0] * 0.6, this._myScale[0] * 0.65));\r\n            }\r\n            this._myMrNotForward.vec3_scale(randomZ).vec3_add(position, position);\r\n\r\n            this._myMrNotUp.vec3_scale(Math.pp_random(1.25, 1.5)).vec3_add(position, position);\r\n            this._myCurrentPosition.vec3_add(position, position);\r\n\r\n            if (this._myParticlesPosition == null) {\r\n                attempts = 0;\r\n            } else {\r\n                let relativeParticlePosition = this._myParticlesPosition.vec3_sub(this._myCurrentPosition);\r\n                let relativeNewPosition = position.vec3_sub(this._myCurrentPosition);\r\n                distance = position.vec3_distance(this._myParticlesPosition);\r\n                if (distance > this._myMinParticleDistance &&\r\n                    relativeNewPosition.vec3_isConcordant([1, 0, 0]) != relativeParticlePosition.vec3_isConcordant([1, 0, 0])) {\r\n                    attempts = 0;\r\n                } else {\r\n                    attempts -= 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        return position;\r\n    }\r\n}\r\n\r\nclass RumbleScreen {\r\n    constructor() {\r\n        this._myTimer = new PP.Timer(0, false);\r\n    }\r\n\r\n    start(duration, intensity) {\r\n        this._myTimer.start(duration);\r\n        this._myIntensity = intensity;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myTimer.isRunning()) {\r\n            this._myTimer.update(dt);\r\n\r\n            let rumbleValue = 0.04 * this._myIntensity;\r\n            Global.myPlayerRumbleObject.pp_setPositionLocal([Math.pp_random(-rumbleValue, rumbleValue), Math.pp_random(-rumbleValue, rumbleValue), Math.pp_random(-rumbleValue, rumbleValue)]);\r\n\r\n            if (this._myTimer.isDone()) {\r\n                this.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        Global.myPlayerRumbleObject.pp_resetPositionLocal();\r\n    }\r\n}",
        "class MrNOTCloneSetup {\r\n    constructor() {\r\n        this.myStartHeight = 4;\r\n        this.myEndHeight = 1.4;\r\n        this.myTimeToReachTarget = 7;\r\n        this.myStartDistance = 30;\r\n\r\n        this.myDirection = [0, 0, 1];\r\n    }\r\n}\r\n\r\nclass CloneRotationSetup {\r\n    constructor() {\r\n        this.mySpinSpeed = new RangeValue([0, 0], false);\r\n        this.mySpinChance = new RangeValueOverTime([2, 2], [2, 2], 0, 0, true);\r\n        this.mySpinStartTime = -1;\r\n\r\n        this.myTiltAngle = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.myTiltChance = new RangeValueOverTime([2, 2], [2, 2], 0, 0, true);\r\n        this.myTiltStartTime = -1;\r\n\r\n        /* \r\n         this.mySpinSpeed = new RangeValue([4, 6], false);\r\n         this.mySpinChance = new RangeValueOverTime([1, 30], [1, 15], 60, 120, true);\r\n         this.mySpinStartTime = 60;\r\n \r\n         this.myTiltAngle = new RangeValueOverTime([0, 0], [0, 15], 20, 60, false);\r\n         */\r\n    }\r\n}\r\n\r\nclass MrNOTClone {\r\n    constructor(position, targetPosition, timeToReachTarget, rotationSetup, callbackOnDismiss, callbackOnReach) {\r\n        this._myObject = Global.myGameObjectPoolMap.getObject(GameObjectType.MR_NOT_CLONE);\r\n        PP.MeshUtils.setAlpha(this._myObject, 0);\r\n        this._myObject.pp_setPosition(position);\r\n        this._myFacing = targetPosition.vec3_sub(position);\r\n        this._myObject.pp_lookTo(this._myFacing, [0, 1, 0]);\r\n        this._myObject.pp_setScale([1, 1, 1]);\r\n        this._myObject.pp_setActive(true);\r\n        this._myScale = this._myObject.pp_getScale();\r\n\r\n        this._myStartPosition = position;\r\n\r\n        this._myTargetPosition = targetPosition;\r\n\r\n        this._myTimeToReachTarget = timeToReachTarget;\r\n\r\n        this._myCallbackOnDismiss = callbackOnDismiss;\r\n        this._myCallbackOnReach = callbackOnReach;\r\n\r\n        this._myCurrentPosition = [];\r\n        this._myObject.pp_getPosition(this._myCurrentPosition);\r\n\r\n        this._mySpeed = this._myTargetPosition.vec3_sub(this._myCurrentPosition).vec3_length() / this._myTimeToReachTarget;\r\n        this._myTempTranslation = [0, 0, 0];\r\n\r\n        this._mySpawnTimer = new PP.Timer(0.5);\r\n\r\n        this._myFSM = new PP.FSM();\r\n\r\n        //this._myFSM.setDebugLogActive(true, \"        Mr NOT Clone\"); \r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"move\", this._move.bind(this));\r\n        this._myFSM.addState(\"stop\", this._stopUpdate.bind(this));\r\n        this._myFSM.addState(\"unspawning\", this._unspawning.bind(this));\r\n        this._myFSM.addState(\"inactive\");\r\n\r\n        this._myFSM.addTransition(\"init\", \"move\", \"start\");\r\n        this._myFSM.addTransition(\"move\", \"unspawning\", \"unspawn\");\r\n        this._myFSM.addTransition(\"move\", \"stop\", \"startStop\");\r\n        this._myFSM.addTransition(\"stop\", \"unspawning\", \"unspawn\");\r\n        this._myFSM.addTransition(\"unspawning\", \"inactive\", \"end\");\r\n        this._myFSM.addTransition(\"move\", \"inactive\", \"hide\");\r\n        this._myFSM.addTransition(\"stop\", \"inactive\", \"hide\");\r\n        this._myFSM.addTransition(\"unspawning\", \"inactive\", \"hide\");\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n\r\n        this._myCollisions = this._myObject.pp_getComponentsHierarchy(\"collision\");\r\n\r\n        this._myHitAudio = Global.myAudioManager.createAudioPlayer(SfxID.CLONE_EXPLODE);\r\n        this._myAppearAudio = Global.myAudioManager.createAudioPlayer(SfxID.CLONE_APPEAR);\r\n\r\n        this._myAppearAudioDelay = new PP.Timer(0.2);\r\n\r\n        if (rotationSetup.myTiltStartTime >= 0 && Global.myVentDuration >= rotationSetup.myTiltStartTime) {\r\n            if (rotationSetup.myTiltChance.get(Global.myVentDuration) == 1) {\r\n                let tiltAngle = rotationSetup.myTiltAngle.get(Global.myVentDuration) * Math.pp_randomSign();\r\n                this._myObject.pp_rotateObject([0, 0, tiltAngle]);\r\n            }\r\n        }\r\n\r\n        this._mySpin = false;\r\n        if (rotationSetup.mySpinStartTime >= 0 && Global.myVentDuration >= rotationSetup.mySpinStartTime) {\r\n            this._mySpin = rotationSetup.mySpinChance.get(Global.myVentDuration) == 1;\r\n        }\r\n        this._mySpinSpeed = rotationSetup.mySpinSpeed.get(Global.myVentDuration) * Math.pp_randomSign();\r\n\r\n        this._myTimerBeforeCheckingSeen = new PP.Timer(3);\r\n        this._myTimerBeforeSettingSeen = new PP.Timer(0.75, false);\r\n        this._myMrNOTClonesSeen = Global.mySaveManager.loadBool(\"mr_NOT_clones_seen\", false);\r\n\r\n        //Setup\r\n        this._myReachTargetDistance = Global.myRingRadius * 2;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myFSM.update(dt);\r\n\r\n        if (!this._myMrNOTClonesSeen && this._myFSM.isInState(\"move\") && this._myObject != null) {\r\n            this._myTimerBeforeCheckingSeen.update(dt);\r\n            if (this._myTimerBeforeCheckingSeen.isDone()) {\r\n                if (!this._myTimerBeforeSettingSeen.isRunning()) {\r\n                    let directionToClone = this._myObject.pp_getPosition();\r\n                    directionToClone.vec3_sub(Global.myPlayerPosition, directionToClone).vec3_normalize(directionToClone);\r\n\r\n                    let angle = Global.myPlayerForward.vec3_angle(directionToClone);\r\n                    if (angle < 20) {\r\n                        this._myTimerBeforeSettingSeen.start();\r\n                    }\r\n                } else {\r\n                    this._myTimerBeforeSettingSeen.update(dt);\r\n                    if (this._myTimerBeforeSettingSeen.isDone()) {\r\n                        this._myMrNOTClonesSeen = true;\r\n                        Global.mySaveManager.save(\"mr_NOT_clones_seen\", true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    canUnspawn() {\r\n        return this._myFSM.canPerform(\"unspawn\");\r\n    }\r\n\r\n    unspawn() {\r\n        if (this._myFSM.canPerform(\"unspawn\")) {\r\n            this._mySpawnTimer.start(PP.myEasyTuneVariables.get(\"Unspawn Menu Time\"));\r\n        }\r\n        this._myFSM.perform(\"unspawn\");\r\n    }\r\n\r\n    stop() {\r\n        this._myFSM.perform(\"startStop\");\r\n    }\r\n\r\n    isDone() {\r\n        return this._myFSM.isInState(\"inactive\");\r\n    }\r\n\r\n    hide() {\r\n        Global.myGameObjectPoolMap.releaseObject(GameObjectType.MR_NOT_CLONE, this._myObject);\r\n        this._myObject = null;\r\n        this._myFSM.perform(\"hide\");\r\n    }\r\n\r\n    _move(dt) {\r\n        if (this._mySpin) {\r\n            this._myObject.pp_rotateObject([0, 0, Math.sin(dt * this._mySpinSpeed) * 180]);\r\n        }\r\n\r\n        if (this._myAppearAudioDelay.isRunning()) {\r\n            this._myAppearAudioDelay.update(dt);\r\n            if (this._myAppearAudioDelay.isDone()) {\r\n                this._myAppearAudio.setPosition(this._myObject.pp_getPosition());\r\n                this._myAppearAudio.setPitch(Math.pp_random(0.85, 1.05));\r\n                this._myAppearAudio.play();\r\n            }\r\n        }\r\n\r\n        if (this._mySpawnTimer.isRunning()) {\r\n            this._mySpawnTimer.update(dt);\r\n            PP.MeshUtils.setAlpha(this._myObject, this._mySpawnTimer.getPercentage());\r\n        }\r\n\r\n        this._myObject.pp_getPosition(this._myCurrentPosition);\r\n        this._myTargetPosition.vec3_sub(this._myCurrentPosition, this._myFacing);\r\n\r\n        this._myObject.pp_lookTo(this._myFacing);\r\n\r\n        this._myTempTranslation[2] = this._mySpeed * dt;\r\n        this._myObject.pp_translateObject(this._myTempTranslation);\r\n\r\n        this._myObject.pp_getPosition(this._myCurrentPosition);\r\n        let distanceToTarget = this._myTargetPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myCurrentPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n        let distanceToTargetFromStart = this._myTargetPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myStartPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n        let distanceToCurrentFromStart = this._myStartPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myCurrentPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n\r\n        if (distanceToTarget < this._myReachTargetDistance || distanceToTargetFromStart < distanceToCurrentFromStart) {\r\n            if (PP.myEasyTuneVariables.get(\"Prevent Vent Lost\")) {\r\n                this._myCallbackOnDismiss(this, null);\r\n                this.unspawn();\r\n            } else {\r\n                if (this._myCallbackOnReach) {\r\n                    this._myCallbackOnReach(this);\r\n                }\r\n            }\r\n        } else {\r\n            this._checkHit();\r\n        }\r\n    }\r\n\r\n    _stopUpdate() {\r\n        this._checkHit(true);\r\n    }\r\n\r\n    _checkHit(avoidCallbacks = false) {\r\n        let hit = false;\r\n        let hittingObject = null;\r\n\r\n        let collidingComps = [];\r\n        for (let collision of this._myCollisions) {\r\n            collidingComps.push(collision.queryOverlaps());\r\n        }\r\n\r\n        if (collidingComps.length > 0) {\r\n            for (let i = 0; i < collidingComps[0].length; ++i) {\r\n                let collidingComponent = collidingComps[0][i];\r\n                if (collidingComponent.object.pp_getComponent(\"evidence-component\") != null) {\r\n                    let isColliding = true;\r\n                    for (let j = 1; j < collidingComps.length; ++j) {\r\n                        if (collidingComps[j].pp_find(element => element.equals(collidingComponent)) == null) {\r\n                            isColliding = false;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (isColliding) {\r\n                        let evidenceComponent = collidingComponent.object.pp_getComponent(\"evidence-component\");\r\n                        if (evidenceComponent && evidenceComponent.getEvidence() && evidenceComponent.getEvidence().canHit()) {\r\n                            hit = true;\r\n                            hittingObject = collidingComponent.object;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hit) {\r\n            let evidence = hittingObject.pp_getComponent(\"evidence-component\");\r\n            evidence.hit(this._myObject);\r\n            this.unspawn();\r\n            this._myHitAudio.setPosition(this._myObject.pp_getPosition());\r\n            this._myHitAudio.setPitch(Math.pp_random(0.85, 1.05));\r\n            this._myHitAudio.play();\r\n            if (this._myCallbackOnDismiss && !avoidCallbacks) {\r\n                this._myCallbackOnDismiss(this, hittingObject);\r\n            }\r\n\r\n            Global.myStatistics.myMrNOTClonesDismissed += 1;\r\n            Global.myStatistics.myMrNOTClonesDismissedResettable += 1;\r\n        }\r\n    }\r\n\r\n    _unspawning(dt) {\r\n        this._mySpawnTimer.update(dt);\r\n\r\n        let scaleMultiplier = Math.pp_interpolate(1, PP.myEasyTuneVariables.get(\"Unspawn Menu Scale\"), this._mySpawnTimer.getPercentage());\r\n        this._myObject.pp_setScale(this._myScale.vec3_scale(scaleMultiplier));\r\n\r\n        if (this._mySpawnTimer.isDone()) {\r\n            Global.myParticlesManager.explosion(this._myObject.pp_getPosition(), 0.75, this._myScale.vec3_scale(PP.myEasyTuneVariables.get(\"mr NOT Clone Scale\")), GameObjectType.MR_NOT_CLONE);\r\n            this.hide();\r\n        }\r\n    }\r\n}",
        "class MrNOTVentSetup {\r\n    constructor() {\r\n        this.myDirection = [0, 0, -1];\r\n\r\n        this.myTimeToReachTarget = 50;\r\n        this.myMaxPatience = 15;\r\n        this.myReachTargetDistance = 5;\r\n    }\r\n}\r\n\r\nclass MrNOTVent {\r\n    constructor(mrNOTSetup, ventRuntimeSetup, callbackOnPatienceOver, callbackOnReach) {\r\n        this._myMrNOTSetup = mrNOTSetup;\r\n        this._myObject = Global.myGameObjects.get(GameObjectType.MR_NOT);\r\n\r\n        this._myStartPosition = [0, 11, -18];\r\n        this._myRotation = [40, 0, 0];\r\n        this._myScale = [5, 5, 5];\r\n\r\n\r\n        this._myTargetPosition = [0, 1, 0];\r\n        this._myDirection = this._myTargetPosition.vec3_sub(this._myStartPosition);\r\n\r\n        this._myCallbackOnPatienceOver = callbackOnPatienceOver;\r\n        this._myCallbackOnReach = callbackOnReach;\r\n\r\n        this._myFSM = new PP.FSM();\r\n\r\n        //this._myFSM.setDebugLogActive(true, \"        Mr NOT Clone\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"first_wait\", new PP.TimerState(0.05, \"end\"));\r\n        this._myFSM.addState(\"move\", this._move.bind(this));\r\n        this._myFSM.addState(\"stop\", this._stopUpdate.bind(this));\r\n        this._myFSM.addState(\"disappear\", this._disappear.bind(this));\r\n        this._myFSM.addState(\"inactive\");\r\n\r\n        this._myFSM.addTransition(\"init\", \"first_wait\", \"start\", this._prepareMove.bind(this));\r\n        this._myFSM.addTransition(\"first_wait\", \"move\", \"end\", this._startMove.bind(this));\r\n        this._myFSM.addTransition(\"move\", \"disappear\", \"disappear\", this._prepareDisappear.bind(this));\r\n        this._myFSM.addTransition(\"move\", \"stop\", \"startStop\");\r\n        this._myFSM.addTransition(\"stop\", \"disappear\", \"disappear\", this._prepareDisappear.bind(this));\r\n        this._myFSM.addTransition(\"disappear\", \"inactive\", \"end\");\r\n        this._myFSM.addTransition(\"move\", \"inactive\", \"hide\");\r\n        this._myFSM.addTransition(\"disappear\", \"inactive\", \"hide\");\r\n        this._myFSM.addTransition(\"stop\", \"inactive\", \"hide\");\r\n        this._myFSM.addTransition(\"inactive\", \"first_wait\", \"start\", this._prepareMove.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._myCollisions = this._myObject.pp_getComponentsHierarchy(\"collision\");\r\n        this._myPhysx = this._myObject.pp_getComponentHierarchy(\"physx\");\r\n        this._myCollisionsCollector = this._myObject.pp_getComponentHierarchy(\"physx-collector-component\").getCollisionsCollector();\r\n\r\n        this._myExplodeAudio = Global.myAudioManager.createAudioPlayer(SfxID.MR_NOT_EXPLODE);\r\n        this._myHitAudio = Global.myAudioManager.createAudioPlayer(SfxID.CLONE_EXPLODE);\r\n        this._myAppearAudio = Global.myAudioManager.createAudioPlayer(SfxID.MR_NOT_FAST_APPEAR);\r\n\r\n        this._myRumbleScreen = new RumbleScreen();\r\n\r\n        //Setup\r\n        this._myReachTargetDistance = 5;\r\n        this._myMinTargetDistance = 10;\r\n        this._myMinParticleDistance = this._myScale[0] * 0.55;\r\n        this._myParticlesSize = 6.5;\r\n        this._myParticlesSizeMrNot = 0.9;\r\n        this._myMaxPatience = 1;\r\n        this._myPatienceRefill = 0;\r\n\r\n        this._myReachTargetDistance = this._myMrNOTSetup.myReachTargetDistance;\r\n\r\n        let directionAngle = this._myDirection.vec3_angle(this._myDirection.vec3_removeComponentAlongAxis([0, 1, 0]));\r\n        let distanceToIgnore = this._myReachTargetDistance / Math.cos(Math.pp_toRadians(directionAngle));\r\n\r\n        this._mySpeed = (this._myTargetPosition.vec3_sub(this._myStartPosition).vec3_length() - distanceToIgnore) / this._myMrNOTSetup.myTimeToReachTarget;\r\n        this._myMaxPatience = this._myMrNOTSetup.myMaxPatience;\r\n\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._myCollisionsCollector.update(dt);\r\n\r\n        this._myFSM.update(dt);\r\n\r\n        this._myRumbleScreen.update(dt);\r\n    }\r\n\r\n    isDone() {\r\n        return this._myFSM.isInState(\"inactive\");\r\n    }\r\n\r\n    hide() {\r\n        this._myRumbleScreen.stop();\r\n        this._myObject.pp_setActive(false);\r\n        this._myFSM.perform(\"hide\");\r\n    }\r\n\r\n    stop() {\r\n        this._myFSM.perform(\"startStop\");\r\n    }\r\n\r\n    _prepareMove() {\r\n        PP.MeshUtils.setFogColor(this._myObject, [0, 0, 0, 0]);\r\n        this._myObject.pp_setPosition(this._myStartPosition);\r\n        this._myObject.pp_setScale(this._myScale);\r\n        this._myObject.pp_setRotation(this._myRotation);\r\n\r\n        let angle = -this._myMrNOTSetup.myDirection.vec3_angleSigned([0, 0, -1], [0, 1, 0]);\r\n        this._myObject.pp_rotateAroundAxis(angle, [0, 1, 0], [0, 0, 0]);\r\n        this._myObject.pp_getPosition(this._myStartPosition);\r\n        this._myDirection = this._myTargetPosition.vec3_sub(this._myStartPosition);\r\n\r\n        for (let collision of this._myCollisions) {\r\n            if (collision.collider == WL.Collider.Sphere) {\r\n                collision.extents = [this._myScale[0] * 1.1, this._myScale[0] * 1.1, this._myScale[0] * 1.1];\r\n            } else {\r\n                collision.extents = [this._myScale[0], this._myScale[1], this._myScale[2] * 0.2];\r\n            }\r\n        }\r\n\r\n        this._myPhysx.extents = [this._myScale[0] * 0.018, this._myScale[1] * 0.018, this._myScale[2] * 0.025];\r\n\r\n        this._myCurrentPosition = [];\r\n        this._myObject.pp_getPosition(this._myCurrentPosition);\r\n\r\n        this._myPatience = this._myMaxPatience;\r\n\r\n        this._myAppearAudio.setPosition(this._myObject.pp_getPosition());\r\n        this._myAppearAudio.play();\r\n\r\n        this._myRumbleScreen.stop();\r\n\r\n        this._myRumbleScreen.start(0.3, 1.5);\r\n        PP.myRightGamepad.pulse(0.6, 0.3);\r\n        PP.myLeftGamepad.pulse(0.6, 0.3);\r\n\r\n        this._myHitsReceived = 0;\r\n    }\r\n\r\n    _startMove() {\r\n        this._myObject.pp_setActive(true);\r\n    }\r\n\r\n    _move(dt) {\r\n        this._myTargetPosition.vec3_sub(this._myStartPosition, this._myDirection);\r\n        this._myDirection.vec3_normalize(this._myDirection);\r\n        this._myDirection.vec3_scale(this._mySpeed * dt, this._myDirection);\r\n        this._myObject.pp_translateWorld(this._myDirection);\r\n\r\n        this._myObject.pp_getPosition(this._myCurrentPosition);\r\n        let distanceToTarget = this._myTargetPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myCurrentPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n        let distanceToTargetFromStart = this._myTargetPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myStartPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n        let distanceToCurrentFromStart = this._myStartPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myCurrentPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n\r\n        if (distanceToTarget < this._myReachTargetDistance || distanceToTargetFromStart < distanceToCurrentFromStart) {\r\n            //console.log(\"mr NOT Hits Received -\", this._myHitsReceived);\r\n            if (this._myCallbackOnReach) {\r\n                this._myCallbackOnReach(this);\r\n            }\r\n        } else {\r\n            this._checkHit();\r\n\r\n            /*\r\n            let distanceToTarget = this._myTargetPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myCurrentPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n            if (distanceToTarget < this._myMinTargetDistance) {\r\n                this._myCallbackOnPatienceOver();\r\n                this._myFSM.perform(\"explode\");\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    _stopUpdate() {\r\n        this._checkHit(true);\r\n    }\r\n\r\n    _checkHit(avoidCallbacks = false) {\r\n        let hit = false;\r\n        let hittingObjects = [];\r\n\r\n        let useCollider = false;\r\n        if (useCollider) {\r\n            let collidingComps = [];\r\n            for (let collision of this._myCollisions) {\r\n                collidingComps.push(collision.queryOverlaps());\r\n            }\r\n\r\n            if (collidingComps.length > 0) {\r\n                for (let i = 0; i < collidingComps[0].length; ++i) {\r\n                    let collidingComponent = collidingComps[0][i];\r\n                    if (collidingComponent.object.pp_getComponent(\"evidence-component\") != null) {\r\n                        let isColliding = true;\r\n                        for (let j = 1; j < collidingComps.length; ++j) {\r\n                            if (collidingComps[j].pp_find(element => element.equals(collidingComponent)) == null) {\r\n                                isColliding = false;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (isColliding) {\r\n                            let evidenceComponent = collidingComponent.object.pp_getComponent(\"evidence-component\");\r\n                            if (evidenceComponent && evidenceComponent.getEvidence() && evidenceComponent.getEvidence().canHit()) {\r\n                                hit = true;\r\n                                hittingObjects.push(collidingComponent.object);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let usePhysx = true;\r\n        if (usePhysx) {\r\n            let collisionsStart = this._myCollisionsCollector.getCollisionsStart();\r\n            if (collisionsStart.length > 0) {\r\n                for (let collision of collisionsStart) {\r\n                    let evidenceComponent = collision.pp_getComponent(\"evidence-component\");\r\n                    if (evidenceComponent && evidenceComponent.getEvidence() && evidenceComponent.getEvidence().canHit()) {\r\n                        hit = true;\r\n                        hittingObjects.push(collision);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hit) {\r\n            let patienceToRemove = 0;\r\n            for (let object of hittingObjects) {\r\n                this._myHitAudio.setPosition(object.pp_getPosition());\r\n                this._myHitAudio.setPitch(Math.pp_random(0.85, 1.05));\r\n                this._myHitAudio.play();\r\n\r\n                let evidence = object.pp_getComponent(\"evidence-component\");\r\n                evidence.bigHit(this._myObject);\r\n\r\n                patienceToRemove++;\r\n            }\r\n\r\n\r\n            this._myHitsReceived += patienceToRemove;\r\n\r\n            if (!avoidCallbacks) {\r\n                this._myPatience -= patienceToRemove;\r\n\r\n                let distanceToTarget = this._myTargetPosition.vec3_removeComponentAlongAxis([0, 1, 0]).vec3_sub(this._myCurrentPosition.vec3_removeComponentAlongAxis([0, 1, 0])).vec3_length();\r\n\r\n                if (distanceToTarget > this._myMinTargetDistance) {\r\n                    this._myPatience = Math.max(this._myPatience, this._myPatienceRefill);\r\n                }\r\n\r\n                if (this._myPatience <= 0) {\r\n                    Global.myStatistics.myMrNOTDismissed += 1;\r\n                    this._myFSM.perform(\"disappear\");\r\n                    this._myCallbackOnPatienceOver();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    disappear() {\r\n        this._myFSM.perform(\"disappear\");\r\n    }\r\n\r\n    _prepareDisappear() {\r\n        this._myDisappearTimer = new PP.Timer(0);\r\n        this._myDisappearEndTimer = new PP.Timer(0.7, false);\r\n        this._myObject.pp_getPosition(this._myCurrentPosition);\r\n    }\r\n\r\n    _disappear(dt) {\r\n        if (this._myDisappearTimer.isRunning()) {\r\n            this._myDisappearTimer.update(dt);\r\n            if (this._myDisappearTimer.isDone()) {\r\n                this._myObject.pp_setActive(false);\r\n                Global.myParticlesManager.explosion(this._myCurrentPosition, 1.6, [this._myParticlesSizeMrNot, this._myParticlesSizeMrNot, this._myParticlesSizeMrNot], GameObjectType.MR_NOT, true);\r\n                this._myDisappearEndTimer.start();\r\n\r\n                this._myMrNotUp = this._myObject.pp_getUp();\r\n                this._myMrNotForward = this._myObject.pp_getForward();\r\n                let audioPosition = this._myMrNotForward.vec3_scale(this._myScale[2] * 0.675).vec3_add(this._myCurrentPosition);\r\n                //this._myMrNotUp.vec3_scale(1.35).vec3_add(audioPosition, audioPosition);\r\n                this._myExplodeAudio.setPosition(audioPosition);\r\n                this._myExplodeAudio.setPitch(1);\r\n                this._myExplodeAudio.play();\r\n\r\n                this._myRumbleScreen.start(Math.pp_random(0.4, 0.6), 1);\r\n                PP.myRightGamepad.pulse(0.6, 0.5);\r\n                PP.myLeftGamepad.pulse(0.6, 0.5);\r\n            }\r\n        }\r\n\r\n        if (this._myDisappearEndTimer.isRunning()) {\r\n            this._myDisappearEndTimer.update(dt);\r\n            if (this._myDisappearEndTimer.isDone()) {\r\n                this._myRumbleScreen.stop();\r\n                this._myFSM.perform(\"end\");\r\n            }\r\n        }\r\n    }\r\n}",
        "class MrNOTVentState extends PP.State {\r\n    constructor() {\r\n        super();\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"        mr NOT Vent\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"first_wait\", new PP.TimerState(0, \"end\"));\r\n        this._myFSM.addState(\"vent\", this._updateVent.bind(this));\r\n        this._myFSM.addState(\"clean\", this._updateClean.bind(this));\r\n        this._myFSM.addState(\"defeat\", this._updateDefeat.bind(this));\r\n        this._myFSM.addState(\"second_wait_clean\", new PP.TimerState(0, \"end\"));\r\n        this._myFSM.addState(\"second_wait_defeat\", new PP.TimerState(0, \"end\"));\r\n        this._myFSM.addState(\"done\");\r\n\r\n        this._myFSM.addTransition(\"init\", \"first_wait\", \"start\", this._prepareState.bind(this));\r\n        this._myFSM.addTransition(\"first_wait\", \"vent\", \"end\", this._prepareVent.bind(this));\r\n        this._myFSM.addTransition(\"vent\", \"clean\", \"completed\", this._prepareClean.bind(this));\r\n        this._myFSM.addTransition(\"vent\", \"defeat\", \"lost\", this._prepareDefeat.bind(this));\r\n        this._myFSM.addTransition(\"clean\", \"second_wait_clean\", \"end\");\r\n        this._myFSM.addTransition(\"defeat\", \"second_wait_defeat\", \"end\");\r\n        this._myFSM.addTransition(\"second_wait_clean\", \"done\", \"end\", this._ventCompleted.bind(this));\r\n        this._myFSM.addTransition(\"second_wait_defeat\", \"done\", \"end\", this._ventLost.bind(this));\r\n        this._myFSM.addTransition(\"done\", \"first_wait\", \"start\", this._prepareState.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"first_wait\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"second_wait_clean\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"second_wait_defeat\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"vent\", \"done\", \"skip\", this._hideVent.bind(this));\r\n        this._myFSM.addTransition(\"clean\", \"done\", \"skip\", this._hideVent.bind(this));\r\n        this._myFSM.addTransition(\"defeat\", \"done\", \"skip\", this._hideVent.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._myParentFSM = null;\r\n\r\n        this._myEvidenceManager = new EvidenceManager(this._buildEvidenceSetupList());\r\n        this._myMrNOT = new MrNOT(this._onPatienceOver.bind(this), this._onMrNOTReach.bind(this), this._onExplosionDone.bind(this));\r\n        this._myVent = new Vent(this._buildVentSetup());\r\n        this._myVent.onVentLost(this._onVentReach.bind(this));\r\n        this._myNotEnough = new NotEnough();\r\n\r\n        this._myCleanTimer = new PP.Timer(2.75);\r\n        this._myEvidenceTimer = new PP.Timer(1);\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        Global.myVentDuration += dt;\r\n\r\n        if (Global.myIsUsingTrackedHands) {\r\n            Global.myVentDurationWithTrackedHands += dt;\r\n        }\r\n\r\n        this._myFSM.update(dt);\r\n        this._myEvidenceManager.update(dt);\r\n        this._myVent.update(dt);\r\n        this._myMrNOT.update(dt);\r\n\r\n        if (Global.myDebugShortcutsEnabled) {\r\n            //TEMP REMOVE THIS\r\n            if (PP.myRightGamepad.getButtonInfo(PP.ButtonType.SELECT).isPressEnd(Global.myDebugShortcutsPress)) {\r\n                Global.myStopMusic = true;\r\n                this._myFSM.perform(\"skip\");\r\n                this._myVent.ventCompletedDebug();\r\n                this._ventCompleted();\r\n            }\r\n\r\n            //TEMP REMOVE THIS\r\n            if (PP.myLeftGamepad.getButtonInfo(PP.ButtonType.SQUEEZE).isPressEnd(Global.myDebugShortcutsPress)) {\r\n                Global.myStopMusic = true;\r\n                this._myFSM.perform(\"skip\");\r\n                this._myVent.ventLostDebug();\r\n                this._ventLost();\r\n            }\r\n        }\r\n    }\r\n\r\n    _prepareState(fsm, transition) {\r\n        Global.myLightFadeInTime = 0;\r\n        Global.myVentDuration = 0;\r\n        Global.myVentDurationWithTrackedHands = 0;\r\n        this._myNotEnough.stop();\r\n    }\r\n\r\n    _prepareVent() {\r\n        this._myMrNOT.start();\r\n        this._myEvidenceTimer.start();\r\n        this._myVent.start();\r\n\r\n        Global.mySaveManager.save(\"mr_NOT_encountered\", true);\r\n    }\r\n\r\n    _updateVent(dt, fsm) {\r\n        if (this._myEvidenceTimer.isRunning()) {\r\n            this._myEvidenceTimer.update(dt);\r\n            if (this._myEvidenceTimer.isDone()) {\r\n                this._myEvidenceManager.start();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    _prepareClean() {\r\n        this._myCleanTimer.start();\r\n        this._myVent.clean(this._myCleanTimer.getDuration());\r\n\r\n        Global.myStopMusic = true;\r\n    }\r\n\r\n    _updateClean(dt, fsm) {\r\n        if (this._myCleanTimer.isRunning()) {\r\n            this._myCleanTimer.update(dt);\r\n            if (this._myCleanTimer.isDone()) {\r\n                this._myEvidenceManager.clean();\r\n            }\r\n        }\r\n\r\n        if (this._myMrNOT.isDone() && this._myEvidenceManager.isDone() && this._myVent.isDone()) {\r\n            this._myFSM.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    _prepareDefeat() {\r\n        let zestyObject = Global.myGameObjects.get(GameObjectType.ZESTY_MARKET);\r\n        let grabbable = zestyObject.pp_getComponentHierarchy(\"pp-grabbable\");\r\n        if (grabbable.isGrabbed()) {\r\n            let zestyComponent = zestyObject.pp_getComponentHierarchy(\"zesty-banner\");\r\n            if (zestyComponent) {\r\n                // open zesty, I decided to not do that in this case tho\r\n            }\r\n        }\r\n\r\n        this._myVent.stop();\r\n        this._myEvidenceManager.explode();\r\n        this._myMrNOT.hide();\r\n        this._myNotEnough.start();\r\n        Global.myParticlesManager.mrNOTParticles(Global.myPlayerPosition);\r\n\r\n        Global.myStopMusic = true;\r\n    }\r\n\r\n    _updateDefeat(dt, fsm) {\r\n        this._myNotEnough.update(dt);\r\n\r\n        if (this._myEvidenceManager.isDone() && !this._myNotEnough.isNotEnoughing()) {\r\n            this._myFSM.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    _ventCompleted() {\r\n        this._myParentFSM.perform(\"completed\");\r\n    }\r\n\r\n    _ventLost(dt, fsm) {\r\n        this._myParentFSM.perform(\"lost\");\r\n    }\r\n\r\n    _hideVent() {\r\n        this._hideEvidences();\r\n        this._myMrNOT.hide();\r\n        this._myVent.stop();\r\n        this._myNotEnough.stop();\r\n    }\r\n\r\n    _hideEvidences() {\r\n        this._myEvidenceManager.hide();\r\n    }\r\n\r\n    start(fsm, transition) {\r\n        this._myParentFSM = fsm;\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    end(fsm, transitionID) {\r\n        if (!this._myFSM.isInState(\"done\")) {\r\n            this._myFSM.perform(\"skip\");\r\n        }\r\n    }\r\n\r\n    _buildEvidenceSetupList() {\r\n        let evidenceSetupList = [];\r\n\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TRIAL_TIMER, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.ZESTY_MARKET, 4));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TUCIA_DRAWING, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.CPLUSPLUS_PRIMER, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PIANO, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.MICCO_THE_BEAR, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WATER_LILY, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.LOL, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.DRINK_ME_EARRING, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.STARING_CUBE, 3));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.TROPHY, 5));\r\n\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WONDERMELON, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PSI, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WONDERLAND, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.VR, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.EGGPLANT, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.PICO_8, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.EVERYEYE, 5));\r\n\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.ANT_MAIN_CHARACTER, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.SHATTERED_COIN, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.HEART, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.HALO_SWORD, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.FOX, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.FAMILY, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.MIRROR, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.ALOE_VERA, 5));\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.MR_NOT_EVIDENCE, 5));\r\n\r\n        evidenceSetupList.push(new EvidenceSetup(GameObjectType.WAYFINDER, 25, null, null,\r\n            [CardinalPosition.NORTH, CardinalPosition.NORTH_EAST, CardinalPosition.NORTH_WEST, CardinalPosition.EAST, CardinalPosition.WEST]));\r\n\r\n        return evidenceSetupList;\r\n    }\r\n\r\n    _onPatienceOver() {\r\n        this._myFSM.perform(\"completed\");\r\n    }\r\n\r\n    _onMrNOTReach() {\r\n        this._myVent.ventLostDebug();\r\n        this._myFSM.perform(\"lost\");\r\n    }\r\n\r\n    _onVentReach() {\r\n        this._myFSM.perform(\"lost\");\r\n    }\r\n\r\n    _onExplosionDone() {\r\n    }\r\n\r\n    _buildVentSetup() {\r\n        let ventSetup = new VentSetup();\r\n\r\n        ventSetup.myIsEndless = true;\r\n\r\n        ventSetup.myBreakSetup.myBreakDuration = new RangeValue([2, 3]);\r\n        ventSetup.myBreakSetup.myBreakTimeCooldown = new RangeValueOverTime([20, 25], [20, 25], 10, 30, false);\r\n        ventSetup.myBreakSetup.myBreakCloneCooldown = 5;\r\n\r\n        ventSetup.mySmallBreakSetup.myBreakDuration = new RangeValueOverTime([1, 2], [1, 2], 10, 30, false);\r\n        ventSetup.mySmallBreakSetup.myBreakTimeCooldown = new RangeValueOverTime([800, 1200], [800, 1200], 10, 30, false);\r\n        ventSetup.mySmallBreakSetup.myBreakCloneCooldown = 3;\r\n\r\n        ventSetup.myCloneRotationSetup.mySpinSpeed = new RangeValue([4, 6], false);\r\n        ventSetup.myCloneRotationSetup.mySpinChance = new RangeValueOverTime([1, 8], [1, 4], 20, 40, true);\r\n        ventSetup.myCloneRotationSetup.mySpinStartTime = 20;\r\n\r\n        ventSetup.myCloneRotationSetup.myTiltAngle = new RangeValueOverTime([0, 10], [0, 15], 15, 35, false);\r\n        ventSetup.myCloneRotationSetup.myTiltChance = new RangeValueOverTime([1, 5], [1, 2], 15, 35, true);\r\n        ventSetup.myCloneRotationSetup.myTiltStartTime = 15;\r\n\r\n        ventSetup.myValidAngleRanges =\r\n            [[new RangeValueOverTime([30, 180], [90, 180], PP.myEasyTuneVariables.get(\"Time To Reach Target\") / 5, PP.myEasyTuneVariables.get(\"Time To Reach Target\")), [0, 0, -1]],\r\n            [new RangeValueOverTime([-180, -30], [-180, -90], PP.myEasyTuneVariables.get(\"Time To Reach Target\") / 5, PP.myEasyTuneVariables.get(\"Time To Reach Target\")), [0, 0, -1]]];\r\n\r\n        let multipliers = new VentRuntimeMultipliers();\r\n\r\n        multipliers.mySpawnTimeMultiplier = 1;\r\n        multipliers.myDoneTimeMultiplier = 1;\r\n        multipliers.myBreakTimeMultiplier = 1;\r\n        multipliers.myBreakDelayTimeMultiplier = 1;\r\n        multipliers.mySmallBreakTimeMultiplier = 1;\r\n        multipliers.mySmallBreakDelayTimeMultiplier = 1;\r\n\r\n        ventSetup.myVentMultipliers = multipliers;\r\n\r\n        ventSetup.myDelayBeforeStart = 7;\r\n\r\n        let timeBetweenClones = new RangeValueOverTime([2, 3], [1.5, 2.5], 10, 30, false);\r\n        let doneDelay = new RangeValueOverTime([2.5, 4], [2, 3], 10, 30, false);\r\n\r\n        {\r\n            let wave = new IAmHereWaveSetup();\r\n\r\n            wave.myClonesCount = new RangeValue([2, 3], true);\r\n            wave.myWaveStartAngle = new RangeValue([45, 55]);\r\n            wave.mySpawnConeAngle = new RangeValue([20, 30]);\r\n            wave.myMinAngleBetweenClones = 10;\r\n            wave.myTimeBetweenClones = timeBetweenClones;\r\n            wave.myDoneDelay = doneDelay;\r\n            wave.myFirstCloneInTheMiddle = true;\r\n            wave.myRefDirection = [0, 0, -1];\r\n\r\n            let nextWavesSetup = new NextWavesSetup();\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Here\", 100);\r\n            nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n            nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n            nextWavesSetup.addWave(\"Man_In_The_Middle\", 100);\r\n\r\n            ventSetup.myWavesMap.set(\"I_Am_Here_mr_NOT_Side\", wave);\r\n            ventSetup.myNextWavesMap.set(\"I_Am_Here_mr_NOT_Side\", nextWavesSetup);\r\n        }\r\n\r\n        {\r\n            let wave = new IAmHereWaveSetup();\r\n\r\n            wave.myClonesCount = new RangeValueOverTime([1, 3], [1, 5], 10, 30, true);\r\n            wave.myWaveStartAngle = new RangeValue([10, 175]);\r\n            wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n            wave.myMinAngleBetweenClones = 10;\r\n            wave.myTimeBetweenClones = timeBetweenClones;\r\n            wave.myDoneDelay = doneDelay;\r\n            wave.myFirstCloneInTheMiddle = true;\r\n\r\n            let nextWavesSetup = new NextWavesSetup();\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Here\", 100);\r\n            nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n            nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n            nextWavesSetup.addWave(\"Man_In_The_Middle\", 100);\r\n\r\n            ventSetup.myWavesMap.set(\"I_Am_Here\", wave);\r\n            ventSetup.myNextWavesMap.set(\"I_Am_Here\", nextWavesSetup);\r\n        }\r\n\r\n        {\r\n            let wave = new IAmEverywhereWaveSetup();\r\n\r\n            wave.myWavesCount = new RangeValueOverTime([3, 4], [3, 5], 10, 30, true);\r\n            wave.myAngleBetweenWaves = new RangeValueOverTime([60, 110], [60, 150], 10, 30, false);\r\n            wave.myTimeBetweenWaves = timeBetweenClones;\r\n            wave.myDoneDelay = new RangeValueOverTime([3, 4], [2.5, 3], 10, 30, false);\r\n            wave.myWaveStartAngle = new RangeValue([10, 175]);\r\n\r\n            let nextWavesSetup = new NextWavesSetup();\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Here\", 100);\r\n            nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n            nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100);\r\n            nextWavesSetup.addWave(\"Man_In_The_Middle\", 100);\r\n\r\n            ventSetup.myWavesMap.set(\"I_Am_Everywhere\", wave);\r\n            ventSetup.myNextWavesMap.set(\"I_Am_Everywhere\", nextWavesSetup);\r\n        }\r\n\r\n        {\r\n            let wave = new MerryGoRoundSetup();\r\n\r\n            wave.myWavesCount = new RangeValueOverTime([3, 5], [4, 6], 10, 30, true);\r\n            wave.myAngleBetweenWaves = new RangeValue([15, 25]);\r\n            wave.myTimeBetweenWaves = new RangeValueOverTime([2, 3], [1.5, 2], 10, 30, false);\r\n            wave.myWaveStartAngle = new RangeValue([10, 175]);\r\n            wave.mySameTimeBetweenWaves = 1;\r\n            wave.myDoneDelay = doneDelay;\r\n            wave.myWaveDirection = 1;\r\n\r\n            let nextWavesSetup = new NextWavesSetup();\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Here\", 100);\r\n            nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n            nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n            nextWavesSetup.addWave(\"Man_In_The_Middle\", 100);\r\n\r\n            ventSetup.myWavesMap.set(\"Merry_Go_Round_Left\", wave);\r\n            ventSetup.myNextWavesMap.set(\"Merry_Go_Round_Left\", nextWavesSetup);\r\n        }\r\n\r\n        {\r\n            let wave = new MerryGoRoundSetup();\r\n\r\n            wave.myWavesCount = new RangeValueOverTime([3, 5], [4, 6], 10, 30, true);\r\n            wave.myAngleBetweenWaves = new RangeValue([15, 25]);\r\n            wave.myTimeBetweenWaves = new RangeValueOverTime([2, 3], [1.5, 2], 10, 30, false);\r\n            wave.myWaveStartAngle = new RangeValue([10, 175]);\r\n            wave.mySameTimeBetweenWaves = 1;\r\n            wave.myDoneDelay = doneDelay;\r\n            wave.myWaveDirection = -1;\r\n\r\n            let nextWavesSetup = new NextWavesSetup();\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Here\", 100);\r\n            nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n            nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n            nextWavesSetup.addWave(\"Man_In_The_Middle\", 100);\r\n\r\n            ventSetup.myWavesMap.set(\"Merry_Go_Round_Right\", wave);\r\n            ventSetup.myNextWavesMap.set(\"Merry_Go_Round_Right\", nextWavesSetup);\r\n        }\r\n\r\n        {\r\n            let wave = new QueueForYouWaveSetup();\r\n\r\n            wave.myClonesCount = new RangeValueOverTime([2, 3], [2, 5], 10, 30, true);\r\n            wave.myWaveStartAngle = new RangeValue([10, 175]);\r\n            wave.myTimeBetweenClones = timeBetweenClones;\r\n            wave.myDoneDelay = doneDelay;\r\n            wave.mySameTimeBetweenClones = new RangeValueOverTime([1, 1], [-1, 1], 10, 30, false); // >= 0 means true\r\n\r\n            let nextWavesSetup = new NextWavesSetup();\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Here\", 100);\r\n            nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n            nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n            nextWavesSetup.addWave(\"Man_In_The_Middle\", 100);\r\n\r\n            ventSetup.myWavesMap.set(\"Queue_For_You\", wave);\r\n            ventSetup.myNextWavesMap.set(\"Queue_For_You\", nextWavesSetup);\r\n        }\r\n\r\n        {\r\n            let wave = new GiveUsAHugSetup();\r\n\r\n            wave.myClonesCount = new RangeValueOverTime([1, 2], [2, 3], 10, 30, true);\r\n            wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n            wave.myMinAngleBetweenClones = 10;\r\n            wave.myWaveStartAngle = new RangeValue([10, 175]);\r\n            wave.myTimeBetweenClones = timeBetweenClones;\r\n            wave.myDoneDelay = doneDelay;\r\n            wave.myFirstCloneInTheMiddle = true;\r\n\r\n            wave.myHugSize = new RangeValueOverTime([2, 2], [2, 2], 10, 30, true);\r\n            wave.myHugAngle = new RangeValueOverTime([30, 40], [30, 50], 10, 30, false);\r\n\r\n            let nextWavesSetup = new NextWavesSetup();\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Here\", 100);\r\n            nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n            nextWavesSetup.addWave(\"Man_In_The_Middle\", 100);\r\n\r\n            ventSetup.myWavesMap.set(\"Give_Us_A_Hug\", wave);\r\n            ventSetup.myNextWavesMap.set(\"Give_Us_A_Hug\", nextWavesSetup);\r\n        }\r\n\r\n        {\r\n            let wave = new ManInTheMiddleSetup();\r\n\r\n            wave.myWavesCount = new RangeValueOverTime([3, 3], [2, 4], 10, 30, true);\r\n            wave.myTimeBeforeStart = new RangeValueOverTime([1, 1.5], [1, 1.5], 10, 30, false);\r\n            wave.myTimeBetweenWaves = new RangeValueOverTime([1.5, 2], [1, 2], 10, 30, false);\r\n            wave.myWaveStartAngle = new RangeValue([10, 175]);\r\n            wave.myDoneDelay = new RangeValueOverTime([3, 4], [2.5, 3], 10, 30, false);\r\n\r\n            let nextWavesSetup = new NextWavesSetup();\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n            nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Here\", 100);\r\n            nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n            nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100);\r\n            nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n\r\n            ventSetup.myWavesMap.set(\"Man_In_The_Middle\", wave);\r\n            ventSetup.myNextWavesMap.set(\"Man_In_The_Middle\", nextWavesSetup);\r\n        }\r\n\r\n        ventSetup.myFirstWave = \"I_Am_Here_mr_NOT_Side\";\r\n\r\n        return ventSetup;\r\n    }\r\n}",
        "class PulseRadar {\r\n    constructor() {\r\n        this._myPulseIntensity = 0.35;\r\n\r\n        this._myDownDuration = 1.5;\r\n        this._myPulseDuration = 0.35;\r\n\r\n        this._myMinAngle = 45;\r\n        this._myBehindMinAngle = 160;\r\n\r\n        this._myLeftPulseDownTimer = new PP.Timer(this._myDownDuration, false);\r\n        this._myLeftPulseActiveTimer = new PP.Timer(this._myPulseDuration, false);\r\n        this._myRightPulseDownTimer = new PP.Timer(this._myDownDuration, false);\r\n        this._myRightPulseActiveTimer = new PP.Timer(this._myPulseDuration, false);\r\n\r\n        this._myPositionsDelayed = [];\r\n    }\r\n\r\n    start() {\r\n        this._myLeftPulseDownTimer.reset();\r\n        this._myLeftPulseActiveTimer.reset();\r\n        this._myRightPulseDownTimer.reset();\r\n        this._myRightPulseActiveTimer.reset();\r\n    }\r\n\r\n    addSignal(position) {\r\n        this._myPositionsDelayed.push([position.pp_clone(), 0.35]);\r\n    }\r\n\r\n    update(dt) {\r\n        for (let positionDelayed of this._myPositionsDelayed) {\r\n            positionDelayed[1] -= dt;\r\n            if (positionDelayed[1] < 0) {\r\n                this._addSignal(positionDelayed[0]);\r\n            }\r\n        }\r\n        this._myPositionsDelayed.pp_removeAll(element => element[1] < 0);\r\n\r\n        this._myLeftPulseDownTimer.update(dt);\r\n        this._myRightPulseDownTimer.update(dt);\r\n\r\n        if (this._myLeftPulseActiveTimer.isRunning()) {\r\n            this._myLeftPulseActiveTimer.update(dt);\r\n            PP.myLeftGamepad.pulse(this._myPulseIntensity, 0);\r\n            if (this._myLeftPulseActiveTimer.isDone()) {\r\n                this._myLeftPulseDownTimer.start();\r\n            }\r\n        }\r\n\r\n        if (this._myRightPulseActiveTimer.isRunning()) {\r\n            this._myRightPulseActiveTimer.update(dt);\r\n            PP.myRightGamepad.pulse(this._myPulseIntensity, 0);\r\n            if (this._myRightPulseActiveTimer.isDone()) {\r\n                this._myRightPulseDownTimer.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    _addSignal(position) {\r\n        let playerDirection = position.vec3_sub(Global.myPlayerPosition);\r\n        playerDirection.vec3_removeComponentAlongAxis([0, 1, 0], playerDirection);\r\n        let flatPlayerForward = Global.myPlayerForward.vec3_removeComponentAlongAxis([0, 1, 0]);\r\n\r\n        let angleSigned = flatPlayerForward.vec3_angleSigned(playerDirection, [0, 1, 0]);\r\n        if (angleSigned >= this._myBehindMinAngle || angleSigned <= -this._myBehindMinAngle) {\r\n            if (!this._myLeftPulseActiveTimer.isRunning() && !this._myLeftPulseDownTimer.isRunning()) {\r\n                this._myLeftPulseActiveTimer.start();\r\n                this._myRightPulseActiveTimer.start();\r\n            } else if (!this._myRightPulseActiveTimer.isRunning() && !this._myRightPulseDownTimer.isRunning()) {\r\n                this._myLeftPulseActiveTimer.start();\r\n                this._myRightPulseActiveTimer.start();\r\n            }\r\n        } else if (angleSigned >= this._myMinAngle) {\r\n            if (!this._myLeftPulseActiveTimer.isRunning() && !this._myLeftPulseDownTimer.isRunning()) {\r\n                this._myLeftPulseActiveTimer.start();\r\n            }\r\n        } else if (angleSigned <= -this._myMinAngle) {\r\n            if (!this._myRightPulseActiveTimer.isRunning() && !this._myRightPulseDownTimer.isRunning()) {\r\n                this._myRightPulseActiveTimer.start();\r\n            }\r\n        }\r\n    }\r\n}",
        "WL.registerComponent(\"timer\", {\r\n    _myIsTrial: { type: WL.Type.Bool, default: false },\r\n    _mySeconds: { type: WL.Type.Object },\r\n    _myMinutes: { type: WL.Type.Object },\r\n    _myHours: { type: WL.Type.Object },\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._mySecondsTextComponent = this._mySeconds.pp_getComponent(\"text\");\r\n        this._myMinutesTextComponent = this._myMinutes.pp_getComponent(\"text\");\r\n        this._myHoursTextComponent = this._myHours.pp_getComponent(\"text\");\r\n    },\r\n    update: function (dt) {\r\n        let time = Global.myVentDuration;\r\n        if (this._myIsTrial) {\r\n            time = Global.myTrialDuration;\r\n        }\r\n\r\n        time = Math.floor(time);\r\n\r\n        let hours = Math.floor(time / 3600);\r\n        time -= hours * 3600;\r\n        let minutes = Math.floor(time / 60);\r\n        time -= minutes * 60;\r\n        let seconds = Math.floor(time);\r\n\r\n        this._mySecondsTextComponent.text = (seconds.toFixed(0).length < 2) ? \"0\".concat(seconds.toFixed(0)) : seconds.toFixed(0);\r\n        this._myMinutesTextComponent.text = (minutes.toFixed(0).length < 2) ? \"0\".concat(minutes.toFixed(0)) : minutes.toFixed(0);\r\n        this._myHoursTextComponent.text = (hours.toFixed(0).length < 2) ? \"0\".concat(hours.toFixed(0)) : hours.toFixed(0);\r\n    }\r\n});",
        "class BreakSetup {\r\n    constructor() {\r\n        this.myBreakDuration = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.myBreakTimeCooldown = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.myBreakCloneCooldown = new RangeValueOverTime([0, 0], [0, 0], 0, 0, true);\r\n    }\r\n}\r\n\r\nclass VentSetup {\r\n    constructor() {\r\n        this.myValidAngleRanges = [[new RangeValue([-180, 180]), [0, 0, -1]]];\r\n        this.myVentMultipliers = new VentRuntimeMultipliers();\r\n\r\n        this.myBreakSetup = new BreakSetup();\r\n        this.mySmallBreakSetup = new BreakSetup();\r\n\r\n        this.myIsEndless = true;\r\n        this.myClonesToDismiss = 0;\r\n        this.myVentDuration = 0;\r\n\r\n        this.myWavesMap = new Map();\r\n        this.myNextWavesMap = new Map();\r\n\r\n        this.myFirstWave = \"\";\r\n\r\n        this.myCloneRotationSetup = new CloneRotationSetup();\r\n\r\n        this.myRefDirection = null;\r\n\r\n        this.mySkipBreakWhenTimerBelow = 15;\r\n        this.mySkipSmallBreakWhenTimerBelow = 7;\r\n        this.mySkipSmallBreakWhenBreakTimerBelow = 5;\r\n\r\n        this.myResetBreakWhenBreakTimerBelow = 10;\r\n        this.myResetBreakAmount = new RangeValue([10, 12]);\r\n\r\n        this.myDelayBeforeStart = 4.5;\r\n\r\n        this.myMrNOTSetup = new VentMrNOTSetup();\r\n\r\n        this.myNextWaveChanceBoosterSetupMap = new Map();\r\n    }\r\n}\r\n\r\nclass VentMrNOTSetup {\r\n    constructor() {\r\n        this.myMrNOTAppearenceEnabled = false;\r\n        this.myMrNOTTimeCooldown = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.myVentMultipliers = new VentRuntimeMultipliers();\r\n\r\n        this.myBreakDuration = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n\r\n        this.myResetMrNOTTimerWhenBelowBreak = 8;\r\n        this.myResetTimerAmountBreak = new RangeValue([8, 10]);\r\n        this.myResetMrNOTTimerWhenBelowSmallBreak = 4;\r\n        this.myResetTimerAmountSmallBreak = new RangeValue([4, 6]);\r\n\r\n        this.myStartAngle = new RangeValueOverTime([180, 180], [180, 180], 0, 0, false);\r\n        this.myTimeToReachTarget = new RangeValueOverTime([50, 50], [50, 50], 0, 0, false);\r\n        this.myMaxPatience = new ValueOverTime(15, 15, 0, 0, true);\r\n    }\r\n}\r\n\r\nclass VentRuntimeSetup {\r\n    constructor() {\r\n        this.myValidAngleRanges = [[new RangeValue([-180, 180]), [0, 0, -1]]];\r\n\r\n        this.myVentMultipliers = new VentRuntimeMultipliers();\r\n    }\r\n}\r\n\r\nclass VentRuntimeMultipliers {\r\n    constructor() {\r\n        this.mySpawnTimeMultiplier = 1;\r\n        this.myDoneTimeMultiplier = 1;\r\n        this.myBreakTimeMultiplier = 1;\r\n        this.myBreakDelayTimeMultiplier = 1;\r\n        this.mySmallBreakTimeMultiplier = 1;\r\n        this.mySmallBreakDelayTimeMultiplier = 1;\r\n    }\r\n}\r\n\r\nclass Vent {\r\n    constructor(ventSetup) {\r\n        this._myVentSetup = ventSetup;\r\n        this._myPulseRadar = new PulseRadar();\r\n\r\n        this._myMrNOTClones = [];\r\n\r\n        this._myOnVentLostCallback = null;\r\n        this._myOnVentCompletedCallback = null;\r\n\r\n        this._myFSM = new PP.FSM();\r\n\r\n        //this._myFSM.setDebugLogActive(true, \"        Vent\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"first_wait\", new PP.TimerState(ventSetup.myDelayBeforeStart, \"end\"));\r\n        this._myFSM.addState(\"wave\", this._updateWave.bind(this));\r\n        this._myFSM.addState(\"break\", this._break.bind(this));\r\n        this._myFSM.addState(\"smallBreak\", this._break.bind(this));\r\n        this._myFSM.addState(\"clean\", this._clean.bind(this));\r\n        this._myFSM.addState(\"done\");\r\n\r\n        this._myFSM.addTransition(\"init\", \"first_wait\", \"start\");\r\n        this._myFSM.addTransition(\"done\", \"first_wait\", \"start\");\r\n        this._myFSM.addTransition(\"first_wait\", \"wave\", \"end\", this._startVent.bind(this));\r\n        this._myFSM.addTransition(\"wave\", \"break\", \"startBreak\", this._startBreak.bind(this));\r\n        this._myFSM.addTransition(\"wave\", \"smallBreak\", \"startSmallBreak\", this._startSmallBreak.bind(this));\r\n        this._myFSM.addTransition(\"break\", \"wave\", \"end\", this._endBreak.bind(this));\r\n        this._myFSM.addTransition(\"smallBreak\", \"wave\", \"end\", this._endSmallBreak.bind(this));\r\n        this._myFSM.addTransition(\"smallBreak\", \"break\", \"startBreak\", this._startBreak.bind(this));\r\n\r\n        this._myFSM.addTransition(\"break\", \"break\", \"startBreak\", this._startBreak.bind(this));\r\n        this._myFSM.addTransition(\"smallBreak\", \"break\", \"startBreak\", this._startBreak.bind(this));\r\n\r\n        this._myFSM.addTransition(\"break\", \"wave\", \"forceEnd\");\r\n        this._myFSM.addTransition(\"smallBreak\", \"wave\", \"forceEnd\");\r\n\r\n        this._myFSM.addTransition(\"first_wait\", \"done\", \"stop\", this._stop.bind(this));\r\n        this._myFSM.addTransition(\"wave\", \"done\", \"stop\", this._stop.bind(this));\r\n        this._myFSM.addTransition(\"break\", \"done\", \"stop\", this._stop.bind(this));\r\n        this._myFSM.addTransition(\"smallBreak\", \"done\", \"stop\", this._stop.bind(this));\r\n        this._myFSM.addTransition(\"clean\", \"done\", \"stop\", this._stop.bind(this));\r\n\r\n        this._myFSM.addTransition(\"first_wait\", \"clean\", \"startClean\", this._startClean.bind(this));\r\n        this._myFSM.addTransition(\"wave\", \"clean\", \"startClean\", this._startClean.bind(this));\r\n        this._myFSM.addTransition(\"break\", \"clean\", \"startClean\", this._startClean.bind(this));\r\n        this._myFSM.addTransition(\"smallBreak\", \"clean\", \"startClean\", this._startClean.bind(this));\r\n\r\n        this._myFSM.addTransition(\"clean\", \"done\", \"end\");\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._myDebugActive = false;\r\n        this._myDebugActiveNextWave = false;\r\n        this._myDebugActiveBreak = false;\r\n        this._myDebugActivePreviousWaveStats = false;\r\n        this._myDebugActiveWaveStats = false;\r\n        this._myDebugActiveVentStats = false;\r\n        this._myDebugActiveMrNOT = false;\r\n        this._myDebugActiveBoosterGroup = true;\r\n\r\n        this._myOncePerFrame = false;\r\n\r\n        this._myCurrentVentRuntimeSetup = new VentRuntimeSetup();\r\n\r\n        this._myMrNOT = null;\r\n\r\n        this._myNextWaveChanceBooster = new NextWaveChanceBooster();\r\n        for (let entry of this._myVentSetup.myNextWaveChanceBoosterSetupMap.entries()) {\r\n            this._myNextWaveChanceBooster.addSetup(entry[0], entry[1]);\r\n        }\r\n\r\n        this._myBoosterGroupCountMap = new Map();\r\n        this._myBoosterGroupDistanceCountMap = new Map();\r\n        this._myWavesCountMap = new Map();\r\n\r\n        this._myIsTesting = false;\r\n    }\r\n\r\n    start() {\r\n        this._myIsTesting = false;\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    _startVent() {\r\n        this._myMrNOTClones = [];\r\n        this._myPulseRadar.start();\r\n\r\n        this._myVentCompleted = false;\r\n\r\n        this._prepareVentRuntimeSetup();\r\n\r\n        this._myCurrentWave = this._myVentSetup.myWavesMap.get(this._myVentSetup.myFirstWave).createWave(this._myCurrentVentRuntimeSetup, Global.myVentDuration);\r\n        this._myCurrentWaveID = this._myVentSetup.myFirstWave;\r\n\r\n        this._myPreviousWave = null;\r\n        this._myPreviousWaveID = null;\r\n\r\n        let breakDelayMultiplier = this._myCurrentVentRuntimeSetup.myVentMultipliers.myBreakDelayTimeMultiplier.get(Global.myVentDuration);\r\n        this._myBreakDelayTimer = new PP.Timer(this._myVentSetup.myBreakSetup.myBreakTimeCooldown.get(Global.myVentDuration) * breakDelayMultiplier);\r\n        this._myBreakCloneCooldown = this._myVentSetup.myBreakSetup.myBreakCloneCooldown.get(Global.myVentDuration);\r\n\r\n        let smallBreakDelayMultiplier = this._myCurrentVentRuntimeSetup.myVentMultipliers.mySmallBreakDelayTimeMultiplier.get(Global.myVentDuration);\r\n        this._mySmallBreakDelayTimer = new PP.Timer(this._myVentSetup.mySmallBreakSetup.myBreakTimeCooldown.get(Global.myVentDuration) * smallBreakDelayMultiplier, false);\r\n        this._mySmallBreakCloneCooldown = this._myVentSetup.mySmallBreakSetup.myBreakCloneCooldown.get(Global.myVentDuration);\r\n\r\n        this._myVentTimer = new PP.Timer(this._myVentSetup.myVentDuration - Global.myVentDuration);\r\n        this._myClonesLeft = this._myVentSetup.myClonesToDismiss;\r\n\r\n        this._myCloneDismissed = 0;\r\n\r\n        this._myMrNOT = null;\r\n        this._myMrNOTTimer = new PP.Timer(this._myVentSetup.myMrNOTSetup.myMrNOTTimeCooldown.get(Global.myVentDuration) - Global.myVentDuration, this._myVentSetup.myMrNOTSetup.myMrNOTAppearenceEnabled);\r\n\r\n        this._myNextWaveChanceBooster.reset();\r\n\r\n        this._myBoosterGroupCountMap = new Map();\r\n        this._myBoosterGroupDistanceCountMap = new Map();\r\n        this._myWavesCountMap = new Map();\r\n\r\n        this._myMrNOTBreak = false;\r\n\r\n        Global.myDebugCurrentVentObject = this;\r\n\r\n        this._debugNextWave();\r\n    }\r\n\r\n    _updateWave(dt) {\r\n        this._myOncePerFrame = true;\r\n\r\n        this._myVentTimer.update(dt);\r\n        this._myBreakDelayTimer.update(dt);\r\n        this._mySmallBreakDelayTimer.update(dt);\r\n        this._myMrNOTTimer.update(dt);\r\n        this._myNextWaveChanceBooster.update(dt, Global.myVentDuration);\r\n\r\n        if (this._myCurrentWave != null) {\r\n            let cloneSetups = this._myCurrentWave.update(dt);\r\n            for (let cloneSetup of cloneSetups) {\r\n                this.addClone(cloneSetup);\r\n            }\r\n        }\r\n\r\n        this._myPulseRadar.update(dt);\r\n        this._updateClones(dt);\r\n        if (this._myMrNOT) {\r\n            this._myMrNOT.update(dt);\r\n            if (this._myMrNOT && this._myMrNOT.isDone()) {\r\n                this._mrNOTDismissedDone();\r\n            }\r\n        }\r\n\r\n        if (this._myFSM.isInState(\"wave\")) {\r\n            if (this._isVentCompleted()) {\r\n                if (!this._myIsTesting && this._myOnVentCompletedCallback) {\r\n                    this.ventCompletedDebug();\r\n\r\n                    this._myOnVentCompletedCallback();\r\n                }\r\n            } else if (this._myCurrentWave != null && this._myCurrentWave.isDone()) {\r\n                this._getNextWave();\r\n                if (this._myCurrentWave != null) {\r\n                    this._checkBreak();\r\n                }\r\n            } else if (this._myVentSetup.myMrNOTSetup.myMrNOTAppearenceEnabled && !this._myVentCompleted) {\r\n                if (this._myMrNOTTimer.isDone()) {\r\n                    this._myMrNOTTimer.reset();\r\n                    this._mrNOTAppear();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _getNextWave() {\r\n        if (!this._myVentSetup.myIsEndless && this._myVentTimer.isDone() && this._myClonesLeft <= 0) {\r\n            this._myVentCompleted = true;\r\n            this._myCurrentWave = null;\r\n        } else {\r\n            this._myPreviousWave = this._myCurrentWave;\r\n            this._myPreviousWaveID = this._myCurrentWaveID;\r\n\r\n            this._myCurrentWaveID = this._myVentSetup.myNextWavesMap.get(this._myCurrentWaveID).getNextWave(Global.myVentDuration, this._myNextWaveChanceBooster);\r\n            this._myNextWaveChanceBooster.nextWaveSelected(this._myCurrentWaveID, Global.myVentDuration);\r\n\r\n            if (this._myDebugActive && this._myDebugActiveBoosterGroup) {\r\n                let name = this._myNextWaveChanceBooster.getBoostGroupName(this._myCurrentWaveID);\r\n                let value = this._myBoosterGroupCountMap.get(name);\r\n                if (value == null) {\r\n                    value = 0;\r\n                }\r\n                this._myBoosterGroupCountMap.set(name, value + 1);\r\n\r\n                if (!this._myBoosterGroupDistanceCountMap.has(name)) {\r\n                    this._myBoosterGroupDistanceCountMap.set(name, []);\r\n                }\r\n\r\n                let currentDistance = this._myBoosterGroupDistanceCountMap.get(name);\r\n                currentDistance.push(0);\r\n\r\n                for (let entry of this._myBoosterGroupDistanceCountMap.entries()) {\r\n                    if (entry[0] != name) {\r\n                        entry[1][entry[1].length - 1] = entry[1][entry[1].length - 1] + 1;\r\n                    }\r\n                }\r\n\r\n                let waveCount = this._myWavesCountMap.get(this._myCurrentWaveID);\r\n                if (waveCount == null) {\r\n                    waveCount = 0;\r\n                }\r\n                this._myWavesCountMap.set(this._myCurrentWaveID, waveCount + 1);\r\n            }\r\n\r\n            let refDirection = Global.myPlayerForward;\r\n            if (this._myVentSetup.myRefDirection != null) {\r\n                refDirection = this._myVentSetup.myRefDirection.pp_clone();\r\n            }\r\n\r\n            this._myCurrentWave = this._myVentSetup.myWavesMap.get(this._myCurrentWaveID).createWave(this._myCurrentVentRuntimeSetup, Global.myVentDuration, refDirection);\r\n        }\r\n    }\r\n\r\n    _checkBreak() {\r\n        let skipBreak = !this._myVentSetup.myIsEndless && this._myVentTimer.getTimer() <= this._myVentSetup.mySkipBreakWhenTimerBelow.get(Global.myVentDuration);\r\n        let skipSmallBreak = !this._myVentSetup.myIsEndless && this._myVentTimer.getTimer() <= this._myVentSetup.mySkipSmallBreakWhenTimerBelow.get(Global.myVentDuration);\r\n        skipSmallBreak = skipSmallBreak || (!skipBreak && this._myBreakDelayTimer.getTimer() < this._myVentSetup.mySkipSmallBreakWhenBreakTimerBelow.get(Global.myVentDuration));\r\n        if (!skipBreak && this._myBreakDelayTimer.isDone() && this._myBreakCloneCooldown <= 0) {\r\n            this._myFSM.perform(\"startBreak\");\r\n        } else if (!skipSmallBreak && this._mySmallBreakDelayTimer.isDone() && this._mySmallBreakCloneCooldown <= 0) {\r\n            this._myFSM.perform(\"startSmallBreak\");\r\n        } else {\r\n            this._debugNextWave();\r\n        }\r\n    }\r\n\r\n    _startBreak() {\r\n        let multiplier = this._myCurrentVentRuntimeSetup.myVentMultipliers.myBreakTimeMultiplier.get(Global.myVentDuration);\r\n        if (!this._myMrNOTBreak) {\r\n            this._myBreakTimer = new PP.Timer(this._myVentSetup.myBreakSetup.myBreakDuration.get(Global.myVentDuration) * multiplier);\r\n        } else {\r\n            this._myBreakTimer = new PP.Timer(this._myVentSetup.myMrNOTSetup.myBreakDuration.get(Global.myVentDuration));\r\n            this._myMrNOTBreak = false;\r\n        }\r\n        this._myIsSmallBreak = false;\r\n\r\n        if (this._myDebugActive && this._myDebugActiveNextWave) {\r\n            console.log(\"Break -\", this._myBreakTimer.getDuration().toFixed(3));\r\n        }\r\n    }\r\n\r\n    _startSmallBreak() {\r\n        let multiplier = this._myCurrentVentRuntimeSetup.myVentMultipliers.mySmallBreakTimeMultiplier.get(Global.myVentDuration);\r\n        this._myBreakTimer = new PP.Timer(this._myVentSetup.mySmallBreakSetup.myBreakDuration.get(Global.myVentDuration) * multiplier);\r\n        this._myIsSmallBreak = true;\r\n\r\n        if (this._myDebugActive && this._myDebugActiveNextWave) {\r\n            console.log(\"Small Break -\", this._myBreakTimer.getDuration().toFixed(3));\r\n        }\r\n    }\r\n\r\n    _break(dt) {\r\n        this._myVentTimer.update(dt);\r\n        this._myBreakTimer.update(dt);\r\n        this._myBreakDelayTimer.update(dt);\r\n        this._myMrNOTTimer.update(dt);\r\n        this._myNextWaveChanceBooster.update(dt, Global.myVentDuration);\r\n\r\n        this._myPulseRadar.update(dt);\r\n        this._updateClones(dt);\r\n        if (this._myMrNOT) {\r\n            this._myMrNOT.update(dt);\r\n        }\r\n\r\n        if (this._myFSM.isInState(\"break\") || this._myFSM.isInState(\"smallBreak\")) {\r\n            if (this._isVentCompleted()) {\r\n                if (!this._myIsTesting && this._myOnVentCompletedCallback) {\r\n                    this.ventCompletedDebug();\r\n\r\n                    this._myOnVentCompletedCallback();\r\n                }\r\n            } else if (this._myBreakTimer.isDone()) {\r\n                let skipBreak = !this._myVentSetup.myIsEndless && this._myVentTimer.getTimer() <= this._myVentSetup.mySkipBreakWhenTimerBelow.get(Global.myVentDuration);\r\n                if (!skipBreak && this._myIsSmallBreak && this._myBreakDelayTimer.isDone() && this._myBreakCloneCooldown <= 0) {\r\n                    this._myFSM.perform(\"startBreak\");\r\n                } else {\r\n                    this._myFSM.perform(\"end\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _endBreak() {\r\n        let breakDelayMultiplier = this._myCurrentVentRuntimeSetup.myVentMultipliers.myBreakDelayTimeMultiplier.get(Global.myVentDuration);\r\n        this._myBreakDelayTimer = new PP.Timer(this._myVentSetup.myBreakSetup.myBreakTimeCooldown.get(Global.myVentDuration) * breakDelayMultiplier);\r\n        this._myBreakCloneCooldown = this._myVentSetup.myBreakSetup.myBreakCloneCooldown.get(Global.myVentDuration);\r\n\r\n        let smallBreakDelayMultiplier = this._myCurrentVentRuntimeSetup.myVentMultipliers.mySmallBreakDelayTimeMultiplier.get(Global.myVentDuration);\r\n        this._mySmallBreakDelayTimer = new PP.Timer(this._myVentSetup.mySmallBreakSetup.myBreakTimeCooldown.get(Global.myVentDuration) * smallBreakDelayMultiplier);\r\n        this._mySmallBreakCloneCooldown = this._myVentSetup.mySmallBreakSetup.myBreakCloneCooldown.get(Global.myVentDuration);\r\n\r\n        if (this._myVentSetup.myMrNOTSetup.myMrNOTAppearenceEnabled && this._myMrNOTTimer.isStarted() &&\r\n            this._myMrNOTTimer.getTimer() <= this._myVentSetup.myMrNOTSetup.myResetMrNOTTimerWhenBelowBreak.get(Global.myVentDuration)) {\r\n            this._myMrNOTTimer = new PP.Timer(this._myVentSetup.myMrNOTSetup.myResetTimerAmountBreak.get(Global.myVentDuration));\r\n\r\n            this._mySmallBreakDelayTimer = new PP.Timer(0, false);\r\n            this._mySmallBreakCloneCooldown = 0;\r\n\r\n            this._myBreakDelayTimer = new PP.Timer(0, false);\r\n            this._mySmallBreakCloneCooldown = 0;\r\n        }\r\n\r\n        this._debugNextWave();\r\n    }\r\n\r\n    _endSmallBreak() {\r\n        let smallBreakDelayMultiplier = this._myCurrentVentRuntimeSetup.myVentMultipliers.mySmallBreakDelayTimeMultiplier.get(Global.myVentDuration);\r\n        this._mySmallBreakDelayTimer = new PP.Timer(this._myVentSetup.mySmallBreakSetup.myBreakTimeCooldown.get(Global.myVentDuration) * smallBreakDelayMultiplier);\r\n        this._mySmallBreakCloneCooldown = this._myVentSetup.mySmallBreakSetup.myBreakCloneCooldown.get(Global.myVentDuration);\r\n\r\n        if (this._myBreakDelayTimer.getTimer() < this._myVentSetup.myResetBreakWhenBreakTimerBelow.get(Global.myVentDuration)) {\r\n            this._myBreakDelayTimer = new PP.Timer(this._myVentSetup.myResetBreakAmount.get(Global.myVentDuration));\r\n\r\n            this._mySmallBreakDelayTimer = new PP.Timer(0, false);\r\n            this._mySmallBreakCloneCooldown = 0;\r\n        }\r\n\r\n        if (this._myVentSetup.myMrNOTSetup.myMrNOTAppearenceEnabled && this._myMrNOTTimer.isStarted() &&\r\n            this._myMrNOTTimer.getTimer() <= this._myVentSetup.myMrNOTSetup.myResetMrNOTTimerWhenBelowSmallBreak.get(Global.myVentDuration)) {\r\n            this._myMrNOTTimer = new PP.Timer(this._myVentSetup.myMrNOTSetup.myResetTimerAmountSmallBreak.get(Global.myVentDuration));\r\n\r\n            this._mySmallBreakDelayTimer = new PP.Timer(0, false);\r\n            this._mySmallBreakCloneCooldown = 0;\r\n\r\n            this._myBreakDelayTimer = new PP.Timer(0, false);\r\n            this._mySmallBreakCloneCooldown = 0;\r\n        }\r\n\r\n        this._debugNextWave();\r\n    }\r\n\r\n    isDone() {\r\n        return this._myFSM.isInState(\"done\");\r\n    }\r\n\r\n    stop() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    _stop() {\r\n        for (let clone of this._myMrNOTClones) {\r\n            clone.hide();\r\n        }\r\n\r\n        if (this._myMrNOT) {\r\n            this._myMrNOT.hide();\r\n            this._myMrNOT = null;\r\n        }\r\n\r\n        this._myMrNOTClones = [];\r\n    }\r\n\r\n    clean(cleanDelay = 0) {\r\n        this._myFSM.perform(\"startClean\", cleanDelay);\r\n    }\r\n\r\n    _startClean(fsm, transition, cleanDelay) {\r\n        this._myMrNOTCleanDelay = new PP.Timer(cleanDelay);\r\n        if (this._myMrNOT) {\r\n            this._myMrNOT.stop();\r\n        }\r\n\r\n        this._myUnspawnList = [];\r\n\r\n        let indexList = [];\r\n        for (let i = 0; i < this._myMrNOTClones.length; i++) {\r\n            if (this._myMrNOTClones[i].canUnspawn()) {\r\n                indexList.push(i);\r\n                this._myMrNOTClones[i].stop();\r\n            }\r\n        }\r\n\r\n        while (indexList.length > 0) {\r\n            let randomIndex = Math.pp_randomInt(0, indexList.length - 1);\r\n            let index = indexList.pp_removeIndex(randomIndex);\r\n\r\n            let randomTimer = Math.pp_random(0.20, 0.25);\r\n            if (this._myUnspawnList.length == 0) {\r\n                randomTimer += 0.3 + cleanDelay;\r\n            }\r\n            this._myUnspawnList.push([this._myMrNOTClones[index], new PP.Timer(randomTimer)]);\r\n        }\r\n    }\r\n\r\n    _clean(dt) {\r\n        if (this._myMrNOTCleanDelay.isRunning()) {\r\n            this._myMrNOTCleanDelay.update(dt);\r\n            if (this._myMrNOTCleanDelay.isDone()) {\r\n                if (this._myMrNOT) {\r\n                    this._myMrNOT.disappear();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myUnspawnList.length > 0) {\r\n            let first = this._myUnspawnList[0];\r\n            first[1].update(dt);\r\n            if (first[1].isDone()) {\r\n                first[0].unspawn();\r\n                this._myUnspawnList.shift();\r\n            }\r\n        }\r\n\r\n        this._updateClones(dt);\r\n        if (this._myMrNOT) {\r\n            this._myMrNOT.update(dt);\r\n            if (this._myMrNOT && this._myMrNOT.isDone()) {\r\n                this._myMrNOT = null;\r\n            }\r\n        }\r\n\r\n        if (this._myMrNOTClones.length <= 0 && this._myMrNOT == null) {\r\n            this._myFSM.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    onVentLost(callback) {\r\n        this._myOnVentLostCallback = callback;\r\n    }\r\n\r\n    onVentCompleted(callback) {\r\n        this._myOnVentCompletedCallback = callback;\r\n    }\r\n\r\n    addClone(cloneSetup) {\r\n        let startPosition = cloneSetup.myDirection.pp_clone();\r\n        startPosition.vec3_normalize(startPosition);\r\n        startPosition.vec3_scale(cloneSetup.myStartDistance, startPosition);\r\n        startPosition[1] += cloneSetup.myStartHeight;\r\n\r\n        let endPosition = [0, cloneSetup.myEndHeight, 0];\r\n\r\n        this._myPulseRadar.addSignal(startPosition);\r\n\r\n        if (!this._myIsTesting) {\r\n            let mrNOTClone = new MrNOTClone(startPosition, endPosition, cloneSetup.myTimeToReachTarget, this._myVentSetup.myCloneRotationSetup, this._mrNOTCloneDismissed.bind(this), this._mrNOTCloneReachYou.bind(this));\r\n            this._myMrNOTClones.push(mrNOTClone);\r\n        } else {\r\n            this._mrNOTCloneDismissed();\r\n        }\r\n    }\r\n\r\n    _mrNOTCloneDismissed() {\r\n        this._myClonesLeft = Math.max(0, this._myClonesLeft - 1);\r\n        this._myBreakCloneCooldown = Math.max(0, this._myBreakCloneCooldown - 1);\r\n        this._mySmallBreakCloneCooldown = Math.max(0, this._mySmallBreakCloneCooldown - 1);\r\n\r\n        this._myCloneDismissed++;\r\n    }\r\n\r\n    _mrNOTCloneReachYou() {\r\n        if (!this._myIsTesting && this._myOnVentLostCallback && this._myOncePerFrame &&\r\n            (this._myFSM.isInState(\"wave\") || this._myFSM.isInState(\"break\") || this._myFSM.isInState(\"smallBreak\"))) {\r\n            this.ventLostDebug();\r\n\r\n            this._myOnVentLostCallback();\r\n            this._myOncePerFrame = false;\r\n        }\r\n    }\r\n\r\n    ventCompletedDebug() {\r\n        if (this._myDebugActive) {\r\n            console.log(\"\\nVent Completed - Duration -\", Global.myVentDuration.toFixed(3), \"- Dismissed -\", this._myCloneDismissed);\r\n\r\n            this._boosterGroupDebug();\r\n        }\r\n    }\r\n\r\n    ventLostDebug() {\r\n        if (this._myDebugActive) {\r\n            console.log(\"\\nVent Lost - Duration -\", Global.myVentDuration.toFixed(3), \"- Dismissed -\", this._myCloneDismissed);\r\n\r\n            this._boosterGroupDebug();\r\n        }\r\n    }\r\n\r\n    _boosterGroupDebug() {\r\n        if (this._myDebugActiveBoosterGroup) {\r\n            console.log(\"\\nBooster Group Stats\");\r\n            let total = 0;\r\n            for (let entry of this._myBoosterGroupCountMap.entries()) {\r\n                total += entry[1];\r\n            }\r\n            for (let entry of this._myBoosterGroupCountMap.entries()) {\r\n                let distance = this._myBoosterGroupDistanceCountMap.get(entry[0]);\r\n                let distanceSum = 0;\r\n                for (let value of distance) {\r\n                    distanceSum += value;\r\n                }\r\n\r\n                let averageDistance = distanceSum / distance.length;\r\n\r\n                console.log(\"   \", entry[0], \"-\", entry[1].toFixed(2), \"-\", (entry[1] / total).toFixed(3), \"-\", averageDistance.toFixed(3));\r\n            }\r\n\r\n            console.log(\"\\nWaves Stats\");\r\n\r\n            total = 0;\r\n            for (let entry of this._myWavesCountMap.entries()) {\r\n                total += entry[1];\r\n            }\r\n\r\n            let longestName = 0;\r\n            for (let entry of this._myWavesCountMap.entries()) {\r\n                if (entry[0].length > longestName) {\r\n                    longestName = entry[0].length;\r\n                }\r\n            }\r\n\r\n            for (let entry of this._myWavesCountMap.entries()) {\r\n                let name = entry[0];\r\n                while (name.length < longestName) {\r\n                    name = name.concat(\" \");\r\n                }\r\n                console.log(\"   \", name, \"-\", entry[1].toFixed(2), \"-\", (entry[1] * 100 / total).toFixed(1));\r\n            }\r\n\r\n            console.log(\"\");\r\n\r\n            //console.log(\"   \", Global.myVentDuration.toFixed(3));\r\n        }\r\n    }\r\n\r\n    _mrNOTReachYou() {\r\n        if (PP.myEasyTuneVariables.get(\"Prevent Vent Lost\")) {\r\n            this._mrNOTDismissed();\r\n            //this._mrNOTCloneReachYou();\r\n        } else {\r\n            this._mrNOTCloneReachYou();\r\n        }\r\n    }\r\n\r\n    _updateClones(dt) {\r\n        for (let clone of this._myMrNOTClones) {\r\n            clone.update(dt);\r\n        }\r\n\r\n        this._myMrNOTClones.pp_removeAll(element => element.isDone());\r\n    }\r\n\r\n    _isVentCompleted() {\r\n        return this._myVentCompleted && this._myMrNOTClones.length <= 0 && this._myMrNOT == null;\r\n    }\r\n\r\n    _debugNextWave() {\r\n        if (this._myDebugActive) {\r\n            if (this._myDebugActiveNextWave) {\r\n                console.log(\"Next Wave -\", this._myCurrentWaveID);\r\n            }\r\n\r\n            if (this._myDebugActivePreviousWaveStats && this._myPreviousWave) {\r\n                try {\r\n                    console.log(\"   Prev Wave ID -\", this._myPreviousWaveID);\r\n                    console.log(\"   Prev Wave Clones -\", this._myPreviousWave.getActualClonesCount());\r\n                    console.log(\"   Prev Wave Duration -\", this._myPreviousWave.getDuration().toFixed(3));\r\n                } catch (error) {\r\n                    console.error(\"OMG\", this._myPreviousWaveID, this._myPreviousWave);\r\n                }\r\n            }\r\n\r\n            if (this._myDebugActiveWaveStats) {\r\n                console.log(\"   Wave Average Clones -\", this._myCurrentWave.getAverageClonesCount());\r\n            }\r\n\r\n            if (this._myDebugActiveVentStats) {\r\n                console.log(\"   Vent Duration -\", Global.myVentDuration.toFixed(3));\r\n                console.log(\"   Dismissed -\", this._myCloneDismissed);\r\n            }\r\n\r\n            if (this._myDebugActiveBreak) {\r\n                console.log(\"   Break -\", this._myBreakDelayTimer.getTimer().toFixed(3), \" -\", this._myBreakCloneCooldown);\r\n                console.log(\"   Small Break -\", this._mySmallBreakDelayTimer.getTimer().toFixed(3), \" -\", this._mySmallBreakCloneCooldown);\r\n            }\r\n\r\n            if (this._myDebugActiveMrNOT) {\r\n                console.log(\"   mr NOT -\", this._myMrNOTTimer.getTimer().toFixed(3));\r\n            }\r\n        }\r\n    }\r\n\r\n    _prepareVentRuntimeSetup() {\r\n        this._myCurrentVentRuntimeSetup = new VentRuntimeSetup();\r\n        this._myCurrentVentRuntimeSetup.myValidAngleRanges = this._myVentSetup.myValidAngleRanges;\r\n        this._myCurrentVentRuntimeSetup.myVentMultipliers = this._myVentSetup.myVentMultipliers;\r\n    }\r\n\r\n    _mrNOTAppear() {\r\n        let direction = Global.myPlayerForward.pp_clone();\r\n        let startAngle = this._myVentSetup.myMrNOTSetup.myStartAngle.get(Global.myVentDuration) * Math.pp_randomSign();\r\n        direction.vec3_rotateAxis(startAngle, [0, 1, 0], direction);\r\n\r\n        let oldVentSetup = this._myCurrentVentRuntimeSetup;\r\n\r\n        this._myCurrentVentRuntimeSetup = new VentRuntimeSetup();\r\n        this._myCurrentVentRuntimeSetup.myValidAngleRanges = [];\r\n        let timeToReachTarget = this._myVentSetup.myMrNOTSetup.myTimeToReachTarget.get(Global.myVentDuration);\r\n        this._myCurrentVentRuntimeSetup.myValidAngleRanges.push([new RangeValueOverTime([30, 180], [90, 180], (timeToReachTarget / 5) + Global.myVentDuration, timeToReachTarget + Global.myVentDuration), direction.pp_clone()]);\r\n        this._myCurrentVentRuntimeSetup.myValidAngleRanges.push([new RangeValueOverTime([-180, -30], [-180, -90], (timeToReachTarget / 5) + Global.myVentDuration, timeToReachTarget + Global.myVentDuration), direction.pp_clone()]);\r\n\r\n        oldVentSetup.myValidAngleRanges = this._myCurrentVentRuntimeSetup.myValidAngleRanges;\r\n\r\n        this._myCurrentVentRuntimeSetup.myVentMultipliers = this._myVentSetup.myMrNOTSetup.myVentMultipliers;\r\n\r\n        let mrNOTSetup = new MrNOTVentSetup();\r\n        mrNOTSetup.myDirection = direction;\r\n        mrNOTSetup.myTimeToReachTarget = timeToReachTarget;\r\n        mrNOTSetup.myMaxPatience = this._myVentSetup.myMrNOTSetup.myMaxPatience.get(timeToReachTarget);\r\n\r\n        this._myMrNOT = new MrNOTVent(mrNOTSetup, this._myCurrentVentRuntimeSetup, this._mrNOTDismissed.bind(this), this._mrNOTReachYou.bind(this));\r\n\r\n        this._myBreakDelayTimer.start(0);\r\n        this._myBreakDelayTimer.update(0);\r\n        this._myBreakCloneCooldown = 0;\r\n        this._myMrNOTBreak = true;\r\n\r\n        if (this._myDebugActive && this._myDebugActiveMrNOT) {\r\n            console.log(\"mr NOT - Duration -\", mrNOTSetup.myTimeToReachTarget.toFixed(3), \" - Patience -\", mrNOTSetup.myMaxPatience);\r\n        }\r\n\r\n        //this._boosterGroupDebug();\r\n\r\n        if (!Global.mySaveManager.loadBool(\"mr_NOT_encountered\", false)) {\r\n            Global.mySaveManager.save(\"mr_NOT_encountered\", true);\r\n\r\n            if (Global.myGoogleAnalytics) {\r\n                gtag(\"event\", \"mr_NOT_encountered_before_trial\", {\r\n                    \"value\": 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    _mrNOTDismissed() {\r\n        let oldVentSetup = this._myCurrentVentRuntimeSetup;\r\n        this._prepareVentRuntimeSetup();\r\n        oldVentSetup.myValidAngleRanges = this._myCurrentVentRuntimeSetup.myValidAngleRanges;\r\n\r\n        this._myMrNOT.disappear();\r\n\r\n        this._myBreakDelayTimer.start(0);\r\n        this._myBreakDelayTimer.update(0);\r\n        this._myBreakCloneCooldown = 0;\r\n        this._myMrNOTBreak = true;\r\n\r\n        if (this._myFSM.isInState(\"break\") || this._myFSM.isInState(\"smallBreak\")) {\r\n            this._myFSM.perform(\"forceEnd\");\r\n            this._myCurrentWave = new ZeroWave();\r\n        }\r\n    }\r\n\r\n    _mrNOTDismissedDone() {\r\n        this._myMrNOT = null;\r\n        this._myMrNOTTimer = new PP.Timer(this._myVentSetup.myMrNOTSetup.myMrNOTTimeCooldown.get(Global.myVentDuration));\r\n    }\r\n\r\n    _test(duration = 550, startDuration = 0, isBoost = true, isWave = false, numberOfTest = 100) {\r\n        this._myIsTesting = true;\r\n        let dt = 1 / 72;\r\n\r\n        let boosterGroupCountMaps = [];\r\n        let boosterGroupDistanceCountMaps = [];\r\n        let wavesCountMaps = [];\r\n\r\n        //console.clear();\r\n\r\n        while (numberOfTest > 0) {\r\n            //console.log(\"Test Count -\", numberOfTest);\r\n            numberOfTest--;\r\n            this._myFSM.perform(\"start\");\r\n            Global.myVentDuration = startDuration;\r\n            while (Global.myVentDuration < duration) {\r\n                this.update(dt);\r\n                Global.myVentDuration += dt;\r\n                //console.log(Global.myVentDuration.toFixed(3));\r\n            }\r\n\r\n            boosterGroupCountMaps.push(this._myBoosterGroupCountMap);\r\n            boosterGroupDistanceCountMaps.push(this._myBoosterGroupDistanceCountMap);\r\n            wavesCountMaps.push(this._myWavesCountMap);\r\n\r\n            this.stop();\r\n        }\r\n\r\n        //console.clear();\r\n\r\n        let resultMapGroupCount = new Map();\r\n        let resultMapGroupCountPercentage = new Map();\r\n        let resultMapGroupCountDistance = new Map();\r\n        if (isBoost) {\r\n            let groups = [\"1\", \"2\", \"3\", \"4\", \"5\"];\r\n            for (let key of groups) {\r\n                resultMapGroupCount.set(key, -1);\r\n                resultMapGroupCountPercentage.set(key, -1);\r\n                resultMapGroupCountDistance.set(key, -1);\r\n            }\r\n\r\n            for (let i = 0; i < boosterGroupCountMaps.length; i++) {\r\n                let groupCountMap = boosterGroupCountMaps[i];\r\n                let groupCountDistanceMap = boosterGroupDistanceCountMaps[i];\r\n\r\n                let total = 0;\r\n                for (let entry of groupCountMap.entries()) {\r\n                    total += entry[1];\r\n                }\r\n                for (let entry of groupCountMap.entries()) {\r\n                    let distance = groupCountDistanceMap.get(entry[0]);\r\n                    let distanceSum = 0;\r\n                    for (let value of distance) {\r\n                        distanceSum += value;\r\n                    }\r\n\r\n                    let averageDistance = distanceSum / distance.length;\r\n\r\n                    if (resultMapGroupCount.get(entry[0]) == -1) {\r\n                        resultMapGroupCount.set(entry[0], 0);\r\n                        resultMapGroupCountPercentage.set(entry[0], 0);\r\n                        resultMapGroupCountDistance.set(entry[0], 0);\r\n                    }\r\n\r\n                    if (!resultMapGroupCount.has(entry[0])) {\r\n                        resultMapGroupCount.set(entry[0], 0);\r\n                        resultMapGroupCountPercentage.set(entry[0], 0);\r\n                        resultMapGroupCountDistance.set(entry[0], 0);\r\n                    }\r\n\r\n                    resultMapGroupCount.set(entry[0], resultMapGroupCount.get(entry[0]) + entry[1]);\r\n                    resultMapGroupCountPercentage.set(entry[0], resultMapGroupCountPercentage.get(entry[0]) + entry[1] / total);\r\n                    resultMapGroupCountDistance.set(entry[0], resultMapGroupCountDistance.get(entry[0]) + averageDistance);\r\n                }\r\n            }\r\n\r\n            for (let entry of resultMapGroupCount.entries()) {\r\n                let key = entry[0];\r\n                resultMapGroupCount.set(key, resultMapGroupCount.get(key) / boosterGroupCountMaps.length);\r\n                resultMapGroupCountPercentage.set(key, resultMapGroupCountPercentage.get(key) / boosterGroupCountMaps.length);\r\n                resultMapGroupCountDistance.set(key, resultMapGroupCountDistance.get(key) / boosterGroupCountMaps.length);\r\n            }\r\n        }\r\n\r\n        let resultMapWaveCount = new Map();\r\n        let resultMapWaveCountPercentage = new Map();\r\n\r\n        let boosterGroup1 = [\"I_Am_Here\", \"I_Am_Here_2\", \"Queue_For_You\", \"Queue_For_You_2\", \"Merry_Go_Round\", \"Merry_Go_Round_Waves\"];\r\n        let boosterGroup2 = [\"I_Am_Everywhere\", \"I_Am_Everywhere_2\", \"Give_Us_A_Hug_2\", \"Give_Us_A_Hug_3\", \"Man_In_The_Middle\", \"Merry_Go_Round_MITM\"];\r\n        let boosterGroup3 = [\"I_Am_Everywhere_Waves\", \"I_Am_Here_Rain\", \"Queue_For_You_Rain\", \"Man_In_The_Middle_Waves\", \"Merry_Go_Round_Rain\"];\r\n        let boosterGroup4 = [\"Man_In_The_Middle_Everywhere\", \"I_Am_Everywhere_GUAH2\", \"Merry_Go_Round_GUAH2\", \"Man_In_The_Middle_Everywhere_Waves\", \"I_Am_Everywhere_GUAH3\", \"Merry_Go_Round_GUAH3\"];\r\n        let boosterGroup5 = [\"Give_Us_A_Hug_4\", \"Man_In_The_Middle_GUAH2\", \"Man_In_The_Middle_Everywhere_GUAH2\", \"Man_In_The_Middle_GUAH3\", \"Man_In_The_Middle_Everywhere_GUAH3\", \"Give_Us_A_Hug_Cross\"];\r\n\r\n        if (isWave) {\r\n            for (let key of boosterGroup1) {\r\n                resultMapWaveCount.set(key, -1);\r\n                resultMapWaveCountPercentage.set(key, -1);\r\n            }\r\n            for (let key of boosterGroup2) {\r\n                resultMapWaveCount.set(key, -1);\r\n                resultMapWaveCountPercentage.set(key, -1);\r\n            }\r\n            for (let key of boosterGroup3) {\r\n                resultMapWaveCount.set(key, -1);\r\n                resultMapWaveCountPercentage.set(key, -1);\r\n            }\r\n            for (let key of boosterGroup4) {\r\n                resultMapWaveCount.set(key, -1);\r\n                resultMapWaveCountPercentage.set(key, -1);\r\n            }\r\n            for (let key of boosterGroup5) {\r\n                resultMapWaveCount.set(key, -1);\r\n                resultMapWaveCountPercentage.set(key, -1);\r\n            }\r\n\r\n            for (let i = 0; i < wavesCountMaps.length; i++) {\r\n                let waveCountMap = wavesCountMaps[i];\r\n\r\n                let total = 0;\r\n                for (let entry of waveCountMap.entries()) {\r\n                    if (entry[1] >= 0) {\r\n                        total += entry[1];\r\n                    }\r\n                }\r\n\r\n                for (let entry of waveCountMap.entries()) {\r\n                    if (resultMapWaveCount.get(entry[0]) == -1) {\r\n                        resultMapWaveCount.set(entry[0], 0);\r\n                        resultMapWaveCountPercentage.set(entry[0], 0);\r\n                    }\r\n\r\n                    if (!resultMapWaveCount.has(entry[0])) {\r\n                        resultMapWaveCount.set(entry[0], 0);\r\n                        resultMapWaveCountPercentage.set(entry[0], 0);\r\n                    }\r\n\r\n                    resultMapWaveCount.set(entry[0], resultMapWaveCount.get(entry[0]) + entry[1]);\r\n                    resultMapWaveCountPercentage.set(entry[0], resultMapWaveCountPercentage.get(entry[0]) + entry[1] / total);\r\n                }\r\n            }\r\n\r\n            for (let entry of resultMapWaveCount.entries()) {\r\n                let key = entry[0];\r\n                if (entry[1] >= 0) {\r\n                    resultMapWaveCount.set(key, resultMapWaveCount.get(key) / wavesCountMaps.length);\r\n                    resultMapWaveCountPercentage.set(key, resultMapWaveCountPercentage.get(key) / wavesCountMaps.length);\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(\"\\nTEST\");\r\n\r\n        if (isBoost) {\r\n            console.log(\"Booster Group Stats\");\r\n            for (let entry of resultMapGroupCount.entries()) {\r\n                if (entry[1] >= 0) {\r\n                    console.log(\"   \", entry[0], \"-\", entry[1].toFixed(2), \"-\", resultMapGroupCountPercentage.get(entry[0]).toFixed(3), \"-\", resultMapGroupCountDistance.get(entry[0]).toFixed(3));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isBoost && isWave) {\r\n            console.log(\"\");\r\n        }\r\n\r\n        if (isWave) {\r\n            console.log(\"Waves Stats\");\r\n\r\n            let longestName = 0;\r\n            for (let entry of resultMapWaveCount.entries()) {\r\n                if (entry[0].length > longestName && entry[1] != -1) {\r\n                    longestName = entry[0].length;\r\n                }\r\n            }\r\n\r\n            let everyBoostGroup = true;\r\n\r\n            for (let key of boosterGroup1) {\r\n                if (!resultMapWaveCount.has(key) || resultMapWaveCount.get(key) == -1) {\r\n                    everyBoostGroup = false;\r\n                }\r\n            }\r\n            for (let key of boosterGroup2) {\r\n                if (!resultMapWaveCount.has(key) || resultMapWaveCount.get(key) == -1) {\r\n                    everyBoostGroup = false;\r\n                }\r\n            }\r\n            for (let key of boosterGroup3) {\r\n                if (!resultMapWaveCount.has(key) || resultMapWaveCount.get(key) == -1) {\r\n                    everyBoostGroup = false;\r\n                }\r\n            }\r\n            for (let key of boosterGroup4) {\r\n                if (!resultMapWaveCount.has(key) || resultMapWaveCount.get(key) == -1) {\r\n                    everyBoostGroup = false;\r\n                }\r\n            }\r\n            for (let key of boosterGroup5) {\r\n                if (!resultMapWaveCount.has(key) || resultMapWaveCount.get(key) == -1) {\r\n                    everyBoostGroup = false;\r\n                }\r\n            }\r\n\r\n            everyBoostGroup = everyBoostGroup && (resultMapWaveCount.size == (boosterGroup1.length + boosterGroup2.length + boosterGroup3.length + boosterGroup4.length + boosterGroup5.length));\r\n\r\n            let newLineCounters = [boosterGroup1.length, boosterGroup2.length, boosterGroup3.length, boosterGroup4.length];\r\n            let newLineIndex = 0;\r\n            let newLineCount = newLineCounters[newLineIndex];\r\n\r\n            for (let entry of resultMapWaveCount.entries()) {\r\n                if (entry[1] >= 0) {\r\n                    let name = entry[0];\r\n                    while (name.length < longestName) {\r\n                        name = name.concat(\" \");\r\n                    }\r\n                    console.log(\"   \", name, \"-\", entry[1].toFixed(2), \"-\", (resultMapWaveCountPercentage.get(entry[0]) * 100).toFixed(1));\r\n\r\n                    newLineCount--;\r\n                    if (newLineCount == 0 && everyBoostGroup) {\r\n                        console.log(\"\");\r\n                        newLineIndex++;\r\n                        if (newLineIndex < newLineCounters.length) {\r\n                            newLineCount = newLineCounters[newLineIndex];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(\"\\n   \", Global.myVentDuration.toFixed(3));\r\n    }\r\n\r\n    _testOfTest() {\r\n        this._test(1700, 700, true, true);\r\n        this._test(1700, 700, true, true);\r\n        this._test(1700, 700, true, true);\r\n        this._test(1700, 700, true, true);\r\n\r\n        this._test(700, 150, true, true);\r\n        this._test(700, 150, true, true);\r\n    }\r\n\r\n    _testOfTestBoost() {\r\n        this._test(1700, 700);\r\n        this._test(1700, 700);\r\n        this._test(1700, 700);\r\n        this._test(1700, 700);\r\n\r\n        this._test(700, 150);\r\n        this._test(700, 150);\r\n    }\r\n\r\n    _testOfTestWaves() {\r\n        this._test(1700, 700, false, true);\r\n        this._test(1700, 700, false, true);\r\n        this._test(1700, 700, false, true);\r\n        this._test(1700, 700, false, true);\r\n\r\n        this._test(700, 150, false, true);\r\n        this._test(700, 150, false, true);\r\n    }\r\n}",
        "class VentState extends PP.State {\r\n    constructor(ventSetup, evidenceSetupList) {\r\n        super();\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"        Vent State\");\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"first_wait\", new PP.TimerState(1.5, \"end\"));\r\n        this._myFSM.addState(\"vent\", this._updateVent.bind(this));\r\n        this._myFSM.addState(\"clean\", this._updateClean.bind(this));\r\n        this._myFSM.addState(\"defeat\", this._updateDefeat.bind(this));\r\n        this._myFSM.addState(\"second_wait_clean\", new PP.TimerState(0, \"end\"));\r\n        this._myFSM.addState(\"second_wait_defeat\", new PP.TimerState(0, \"end\"));\r\n        this._myFSM.addState(\"done\");\r\n\r\n        this._myFSM.addTransition(\"init\", \"first_wait\", \"start\", this._prepareState.bind(this));\r\n        this._myFSM.addTransition(\"first_wait\", \"vent\", \"end\", this._prepareVent.bind(this));\r\n        this._myFSM.addTransition(\"vent\", \"clean\", \"completed\", this._prepareClean.bind(this));\r\n        this._myFSM.addTransition(\"vent\", \"defeat\", \"lost\", this._prepareDefeat.bind(this));\r\n        this._myFSM.addTransition(\"clean\", \"second_wait_clean\", \"end\");\r\n        this._myFSM.addTransition(\"defeat\", \"second_wait_defeat\", \"end\");\r\n        this._myFSM.addTransition(\"second_wait_clean\", \"done\", \"end\", this._ventCompleted.bind(this));\r\n        this._myFSM.addTransition(\"second_wait_defeat\", \"done\", \"end\", this._ventLost.bind(this));\r\n        this._myFSM.addTransition(\"done\", \"first_wait\", \"start\", this._prepareState.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"first_wait\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"second_wait_clean\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"second_wait_defeat\", \"done\", \"skip\");\r\n        this._myFSM.addTransition(\"vent\", \"done\", \"skip\", this._hideVent.bind(this));\r\n        this._myFSM.addTransition(\"clean\", \"done\", \"skip\", this._hideVent.bind(this));\r\n        this._myFSM.addTransition(\"defeat\", \"done\", \"skip\", this._hideVent.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._myParentFSM = null;\r\n\r\n        this._myEvidenceManager = new EvidenceManager(evidenceSetupList);\r\n\r\n        this._myVent = new Vent(ventSetup);\r\n        this._myVent.onVentLost(this._onVentLost.bind(this));\r\n        this._myVent.onVentCompleted(this._onVentCompleted.bind(this));\r\n\r\n        this._myNotEnough = new NotEnough();\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        Global.myVentDuration += dt;\r\n\r\n        if (Global.myIsUsingTrackedHands) {\r\n            Global.myVentDurationWithTrackedHands += dt;\r\n        }\r\n\r\n        this._myFSM.update(dt);\r\n        this._myEvidenceManager.update(dt);\r\n        this._myVent.update(dt);\r\n\r\n        if (Global.myDebugShortcutsEnabled) {\r\n            //TEMP REMOVE THIS\r\n            if (PP.myRightGamepad.getButtonInfo(PP.ButtonType.SELECT).isPressEnd(Global.myDebugShortcutsPress)) {\r\n                this._myFSM.perform(\"skip\");\r\n                this._myVent.ventCompletedDebug();\r\n                this._ventCompleted();\r\n            }\r\n\r\n            //TEMP REMOVE THIS\r\n            if (PP.myLeftGamepad.getButtonInfo(PP.ButtonType.SQUEEZE).isPressEnd(Global.myDebugShortcutsPress)) {\r\n                Global.myStopMusic = true;\r\n                this._myFSM.perform(\"skip\");\r\n                this._myVent.ventLostDebug();\r\n                this._ventLost();\r\n            }\r\n        }\r\n    }\r\n\r\n    _prepareState(fsm, transition) {\r\n        Global.myVentDuration = 0;\r\n        Global.myVentDurationWithTrackedHands = 0;\r\n    }\r\n\r\n    _prepareVent() {\r\n        this._myEvidenceManager.start();\r\n        this._myVent.start();\r\n    }\r\n\r\n    _updateVent(dt, fsm) {\r\n    }\r\n\r\n    _prepareClean() {\r\n        this._myEvidenceManager.clean();\r\n        this._myVent.clean();\r\n    }\r\n\r\n    _updateClean(dt, fsm) {\r\n        if (this._myEvidenceManager.isDone() && this._myVent.isDone()) {\r\n            this._myFSM.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    _prepareDefeat() {\r\n        let zestyObject = Global.myGameObjects.get(GameObjectType.ZESTY_MARKET);\r\n        let grabbable = zestyObject.pp_getComponentHierarchy(\"pp-grabbable\");\r\n        if (grabbable.isGrabbed()) {\r\n            let zestyComponent = zestyObject.pp_getComponentHierarchy(\"zesty-banner\");\r\n            if (zestyComponent) {\r\n                // open zesty, I decided to not do that in this case tho\r\n            }\r\n        }\r\n\r\n        this._myEvidenceManager.explode();\r\n        this._myVent.stop();\r\n        this._myNotEnough.start();\r\n        Global.myParticlesManager.mrNOTParticles(Global.myPlayerPosition);\r\n\r\n        Global.myStopMusic = true;\r\n    }\r\n\r\n    _updateDefeat(dt, fsm) {\r\n        this._myNotEnough.update(dt);\r\n\r\n        if (this._myEvidenceManager.isDone() && !this._myNotEnough.isNotEnoughing()) {\r\n            this._myFSM.perform(\"end\");\r\n        }\r\n    }\r\n\r\n    _ventCompleted() {\r\n        this._myParentFSM.perform(\"completed\");\r\n    }\r\n\r\n    _ventLost(dt, fsm) {\r\n        this._myParentFSM.perform(\"lost\");\r\n    }\r\n\r\n    _hideVent() {\r\n        this._hideEvidences();\r\n        this._myVent.stop();\r\n    }\r\n\r\n    _hideEvidences() {\r\n        this._myEvidenceManager.hide();\r\n    }\r\n\r\n    start(fsm, transition) {\r\n        this._myParentFSM = fsm;\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    end(fsm, transitionID) {\r\n        if (!this._myFSM.isInState(\"done\")) {\r\n            this._myFSM.perform(\"skip\");\r\n        }\r\n    }\r\n\r\n    _onVentLost() {\r\n        this._myFSM.perform(\"lost\");\r\n    }\r\n\r\n    _onVentCompleted() {\r\n        this._myFSM.perform(\"completed\");\r\n    }\r\n}",
        "(()=>{var Kt=Object.create;var Ee=Object.defineProperty;var Xt=Object.getOwnPropertyDescriptor;var Gt=Object.getOwnPropertyNames;var Qt=Object.getPrototypeOf,Zt=Object.prototype.hasOwnProperty;var l=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var Yt=(t,e,r,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let n of Gt(e))!Zt.call(t,n)&&n!==r&&Ee(t,n,{get:()=>e[n],enumerable:!(i=Xt(e,n))||i.enumerable});return t};var xe=(t,e,r)=>(r=t!=null?Kt(Qt(t)):{},Yt(e||!t||!t.__esModule?Ee(r,\"default\",{value:t,enumerable:!0}):r,t));var V=l((cn,Oe)=>{\"use strict\";Oe.exports=function(e,r){return function(){for(var n=new Array(arguments.length),s=0;s<n.length;s++)n[s]=arguments[s];return e.apply(r,n)}}});var f=l((ln,Ae)=>{\"use strict\";var er=V(),X=Object.prototype.toString,G=function(t){return function(e){var r=X.call(e);return t[r]||(t[r]=r.slice(8,-1).toLowerCase())}}(Object.create(null));function C(t){return t=t.toLowerCase(),function(r){return G(r)===t}}function Q(t){return Array.isArray(t)}function j(t){return typeof t>\"u\"}function tr(t){return t!==null&&!j(t)&&t.constructor!==null&&!j(t.constructor)&&typeof t.constructor.isBuffer==\"function\"&&t.constructor.isBuffer(t)}var Re=C(\"ArrayBuffer\");function rr(t){var e;return typeof ArrayBuffer<\"u\"&&ArrayBuffer.isView?e=ArrayBuffer.isView(t):e=t&&t.buffer&&Re(t.buffer),e}function nr(t){return typeof t==\"string\"}function ir(t){return typeof t==\"number\"}function Ce(t){return t!==null&&typeof t==\"object\"}function U(t){if(G(t)!==\"object\")return!1;var e=Object.getPrototypeOf(t);return e===null||e===Object.prototype}var sr=C(\"Date\"),ar=C(\"File\"),or=C(\"Blob\"),ur=C(\"FileList\");function Z(t){return X.call(t)===\"[object Function]\"}function cr(t){return Ce(t)&&Z(t.pipe)}function lr(t){var e=\"[object FormData]\";return t&&(typeof FormData==\"function\"&&t instanceof FormData||X.call(t)===e||Z(t.toString)&&t.toString()===e)}var dr=C(\"URLSearchParams\");function fr(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,\"\")}function pr(){return typeof navigator<\"u\"&&(navigator.product===\"ReactNative\"||navigator.product===\"NativeScript\"||navigator.product===\"NS\")?!1:typeof window<\"u\"&&typeof document<\"u\"}function Y(t,e){if(!(t===null||typeof t>\"u\"))if(typeof t!=\"object\"&&(t=[t]),Q(t))for(var r=0,i=t.length;r<i;r++)e.call(null,t[r],r,t);else for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e.call(null,t[n],n,t)}function K(){var t={};function e(n,s){U(t[s])&&U(n)?t[s]=K(t[s],n):U(n)?t[s]=K({},n):Q(n)?t[s]=n.slice():t[s]=n}for(var r=0,i=arguments.length;r<i;r++)Y(arguments[r],e);return t}function hr(t,e,r){return Y(e,function(n,s){r&&typeof n==\"function\"?t[s]=er(n,r):t[s]=n}),t}function mr(t){return t.charCodeAt(0)===65279&&(t=t.slice(1)),t}function yr(t,e,r,i){t.prototype=Object.create(e.prototype,i),t.prototype.constructor=t,r&&Object.assign(t.prototype,r)}function vr(t,e,r){var i,n,s,a={};e=e||{};do{for(i=Object.getOwnPropertyNames(t),n=i.length;n-- >0;)s=i[n],a[s]||(e[s]=t[s],a[s]=!0);t=Object.getPrototypeOf(t)}while(t&&(!r||r(t,e))&&t!==Object.prototype);return e}function wr(t,e,r){t=String(t),(r===void 0||r>t.length)&&(r=t.length),r-=e.length;var i=t.indexOf(e,r);return i!==-1&&i===r}function gr(t){if(!t)return null;var e=t.length;if(j(e))return null;for(var r=new Array(e);e-- >0;)r[e]=t[e];return r}var br=function(t){return function(e){return t&&e instanceof t}}(typeof Uint8Array<\"u\"&&Object.getPrototypeOf(Uint8Array));Ae.exports={isArray:Q,isArrayBuffer:Re,isBuffer:tr,isFormData:lr,isArrayBufferView:rr,isString:nr,isNumber:ir,isObject:Ce,isPlainObject:U,isUndefined:j,isDate:sr,isFile:ar,isBlob:or,isFunction:Z,isStream:cr,isURLSearchParams:dr,isStandardBrowserEnv:pr,forEach:Y,merge:K,extend:hr,trim:fr,stripBOM:mr,inherits:yr,toFlatObject:vr,kindOf:G,kindOfTest:C,endsWith:wr,toArray:gr,isTypedArray:br,isFileList:ur}});var ee=l((dn,qe)=>{\"use strict\";var q=f();function Te(t){return encodeURIComponent(t).replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}qe.exports=function(e,r,i){if(!r)return e;var n;if(i)n=i(r);else if(q.isURLSearchParams(r))n=r.toString();else{var s=[];q.forEach(r,function(c,h){c===null||typeof c>\"u\"||(q.isArray(c)?h=h+\"[]\":c=[c],q.forEach(c,function(d){q.isDate(d)?d=d.toISOString():q.isObject(d)&&(d=JSON.stringify(d)),s.push(Te(h)+\"=\"+Te(d))}))}),n=s.join(\"&\")}if(n){var a=e.indexOf(\"#\");a!==-1&&(e=e.slice(0,a)),e+=(e.indexOf(\"?\")===-1?\"?\":\"&\")+n}return e}});var Ne=l((fn,Se)=>{\"use strict\";var Er=f();function F(){this.handlers=[]}F.prototype.use=function(e,r,i){return this.handlers.push({fulfilled:e,rejected:r,synchronous:i?i.synchronous:!1,runWhen:i?i.runWhen:null}),this.handlers.length-1};F.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)};F.prototype.forEach=function(e){Er.forEach(this.handlers,function(i){i!==null&&e(i)})};Se.exports=F});var Pe=l((pn,ke)=>{\"use strict\";var xr=f();ke.exports=function(e,r){xr.forEach(e,function(n,s){s!==r&&s.toUpperCase()===r.toUpperCase()&&(e[r]=n,delete e[s])})}});var A=l((hn,De)=>{\"use strict\";var _e=f();function S(t,e,r,i,n){Error.call(this),this.message=t,this.name=\"AxiosError\",e&&(this.code=e),r&&(this.config=r),i&&(this.request=i),n&&(this.response=n)}_e.inherits(S,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Le=S.prototype,Be={};[\"ERR_BAD_OPTION_VALUE\",\"ERR_BAD_OPTION\",\"ECONNABORTED\",\"ETIMEDOUT\",\"ERR_NETWORK\",\"ERR_FR_TOO_MANY_REDIRECTS\",\"ERR_DEPRECATED\",\"ERR_BAD_RESPONSE\",\"ERR_BAD_REQUEST\",\"ERR_CANCELED\"].forEach(function(t){Be[t]={value:t}});Object.defineProperties(S,Be);Object.defineProperty(Le,\"isAxiosError\",{value:!0});S.from=function(t,e,r,i,n,s){var a=Object.create(Le);return _e.toFlatObject(t,a,function(c){return c!==Error.prototype}),S.call(a,t.message,e,r,i,n),a.name=t.name,s&&Object.assign(a,s),a};De.exports=S});var te=l((mn,Ue)=>{\"use strict\";Ue.exports={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1}});var re=l((yn,je)=>{\"use strict\";var b=f();function Or(t,e){e=e||new FormData;var r=[];function i(s){return s===null?\"\":b.isDate(s)?s.toISOString():b.isArrayBuffer(s)||b.isTypedArray(s)?typeof Blob==\"function\"?new Blob([s]):Buffer.from(s):s}function n(s,a){if(b.isPlainObject(s)||b.isArray(s)){if(r.indexOf(s)!==-1)throw Error(\"Circular reference detected in \"+a);r.push(s),b.forEach(s,function(c,h){if(!b.isUndefined(c)){var o=a?a+\".\"+h:h,d;if(c&&!a&&typeof c==\"object\"){if(b.endsWith(h,\"{}\"))c=JSON.stringify(c);else if(b.endsWith(h,\"[]\")&&(d=b.toArray(c))){d.forEach(function(v){!b.isUndefined(v)&&e.append(o,i(v))});return}}n(c,o)}}),r.pop()}else e.append(a,i(s))}return n(t),e}je.exports=Or});var ze=l((vn,Fe)=>{\"use strict\";var ne=A();Fe.exports=function(e,r,i){var n=i.config.validateStatus;!i.status||!n||n(i.status)?e(i):r(new ne(\"Request failed with status code \"+i.status,[ne.ERR_BAD_REQUEST,ne.ERR_BAD_RESPONSE][Math.floor(i.status/100)-4],i.config,i.request,i))}});var Me=l((wn,Ie)=>{\"use strict\";var z=f();Ie.exports=z.isStandardBrowserEnv()?function(){return{write:function(r,i,n,s,a,u){var c=[];c.push(r+\"=\"+encodeURIComponent(i)),z.isNumber(n)&&c.push(\"expires=\"+new Date(n).toGMTString()),z.isString(s)&&c.push(\"path=\"+s),z.isString(a)&&c.push(\"domain=\"+a),u===!0&&c.push(\"secure\"),document.cookie=c.join(\"; \")},read:function(r){var i=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+r+\")=([^;]*)\"));return i?decodeURIComponent(i[3]):null},remove:function(r){this.write(r,\"\",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}()});var We=l((gn,$e)=>{\"use strict\";$e.exports=function(e){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(e)}});var Je=l((bn,He)=>{\"use strict\";He.exports=function(e,r){return r?e.replace(/\\/+$/,\"\")+\"/\"+r.replace(/^\\/+/,\"\"):e}});var ie=l((En,Ve)=>{\"use strict\";var Rr=We(),Cr=Je();Ve.exports=function(e,r){return e&&!Rr(r)?Cr(e,r):r}});var Xe=l((xn,Ke)=>{\"use strict\";var se=f(),Ar=[\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"];Ke.exports=function(e){var r={},i,n,s;return e&&se.forEach(e.split(`\r\n`),function(u){if(s=u.indexOf(\":\"),i=se.trim(u.substr(0,s)).toLowerCase(),n=se.trim(u.substr(s+1)),i){if(r[i]&&Ar.indexOf(i)>=0)return;i===\"set-cookie\"?r[i]=(r[i]?r[i]:[]).concat([n]):r[i]=r[i]?r[i]+\", \"+n:n}}),r}});var Ze=l((On,Qe)=>{\"use strict\";var Ge=f();Qe.exports=Ge.isStandardBrowserEnv()?function(){var e=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement(\"a\"),i;function n(s){var a=s;return e&&(r.setAttribute(\"href\",a),a=r.href),r.setAttribute(\"href\",a),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,\"\"):\"\",host:r.host,search:r.search?r.search.replace(/^\\?/,\"\"):\"\",hash:r.hash?r.hash.replace(/^#/,\"\"):\"\",hostname:r.hostname,port:r.port,pathname:r.pathname.charAt(0)===\"/\"?r.pathname:\"/\"+r.pathname}}return i=n(window.location.href),function(a){var u=Ge.isString(a)?n(a):a;return u.protocol===i.protocol&&u.host===i.host}}():function(){return function(){return!0}}()});var B=l((Rn,et)=>{\"use strict\";var ae=A(),Tr=f();function Ye(t){ae.call(this,t??\"canceled\",ae.ERR_CANCELED),this.name=\"CanceledError\"}Tr.inherits(Ye,ae,{__CANCEL__:!0});et.exports=Ye});var rt=l((Cn,tt)=>{\"use strict\";tt.exports=function(e){var r=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(e);return r&&r[1]||\"\"}});var oe=l((An,nt)=>{\"use strict\";var D=f(),qr=ze(),Sr=Me(),Nr=ee(),kr=ie(),Pr=Xe(),_r=Ze(),Lr=te(),E=A(),Br=B(),Dr=rt();nt.exports=function(e){return new Promise(function(i,n){var s=e.data,a=e.headers,u=e.responseType,c;function h(){e.cancelToken&&e.cancelToken.unsubscribe(c),e.signal&&e.signal.removeEventListener(\"abort\",c)}D.isFormData(s)&&D.isStandardBrowserEnv()&&delete a[\"Content-Type\"];var o=new XMLHttpRequest;if(e.auth){var d=e.auth.username||\"\",v=e.auth.password?unescape(encodeURIComponent(e.auth.password)):\"\";a.Authorization=\"Basic \"+btoa(d+\":\"+v)}var m=kr(e.baseURL,e.url);o.open(e.method.toUpperCase(),Nr(m,e.params,e.paramsSerializer),!0),o.timeout=e.timeout;function ge(){if(o){var g=\"getAllResponseHeaders\"in o?Pr(o.getAllResponseHeaders()):null,T=!u||u===\"text\"||u===\"json\"?o.responseText:o.response,R={data:T,status:o.status,statusText:o.statusText,headers:g,config:e,request:o};qr(function(J){i(J),h()},function(J){n(J),h()},R),o=null}}if(\"onloadend\"in o?o.onloadend=ge:o.onreadystatechange=function(){!o||o.readyState!==4||o.status===0&&!(o.responseURL&&o.responseURL.indexOf(\"file:\")===0)||setTimeout(ge)},o.onabort=function(){o&&(n(new E(\"Request aborted\",E.ECONNABORTED,e,o)),o=null)},o.onerror=function(){n(new E(\"Network Error\",E.ERR_NETWORK,e,o,o)),o=null},o.ontimeout=function(){var T=e.timeout?\"timeout of \"+e.timeout+\"ms exceeded\":\"timeout exceeded\",R=e.transitional||Lr;e.timeoutErrorMessage&&(T=e.timeoutErrorMessage),n(new E(T,R.clarifyTimeoutError?E.ETIMEDOUT:E.ECONNABORTED,e,o)),o=null},D.isStandardBrowserEnv()){var be=(e.withCredentials||_r(m))&&e.xsrfCookieName?Sr.read(e.xsrfCookieName):void 0;be&&(a[e.xsrfHeaderName]=be)}\"setRequestHeader\"in o&&D.forEach(a,function(T,R){typeof s>\"u\"&&R.toLowerCase()===\"content-type\"?delete a[R]:o.setRequestHeader(R,T)}),D.isUndefined(e.withCredentials)||(o.withCredentials=!!e.withCredentials),u&&u!==\"json\"&&(o.responseType=e.responseType),typeof e.onDownloadProgress==\"function\"&&o.addEventListener(\"progress\",e.onDownloadProgress),typeof e.onUploadProgress==\"function\"&&o.upload&&o.upload.addEventListener(\"progress\",e.onUploadProgress),(e.cancelToken||e.signal)&&(c=function(g){o&&(n(!g||g&&g.type?new Br:g),o.abort(),o=null)},e.cancelToken&&e.cancelToken.subscribe(c),e.signal&&(e.signal.aborted?c():e.signal.addEventListener(\"abort\",c))),s||(s=null);var H=Dr(m);if(H&&[\"http\",\"https\",\"file\"].indexOf(H)===-1){n(new E(\"Unsupported protocol \"+H+\":\",E.ERR_BAD_REQUEST,e));return}o.send(s)})}});var st=l((Tn,it)=>{it.exports=null});var M=l((qn,ct)=>{\"use strict\";var p=f(),at=Pe(),ot=A(),Ur=te(),jr=re(),Fr={\"Content-Type\":\"application/x-www-form-urlencoded\"};function ut(t,e){!p.isUndefined(t)&&p.isUndefined(t[\"Content-Type\"])&&(t[\"Content-Type\"]=e)}function zr(){var t;return typeof XMLHttpRequest<\"u\"?t=oe():typeof process<\"u\"&&Object.prototype.toString.call(process)===\"[object process]\"&&(t=oe()),t}function Ir(t,e,r){if(p.isString(t))try{return(e||JSON.parse)(t),p.trim(t)}catch(i){if(i.name!==\"SyntaxError\")throw i}return(r||JSON.stringify)(t)}var I={transitional:Ur,adapter:zr(),transformRequest:[function(e,r){if(at(r,\"Accept\"),at(r,\"Content-Type\"),p.isFormData(e)||p.isArrayBuffer(e)||p.isBuffer(e)||p.isStream(e)||p.isFile(e)||p.isBlob(e))return e;if(p.isArrayBufferView(e))return e.buffer;if(p.isURLSearchParams(e))return ut(r,\"application/x-www-form-urlencoded;charset=utf-8\"),e.toString();var i=p.isObject(e),n=r&&r[\"Content-Type\"],s;if((s=p.isFileList(e))||i&&n===\"multipart/form-data\"){var a=this.env&&this.env.FormData;return jr(s?{\"files[]\":e}:e,a&&new a)}else if(i||n===\"application/json\")return ut(r,\"application/json\"),Ir(e);return e}],transformResponse:[function(e){var r=this.transitional||I.transitional,i=r&&r.silentJSONParsing,n=r&&r.forcedJSONParsing,s=!i&&this.responseType===\"json\";if(s||n&&p.isString(e)&&e.length)try{return JSON.parse(e)}catch(a){if(s)throw a.name===\"SyntaxError\"?ot.from(a,ot.ERR_BAD_RESPONSE,this,null,this.response):a}return e}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,maxBodyLength:-1,env:{FormData:st()},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:\"application/json, text/plain, */*\"}}};p.forEach([\"delete\",\"get\",\"head\"],function(e){I.headers[e]={}});p.forEach([\"post\",\"put\",\"patch\"],function(e){I.headers[e]=p.merge(Fr)});ct.exports=I});var dt=l((Sn,lt)=>{\"use strict\";var Mr=f(),$r=M();lt.exports=function(e,r,i){var n=this||$r;return Mr.forEach(i,function(a){e=a.call(n,e,r)}),e}});var ue=l((Nn,ft)=>{\"use strict\";ft.exports=function(e){return!!(e&&e.__CANCEL__)}});var mt=l((kn,ht)=>{\"use strict\";var pt=f(),ce=dt(),Wr=ue(),Hr=M(),Jr=B();function le(t){if(t.cancelToken&&t.cancelToken.throwIfRequested(),t.signal&&t.signal.aborted)throw new Jr}ht.exports=function(e){le(e),e.headers=e.headers||{},e.data=ce.call(e,e.data,e.headers,e.transformRequest),e.headers=pt.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),pt.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],function(n){delete e.headers[n]});var r=e.adapter||Hr.adapter;return r(e).then(function(n){return le(e),n.data=ce.call(e,n.data,n.headers,e.transformResponse),n},function(n){return Wr(n)||(le(e),n&&n.response&&(n.response.data=ce.call(e,n.response.data,n.response.headers,e.transformResponse))),Promise.reject(n)})}});var de=l((Pn,yt)=>{\"use strict\";var w=f();yt.exports=function(e,r){r=r||{};var i={};function n(o,d){return w.isPlainObject(o)&&w.isPlainObject(d)?w.merge(o,d):w.isPlainObject(d)?w.merge({},d):w.isArray(d)?d.slice():d}function s(o){if(w.isUndefined(r[o])){if(!w.isUndefined(e[o]))return n(void 0,e[o])}else return n(e[o],r[o])}function a(o){if(!w.isUndefined(r[o]))return n(void 0,r[o])}function u(o){if(w.isUndefined(r[o])){if(!w.isUndefined(e[o]))return n(void 0,e[o])}else return n(void 0,r[o])}function c(o){if(o in r)return n(e[o],r[o]);if(o in e)return n(void 0,e[o])}var h={url:a,method:a,data:a,baseURL:u,transformRequest:u,transformResponse:u,paramsSerializer:u,timeout:u,timeoutMessage:u,withCredentials:u,adapter:u,responseType:u,xsrfCookieName:u,xsrfHeaderName:u,onUploadProgress:u,onDownloadProgress:u,decompress:u,maxContentLength:u,maxBodyLength:u,beforeRedirect:u,transport:u,httpAgent:u,httpsAgent:u,cancelToken:u,socketPath:u,responseEncoding:u,validateStatus:c};return w.forEach(Object.keys(e).concat(Object.keys(r)),function(d){var v=h[d]||s,m=v(d);w.isUndefined(m)&&v!==c||(i[d]=m)}),i}});var fe=l((_n,vt)=>{vt.exports={version:\"0.27.2\"}});var bt=l((Ln,gt)=>{\"use strict\";var Vr=fe().version,O=A(),pe={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach(function(t,e){pe[t]=function(i){return typeof i===t||\"a\"+(e<1?\"n \":\" \")+t}});var wt={};pe.transitional=function(e,r,i){function n(s,a){return\"[Axios v\"+Vr+\"] Transitional option '\"+s+\"'\"+a+(i?\". \"+i:\"\")}return function(s,a,u){if(e===!1)throw new O(n(a,\" has been removed\"+(r?\" in \"+r:\"\")),O.ERR_DEPRECATED);return r&&!wt[a]&&(wt[a]=!0,console.warn(n(a,\" has been deprecated since v\"+r+\" and will be removed in the near future\"))),e?e(s,a,u):!0}};function Kr(t,e,r){if(typeof t!=\"object\")throw new O(\"options must be an object\",O.ERR_BAD_OPTION_VALUE);for(var i=Object.keys(t),n=i.length;n-- >0;){var s=i[n],a=e[s];if(a){var u=t[s],c=u===void 0||a(u,s,t);if(c!==!0)throw new O(\"option \"+s+\" must be \"+c,O.ERR_BAD_OPTION_VALUE);continue}if(r!==!0)throw new O(\"Unknown option \"+s,O.ERR_BAD_OPTION)}}gt.exports={assertOptions:Kr,validators:pe}});var At=l((Bn,Ct)=>{\"use strict\";var Ot=f(),Xr=ee(),Et=Ne(),xt=mt(),$=de(),Gr=ie(),Rt=bt(),N=Rt.validators;function k(t){this.defaults=t,this.interceptors={request:new Et,response:new Et}}k.prototype.request=function(e,r){typeof e==\"string\"?(r=r||{},r.url=e):r=e||{},r=$(this.defaults,r),r.method?r.method=r.method.toLowerCase():this.defaults.method?r.method=this.defaults.method.toLowerCase():r.method=\"get\";var i=r.transitional;i!==void 0&&Rt.assertOptions(i,{silentJSONParsing:N.transitional(N.boolean),forcedJSONParsing:N.transitional(N.boolean),clarifyTimeoutError:N.transitional(N.boolean)},!1);var n=[],s=!0;this.interceptors.request.forEach(function(m){typeof m.runWhen==\"function\"&&m.runWhen(r)===!1||(s=s&&m.synchronous,n.unshift(m.fulfilled,m.rejected))});var a=[];this.interceptors.response.forEach(function(m){a.push(m.fulfilled,m.rejected)});var u;if(!s){var c=[xt,void 0];for(Array.prototype.unshift.apply(c,n),c=c.concat(a),u=Promise.resolve(r);c.length;)u=u.then(c.shift(),c.shift());return u}for(var h=r;n.length;){var o=n.shift(),d=n.shift();try{h=o(h)}catch(v){d(v);break}}try{u=xt(h)}catch(v){return Promise.reject(v)}for(;a.length;)u=u.then(a.shift(),a.shift());return u};k.prototype.getUri=function(e){e=$(this.defaults,e);var r=Gr(e.baseURL,e.url);return Xr(r,e.params,e.paramsSerializer)};Ot.forEach([\"delete\",\"get\",\"head\",\"options\"],function(e){k.prototype[e]=function(r,i){return this.request($(i||{},{method:e,url:r,data:(i||{}).data}))}});Ot.forEach([\"post\",\"put\",\"patch\"],function(e){function r(i){return function(s,a,u){return this.request($(u||{},{method:e,headers:i?{\"Content-Type\":\"multipart/form-data\"}:{},url:s,data:a}))}}k.prototype[e]=r(),k.prototype[e+\"Form\"]=r(!0)});Ct.exports=k});var qt=l((Dn,Tt)=>{\"use strict\";var Qr=B();function P(t){if(typeof t!=\"function\")throw new TypeError(\"executor must be a function.\");var e;this.promise=new Promise(function(n){e=n});var r=this;this.promise.then(function(i){if(r._listeners){var n,s=r._listeners.length;for(n=0;n<s;n++)r._listeners[n](i);r._listeners=null}}),this.promise.then=function(i){var n,s=new Promise(function(a){r.subscribe(a),n=a}).then(i);return s.cancel=function(){r.unsubscribe(n)},s},t(function(n){r.reason||(r.reason=new Qr(n),e(r.reason))})}P.prototype.throwIfRequested=function(){if(this.reason)throw this.reason};P.prototype.subscribe=function(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]};P.prototype.unsubscribe=function(e){if(this._listeners){var r=this._listeners.indexOf(e);r!==-1&&this._listeners.splice(r,1)}};P.source=function(){var e,r=new P(function(n){e=n});return{token:r,cancel:e}};Tt.exports=P});var Nt=l((Un,St)=>{\"use strict\";St.exports=function(e){return function(i){return e.apply(null,i)}}});var Pt=l((jn,kt)=>{\"use strict\";var Zr=f();kt.exports=function(e){return Zr.isObject(e)&&e.isAxiosError===!0}});var Bt=l((Fn,he)=>{\"use strict\";var _t=f(),Yr=V(),W=At(),en=de(),tn=M();function Lt(t){var e=new W(t),r=Yr(W.prototype.request,e);return _t.extend(r,W.prototype,e),_t.extend(r,e),r.create=function(n){return Lt(en(t,n))},r}var y=Lt(tn);y.Axios=W;y.CanceledError=B();y.CancelToken=qt();y.isCancel=ue();y.VERSION=fe().version;y.toFormData=re();y.AxiosError=A();y.Cancel=y.CanceledError;y.all=function(e){return Promise.all(e)};y.spread=Nt();y.isAxiosError=Pt();he.exports=y;he.exports.default=y});var me=l((zn,Dt)=>{Dt.exports=Bt()});var L=xe(me(),1);var x=\"https://zesty-storage-prod.s3.amazonaws.com/images/zesty\",_={tall:{width:.75,height:1,style:{standard:`${x}/zesty-banner-tall.png`,minimal:`${x}/zesty-banner-tall-minimal.png`,transparent:`${x}/zesty-banner-tall-transparent.png`}},wide:{width:4,height:1,style:{standard:`${x}/zesty-banner-wide.png`,minimal:`${x}/zesty-banner-wide-minimal.png`,transparent:`${x}/zesty-banner-wide-transparent.png`}},square:{width:1,height:1,style:{standard:`${x}/zesty-banner-square.png`,minimal:`${x}/zesty-banner-square-minimal.png`,transparent:`${x}/zesty-banner-square-transparent.png`}}},Ut=\"square\";var rn=xe(me(),1);var ye=()=>{let t=window.XRHand!=null&&window.XRMediaBinding!=null,e=navigator.userAgent.includes(\"OculusBrowser\"),r=t&&e?\"Full\":t||e?\"Partial\":\"None\";return{match:r!==\"None\",confidence:r}},ve=()=>{let t=window.mozInnerScreenX!=null&&window.speechSynthesis==null,e=navigator.userAgent.includes(\"Mobile VR\")&&!navigator.userAgent.includes(\"OculusBrowser\"),r=t&&e?\"Full\":t||e?\"Partial\":\"None\";return{match:r!==\"None\",confidence:r}},jt=async()=>{let t=navigator.xr&&await navigator.xr.isSessionSupported(\"immersive-vr\")&&await navigator.xr.isSessionSupported(\"immersive-ar\"),e=navigator.userAgent.includes(\"Pico Neo 3 Link\"),r=t&&e?\"Full\":t||e?\"Partial\":\"None\";return{match:r!==\"None\",confidence:r}},Ft=()=>{let t=navigator.maxTouchPoints===0||navigator.msMaxTouchPoints===0,e=!navigator.userAgent.includes(\"Android\")&&!navigator.userAgent.includes(\"Mobile\"),r=t&&e?\"Full\":t||e?\"Partial\":\"None\";return{match:r!==\"None\",confidence:r}},we=async()=>{let t={platform:\"\",confidence:\"\"};return ye().match?t={platform:\"Oculus\",confidence:ye().confidence}:ve().match?t={platform:\"Wolvic\",confidence:ve().confidence}:await jt().match?t={platform:\"Pico\",confidence:await jt().confidence}:Ft().match?t={platform:\"Desktop\",confidence:Ft().confidence}:t={platform:\"Unknown\",confidence:\"None\"},t},zt=t=>{if(t){if(ye().match){if(t.includes(\"https://www.oculus.com/experiences/quest/\")){setTimeout(()=>{window.open(t,\"_blank\")},1e3);return}}else if(ve().match){let e=document.createElement(\"div\"),r=document.createElement(\"div\"),i=document.createElement(\"p\"),n=document.createElement(\"button\"),s=document.createElement(\"button\");e.style.backgroundColor=\"rgb(0, 0, 0, 0.75)\",e.style.color=\"white\",e.style.textAlign=\"center\",e.style.position=\"fixed\",e.style.top=\"50%\",e.style.left=\"50%\",e.style.padding=\"5%\",e.style.borderRadius=\"5%\",e.style.transform=\"translate(-50%, -50%)\",i.innerHTML=`<b>This billboard leads to ${t}. Continue?</b>`,n.innerText=\"Move cursor back into window.\",n.style.width=\"100vw\",n.style.height=\"100vh\",n.onmouseenter=()=>{n.style.width=\"auto\",n.style.height=\"auto\",n.innerText=\"Yes\"},n.onclick=()=>{window.open(t,\"_blank\"),e.remove()},s.innerText=\"No\",s.onclick=()=>{e.remove()},e.append(r),r.append(i),r.append(n),r.append(s),document.body.append(e);return}window.open(t,\"_blank\")}};var It=\"https://beacon.zesty.market\",Mt=\"https://beacon2.zesty.market/zgraphql\",nn=\"https://api.zesty.market/api\";var $t=async(t,e=\"tall\",r=\"standard\")=>{try{let i=encodeURI(window.top.location.href).replace(/\\/$/,\"\");return(await L.default.get(`${nn}/ad?ad_unit_id=${t}&url=${i}`)).data}catch{return console.warn(\"No active campaign banner could be located. Displaying default banner.\"),{Ads:[{asset_url:_[e].style[r],cta_url:\"https://www.zesty.market\"}],CampaignId:\"TestCampaign\"}}},Wt=async(t,e=null)=>{let{platform:r,confidence:i}=await we();try{let n=It+`/api/v1/space/${t}`;await L.default.put(n),await L.default.post(Mt,{query:`mutation { increment(eventType: visits, spaceId: \"${t}\", campaignId: \"${e}\", platform: { name: ${r}, confidence: ${i} }) { message } }`},{headers:{\"Content-Type\":\"application/json\"}})}catch(n){console.log(\"Failed to emit onload event\",n.message)}},Ht=async(t,e=null)=>{let{platform:r,confidence:i}=await we();try{let n=It+`/api/v1/space/click/${t}`;await L.default.put(n),await L.default.post(Mt,{query:`mutation { increment(eventType: clicks, spaceId: \"${t}\", campaignId: \"${e}\", platform: { name: ${r}, confidence: ${i} }) { message } }`},{headers:{\"Content-Type\":\"application/json\"}})}catch(n){console.log(\"Failed to emit onclick event\",n.message)}};var Jt=\"2.0.6\";console.log(`Zesty SDK Version: ${Jt} (compatibility)`);var an=\"https://cdn.zesty.xyz/sdk/zesty-formats.js\",on=\"https://cdn.zesty.xyz/sdk/zesty-networking.js\";WL.registerComponent(\"zesty-banner\",{adUnit:{type:WL.Type.String},format:{type:WL.Type.Enum,values:Object.keys(_),default:Ut},style:{type:WL.Type.Enum,values:[\"standard\",\"minimal\",\"transparent\"],default:\"transparent\"},scaleToRatio:{type:WL.Type.Bool,default:!0},textureProperty:{type:WL.Type.String,default:\"auto\"},beacon:{type:WL.Type.Bool,default:!0},dynamicFormats:{type:WL.Type.Bool,default:!0},createAutomaticCollision:{type:WL.Type.Bool,default:!0},dynamicNetworking:{type:WL.Type.Bool,default:!0}},{init:function(){this.formats=Object.values(_),this.formatKeys=Object.keys(_),this.styleKeys=[\"standard\",\"minimal\",\"transparent\"]},start:function(){if(this.mesh=this.object.getComponent(\"mesh\"),!this.mesh)throw new Error(\"'zesty-banner ' missing mesh component\");if(this.createAutomaticCollision&&(this.collision=this.object.getComponent(\"collision\")||this.object.addComponent(\"collision\",{collider:WL.Collider.Box,group:2}),this.cursorTarget=this.object.getComponent(\"cursor-target\")||this.object.addComponent(\"cursor-target\"),this.cursorTarget.addClickFunction(this.onClick.bind(this))),this.dynamicFormats){let t=document.createElement(\"script\");t.onload=()=>{this.formatsOverride=zestyFormats.formats},t.setAttribute(\"src\",an),t.setAttribute(\"crossorigin\",\"anonymous\"),document.body.appendChild(t)}this.dynamicNetworking?import(on).then(t=>{this.zestyNetworking=Object.assign({},t),this.startLoading()}).catch(()=>{console.error(\"Failed to dynamically retrieve networking code, falling back to bundled version.\"),this.dynamicNetworking=null,this.startLoading()}):this.startLoading()},startLoading:function(){this.loadBanner(this.adUnit,this.formatKeys[this.format],this.styleKeys[this.style]).then(t=>{this.banner=t,this.scaleToRatio&&(this.height=this.object.scalingLocal[1],this.object.resetScaling(),this.createAutomaticCollision&&(this.collision.extents=[this.formats[this.format].width*this.height,this.height,.1]),this.object.scale([this.formats[this.format].width*this.height,this.height,1]));let e=this.mesh.material;if(this.textureProperty===\"auto\"){let r=e.pipeline||e.shader;if(r===\"Phong Opaque Textured\")e.diffuseTexture=t.texture,e.alphaMaskThreshold=.3;else if(r===\"Flat Opaque Textured\")e.flatTexture=t.texture,e.alphaMaskThreshold=.8;else throw Error(\"'zesty-banner ' unable to apply banner texture: unsupported pipeline \"+e.shader);this.mesh.material=e}else this.mesh.material[this.textureProperty]=t.texture;this.beacon&&(this.dynamicNetworking?this.zestyNetworking.sendOnLoadMetric(this.adUnit,this.banner.campaignId):Wt(this.adUnit,this.banner.campaignId))})},onClick:function(){this.banner?.url&&(WL.xrSession?WL.xrSession.end().then(this.executeClick.bind(this)):this.executeClick())},executeClick:function(){this.beacon&&(this.dynamicNetworking?this.zestyNetworking.sendOnClickMetric(this.adUnit,this.banner.campaignId):Ht(this.adUnit,this.banner.campaignId))},loadBanner:async function(t,e,r){let i=this.dynamicNetworking?await this.zestyNetworking.fetchCampaignAd(t,e,r):await $t(t,e,r),{asset_url:n,cta_url:s}=i.Ads[0];return WL.textures.load(n,\"\").then(a=>({texture:a,imageSrc:n,url:s,campaignId:i.CampaignId}))}});})();\r\n//# sourceMappingURL=zesty-wonderland-sdk-compat.js.map\r\n",
        "WL.registerComponent(\"pp-easy-light-attenuation\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false }\r\n\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyLightAttenuation(this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    }\r\n});\r\n\r\nPP.EasyLightAttenuation = class EasyLightAttenuation extends PP.EasyObjectTuner {\r\n    constructor(object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = \"Light Attenuation \";\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneNumber(variableName, this._getDefaultValue(), 0.01, 3, 0, 1);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let attenuation = this._getLightAttenuation(object);\r\n        return attenuation;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return 0;\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let attenuation = value;\r\n\r\n        let light = object.pp_getComponent(\"light\");\r\n        if (light) {\r\n            light.color[3] = attenuation;\r\n        }\r\n    }\r\n\r\n    _getLightAttenuation(object) {\r\n        let attenuation = this._getDefaultValue();\r\n\r\n        let light = object.pp_getComponent(\"light\");\r\n        if (light) {\r\n            attenuation = light.color[3];\r\n        }\r\n\r\n        return attenuation;\r\n    }\r\n};",
        "WL.registerComponent(\"pp-easy-light-color\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _myColorModel: { type: WL.Type.Enum, values: ['rgb', 'hsv'] }\r\n\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyLightColor(this._myColorModel, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    }\r\n});\r\n\r\nPP.EasyLightColor = class EasyLightColor extends PP.EasyObjectTuner {\r\n    constructor(colorModel, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myColorModel = colorModel;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Light RGB \";\r\n        } else {\r\n            nameFirstPart = \"Light HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneIntArray(variableName, this._getDefaultValue(), 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let lightColor = this._getLightColor(object);\r\n        if (lightColor) {\r\n            if (this._myColorModel == 0) {\r\n                color = PP.ColorUtils.rgbCodeToHuman(lightColor);\r\n            } else {\r\n                color = PP.ColorUtils.hsvCodeToHuman(PP.ColorUtils.rgbToHsv(lightColor));\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return vec3_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorModel == 0) {\r\n            color = PP.ColorUtils.rgbHumanToCode(color);\r\n        } else {\r\n            color = PP.ColorUtils.hsvToRgb(PP.ColorUtils.hsvHumanToCode(color));\r\n        }\r\n\r\n        let light = object.pp_getComponent(\"light\");\r\n        if (light) {\r\n            light.color[0] = color[0];\r\n            light.color[1] = color[1];\r\n            light.color[2] = color[2];\r\n            light.color[3] = light.color[3];\r\n        }\r\n\r\n        if ((PP.myRightGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).isPressStart() && PP.myLeftGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).myIsPressed) ||\r\n            (PP.myLeftGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).isPressStart() && PP.myRightGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).myIsPressed)) {\r\n\r\n            let hsvColor = PP.ColorUtils.color1To255(PP.ColorUtils.rgbToHsv(color));\r\n            let rgbColor = PP.ColorUtils.color1To255(color);\r\n\r\n            console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n        }\r\n    }\r\n\r\n    _getLightColor(object) {\r\n        let color = null;\r\n        let light = object.pp_getComponent(\"light\");\r\n        if (light) {\r\n            color = light.color.slice(0, 3);\r\n        }\r\n\r\n        return color;\r\n    }\r\n};",
        "WL.registerComponent(\"pp-easy-mesh-color\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myColorModel: { type: WL.Type.Enum, values: ['rgb', 'hsv'], default: 'hsv' },\r\n    _myColorType: { type: WL.Type.Enum, values: ['color', 'diffuse color', 'ambient color', 'specular color', 'emissive color', 'fog color', 'ambient factor'], default: 'color' },\r\n\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyMeshColor(this._myColorModel, this._myColorType, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    }\r\n});\r\n\r\nPP.EasyMeshColor = class EasyMeshColor extends PP.EasyObjectTuner {\r\n    constructor(colorModel, colorType, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myColorModel = colorModel;\r\n        this._myColorType = colorType;\r\n        this._myColorVariableNames = ['color', 'diffuseColor', 'ambientColor', 'specularColor', 'emissiveColor', 'fogColor', 'ambientFactor',];\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Mesh RGB \";\r\n        } else {\r\n            nameFirstPart = \"Mesh HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        if (this._myColorType == 6) {\r\n            return new PP.EasyTuneNumberArray(variableName, this._getDefaultValue(), 0.1, 3, 0, 1);\r\n        }\r\n        return new PP.EasyTuneIntArray(variableName, this._getDefaultValue(), 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            if (this._myColorType != 6) {\r\n                color = meshMaterial[this._myColorVariableNames[this._myColorType]].pp_clone();\r\n\r\n                if (this._myColorModel == 0) {\r\n                    color = PP.ColorUtils.rgbCodeToHuman(color);\r\n                } else {\r\n                    color = PP.ColorUtils.hsvCodeToHuman(PP.ColorUtils.rgbToHsv(color));\r\n                }\r\n            } else {\r\n                color = [meshMaterial[this._myColorVariableNames[this._myColorType]]];\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        if (this._myColorType == 6) {\r\n            return [0];\r\n        }\r\n\r\n        return vec4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorType != 6) {\r\n            if (this._myColorModel == 0) {\r\n                color = PP.ColorUtils.rgbHumanToCode(color);\r\n            } else {\r\n                color = PP.ColorUtils.hsvToRgb(PP.ColorUtils.hsvHumanToCode(color));\r\n            }\r\n        }\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            meshMaterial[this._myColorVariableNames[this._myColorType]] = color;\r\n        }\r\n\r\n        if (this._myColorType != 6) {\r\n            if ((PP.myRightGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).isPressStart() && PP.myLeftGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).myIsPressed) ||\r\n                (PP.myLeftGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).isPressStart() && PP.myRightGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).myIsPressed)) {\r\n\r\n                let hsvColor = PP.ColorUtils.color1To255(PP.ColorUtils.rgbToHsv(color));\r\n                let rgbColor = PP.ColorUtils.color1To255(color);\r\n\r\n                console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n            }\r\n        }\r\n    }\r\n\r\n    _getMeshMaterial(object) {\r\n        let material = null;\r\n        let mesh = object.pp_getComponentHierarchy(\"mesh\");\r\n        if (mesh) {\r\n            material = mesh.material;\r\n        }\r\n\r\n        return material;\r\n    }\r\n};",
        "WL.registerComponent(\"pp-easy-scale\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _myIsLocal: { type: WL.Type.Bool, default: false },\r\n    _myScaleAsOne: { type: WL.Type.Bool, default: true }, // Edit all scale values together\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyScale(this._myIsLocal, this._myScaleAsOne, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    }\r\n});\r\n\r\nPP.EasyScale = class EasyScale extends PP.EasyObjectTuner {\r\n    constructor(isLocal, scaleAsOne, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myIsLocal = isLocal;\r\n        this._myScaleAsOne = scaleAsOne;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        return \"Scale \";\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneNumberArray(variableName, this._getDefaultValue(), 1, 3, 0.001, null, this._myScaleAsOne);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        return this._myIsLocal ? object.pp_getScaleLocal() : object.pp_getScaleWorld();\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return vec3_create(1, 1, 1);\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        if (this._myIsLocal) {\r\n            object.pp_setScaleLocal(value);\r\n        } else {\r\n            object.pp_setScaleWorld(value);\r\n        }\r\n    }\r\n};",
        "WL.registerComponent(\"pp-easy-set-tune-target-child-number\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myEasyTuneVariableName = \"Target Child \";\r\n\r\n        if (this._myVariableName == \"\") {\r\n            this._myEasyTuneVariableName = this._myEasyTuneVariableName.concat(this.object.objectId);\r\n        } else {\r\n            this._myEasyTuneVariableName = this._myEasyTuneVariableName.concat(this._myVariableName);\r\n        }\r\n\r\n        let childrenCount = this.object.pp_getChildren().length;\r\n        let min = 1;\r\n        let max = childrenCount;\r\n        if (childrenCount == 0) {\r\n            min = 0;\r\n            max = 0;\r\n        }\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneInt(this._myEasyTuneVariableName, 0, 10, min, max));\r\n        if (this._mySetAsDefault) {\r\n            PP.setEasyTuneWidgetActiveVariable(this._myEasyTuneVariableName);\r\n        }\r\n\r\n        this._myCurrentChildIndex = -1;\r\n        this._myCurrentChildrenCount = childrenCount;\r\n    },\r\n    update: function () {\r\n        if (PP.myEasyTuneVariables.isActive(this._myEasyTuneVariableName)) {\r\n            let childrenCount = this.object.pp_getChildren().length;\r\n            if (childrenCount != this._myCurrentChildrenCount) {\r\n                this._myCurrentChildrenCount = childrenCount;\r\n\r\n                let min = 1;\r\n                let max = childrenCount;\r\n                if (childrenCount == 0) {\r\n                    min = 0;\r\n                    max = 0;\r\n                }\r\n\r\n                let easyTuneVariable = PP.myEasyTuneVariables.getEasyTuneVariable(this._myEasyTuneVariableName);\r\n                easyTuneVariable.setMin(min);\r\n                easyTuneVariable.setMax(max);\r\n            }\r\n\r\n            let childIndex = PP.myEasyTuneVariables.get(this._myEasyTuneVariableName);\r\n            if (childIndex != this._myCurrentChildIndex) {\r\n                this._myCurrentChildIndex = childIndex;\r\n                if (this._myCurrentChildIndex == 0) {\r\n                    PP.myEasyTuneTarget = null;\r\n                } else {\r\n                    PP.myEasyTuneTarget = this.object.pp_getChildren()[this._myCurrentChildIndex - 1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n});",
        "WL.registerComponent(\"pp-easy-set-tune-target-grab\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myGrabber = this.object.pp_getComponent(\"pp-grabber-hand\");\r\n    },\r\n    update: function () {\r\n    },\r\n    _onRelease: function (grabber, grabbable) {\r\n        PP.myEasyTuneTarget = grabbable.object;\r\n    },\r\n    _onGrab: function (grabber, grabbable) {\r\n        PP.myEasyTuneTarget = null;\r\n    },\r\n    onActivate() {\r\n        this._myGrabber.registerGrabEventListener(this, this._onGrab.bind(this));\r\n        this._myGrabber.registerThrowEventListener(this, this._onRelease.bind(this));\r\n    },\r\n    onDeactivate() {\r\n        this._myGrabber.unregisterGrabEventListener(this);\r\n        this._myGrabber.unregisterThrowEventListener(this);\r\n    }\r\n});",
        "WL.registerComponent(\"pp-easy-text-color\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _myColorModel: { type: WL.Type.Enum, values: ['rgb', 'hsv'], default: 'hsv' },\r\n    _myColorType: { type: WL.Type.Enum, values: ['color', 'outline color'], default: 'color' }\r\n\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyTextColor(this._myColorModel, this._myColorType, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    }\r\n});\r\n\r\nPP.EasyTextColor = class EasyTextColor extends PP.EasyObjectTuner {\r\n    constructor(colorModel, colorType, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myColorModel = colorModel;\r\n        this._myColorType = colorType;\r\n        this._myColorVariableNames = ['color', 'outlineColor'];\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Text RGB \";\r\n        } else {\r\n            nameFirstPart = \"Text HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneIntArray(variableName, this._getDefaultValue(), 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let textMaterial = this._getTextMaterial(object);\r\n        if (textMaterial) {\r\n            console.error(this._myColorType, this._myColorVariableNames[this._myColorType]);\r\n            console.error(textMaterial[this._myColorVariableNames[this._myColorType]]);\r\n            color = textMaterial[this._myColorVariableNames[this._myColorType]].pp_clone();\r\n\r\n            if (this._myColorModel == 0) {\r\n                color = PP.ColorUtils.rgbCodeToHuman(color);\r\n            } else {\r\n                color = PP.ColorUtils.hsvCodeToHuman(PP.ColorUtils.rgbToHsv(color));\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return vec4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorModel == 0) {\r\n            color = PP.ColorUtils.rgbHumanToCode(color);\r\n        } else {\r\n            color = PP.ColorUtils.hsvToRgb(PP.ColorUtils.hsvHumanToCode(color));\r\n        }\r\n\r\n        let textMaterial = this._getTextMaterial(object);\r\n        if (textMaterial) {\r\n            textMaterial[this._myColorVariableNames[this._myColorType]] = color;\r\n        }\r\n\r\n        if ((PP.myRightGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).isPressStart() && PP.myLeftGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).myIsPressed) ||\r\n            (PP.myLeftGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).isPressStart() && PP.myRightGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).myIsPressed)) {\r\n\r\n            let hsvColor = PP.ColorUtils.color1To255(PP.ColorUtils.rgbToHsv(color));\r\n            let rgbColor = PP.ColorUtils.color1To255(color);\r\n\r\n            console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n        }\r\n    }\r\n\r\n    _getTextMaterial(object) {\r\n        let material = null;\r\n        let text = object.pp_getComponentHierarchy(\"text\");\r\n        if (text) {\r\n            material = text.material;\r\n        }\r\n\r\n        return material;\r\n    }\r\n};",
        "WL.registerComponent(\"pp-easy-transform\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _myIsLocal: { type: WL.Type.Bool, default: false },\r\n    _myScaleAsOne: { type: WL.Type.Bool, default: true }, // Edit all scale values together\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyTransform(this._myIsLocal, this._myScaleAsOne, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    }\r\n});\r\n\r\nPP.EasyTransform = class EasyTransform extends PP.EasyObjectTuner {\r\n    constructor(isLocal, scaleAsOne, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myIsLocal = isLocal;\r\n        this._myScaleAsOne = scaleAsOne;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        return \"Transform \";\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneSimpleTransform(variableName, this._getDefaultValue(), this._myScaleAsOne);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        return this._myIsLocal ? object.pp_getTransformLocal() : object.pp_getTransformWorld();\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return mat4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        if (this._myIsLocal) {\r\n            object.pp_setTransformLocal(value);\r\n        } else {\r\n            object.pp_setTransformWorld(value);\r\n        }\r\n    }\r\n};",
        "\nPP.EasyTuneBoolArrayWidget = class EasyTuneBoolArrayWidget {\n\n    constructor(arraySize, gamepad) {\n        this._myGamepad = gamepad;\n\n        this._mySetup = new PP.EasyTuneBoolArrayWidgetSetup(arraySize);\n        this._myUI = new PP.EasyTuneBoolArrayWidgetUI();\n\n        this._myVariable = null;\n\n        this._myIsVisible = true;\n\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\n\n        this._myAppendToVariableName = \"\";\n\n        this._myValueEditIndex = 0;\n        this._myValueButtonEditIntensity = 0;\n        this._myValueButtonEditIntensityTimer = 0;\n        this._myValueEditActive = false;\n    }\n\n    setEasyTuneVariable(variable, appendToVariableName) {\n        this._myVariable = variable;\n\n        if ((typeof appendToVariableName) !== 'undefined') {\n            this._myAppendToVariableName = appendToVariableName;\n        } else {\n            this._myAppendToVariableName = \"\";\n        }\n\n        this._refreshUI();\n    }\n\n    _refreshUI() {\n        if (this._myVariable) {\n            this._myUI.myVariableLabelTextComponent.text = this._myVariable.myName.concat(this._myAppendToVariableName);\n\n            for (let i = 0; i < this._mySetup.myArraySize; i++) {\n                this._myUI.myValueTextComponents[i].text = (this._myVariable.myValue[i]) ? \"true\" : \"false\";\n            }\n        }\n    }\n\n    setVisible(visible) {\n        if (visible) {\n            this._refreshUI();\n        }\n        this._myUI.setVisible(visible);\n\n        this._myIsVisible = visible;\n    }\n\n    registerScrollVariableRequestEventListener(id, callback) {\n        this._myScrollVariableRequestCallbacks.set(id, callback);\n    }\n\n    unregisterScrollVariableRequestEventListener(id) {\n        this._myScrollVariableRequestCallbacks.delete(id);\n    }\n\n    start(parentObject, additionalSetup) {\n        this._myUI.build(parentObject, this._mySetup, additionalSetup);\n        this._myUI.setAdditionalButtonsActive(additionalSetup.myEnableAdditionalButtons);\n\n        this._addListeners();\n    }\n\n    update(dt) {\n        if (this._isActive()) {\n            this._updateValue(dt);\n        }\n    }\n\n    _updateValue(dt) {\n        let stickVariableIntensity = 0;\n\n        if (this._myGamepad) {\n            stickVariableIntensity = this._myGamepad.getAxesInfo().myAxes[1];\n        }\n\n        let valueIntensity = 0;\n        if (this._myValueEditActive) {\n            valueIntensity = stickVariableIntensity;\n        } else if (this._myValueButtonEditIntensity != 0) {\n            if (this._myValueButtonEditIntensityTimer <= 0) {\n                valueIntensity = this._myValueButtonEditIntensity;\n            } else {\n                this._myValueButtonEditIntensityTimer -= dt;\n            }\n        }\n\n        if (Math.abs(valueIntensity) > this._mySetup.myThumbstickToggleThreshold) {\n            this._myVariable.myValue[this._myValueEditIndex] = valueIntensity > 0;\n            this._refreshUI();\n        }\n    }\n\n    _isActive() {\n        return this._myIsVisible && this._myVariable;\n    }\n\n    _addListeners() {\n        let ui = this._myUI;\n\n        ui.myVariableLabelCursorTargetComponent.addClickFunction(this._resetAllValues.bind(this));\n        ui.myVariableLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myVariableLabelText));\n        ui.myVariableLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myVariableLabelText, this._mySetup.myVariableLabelTextScale));\n\n        ui.myNextButtonCursorTargetComponent.addClickFunction(this._scrollVariableRequest.bind(this, 1));\n        ui.myNextButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myNextButtonBackgroundComponent.material));\n        ui.myNextButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myNextButtonBackgroundComponent.material));\n\n        ui.myPreviousButtonCursorTargetComponent.addClickFunction(this._scrollVariableRequest.bind(this, -1));\n        ui.myPreviousButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\n        ui.myPreviousButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\n\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\n            for (let i = 0; i < this._mySetup.myArraySize; i++) {\n                ui.myValueIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, 1));\n                ui.myValueIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\n                ui.myValueDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, -1));\n                ui.myValueDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\n\n                ui.myValueIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\n                ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\n                ui.myValueDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\n                ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\n\n                ui.myValueCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, i));\n                ui.myValueCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], true));\n                ui.myValueCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], false));\n            }\n        }\n    }\n\n    _setValueEditIntensity(index, value) {\n        if (this._isActive() || value == 0) {\n            if (value != 0) {\n                this._myValueButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\n                this._myValueEditIndex = index;\n            }\n\n            this._myValueButtonEditIntensity = value;\n        }\n    }\n\n    _setValueEditActive(index, text, active) {\n        if (this._isActive() || !active) {\n            if (active) {\n                this._myValueEditIndex = index;\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\n            } else {\n                text.scalingWorld = this._mySetup.myValueTextScale;\n            }\n\n            this._myValueEditActive = active;\n        }\n    }\n\n    _scrollVariableRequest(amount) {\n        if (this._isActive()) {\n            for (let callback of this._myScrollVariableRequestCallbacks.values()) {\n                callback(amount);\n            }\n        }\n    }\n\n    _resetValue(index) {\n        if (this._isActive()) {\n            this._myVariable.myValue[index] = this._myVariable.myInitialValue[index];\n            this._myUI.myValueTextComponents[index].text = (this._myVariable.myValue[index]) ? \"true\" : \"false\";\n        }\n    }\n\n    _resetAllValues() {\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\n            this._resetValue(i);\n        }\n    }\n\n    _genericHover(material) {\n        material.color = this._mySetup.myButtonHoverColor;\n    }\n\n    _genericUnHover(material) {\n        material.color = this._mySetup.myBackgroundColor;\n    }\n\n    _genericTextHover(text) {\n        text.scale(this._mySetup.myTextHoverScaleMultiplier);\n    }\n\n    _genericTextUnHover(text, originalScale) {\n        text.scalingWorld = originalScale;\n    }\n};",
        "PP.EasyTuneBoolArrayWidgetSetup = class EasyTuneBoolArrayWidgetSetup {\n\n    constructor(arraySize) {\n        this.myArraySize = arraySize;\n        this._initializeBuildSetup();\n        this._initializeRuntimeSetup();\n    }\n\n    _initializeBuildSetup() {\n        //General\n        this.myBackgroundColor = [46 / 255, 46 / 255, 46 / 255, 1];\n\n        this.myCursorTargetCollisionCollider = 2; // box\n        this.myCursorTargetCollisionGroup = 7;\n        this.myCursorTargetCollisionThickness = 0.001;\n\n        this.myDefaultTextColor = [255 / 255, 255 / 255, 255 / 255, 1];\n\n        this.myTextAlignment = 2; // center\n        this.myTextJustification = 2; // middle\n        this.myTextOutlineRange = [0.45, 0.45];\n        this.myTextColor = this.myDefaultTextColor;\n        this.myTextOutlineColor = this.myDefaultTextColor;\n\n        //Pivot\n        this.myPivotObjectPositions = [];\n        this.myPivotObjectPositions[PP.ToolHandedness.NONE] = [0, 0, 0];\n        this.myPivotObjectPositions[PP.ToolHandedness.LEFT] = [-0.04, 0.02, 0.00003013]; //little \"random\" z offset to avoid glitching with other widgets\n        this.myPivotObjectPositions[PP.ToolHandedness.RIGHT] = [-0.08, 0.02, 0.00003013];\n\n        let panelZ = 0.01;\n        let distanceFromBorder = 0.0125;\n        let distanceFromValue = 0.055;\n        let colliderZPosition = 0.017;\n        let backgroundHalfWidth = 0.2;\n\n        this.mySideButtonBackgroundScale = [0.015, 0.015, 1];\n        this.mySideButtonTextScale = [0.18, 0.18, 0.18];\n        this.mySideButtonTextPosition = [0, 0, 0.007];\n\n        this.mySideButtonCursorTargetPosition = [0, 0, 0];\n        this.mySideButtonCursorTargetPosition[2] = colliderZPosition - panelZ;\n        this.mySideButtonCollisionExtents = this.mySideButtonBackgroundScale.slice(0);\n        this.mySideButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myLeftSideButtonPosition = [0, 0, -0.00001];\n        this.myLeftSideButtonPosition[0] = -backgroundHalfWidth + this.mySideButtonBackgroundScale[0] + distanceFromBorder;\n\n        this.myRightSideButtonPosition = [0, 0, -0.00001];\n        this.myRightSideButtonPosition[0] = backgroundHalfWidth - this.mySideButtonBackgroundScale[0] - distanceFromBorder;\n\n        this.myIncreaseButtonText = \"+\";\n        this.myDecreaseButtonText = \"-\";\n\n        //Display\n        this.myDisplayPanelPosition = [0, 0.1, 0];\n\n        this.myVariableLabelPanelPosition = [0, 0.025, panelZ];\n        this.myVariableLabelTextScale = [0.19, 0.19, 0.19];\n\n        this.myVariableLabelCursorTargetPosition = [0, 0, 0];\n        this.myVariableLabelCursorTargetPosition[2] = colliderZPosition - panelZ;\n        this.myVariableLabelCollisionExtents = [0.065, 0.0175, 1];\n        this.myVariableLabelCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myNextButtonText = \">\";\n        this.myPreviousButtonText = \"<\";\n\n        this.myValuesPanelPosition = [0, this.myVariableLabelPanelPosition[1] - distanceFromValue, panelZ];\n\n        this.myValueTextScale = [0.4, 0.4, 0.4];\n\n        this.myValueCursorTargetPosition = [0, 0, 0];\n        this.myValueCursorTargetPosition[2] = colliderZPosition - panelZ;\n        this.myValueCollisionExtents = [0.065, 0.02, 1];\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\n\n        this.myValuePanelsPositions = [];\n        this.myValuePanelsPositions[0] = [0, 0, 0];\n        for (let i = 1; i < this.myArraySize; i++) {\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].slice(0);\n            this.myValuePanelsPositions[i][1] -= this.myDistanceBetweenValues;\n        }\n\n        //Background\n        {\n            let valuePanelLastPosition = (this.myValuePanelsPositions[this.myArraySize - 1]) ? this.myValuePanelsPositions[this.myArraySize - 1][1] : 0;\n            let maxY = this.myDisplayPanelPosition[1] + this.myVariableLabelPanelPosition[1] + this.mySideButtonBackgroundScale[1] + distanceFromBorder * 1.25;\n            let minY = this.myDisplayPanelPosition[1] + this.myValuesPanelPosition[1] + valuePanelLastPosition - distanceFromBorder * 1.25 - this.mySideButtonBackgroundScale[1];\n            this.myBackPanelPosition = [0, (maxY + minY) / 2, 0];\n            this.myBackBackgroundScale = [backgroundHalfWidth, (maxY - minY) / 2, 1];\n            this.myBackBackgroundColor = [70 / 255, 70 / 255, 70 / 255, 1];\n        }\n\n        //Pointer\n        this.myPointerCollisionExtents = this.myBackBackgroundScale.slice(0);\n        this.myPointerCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n        this.myPointerCursorTargetPosition = this.myBackPanelPosition.slice(0);\n        this.myPointerCursorTargetPosition[2] = colliderZPosition - 0.0001; // a little behind the button target to avoid hiding it\n    }\n\n    _initializeRuntimeSetup() {\n        this.myButtonHoverColor = [150 / 255, 150 / 255, 150 / 255, 1];\n        this.myTextHoverScaleMultiplier = [1.25, 1.25, 1.25];\n\n        this.myThumbstickToggleThreshold = 0.6;\n        this.myButtonEditDelay = 0;\n    }\n};",
        "\nPP.EasyTuneBoolArrayWidgetUI = class EasyTuneBoolArrayWidgetUI {\n\n    build(parentObject, setup, additionalSetup) {\n        this._myParentObject = parentObject;\n        this._mySetup = setup;\n        this._myAdditionalSetup = additionalSetup;\n\n        this._myAdditionalButtonsActive = true;\n\n        this._myPlaneMesh = PP.MeshUtils.createPlaneMesh();\n\n        this._createSkeleton();\n        this._setTransforms();\n        this._addComponents();\n    }\n\n    setVisible(visible) {\n        this.myPivotObject.pp_setActiveHierarchy(visible);\n        if (visible) {\n            this.setAdditionalButtonsActive(this._myAdditionalButtonsActive);\n        }\n    }\n\n    setAdditionalButtonsActive(active) {\n        this._myAdditionalButtonsActive = active;\n\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\n            this.myValueIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n            this.myValueDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n        }\n    }\n\n    //Skeleton\n    _createSkeleton() {\n        this.myPivotObject = WL.scene.addObject(this._myParentObject);\n\n        this.myBackPanel = WL.scene.addObject(this.myPivotObject);\n        this.myBackBackground = WL.scene.addObject(this.myBackPanel);\n\n        this._createDisplaySkeleton();\n        this._createPointerSkeleton();\n    }\n\n    _createDisplaySkeleton() {\n        this.myDisplayPanel = WL.scene.addObject(this.myPivotObject);\n\n        this.myVariableLabelPanel = WL.scene.addObject(this.myDisplayPanel);\n        this.myVariableLabelText = WL.scene.addObject(this.myVariableLabelPanel);\n        this.myVariableLabelCursorTarget = WL.scene.addObject(this.myVariableLabelPanel);\n\n        //Next/Previous\n        this.myNextButtonPanel = WL.scene.addObject(this.myVariableLabelPanel);\n        this.myNextButtonBackground = WL.scene.addObject(this.myNextButtonPanel);\n        this.myNextButtonText = WL.scene.addObject(this.myNextButtonPanel);\n        this.myNextButtonCursorTarget = WL.scene.addObject(this.myNextButtonPanel);\n\n        this.myPreviousButtonPanel = WL.scene.addObject(this.myVariableLabelPanel);\n        this.myPreviousButtonBackground = WL.scene.addObject(this.myPreviousButtonPanel);\n        this.myPreviousButtonText = WL.scene.addObject(this.myPreviousButtonPanel);\n        this.myPreviousButtonCursorTarget = WL.scene.addObject(this.myPreviousButtonPanel);\n\n        this.myValuesPanel = WL.scene.addObject(this.myDisplayPanel);\n\n        this.myValuePanels = [];\n        this.myValueTexts = [];\n        this.myValueCursorTargets = [];\n\n        this.myValueIncreaseButtonPanels = [];\n        this.myValueIncreaseButtonBackgrounds = [];\n        this.myValueIncreaseButtonTexts = [];\n        this.myValueIncreaseButtonCursorTargets = [];\n\n        this.myValueDecreaseButtonPanels = [];\n        this.myValueDecreaseButtonBackgrounds = [];\n        this.myValueDecreaseButtonTexts = [];\n        this.myValueDecreaseButtonCursorTargets = [];\n\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\n            this.myValuePanels[i] = WL.scene.addObject(this.myValuesPanel);\n            this.myValueTexts[i] = WL.scene.addObject(this.myValuePanels[i]);\n            this.myValueCursorTargets[i] = WL.scene.addObject(this.myValuePanels[i]);\n\n            //Increase/Decrease\n            this.myValueIncreaseButtonPanels[i] = WL.scene.addObject(this.myValuePanels[i]);\n            this.myValueIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\n            this.myValueIncreaseButtonTexts[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\n            this.myValueIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\n\n            this.myValueDecreaseButtonPanels[i] = WL.scene.addObject(this.myValuePanels[i]);\n            this.myValueDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\n            this.myValueDecreaseButtonTexts[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\n            this.myValueDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\n        }\n    }\n\n    _createPointerSkeleton() {\n        this.myPointerCursorTarget = WL.scene.addObject(this.myPivotObject);\n    }\n\n    //Transforms\n    _setTransforms() {\n        this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectPositions[this._myAdditionalSetup.myHandedness]);\n\n        this.myBackPanel.setTranslationLocal(this._mySetup.myBackPanelPosition);\n        this.myBackBackground.scale(this._mySetup.myBackBackgroundScale);\n\n        this._setDisplayTransforms();\n        this._setPointerTransform();\n    }\n\n    _setDisplayTransforms() {\n        this.myDisplayPanel.setTranslationLocal(this._mySetup.myDisplayPanelPosition);\n\n        this.myVariableLabelPanel.setTranslationLocal(this._mySetup.myVariableLabelPanelPosition);\n        this.myVariableLabelText.scale(this._mySetup.myVariableLabelTextScale);\n        this.myVariableLabelCursorTarget.setTranslationLocal(this._mySetup.myVariableLabelCursorTargetPosition);\n\n        //Next/Previous\n        this.myNextButtonPanel.setTranslationLocal(this._mySetup.myRightSideButtonPosition);\n        this.myNextButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myNextButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myNextButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myNextButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        this.myPreviousButtonPanel.setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\n        this.myPreviousButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myPreviousButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myPreviousButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myPreviousButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        this.myValuesPanel.setTranslationLocal(this._mySetup.myValuesPanelPosition);\n\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\n            this.myValuePanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\n            this.myValueTexts[i].scale(this._mySetup.myValueTextScale);\n            this.myValueCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\n\n            this.myValueIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myRightSideButtonPosition);\n            this.myValueIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\n            this.myValueIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n            this.myValueIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\n            this.myValueIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n            this.myValueDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\n            this.myValueDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\n            this.myValueDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n            this.myValueDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\n            this.myValueDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n        }\n    }\n\n    _setPointerTransform() {\n        this.myPointerCursorTarget.setTranslationLocal(this._mySetup.myPointerCursorTargetPosition);\n    }\n\n    //Components\n    _addComponents() {\n        this.myBackBackgroundComponent = this.myBackBackground.addComponent('mesh');\n        this.myBackBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myBackBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myBackBackgroundComponent.material.color = this._mySetup.myBackBackgroundColor;\n\n        this._addDisplayComponents();\n        this._addPointerComponents();\n    }\n\n    _addDisplayComponents() {\n        this.myVariableLabelTextComponent = this.myVariableLabelText.addComponent('text');\n        this._setupTextComponent(this.myVariableLabelTextComponent);\n        this.myVariableLabelTextComponent.text = \" \";\n\n        this.myVariableLabelCursorTargetComponent = this.myVariableLabelCursorTarget.addComponent('cursor-target');\n        this.myVariableLabelCollisionComponent = this.myVariableLabelCursorTarget.addComponent('collision');\n        this.myVariableLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myVariableLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myVariableLabelCollisionComponent.extents = this._mySetup.myVariableLabelCollisionExtents;\n\n        //Next/Previous\n        this.myNextButtonBackgroundComponent = this.myNextButtonBackground.addComponent('mesh');\n        this.myNextButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myNextButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myNextButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myNextButtonTextComponent = this.myNextButtonText.addComponent('text');\n        this._setupTextComponent(this.myNextButtonTextComponent);\n        this.myNextButtonTextComponent.text = this._mySetup.myNextButtonText;\n\n        this.myNextButtonCursorTargetComponent = this.myNextButtonCursorTarget.addComponent('cursor-target');\n        this.myNextButtonCollisionComponent = this.myNextButtonCursorTarget.addComponent('collision');\n        this.myNextButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myNextButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myNextButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        this.myPreviousButtonBackgroundComponent = this.myPreviousButtonBackground.addComponent('mesh');\n        this.myPreviousButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myPreviousButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myPreviousButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myPreviousButtonTextComponent = this.myPreviousButtonText.addComponent('text');\n        this._setupTextComponent(this.myPreviousButtonTextComponent);\n        this.myPreviousButtonTextComponent.text = this._mySetup.myPreviousButtonText;\n\n        this.myPreviousButtonCursorTargetComponent = this.myPreviousButtonCursorTarget.addComponent('cursor-target');\n        this.myPreviousButtonCollisionComponent = this.myPreviousButtonCursorTarget.addComponent('collision');\n        this.myPreviousButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPreviousButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPreviousButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        this.myValueTextComponents = [];\n        this.myValueCursorTargetComponents = [];\n        this.myValueCollisionComponents = [];\n\n        this.myValueIncreaseButtonBackgroundComponents = [];\n        this.myValueIncreaseButtonTextComponents = [];\n        this.myValueIncreaseButtonCursorTargetComponents = [];\n        this.myValueIncreaseButtonCollisionComponents = [];\n\n        this.myValueDecreaseButtonBackgroundComponents = [];\n        this.myValueDecreaseButtonTextComponents = [];\n        this.myValueDecreaseButtonCursorTargetComponents = [];\n        this.myValueDecreaseButtonCollisionComponents = [];\n\n\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\n            this.myValueTextComponents[i] = this.myValueTexts[i].addComponent('text');\n            this._setupTextComponent(this.myValueTextComponents[i]);\n            this.myValueTextComponents[i].text = \" \";\n\n            this.myValueCursorTargetComponents[i] = this.myValueCursorTargets[i].addComponent('cursor-target');\n            this.myValueCollisionComponents[i] = this.myValueCursorTargets[i].addComponent('collision');\n            this.myValueCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myValueCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myValueCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\n\n            //Increase/Decrease\n            this.myValueIncreaseButtonBackgroundComponents[i] = this.myValueIncreaseButtonBackgrounds[i].addComponent('mesh');\n            this.myValueIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\n            this.myValueIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            this.myValueIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\n\n            this.myValueIncreaseButtonTextComponents[i] = this.myValueIncreaseButtonTexts[i].addComponent('text');\n            this._setupTextComponent(this.myValueIncreaseButtonTextComponents[i]);\n            this.myValueIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\n\n            this.myValueIncreaseButtonCursorTargetComponents[i] = this.myValueIncreaseButtonCursorTargets[i].addComponent('cursor-target');\n            this.myValueIncreaseButtonCollisionComponents[i] = this.myValueIncreaseButtonCursorTargets[i].addComponent('collision');\n            this.myValueIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myValueIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myValueIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\n\n            this.myValueDecreaseButtonBackgroundComponents[i] = this.myValueDecreaseButtonBackgrounds[i].addComponent('mesh');\n            this.myValueDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\n            this.myValueDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            this.myValueDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\n\n            this.myValueDecreaseButtonTextComponents[i] = this.myValueDecreaseButtonTexts[i].addComponent('text');\n            this._setupTextComponent(this.myValueDecreaseButtonTextComponents[i]);\n            this.myValueDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\n\n            this.myValueDecreaseButtonCursorTargetComponents[i] = this.myValueDecreaseButtonCursorTargets[i].addComponent('cursor-target');\n            this.myValueDecreaseButtonCollisionComponents[i] = this.myValueDecreaseButtonCursorTargets[i].addComponent('collision');\n            this.myValueDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myValueDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myValueDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\n        }\n    }\n\n    _addPointerComponents() {\n        this.myPointerCollisionComponent = this.myPointerCursorTarget.addComponent('collision');\n        this.myPointerCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPointerCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPointerCollisionComponent.extents = this._mySetup.myPointerCollisionExtents;\n    }\n\n    _setupTextComponent(textComponent) {\n        textComponent.alignment = this._mySetup.myTextAlignment;\n        textComponent.justification = this._mySetup.myTextJustification;\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\n        textComponent.material.outlineRange = this._mySetup.myTextOutlineRange;\n        textComponent.material.color = this._mySetup.myTextColor;\n        textComponent.material.outlineColor = this._mySetup.myTextOutlineColor;\n        textComponent.text = \"\";\n    }\n};",
        "\nPP.EasyTuneBoolWidget = class EasyTuneBoolWidget {\n\n    constructor(gamepad) {\n        this._myGamepad = gamepad;\n\n        this._myParentObject = null;\n        this._myAdditionalSetup = null;\n\n        this._myWidgets = new Map();\n\n        this._myVariable = null;\n        this._myIsVisible = true;\n\n        this._myAppendToVariableName = null;\n\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\n\n        this._myCurrentArraySize = 0;\n    }\n\n    setEasyTuneVariable(variable, appendToVariableName) {\n        this._myVariable = variable;\n        this._myCurrentArraySize = this._myVariable.myValue.length;\n        this._myAppendToVariableName = appendToVariableName;\n\n        if (!this._myWidgets.has(this._myCurrentArraySize)) {\n            this._createWidget(this._myCurrentArraySize);\n        }\n\n        this._myWidgets.get(this._myCurrentArraySize).setEasyTuneVariable(variable, appendToVariableName);\n\n        this.setVisible(this._myIsVisible);\n    }\n\n    setVisible(visible) {\n        if (this._myVariable) {\n            this._sizeChangedCheck();\n\n            for (let widget of this._myWidgets.values()) {\n                widget.setVisible(false);\n            }\n\n            this._myWidgets.get(this._myCurrentArraySize).setVisible(visible);\n        }\n\n        this._myIsVisible = visible;\n    }\n\n    registerScrollVariableRequestEventListener(id, callback) {\n        this._myScrollVariableRequestCallbacks.set(id, callback);\n    }\n\n    unregisterScrollVariableRequestEventListener(id) {\n        this._myScrollVariableRequestCallbacks.delete(id);\n    }\n\n    start(parentObject, additionalSetup) {\n        this._myParentObject = parentObject;\n        this._myAdditionalSetup = additionalSetup;\n\n        this._createWidget(1);\n\n        if (this._myVariable) {\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\n        }\n    }\n\n    update(dt) {\n        if (this._isActive()) {\n            this._sizeChangedCheck();\n\n            this._myWidgets.get(this._myCurrentArraySize).update(dt);\n        }\n    }\n\n    _isActive() {\n        return this._myIsVisible && this._myVariable;\n    }\n\n    _scrollVariable(amount) {\n        for (let callback of this._myScrollVariableRequestCallbacks.values()) {\n            callback(amount);\n        }\n    }\n\n    _createWidget(arraySize) {\n        this._myWidgets.set(arraySize, new PP.EasyTuneBoolArrayWidget(arraySize, this._myGamepad));\n        this._myWidgets.get(arraySize).start(this._myParentObject, this._myAdditionalSetup);\n        this._myWidgets.get(arraySize).setVisible(false);\n        this._myWidgets.get(arraySize).registerScrollVariableRequestEventListener(this, this._scrollVariable.bind(this));\n    }\n\n    _sizeChangedCheck() {\n        if (this._myVariable.myValue.length != this._myCurrentArraySize) {\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\n        }\n    }\n};",
        "\r\nPP.EasyTuneNoneWidget = class EasyTuneNoneWidget {\r\n\r\n    constructor() {\r\n        this._mySetup = new PP.EasyTuneNoneWidgetSetup();\r\n        this._myUI = new PP.EasyTuneNoneWidgetUI();\r\n\r\n        this._myVariable = null;\r\n\r\n        this._myIsVisible = true;\r\n\r\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\r\n\r\n        this._myAppendToVariableName = \"\";\r\n    }\r\n\r\n    setEasyTuneVariable(variable, appendToVariableName) {\r\n        this._myVariable = variable;\r\n\r\n        if ((typeof appendToVariableName) !== 'undefined') {\r\n            this._myAppendToVariableName = appendToVariableName;\r\n        } else {\r\n            this._myAppendToVariableName = \"\";\r\n        }\r\n\r\n        this._refreshUI();\r\n    }\r\n\r\n    _refreshUI() {\r\n        if (this._myVariable) {\r\n            this._myUI.myVariableLabelTextComponent.text = this._myVariable.myName.concat(this._myAppendToVariableName);\r\n        }\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (visible) {\r\n            this._refreshUI();\r\n        }\r\n        this._myUI.setVisible(visible);\r\n\r\n        this._myIsVisible = visible;\r\n    }\r\n\r\n    registerScrollVariableRequestEventListener(id, callback) {\r\n        this._myScrollVariableRequestCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterScrollVariableRequestEventListener(id) {\r\n        this._myScrollVariableRequestCallbacks.delete(id);\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myUI.build(parentObject, this._mySetup, additionalSetup);\r\n\r\n        this._addListeners();\r\n    }\r\n\r\n    update(dt) {\r\n    }\r\n\r\n    _isActive() {\r\n        return this._myIsVisible && this._myVariable;\r\n    }\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myNextButtonCursorTargetComponent.addClickFunction(this._scrollVariableRequest.bind(this, 1));\r\n        ui.myNextButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myNextButtonBackgroundComponent.material));\r\n        ui.myNextButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myNextButtonBackgroundComponent.material));\r\n\r\n        ui.myPreviousButtonCursorTargetComponent.addClickFunction(this._scrollVariableRequest.bind(this, -1));\r\n        ui.myPreviousButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\r\n        ui.myPreviousButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\r\n    }\r\n\r\n    _scrollVariableRequest(amount) {\r\n        if (this._isActive()) {\r\n            for (let callback of this._myScrollVariableRequestCallbacks.values()) {\r\n                callback(amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._mySetup.myButtonHoverColor;\r\n    }\r\n\r\n    _genericUnHover(material) {\r\n        material.color = this._mySetup.myBackgroundColor;\r\n    }\r\n};",
        "PP.EasyTuneNoneWidgetSetup = class EasyTuneNoneWidgetSetup {\n\n    constructor() {\n        this._initializeBuildSetup();\n        this._initializeRuntimeSetup();\n    }\n\n    _initializeBuildSetup() {\n        //General\n        this.myBackgroundColor = [46 / 255, 46 / 255, 46 / 255, 1];\n\n        this.myCursorTargetCollisionCollider = 2; // box\n        this.myCursorTargetCollisionGroup = 7;\n        this.myCursorTargetCollisionThickness = 0.001;\n\n        this.myDefaultTextColor = [255 / 255, 255 / 255, 255 / 255, 1];\n\n        this.myTextAlignment = 2; // center\n        this.myTextJustification = 2; // middle\n        this.myTextOutlineRange = [0.45, 0.45];\n        this.myTextColor = this.myDefaultTextColor;\n        this.myTextOutlineColor = this.myDefaultTextColor;\n\n        //Pivot\n        this.myPivotObjectPositions = [];\n        this.myPivotObjectPositions[PP.ToolHandedness.NONE] = [0, 0, 0];\n        this.myPivotObjectPositions[PP.ToolHandedness.LEFT] = [-0.04, 0.02, 0.00004213]; //little \"random\" z offset to avoid glitching with other widgets\n        this.myPivotObjectPositions[PP.ToolHandedness.RIGHT] = [-0.08, 0.02, 0.00004213];\n\n        let panelZ = 0.01;\n        let distanceFromBorder = 0.0125;\n        let colliderZPosition = 0.017;\n        let backgroundHalfWidth = 0.2;\n\n        this.mySideButtonBackgroundScale = [0.015, 0.015, 1];\n        this.mySideButtonTextScale = [0.18, 0.18, 0.18];\n        this.mySideButtonTextPosition = [0, 0, 0.007];\n\n        this.mySideButtonCursorTargetPosition = [0, 0, 0];\n        this.mySideButtonCursorTargetPosition[2] = colliderZPosition - panelZ;\n        this.mySideButtonCollisionExtents = this.mySideButtonBackgroundScale.slice(0);\n        this.mySideButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myLeftSideButtonPosition = [0, 0, -0.00001];\n        this.myLeftSideButtonPosition[0] = -backgroundHalfWidth + this.mySideButtonBackgroundScale[0] + distanceFromBorder;\n\n        this.myRightSideButtonPosition = [0, 0, -0.00001];\n        this.myRightSideButtonPosition[0] = backgroundHalfWidth - this.mySideButtonBackgroundScale[0] - distanceFromBorder;\n\n        //Display\n        this.myDisplayPanelPosition = [0, 0.1, 0];\n\n        this.myVariableLabelPanelPosition = [0, 0.025, panelZ];\n        this.myVariableLabelTextScale = [0.19, 0.19, 0.19];\n\n        this.myTypeNotSupportedPanelPosition = [0, -0.03, panelZ];\n        this.myTypeNotSupportedTextScale = [0.275, 0.275, 0.275];\n        this.myTypeNotSupportedText = \"Type Not Supported\";\n\n        this.myValueCursorTargetPosition = [0, 0, 0];\n        this.myValueCursorTargetPosition[2] = colliderZPosition - panelZ;\n        this.myValueCollisionExtents = [0.065, 0.02, 1];\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myNextButtonText = \">\";\n        this.myPreviousButtonText = \"<\";\n\n        //Background\n        {\n            let maxY = this.myDisplayPanelPosition[1] + this.myVariableLabelPanelPosition[1] + this.mySideButtonBackgroundScale[1] + distanceFromBorder * 1.25;\n            let minY = this.myDisplayPanelPosition[1] + this.myTypeNotSupportedPanelPosition[1] - distanceFromBorder * 1.25 - this.mySideButtonBackgroundScale[1];\n            this.myBackPanelPosition = [0, (maxY + minY) / 2, 0];\n            this.myBackBackgroundScale = [backgroundHalfWidth, (maxY - minY) / 2, 1];\n            this.myBackBackgroundColor = [70 / 255, 70 / 255, 70 / 255, 1];\n        }\n\n        //Pointer\n        this.myPointerCollisionExtents = this.myBackBackgroundScale.slice(0);\n        this.myPointerCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n        this.myPointerCursorTargetPosition = this.myBackPanelPosition.slice(0);\n        this.myPointerCursorTargetPosition[2] = colliderZPosition - 0.0001; // a little behind the button target to avoid hiding it\n    }\n\n    _initializeRuntimeSetup() {\n        this.myButtonHoverColor = [150 / 255, 150 / 255, 150 / 255, 1];\n    }\n};",
        "\nPP.EasyTuneNoneWidgetUI = class EasyTuneNoneWidgetUI {\n\n    build(parentObject, setup, additionalSetup) {\n        this._myParentObject = parentObject;\n        this._mySetup = setup;\n        this._myAdditionalSetup = additionalSetup;\n        this._myPlaneMesh = PP.MeshUtils.createPlaneMesh();\n\n        this._createSkeleton();\n        this._setTransforms();\n        this._addComponents();\n    }\n\n    setVisible(visible) {\n        this.myPivotObject.pp_setActiveHierarchy(visible);\n    }\n\n    //Skeleton\n    _createSkeleton() {\n        this.myPivotObject = WL.scene.addObject(this._myParentObject);\n\n        this.myBackPanel = WL.scene.addObject(this.myPivotObject);\n        this.myBackBackground = WL.scene.addObject(this.myBackPanel);\n\n        this._createDisplaySkeleton();\n        this._createPointerSkeleton();\n    }\n\n    _createDisplaySkeleton() {\n        this.myDisplayPanel = WL.scene.addObject(this.myPivotObject);\n\n        this.myVariableLabelPanel = WL.scene.addObject(this.myDisplayPanel);\n        this.myVariableLabelText = WL.scene.addObject(this.myVariableLabelPanel);\n\n        this.myTypeNotSupportedPanel = WL.scene.addObject(this.myDisplayPanel);\n        this.myTypeNotSupportedText = WL.scene.addObject(this.myTypeNotSupportedPanel);\n        this.myTypeNotSupportedCursorTarget = WL.scene.addObject(this.myTypeNotSupportedPanel);\n\n        //Next/Previous\n        this.myNextButtonPanel = WL.scene.addObject(this.myVariableLabelPanel);\n        this.myNextButtonBackground = WL.scene.addObject(this.myNextButtonPanel);\n        this.myNextButtonText = WL.scene.addObject(this.myNextButtonPanel);\n        this.myNextButtonCursorTarget = WL.scene.addObject(this.myNextButtonPanel);\n\n        this.myPreviousButtonPanel = WL.scene.addObject(this.myVariableLabelPanel);\n        this.myPreviousButtonBackground = WL.scene.addObject(this.myPreviousButtonPanel);\n        this.myPreviousButtonText = WL.scene.addObject(this.myPreviousButtonPanel);\n        this.myPreviousButtonCursorTarget = WL.scene.addObject(this.myPreviousButtonPanel);\n    }\n\n    _createPointerSkeleton() {\n        this.myPointerCursorTarget = WL.scene.addObject(this.myPivotObject);\n    }\n\n    //Transforms\n    _setTransforms() {\n        this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectPositions[this._myAdditionalSetup.myHandedness]);\n\n        this.myBackPanel.setTranslationLocal(this._mySetup.myBackPanelPosition);\n        this.myBackBackground.scale(this._mySetup.myBackBackgroundScale);\n\n        this._setDisplayTransforms();\n        this._setPointerTransform();\n    }\n\n    _setDisplayTransforms() {\n        this.myDisplayPanel.setTranslationLocal(this._mySetup.myDisplayPanelPosition);\n\n        this.myVariableLabelPanel.setTranslationLocal(this._mySetup.myVariableLabelPanelPosition);\n        this.myVariableLabelText.scale(this._mySetup.myVariableLabelTextScale);\n\n        this.myTypeNotSupportedPanel.setTranslationLocal(this._mySetup.myTypeNotSupportedPanelPosition);\n        this.myTypeNotSupportedText.scale(this._mySetup.myTypeNotSupportedTextScale);\n\n        //Next/Previous\n        this.myNextButtonPanel.setTranslationLocal(this._mySetup.myRightSideButtonPosition);\n        this.myNextButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myNextButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myNextButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myNextButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        this.myPreviousButtonPanel.setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\n        this.myPreviousButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myPreviousButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myPreviousButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myPreviousButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n    }\n\n    _setPointerTransform() {\n        this.myPointerCursorTarget.setTranslationLocal(this._mySetup.myPointerCursorTargetPosition);\n    }\n\n    //Components\n    _addComponents() {\n        this.myBackBackgroundComponent = this.myBackBackground.addComponent('mesh');\n        this.myBackBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myBackBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myBackBackgroundComponent.material.color = this._mySetup.myBackBackgroundColor;\n\n        this._addDisplayComponents();\n        this._addPointerComponents();\n    }\n\n    _addDisplayComponents() {\n        this.myVariableLabelTextComponent = this.myVariableLabelText.addComponent('text');\n        this._setupTextComponent(this.myVariableLabelTextComponent);\n        this.myVariableLabelTextComponent.text = \" \";\n\n        this.myTypeNotSupportedTextComponent = this.myTypeNotSupportedText.addComponent('text');\n        this._setupTextComponent(this.myTypeNotSupportedTextComponent);\n        this.myTypeNotSupportedTextComponent.text = this._mySetup.myTypeNotSupportedText;\n\n        //Next/Previous\n        this.myNextButtonBackgroundComponent = this.myNextButtonBackground.addComponent('mesh');\n        this.myNextButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myNextButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myNextButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myNextButtonTextComponent = this.myNextButtonText.addComponent('text');\n        this._setupTextComponent(this.myNextButtonTextComponent);\n        this.myNextButtonTextComponent.text = this._mySetup.myNextButtonText;\n\n        this.myNextButtonCursorTargetComponent = this.myNextButtonCursorTarget.addComponent('cursor-target');\n        this.myNextButtonCollisionComponent = this.myNextButtonCursorTarget.addComponent('collision');\n        this.myNextButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myNextButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myNextButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        this.myPreviousButtonBackgroundComponent = this.myPreviousButtonBackground.addComponent('mesh');\n        this.myPreviousButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myPreviousButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myPreviousButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myPreviousButtonTextComponent = this.myPreviousButtonText.addComponent('text');\n        this._setupTextComponent(this.myPreviousButtonTextComponent);\n        this.myPreviousButtonTextComponent.text = this._mySetup.myPreviousButtonText;\n\n        this.myPreviousButtonCursorTargetComponent = this.myPreviousButtonCursorTarget.addComponent('cursor-target');\n        this.myPreviousButtonCollisionComponent = this.myPreviousButtonCursorTarget.addComponent('collision');\n        this.myPreviousButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPreviousButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPreviousButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n    }\n\n    _addPointerComponents() {\n        this.myPointerCollisionComponent = this.myPointerCursorTarget.addComponent('collision');\n        this.myPointerCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPointerCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPointerCollisionComponent.extents = this._mySetup.myPointerCollisionExtents;\n    }\n\n    _setupTextComponent(textComponent) {\n        textComponent.alignment = this._mySetup.myTextAlignment;\n        textComponent.justification = this._mySetup.myTextJustification;\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\n        textComponent.material.outlineRange = this._mySetup.myTextOutlineRange;\n        textComponent.material.color = this._mySetup.myTextColor;\n        textComponent.material.outlineColor = this._mySetup.myTextOutlineColor;\n        textComponent.text = \"\";\n    }\n};",
        "\nPP.EasyTuneNumberArrayWidget = class EasyTuneNumberArrayWidget {\n\n    constructor(arraySize, gamepad) {\n        this._myGamepad = gamepad;\n\n        this._mySetup = new PP.EasyTuneNumberArrayWidgetSetup(arraySize);\n        this._myUI = new PP.EasyTuneNumberArrayWidgetUI();\n\n        this._myVariable = null;\n\n        this._myIsVisible = true;\n\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\n\n        this._myAppendToVariableName = \"\";\n\n        this._myValueEditIndex = -1;\n\n        this._myValueButtonEditIntensity = 0;\n        this._myValueButtonEditIntensityTimer = 0;\n        this._myStepButtonEditIntensity = 0;\n        this._myStepButtonEditIntensityTimer = 0;\n\n        this._myValueEditActive = false;\n        this._myStepEditActive = false;\n\n        this._myValueRealValue = null;\n        this._myStepMultiplierValue = null;\n        this._myStepFastEdit = false;\n    }\n\n    setEasyTuneVariable(variable, appendToVariableName) {\n        this._myVariable = variable;\n\n        if ((typeof appendToVariableName) !== 'undefined') {\n            this._myAppendToVariableName = appendToVariableName;\n        } else {\n            this._myAppendToVariableName = \"\";\n        }\n\n        if (this._myValueEditIndex >= 0) {\n            this._myValueRealValue = this._myVariable.myValue[this._myValueEditIndex];\n        }\n\n        this._refreshUI();\n    }\n\n    _refreshUI() {\n        if (this._myVariable) {\n            this._myUI.myVariableLabelTextComponent.text = this._myVariable.myName.concat(this._myAppendToVariableName);\n\n            for (let i = 0; i < this._mySetup.myArraySize; i++) {\n                this._myUI.myValueTextComponents[i].text = this._myVariable.myValue[i].toFixed(this._myVariable.myDecimalPlaces);\n            }\n\n            this._myUI.myStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myStepPerSecond);\n        }\n    }\n\n    setVisible(visible) {\n        if (visible) {\n            this._refreshUI();\n        }\n        this._myUI.setVisible(visible);\n\n        this._myIsVisible = visible;\n    }\n\n    registerScrollVariableRequestEventListener(id, callback) {\n        this._myScrollVariableRequestCallbacks.set(id, callback);\n    }\n\n    unregisterScrollVariableRequestEventListener(id) {\n        this._myScrollVariableRequestCallbacks.delete(id);\n    }\n\n    start(parentObject, additionalSetup) {\n        this._myUI.build(parentObject, this._mySetup, additionalSetup);\n        this._myUI.setAdditionalButtonsActive(additionalSetup.myEnableAdditionalButtons);\n\n        this._addListeners();\n    }\n\n    update(dt) {\n        if (this._isActive()) {\n            this._updateValue(dt);\n        }\n    }\n\n    _updateValue(dt) {\n        let stickVariableIntensity = 0;\n\n        if (this._myGamepad) {\n            let y = this._myGamepad.getAxesInfo().myAxes[1];\n\n            if (Math.abs(y) > this._mySetup.myEditThumbstickMinThreshold) {\n                let normalizedEditAmount = (Math.abs(y) - this._mySetup.myEditThumbstickMinThreshold) / (1 - this._mySetup.myEditThumbstickMinThreshold);\n                stickVariableIntensity = Math.sign(y) * normalizedEditAmount;\n            }\n        }\n\n        let valueIntensity = 0;\n        if (this._myValueEditActive) {\n            valueIntensity = stickVariableIntensity;\n        } else if (this._myValueButtonEditIntensity != 0) {\n            if (this._myValueButtonEditIntensityTimer <= 0) {\n                valueIntensity = this._myValueButtonEditIntensity;\n            } else {\n                this._myValueButtonEditIntensityTimer -= dt;\n            }\n        }\n\n        if (valueIntensity != 0) {\n            let amountToAdd = valueIntensity * this._myVariable.myStepPerSecond * dt;\n\n            this._myValueRealValue += amountToAdd;\n\n            if (this._myVariable.myMin != null && this._myVariable.myMax != null) {\n                this._myValueRealValue = Math.pp_clamp(this._myValueRealValue, this._myVariable.myMin, this._myVariable.myMax);\n            } else if (this._myVariable.myMin != null) {\n                this._myValueRealValue = Math.max(this._myValueRealValue, this._myVariable.myMin);\n            } else if (this._myVariable.myMax != null) {\n                this._myValueRealValue = Math.min(this._myValueRealValue, this._myVariable.myMax);\n            }\n\n            let decimalPlacesMultiplier = Math.pow(10, this._myVariable.myDecimalPlaces);\n\n            if (this._myVariable.myEditAllValuesTogether) {\n                let newValue = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\n                let difference = newValue - this._myVariable.myValue[this._myValueEditIndex];\n\n                for (let i = 0; i < this._mySetup.myArraySize; i++) {\n                    this._myVariable.myValue[i] = Math.round((this._myVariable.myValue[i] + difference) * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\n\n                    if (this._myVariable.myMin != null && this._myVariable.myMax != null) {\n                        this._myVariable.myValue[i] = Math.pp_clamp(this._myVariable.myValue[i], this._myVariable.myMin, this._myVariable.myMax);\n                    } else if (this._myVariable.myMin != null) {\n                        this._myVariable.myValue[i] = Math.max(this._myVariable.myValue[i], this._myVariable.myMin);\n                    } else if (this._myVariable.myMax != null) {\n                        this._myVariable.myValue[i] = Math.min(this._myVariable.myValue[i], this._myVariable.myMax);\n                    }\n\n                    this._myUI.myValueTextComponents[i].text = this._myVariable.myValue[i].toFixed(this._myVariable.myDecimalPlaces);\n                }\n\n            } else {\n                this._myVariable.myValue[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\n\n                if (this._myVariable.myMin != null && this._myVariable.myMax != null) {\n                    this._myVariable.myValue[this._myValueEditIndex] = Math.pp_clamp(this._myVariable.myValue[this._myValueEditIndex], this._myVariable.myMin, this._myVariable.myMax);\n                } else if (this._myVariable.myMin != null) {\n                    this._myVariable.myValue[this._myValueEditIndex] = Math.max(this._myVariable.myValue[this._myValueEditIndex], this._myVariable.myMin);\n                } else if (this._myVariable.myMax != null) {\n                    this._myVariable.myValue[this._myValueEditIndex] = Math.min(this._myVariable.myValue[this._myValueEditIndex], this._myVariable.myMax);\n                }\n\n                this._myUI.myValueTextComponents[this._myValueEditIndex].text = this._myVariable.myValue[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\n            }\n        } else {\n            this._myValueRealValue = this._myVariable.myValue[this._myValueEditIndex];\n        }\n\n        let stepIntensity = 0;\n        if (this._myStepEditActive) {\n            stepIntensity = stickVariableIntensity;\n        } else if (this._myStepButtonEditIntensity != 0) {\n            if (this._myStepButtonEditIntensityTimer <= 0) {\n                stepIntensity = this._myStepButtonEditIntensity;\n            } else {\n                this._myStepButtonEditIntensityTimer -= dt;\n            }\n        }\n\n        if (stepIntensity != 0) {\n            let amountToAdd = 0;\n            if (this._myStepFastEdit) {\n                amountToAdd = Math.sign(stepIntensity) * 1;\n                this._myStepFastEdit = false;\n            } else {\n                amountToAdd = stepIntensity * this._mySetup.myStepMultiplierStepPerSecond * dt;\n            }\n\n            this._myStepMultiplierValue += amountToAdd;\n            if (Math.abs(this._myStepMultiplierValue) >= 1) {\n                if (Math.sign(this._myStepMultiplierValue) > 0) {\n                    this._myStepMultiplierValue -= 1;\n                    this._changeStep(this._myVariable.myStepPerSecond * 10);\n                } else {\n                    this._myStepMultiplierValue += 1;\n                    this._changeStep(this._myVariable.myStepPerSecond * 0.1);\n                }\n            }\n        } else {\n            this._myStepMultiplierValue = 0;\n            this._myStepFastEdit = true;\n        }\n    }\n\n    _isActive() {\n        return this._myIsVisible && this._myVariable;\n    }\n\n    _addListeners() {\n        let ui = this._myUI;\n\n        ui.myVariableLabelCursorTargetComponent.addClickFunction(this._resetAllValues.bind(this));\n        ui.myVariableLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myVariableLabelText));\n        ui.myVariableLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myVariableLabelText, this._mySetup.myVariableLabelTextScale));\n\n        ui.myNextButtonCursorTargetComponent.addClickFunction(this._scrollVariableRequest.bind(this, 1));\n        ui.myNextButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myNextButtonBackgroundComponent.material));\n        ui.myNextButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myNextButtonBackgroundComponent.material));\n\n        ui.myPreviousButtonCursorTargetComponent.addClickFunction(this._scrollVariableRequest.bind(this, -1));\n        ui.myPreviousButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\n        ui.myPreviousButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\n\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, 1));\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, -1));\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\n\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\n\n            ui.myValueCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, i));\n            ui.myValueCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], true));\n            ui.myValueCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], false));\n        }\n\n        ui.myStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this));\n        ui.myStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, ui.myStepText, true));\n        ui.myStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, ui.myStepText, false));\n\n        ui.myStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 1));\n        ui.myStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0));\n        ui.myStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, -1));\n        ui.myStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0));\n\n        ui.myStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myStepIncreaseButtonBackgroundComponent.material));\n        ui.myStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myStepIncreaseButtonBackgroundComponent.material));\n        ui.myStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myStepDecreaseButtonBackgroundComponent.material));\n        ui.myStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myStepDecreaseButtonBackgroundComponent.material));\n    }\n\n    _setValueEditIntensity(index, value) {\n        if (this._isActive() || value == 0) {\n            if (value != 0) {\n                this._myValueButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\n                this._myValueRealValue = this._myVariable.myValue[index];\n                this._myValueEditIndex = index;\n            }\n\n            this._myValueButtonEditIntensity = value;\n        }\n    }\n\n    _setStepEditIntensity(value) {\n        if (this._isActive() || value == 0) {\n            if (value != 0) {\n                this._myStepButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\n            }\n\n            this._myStepButtonEditIntensity = value;\n        }\n    }\n\n    _setValueEditActive(index, text, active) {\n        if (this._isActive() || !active) {\n            if (active) {\n                this._myValueRealValue = this._myVariable.myValue[index];\n                this._myValueEditIndex = index;\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\n            } else {\n                text.scalingWorld = this._mySetup.myValueTextScale;\n            }\n\n            this._myValueEditActive = active;\n        }\n    }\n\n    _setStepEditActive(text, active) {\n        if (this._isActive() || !active) {\n            if (active) {\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\n            } else {\n                text.scalingWorld = this._mySetup.myStepTextScale;\n            }\n\n            this._myStepEditActive = active;\n        }\n    }\n\n    _scrollVariableRequest(amount) {\n        if (this._isActive()) {\n            for (let callback of this._myScrollVariableRequestCallbacks.values()) {\n                callback(amount);\n            }\n        }\n    }\n\n    _resetValue(index) {\n        if (this._isActive()) {\n            this._myVariable.myValue[index] = this._myVariable.myInitialValue[index];\n            this._myUI.myValueTextComponents[index].text = this._myVariable.myValue[index].toFixed(this._myVariable.myDecimalPlaces);\n        }\n    }\n\n    _resetAllValues() {\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\n            this._resetValue(i);\n        }\n    }\n\n    _resetStep() {\n        if (this._isActive()) {\n            this._changeStep(this._myVariable.myInitialStepPerSecond);\n        }\n    }\n\n    _changeStep(step) {\n        step = Math.pp_roundDecimal(step, 10);\n        this._myVariable.myStepPerSecond = step;\n        this._myUI.myStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myStepPerSecond);\n    }\n\n    _genericHover(material) {\n        material.color = this._mySetup.myButtonHoverColor;\n    }\n\n    _genericUnHover(material) {\n        material.color = this._mySetup.myBackgroundColor;\n    }\n\n    _genericTextHover(text) {\n        text.scale(this._mySetup.myTextHoverScaleMultiplier);\n    }\n\n    _genericTextUnHover(text, originalScale) {\n        text.scalingWorld = originalScale;\n    }\n};",
        "PP.EasyTuneNumberArrayWidgetSetup = class EasyTuneNumberArrayWidgetSetup {\n\n    constructor(arraySize) {\n        this.myArraySize = arraySize;\n        this._initializeBuildSetup();\n        this._initializeRuntimeSetup();\n    }\n\n    _initializeBuildSetup() {\n        //General\n        this.myBackgroundColor = [46 / 255, 46 / 255, 46 / 255, 1];\n\n        this.myCursorTargetCollisionCollider = 2; // box\n        this.myCursorTargetCollisionGroup = 7;\n        this.myCursorTargetCollisionThickness = 0.001;\n\n        this.myDefaultTextColor = [255 / 255, 255 / 255, 255 / 255, 1];\n\n        this.myTextAlignment = 2; // center\n        this.myTextJustification = 2; // middle\n        this.myTextOutlineRange = [0.45, 0.45];\n        this.myTextColor = this.myDefaultTextColor;\n        this.myTextOutlineColor = this.myDefaultTextColor;\n\n        //Pivot\n        this.myPivotObjectPositions = [];\n        this.myPivotObjectPositions[PP.ToolHandedness.NONE] = [0, 0, 0];\n        this.myPivotObjectPositions[PP.ToolHandedness.LEFT] = [-0.04, 0.02, 0.00003713]; //little \"random\" z offset to avoid glitching with other widgets\n        this.myPivotObjectPositions[PP.ToolHandedness.RIGHT] = [-0.08, 0.02, 0.00003713];\n\n        let panelZ = 0.01;\n        let distanceFromBorder = 0.0125;\n        let distanceFromValue = 0.055;\n        let colliderZPosition = 0.017;\n        let backgroundHalfWidth = 0.2;\n\n        this.mySideButtonBackgroundScale = [0.015, 0.015, 1];\n        this.mySideButtonTextScale = [0.18, 0.18, 0.18];\n        this.mySideButtonTextPosition = [0, 0, 0.007];\n\n        this.mySideButtonCursorTargetPosition = [0, 0, 0];\n        this.mySideButtonCursorTargetPosition[2] = colliderZPosition - panelZ;\n        this.mySideButtonCollisionExtents = this.mySideButtonBackgroundScale.slice(0);\n        this.mySideButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myLeftSideButtonPosition = [0, 0, -0.00001];\n        this.myLeftSideButtonPosition[0] = -backgroundHalfWidth + this.mySideButtonBackgroundScale[0] + distanceFromBorder;\n\n        this.myRightSideButtonPosition = [0, 0, -0.00001];\n        this.myRightSideButtonPosition[0] = backgroundHalfWidth - this.mySideButtonBackgroundScale[0] - distanceFromBorder;\n\n        this.myIncreaseButtonText = \"+\";\n        this.myDecreaseButtonText = \"-\";\n\n        //Display\n        this.myDisplayPanelPosition = [0, 0.1, 0];\n\n        this.myVariableLabelPanelPosition = [0, 0.025, panelZ];\n        this.myVariableLabelTextScale = [0.19, 0.19, 0.19];\n\n        this.myVariableLabelCursorTargetPosition = [0, 0, 0];\n        this.myVariableLabelCursorTargetPosition[2] = colliderZPosition - panelZ;\n        this.myVariableLabelCollisionExtents = [0.065, 0.0175, 1];\n        this.myVariableLabelCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myNextButtonText = \">\";\n        this.myPreviousButtonText = \"<\";\n\n        this.myValuesPanelPosition = [0, this.myVariableLabelPanelPosition[1] - distanceFromValue, panelZ];\n\n        this.myValueTextScale = [0.4, 0.4, 0.4];\n\n        this.myValueCursorTargetPosition = [0, 0, 0];\n        this.myValueCursorTargetPosition[2] = colliderZPosition - panelZ;\n        this.myValueCollisionExtents = [0.065, 0.02, 1];\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\n\n        this.myValuePanelsPositions = [];\n        this.myValuePanelsPositions[0] = [0, 0, 0];\n        for (let i = 1; i < this.myArraySize; i++) {\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].slice(0);\n            this.myValuePanelsPositions[i][1] -= this.myDistanceBetweenValues;\n        }\n\n        //Step\n        let valuePanelLastPosition = (this.myValuePanelsPositions[this.myArraySize - 1]) ? this.myValuePanelsPositions[this.myArraySize - 1][1] : 0;\n        this.myStepPanelPosition = [0, this.myDisplayPanelPosition[1] + this.myValuesPanelPosition[1] + valuePanelLastPosition - distanceFromValue, panelZ];\n        this.myStepTextScale = [0.19, 0.19, 0.19];\n        this.myStepStartString = \"Step: \";\n\n        this.myStepCursorTargetPosition = [0, 0, 0];\n        this.myStepCursorTargetPosition[2] = colliderZPosition - this.myStepPanelPosition[2];\n        this.myStepCollisionExtents = [0.065, 0.0175, 1];\n        this.myStepCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        //Background\n        {\n            let maxY = this.myDisplayPanelPosition[1] + this.myVariableLabelPanelPosition[1] + this.mySideButtonBackgroundScale[1] + distanceFromBorder * 1.25;\n            let minY = this.myStepPanelPosition[1] - distanceFromBorder * 1.25 - this.mySideButtonBackgroundScale[1];\n            this.myBackPanelPosition = [0, (maxY + minY) / 2, 0];\n            this.myBackBackgroundScale = [backgroundHalfWidth, (maxY - minY) / 2, 1];\n            this.myBackBackgroundColor = [70 / 255, 70 / 255, 70 / 255, 1];\n        }\n\n        //Pointer\n        this.myPointerCollisionExtents = this.myBackBackgroundScale.slice(0);\n        this.myPointerCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n        this.myPointerCursorTargetPosition = this.myBackPanelPosition.slice(0);\n        this.myPointerCursorTargetPosition[2] = colliderZPosition - 0.0001; // a little behind the button target to avoid hiding it\n    }\n\n    _initializeRuntimeSetup() {\n        this.myButtonHoverColor = [150 / 255, 150 / 255, 150 / 255, 1];\n        this.myTextHoverScaleMultiplier = [1.25, 1.25, 1.25];\n\n        this.myEditThumbstickMinThreshold = 0.35;\n        this.myStepMultiplierStepPerSecond = 2.25;\n        this.myButtonEditDelay = 0;\n    }\n};",
        "\nPP.EasyTuneNumberArrayWidgetUI = class EasyTuneNumberArrayWidgetUI {\n\n    build(parentObject, setup, additionalSetup) {\n        this._myParentObject = parentObject;\n        this._mySetup = setup;\n        this._myAdditionalSetup = additionalSetup;\n\n        this._myAdditionalButtonsActive = true;\n\n        this._myPlaneMesh = PP.MeshUtils.createPlaneMesh();\n\n        this._createSkeleton();\n        this._setTransforms();\n        this._addComponents();\n    }\n\n    setVisible(visible) {\n        this.myPivotObject.pp_setActiveHierarchy(visible);\n        if (visible) {\n            this.setAdditionalButtonsActive(this._myAdditionalButtonsActive);\n        }\n    }\n\n    setAdditionalButtonsActive(active) {\n        this._myAdditionalButtonsActive = active;\n\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\n            this.myValueIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n            this.myValueDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n        }\n        this.myStepIncreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n        this.myStepDecreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n    }\n\n    //Skeleton\n    _createSkeleton() {\n        this.myPivotObject = WL.scene.addObject(this._myParentObject);\n\n        this.myBackPanel = WL.scene.addObject(this.myPivotObject);\n        this.myBackBackground = WL.scene.addObject(this.myBackPanel);\n\n        this._createDisplaySkeleton();\n        this._createStepSkeleton();\n        this._createPointerSkeleton();\n    }\n\n    _createDisplaySkeleton() {\n        this.myDisplayPanel = WL.scene.addObject(this.myPivotObject);\n\n        this.myVariableLabelPanel = WL.scene.addObject(this.myDisplayPanel);\n        this.myVariableLabelText = WL.scene.addObject(this.myVariableLabelPanel);\n        this.myVariableLabelCursorTarget = WL.scene.addObject(this.myVariableLabelPanel);\n\n        //Next/Previous\n        this.myNextButtonPanel = WL.scene.addObject(this.myVariableLabelPanel);\n        this.myNextButtonBackground = WL.scene.addObject(this.myNextButtonPanel);\n        this.myNextButtonText = WL.scene.addObject(this.myNextButtonPanel);\n        this.myNextButtonCursorTarget = WL.scene.addObject(this.myNextButtonPanel);\n\n        this.myPreviousButtonPanel = WL.scene.addObject(this.myVariableLabelPanel);\n        this.myPreviousButtonBackground = WL.scene.addObject(this.myPreviousButtonPanel);\n        this.myPreviousButtonText = WL.scene.addObject(this.myPreviousButtonPanel);\n        this.myPreviousButtonCursorTarget = WL.scene.addObject(this.myPreviousButtonPanel);\n\n        this.myValuesPanel = WL.scene.addObject(this.myDisplayPanel);\n\n        this.myValuePanels = [];\n        this.myValueTexts = [];\n        this.myValueCursorTargets = [];\n\n        this.myValueIncreaseButtonPanels = [];\n        this.myValueIncreaseButtonBackgrounds = [];\n        this.myValueIncreaseButtonTexts = [];\n        this.myValueIncreaseButtonCursorTargets = [];\n\n        this.myValueDecreaseButtonPanels = [];\n        this.myValueDecreaseButtonBackgrounds = [];\n        this.myValueDecreaseButtonTexts = [];\n        this.myValueDecreaseButtonCursorTargets = [];\n\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\n            this.myValuePanels[i] = WL.scene.addObject(this.myValuesPanel);\n            this.myValueTexts[i] = WL.scene.addObject(this.myValuePanels[i]);\n            this.myValueCursorTargets[i] = WL.scene.addObject(this.myValuePanels[i]);\n\n            //Increase/Decrease\n            this.myValueIncreaseButtonPanels[i] = WL.scene.addObject(this.myValuePanels[i]);\n            this.myValueIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\n            this.myValueIncreaseButtonTexts[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\n            this.myValueIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\n\n            this.myValueDecreaseButtonPanels[i] = WL.scene.addObject(this.myValuePanels[i]);\n            this.myValueDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\n            this.myValueDecreaseButtonTexts[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\n            this.myValueDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\n        }\n    }\n\n    _createStepSkeleton() {\n        this.myStepPanel = WL.scene.addObject(this.myPivotObject);\n        this.myStepText = WL.scene.addObject(this.myStepPanel);\n        this.myStepCursorTarget = WL.scene.addObject(this.myStepPanel);\n\n        //Increase/Decrease\n        this.myStepIncreaseButtonPanel = WL.scene.addObject(this.myStepPanel);\n        this.myStepIncreaseButtonBackground = WL.scene.addObject(this.myStepIncreaseButtonPanel);\n        this.myStepIncreaseButtonText = WL.scene.addObject(this.myStepIncreaseButtonPanel);\n        this.myStepIncreaseButtonCursorTarget = WL.scene.addObject(this.myStepIncreaseButtonPanel);\n\n        this.myStepDecreaseButtonPanel = WL.scene.addObject(this.myStepPanel);\n        this.myStepDecreaseButtonBackground = WL.scene.addObject(this.myStepDecreaseButtonPanel);\n        this.myStepDecreaseButtonText = WL.scene.addObject(this.myStepDecreaseButtonPanel);\n        this.myStepDecreaseButtonCursorTarget = WL.scene.addObject(this.myStepDecreaseButtonPanel);\n    }\n\n    _createPointerSkeleton() {\n        this.myPointerCursorTarget = WL.scene.addObject(this.myPivotObject);\n    }\n\n    //Transforms\n    _setTransforms() {\n        this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectPositions[this._myAdditionalSetup.myHandedness]);\n\n        this.myBackPanel.setTranslationLocal(this._mySetup.myBackPanelPosition);\n        this.myBackBackground.scale(this._mySetup.myBackBackgroundScale);\n\n        this._setDisplayTransforms();\n        this._setStepTransforms();\n        this._setPointerTransform();\n    }\n\n    _setDisplayTransforms() {\n        this.myDisplayPanel.setTranslationLocal(this._mySetup.myDisplayPanelPosition);\n\n        this.myVariableLabelPanel.setTranslationLocal(this._mySetup.myVariableLabelPanelPosition);\n        this.myVariableLabelText.scale(this._mySetup.myVariableLabelTextScale);\n        this.myVariableLabelCursorTarget.setTranslationLocal(this._mySetup.myVariableLabelCursorTargetPosition);\n\n        //Next/Previous\n        this.myNextButtonPanel.setTranslationLocal(this._mySetup.myRightSideButtonPosition);\n        this.myNextButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myNextButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myNextButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myNextButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        this.myPreviousButtonPanel.setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\n        this.myPreviousButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myPreviousButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myPreviousButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myPreviousButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        this.myValuesPanel.setTranslationLocal(this._mySetup.myValuesPanelPosition);\n\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\n            this.myValuePanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\n            this.myValueTexts[i].scale(this._mySetup.myValueTextScale);\n            this.myValueCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\n\n            this.myValueIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myRightSideButtonPosition);\n            this.myValueIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\n            this.myValueIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n            this.myValueIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\n            this.myValueIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n            this.myValueDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\n            this.myValueDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\n            this.myValueDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n            this.myValueDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\n            this.myValueDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n        }\n    }\n\n    _setStepTransforms() {\n        this.myStepPanel.setTranslationLocal(this._mySetup.myStepPanelPosition);\n        this.myStepText.scale(this._mySetup.myStepTextScale);\n        this.myStepCursorTarget.setTranslationLocal(this._mySetup.myStepCursorTargetPosition);\n\n        //Increase/Decrease\n        this.myStepIncreaseButtonPanel.setTranslationLocal(this._mySetup.myRightSideButtonPosition);\n        this.myStepIncreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myStepIncreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myStepIncreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myStepIncreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        this.myStepDecreaseButtonPanel.setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\n        this.myStepDecreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myStepDecreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myStepDecreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myStepDecreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n    }\n\n    _setPointerTransform() {\n        this.myPointerCursorTarget.setTranslationLocal(this._mySetup.myPointerCursorTargetPosition);\n    }\n\n    //Components\n    _addComponents() {\n        this.myBackBackgroundComponent = this.myBackBackground.addComponent('mesh');\n        this.myBackBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myBackBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myBackBackgroundComponent.material.color = this._mySetup.myBackBackgroundColor;\n\n        this._addDisplayComponents();\n        this._addStepComponents();\n        this._addPointerComponents();\n    }\n\n    _addDisplayComponents() {\n        this.myVariableLabelTextComponent = this.myVariableLabelText.addComponent('text');\n        this._setupTextComponent(this.myVariableLabelTextComponent);\n        this.myVariableLabelTextComponent.text = \" \";\n\n        this.myVariableLabelCursorTargetComponent = this.myVariableLabelCursorTarget.addComponent('cursor-target');\n        this.myVariableLabelCollisionComponent = this.myVariableLabelCursorTarget.addComponent('collision');\n        this.myVariableLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myVariableLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myVariableLabelCollisionComponent.extents = this._mySetup.myVariableLabelCollisionExtents;\n\n        //Next/Previous\n        this.myNextButtonBackgroundComponent = this.myNextButtonBackground.addComponent('mesh');\n        this.myNextButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myNextButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myNextButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myNextButtonTextComponent = this.myNextButtonText.addComponent('text');\n        this._setupTextComponent(this.myNextButtonTextComponent);\n        this.myNextButtonTextComponent.text = this._mySetup.myNextButtonText;\n\n        this.myNextButtonCursorTargetComponent = this.myNextButtonCursorTarget.addComponent('cursor-target');\n        this.myNextButtonCollisionComponent = this.myNextButtonCursorTarget.addComponent('collision');\n        this.myNextButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myNextButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myNextButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        this.myPreviousButtonBackgroundComponent = this.myPreviousButtonBackground.addComponent('mesh');\n        this.myPreviousButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myPreviousButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myPreviousButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myPreviousButtonTextComponent = this.myPreviousButtonText.addComponent('text');\n        this._setupTextComponent(this.myPreviousButtonTextComponent);\n        this.myPreviousButtonTextComponent.text = this._mySetup.myPreviousButtonText;\n\n        this.myPreviousButtonCursorTargetComponent = this.myPreviousButtonCursorTarget.addComponent('cursor-target');\n        this.myPreviousButtonCollisionComponent = this.myPreviousButtonCursorTarget.addComponent('collision');\n        this.myPreviousButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPreviousButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPreviousButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        this.myValueTextComponents = [];\n        this.myValueCursorTargetComponents = [];\n        this.myValueCollisionComponents = [];\n\n        this.myValueIncreaseButtonBackgroundComponents = [];\n        this.myValueIncreaseButtonTextComponents = [];\n        this.myValueIncreaseButtonCursorTargetComponents = [];\n        this.myValueIncreaseButtonCollisionComponents = [];\n\n        this.myValueDecreaseButtonBackgroundComponents = [];\n        this.myValueDecreaseButtonTextComponents = [];\n        this.myValueDecreaseButtonCursorTargetComponents = [];\n        this.myValueDecreaseButtonCollisionComponents = [];\n\n\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\n            this.myValueTextComponents[i] = this.myValueTexts[i].addComponent('text');\n            this._setupTextComponent(this.myValueTextComponents[i]);\n            this.myValueTextComponents[i].text = \" \";\n\n            this.myValueCursorTargetComponents[i] = this.myValueCursorTargets[i].addComponent('cursor-target');\n            this.myValueCollisionComponents[i] = this.myValueCursorTargets[i].addComponent('collision');\n            this.myValueCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myValueCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myValueCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\n\n            //Increase/Decrease\n            this.myValueIncreaseButtonBackgroundComponents[i] = this.myValueIncreaseButtonBackgrounds[i].addComponent('mesh');\n            this.myValueIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\n            this.myValueIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            this.myValueIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\n\n            this.myValueIncreaseButtonTextComponents[i] = this.myValueIncreaseButtonTexts[i].addComponent('text');\n            this._setupTextComponent(this.myValueIncreaseButtonTextComponents[i]);\n            this.myValueIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\n\n            this.myValueIncreaseButtonCursorTargetComponents[i] = this.myValueIncreaseButtonCursorTargets[i].addComponent('cursor-target');\n            this.myValueIncreaseButtonCollisionComponents[i] = this.myValueIncreaseButtonCursorTargets[i].addComponent('collision');\n            this.myValueIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myValueIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myValueIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\n\n            this.myValueDecreaseButtonBackgroundComponents[i] = this.myValueDecreaseButtonBackgrounds[i].addComponent('mesh');\n            this.myValueDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\n            this.myValueDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            this.myValueDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\n\n            this.myValueDecreaseButtonTextComponents[i] = this.myValueDecreaseButtonTexts[i].addComponent('text');\n            this._setupTextComponent(this.myValueDecreaseButtonTextComponents[i]);\n            this.myValueDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\n\n            this.myValueDecreaseButtonCursorTargetComponents[i] = this.myValueDecreaseButtonCursorTargets[i].addComponent('cursor-target');\n            this.myValueDecreaseButtonCollisionComponents[i] = this.myValueDecreaseButtonCursorTargets[i].addComponent('collision');\n            this.myValueDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myValueDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myValueDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\n        }\n    }\n\n    _addStepComponents() {\n        this.myStepTextComponent = this.myStepText.addComponent('text');\n        this._setupTextComponent(this.myStepTextComponent);\n        this.myStepTextComponent.text = \" \";\n\n        this.myStepCursorTargetComponent = this.myStepCursorTarget.addComponent('cursor-target');\n        this.myStepCollisionComponent = this.myStepCursorTarget.addComponent('collision');\n        this.myStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\n\n        //Increase/Decrease\n        this.myStepIncreaseButtonBackgroundComponent = this.myStepIncreaseButtonBackground.addComponent('mesh');\n        this.myStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myStepIncreaseButtonTextComponent = this.myStepIncreaseButtonText.addComponent('text');\n        this._setupTextComponent(this.myStepIncreaseButtonTextComponent);\n        this.myStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\n\n        this.myStepIncreaseButtonCursorTargetComponent = this.myStepIncreaseButtonCursorTarget.addComponent('cursor-target');\n        this.myStepIncreaseButtonCollisionComponent = this.myStepIncreaseButtonCursorTarget.addComponent('collision');\n        this.myStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        this.myStepDecreaseButtonBackgroundComponent = this.myStepDecreaseButtonBackground.addComponent('mesh');\n        this.myStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myStepDecreaseButtonTextComponent = this.myStepDecreaseButtonText.addComponent('text');\n        this._setupTextComponent(this.myStepDecreaseButtonTextComponent);\n        this.myStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\n\n        this.myStepDecreaseButtonCursorTargetComponent = this.myStepDecreaseButtonCursorTarget.addComponent('cursor-target');\n        this.myStepDecreaseButtonCollisionComponent = this.myStepDecreaseButtonCursorTarget.addComponent('collision');\n        this.myStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n    }\n\n    _addPointerComponents() {\n        this.myPointerCollisionComponent = this.myPointerCursorTarget.addComponent('collision');\n        this.myPointerCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPointerCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPointerCollisionComponent.extents = this._mySetup.myPointerCollisionExtents;\n    }\n\n    _setupTextComponent(textComponent) {\n        textComponent.alignment = this._mySetup.myTextAlignment;\n        textComponent.justification = this._mySetup.myTextJustification;\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\n        textComponent.material.outlineRange = this._mySetup.myTextOutlineRange;\n        textComponent.material.color = this._mySetup.myTextColor;\n        textComponent.material.outlineColor = this._mySetup.myTextOutlineColor;\n        textComponent.text = \"\";\n    }\n};",
        "\nPP.EasyTuneNumberWidget = class EasyTuneNumberWidget {\n\n    constructor(gamepad) {\n        this._myGamepad = gamepad;\n\n        this._myParentObject = null;\n        this._myAdditionalSetup = null;\n\n        this._myWidgets = new Map();\n\n        this._myVariable = null;\n        this._myIsVisible = true;\n\n        this._myAppendToVariableName = null;\n\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\n\n        this._myCurrentArraySize = 0;\n    }\n\n    setEasyTuneVariable(variable, appendToVariableName) {\n        this._myVariable = variable;\n        this._myCurrentArraySize = this._myVariable.myValue.length;\n        this._myAppendToVariableName = appendToVariableName;\n\n        if (!this._myWidgets.has(this._myCurrentArraySize)) {\n            this._createWidget(this._myCurrentArraySize);\n        }\n\n        this._myWidgets.get(this._myCurrentArraySize).setEasyTuneVariable(variable, appendToVariableName);\n\n        this.setVisible(this._myIsVisible);\n    }\n\n    setVisible(visible) {\n        if (this._myVariable) {\n            this._sizeChangedCheck();\n\n            for (let widget of this._myWidgets.values()) {\n                widget.setVisible(false);\n            }\n\n            this._myWidgets.get(this._myCurrentArraySize).setVisible(visible);\n        }\n\n        this._myIsVisible = visible;\n    }\n\n    registerScrollVariableRequestEventListener(id, callback) {\n        this._myScrollVariableRequestCallbacks.set(id, callback);\n    }\n\n    unregisterScrollVariableRequestEventListener(id) {\n        this._myScrollVariableRequestCallbacks.delete(id);\n    }\n\n    start(parentObject, additionalSetup) {\n        this._myParentObject = parentObject;\n        this._myAdditionalSetup = additionalSetup;\n\n        this._createWidget(1);\n\n        if (this._myVariable) {\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\n        }\n    }\n\n    update(dt) {\n        if (this._isActive()) {\n            this._sizeChangedCheck();\n\n            this._myWidgets.get(this._myCurrentArraySize).update(dt);\n        }\n    }\n\n    _isActive() {\n        return this._myIsVisible && this._myVariable;\n    }\n\n    _scrollVariable(amount) {\n        for (let callback of this._myScrollVariableRequestCallbacks.values()) {\n            callback(amount);\n        }\n    }\n\n    _createWidget(arraySize) {\n        this._myWidgets.set(arraySize, new PP.EasyTuneNumberArrayWidget(arraySize, this._myGamepad));\n        this._myWidgets.get(arraySize).start(this._myParentObject, this._myAdditionalSetup);\n        this._myWidgets.get(arraySize).setVisible(false);\n        this._myWidgets.get(arraySize).registerScrollVariableRequestEventListener(this, this._scrollVariable.bind(this));\n    }\n\n    _sizeChangedCheck() {\n        if (this._myVariable.myValue.length != this._myCurrentArraySize) {\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\n        }\n    }\n};",
        "PP.EasyTuneSimpleTransformWidget = class EasyTuneSimpleTransformWidget {\n\n    constructor(gamepad) {\n        this._myGamepad = gamepad;\n\n        this._mySetup = new PP.EasyTuneSimpleTransformWidgetSetup();\n        this._myUI = new PP.EasyTuneSimpleTransformWidgetUI();\n\n        this._myVariable = null;\n\n        this._myIsVisible = true;\n\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\n\n        this._myAppendToVariableName = \"\";\n\n        this._myValueButtonEditIntensity = 0;\n        this._myValueButtonEditIntensityTimer = 0;\n        this._myStepButtonEditIntensity = 0;\n        this._myStepButtonEditIntensityTimer = 0;\n\n        this._myValueEditActive = false;\n        this._myStepEditActive = false;\n\n        this._myValueRealValue = null;\n        this._myComponentStepValue = null;\n        this._myStepMultiplierValue = null;\n        this._myStepFastEdit = false;\n\n        this._myValueEditIndex = -1;\n        this._myComponentIndex = 0;\n        this._myStepIndex = 0;\n    }\n\n    setEasyTuneVariable(variable, appendToVariableName) {\n        this._myVariable = variable;\n\n        if ((typeof appendToVariableName) !== 'undefined') {\n            this._myAppendToVariableName = appendToVariableName;\n        } else {\n            this._myAppendToVariableName = \"\";\n        }\n\n        this._refreshUI();\n    }\n\n    _refreshUI() {\n        if (this._myVariable) {\n            this._myUI.myVariableLabelTextComponent.text = this._myVariable.myName.concat(this._myAppendToVariableName);\n\n            for (let i = 0; i < 3; i++) {\n                this._myUI.myPositionTextComponents[i].text = this._myVariable.myPosition[i].toFixed(this._myVariable.myDecimalPlaces);\n            }\n            this._myUI.myPositionStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myPositionStepPerSecond);\n\n            for (let i = 0; i < 3; i++) {\n                this._myUI.myRotationTextComponents[i].text = this._myVariable.myRotation[i].toFixed(this._myVariable.myDecimalPlaces);\n            }\n            this._myUI.myRotationStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myRotationStepPerSecond);\n\n            for (let i = 0; i < 3; i++) {\n                this._myUI.myScaleTextComponents[i].text = this._myVariable.myScale[i].toFixed(this._myVariable.myDecimalPlaces);\n            }\n            this._myUI.myScaleStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myScaleStepPerSecond);\n        }\n    }\n\n    setVisible(visible) {\n        if (visible) {\n            this._refreshUI();\n        }\n        this._myUI.setVisible(visible);\n\n        this._myIsVisible = visible;\n    }\n\n    registerScrollVariableRequestEventListener(id, callback) {\n        this._myScrollVariableRequestCallbacks.set(id, callback);\n    }\n\n    unregisterScrollVariableRequestEventListener(id) {\n        this._myScrollVariableRequestCallbacks.delete(id);\n    }\n\n    start(parentObject, additionalSetup) {\n        this._myUI.build(parentObject, this._mySetup, additionalSetup);\n        this._myUI.setAdditionalButtonsActive(additionalSetup.myEnableAdditionalButtons);\n\n        this._addListeners();\n    }\n\n    update(dt) {\n        if (this._isActive()) {\n            this._updateValue(dt);\n        }\n    }\n\n    _updateValue(dt) {\n        let stickVariableIntensity = 0;\n\n        if (this._myGamepad) {\n            let y = this._myGamepad.getAxesInfo().myAxes[1];\n\n            if (Math.abs(y) > this._mySetup.myEditThumbstickMinThreshold) {\n                let normalizedEditAmount = (Math.abs(y) - this._mySetup.myEditThumbstickMinThreshold) / (1 - this._mySetup.myEditThumbstickMinThreshold);\n                stickVariableIntensity = Math.sign(y) * normalizedEditAmount;\n            }\n        }\n\n        let valueIntensity = 0;\n        if (this._myValueEditActive) {\n            valueIntensity = stickVariableIntensity;\n        } else if (this._myValueButtonEditIntensity != 0) {\n            if (this._myValueButtonEditIntensityTimer <= 0) {\n                valueIntensity = this._myValueButtonEditIntensity;\n            } else {\n                this._myValueButtonEditIntensityTimer -= dt;\n            }\n        }\n\n        if (valueIntensity != 0) {\n            let amountToAdd = valueIntensity * this._myComponentStepValue * dt;\n\n            this._myValueRealValue += amountToAdd;\n\n            let decimalPlacesMultiplier = Math.pow(10, this._myVariable.myDecimalPlaces);\n\n            switch (this._myComponentIndex) {\n                case 0:\n                    this._myVariable.myPosition[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\n                    this._myUI.myPositionTextComponents[this._myValueEditIndex].text = this._myVariable.myPosition[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\n                    break;\n                case 1:\n                    if (this._myValueRealValue > 180) {\n                        while (this._myValueRealValue > 180) {\n                            this._myValueRealValue -= 180;\n                        }\n                        this._myValueRealValue = -180 + this._myValueRealValue;\n                    }\n\n                    if (this._myValueRealValue < -180) {\n                        while (this._myValueRealValue < - 180) {\n                            this._myValueRealValue += 180;\n                        }\n                        this._myValueRealValue = 180 - this._myValueRealValue;\n                    }\n\n                    this._myVariable.myRotation[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\n                    this._myUI.myRotationTextComponents[this._myValueEditIndex].text = this._myVariable.myRotation[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\n                    break;\n                case 2:\n                    if (this._myValueRealValue <= 0) {\n                        this._myValueRealValue = 1 / decimalPlacesMultiplier;\n                    }\n\n                    if (this._myVariable.myScaleAsOne) {\n                        let newValue = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\n                        let difference = newValue - this._myVariable.myScale[this._myValueEditIndex];\n\n                        for (let i = 0; i < 3; i++) {\n                            this._myVariable.myScale[i] = Math.round((this._myVariable.myScale[i] + difference) * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\n                            this._myVariable.myScale[i] = Math.max(this._myVariable.myScale[i], 1 / decimalPlacesMultiplier);\n                            this._myUI.myScaleTextComponents[i].text = this._myVariable.myScale[i].toFixed(this._myVariable.myDecimalPlaces);\n                        }\n                    } else {\n                        this._myVariable.myScale[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\n                        this._myVariable.myScale[this._myValueEditIndex] = Math.max(this._myVariable.myScale[this._myValueEditIndex], 1 / decimalPlacesMultiplier);\n                        this._myUI.myScaleTextComponents[this._myValueEditIndex].text = this._myVariable.myScale[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\n                    }\n                    break;\n            }\n        } else {\n            switch (this._myComponentIndex) {\n                case 0:\n                    this._myValueRealValue = this._myVariable.myPosition[this._myValueEditIndex];\n                    break;\n                case 1:\n                    this._myValueRealValue = this._myVariable.myRotation[this._myValueEditIndex];\n                    break;\n                case 2:\n                    this._myValueRealValue = this._myVariable.myScale[this._myValueEditIndex];\n                    break;\n            }\n        }\n\n        let stepIntensity = 0;\n        if (this._myStepEditActive) {\n            stepIntensity = stickVariableIntensity;\n        } else if (this._myStepButtonEditIntensity != 0) {\n            if (this._myStepButtonEditIntensityTimer <= 0) {\n                stepIntensity = this._myStepButtonEditIntensity;\n            } else {\n                this._myStepButtonEditIntensityTimer -= dt;\n            }\n        }\n\n        if (stepIntensity != 0) {\n            let amountToAdd = 0;\n            if (this._myStepFastEdit) {\n                amountToAdd = Math.sign(stepIntensity) * 1;\n                this._myStepFastEdit = false;\n            } else {\n                amountToAdd = stepIntensity * this._mySetup.myStepMultiplierStepPerSecond * dt;\n            }\n\n            this._myStepMultiplierValue += amountToAdd;\n            if (Math.abs(this._myStepMultiplierValue) >= 1) {\n                let stepValue = 0;\n                switch (this._myStepIndex) {\n                    case 0:\n                        stepValue = this._myVariable.myPositionStepPerSecond;\n                        break;\n                    case 1:\n                        stepValue = this._myVariable.myRotationStepPerSecond;\n                        break;\n                    case 2:\n                        stepValue = this._myVariable.myScaleStepPerSecond;\n                        break;\n                    default:\n                        stepValue = 0;\n                }\n                if (Math.sign(this._myStepMultiplierValue) > 0) {\n                    this._myStepMultiplierValue -= 1;\n                    this._changeStep(this._myStepIndex, stepValue * 10);\n                } else {\n                    this._myStepMultiplierValue += 1;\n                    this._changeStep(this._myStepIndex, stepValue * 0.1);\n                }\n            }\n        } else {\n            this._myStepMultiplierValue = 0;\n            this._myStepFastEdit = true;\n        }\n    }\n\n    _isActive() {\n        return this._myIsVisible && this._myVariable;\n    }\n\n    _addListeners() {\n        let ui = this._myUI;\n\n        ui.myVariableLabelCursorTargetComponent.addClickFunction(this._resetAllValues.bind(this));\n        ui.myVariableLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myVariableLabelText));\n        ui.myVariableLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myVariableLabelText, this._mySetup.myVariableLabelTextScale));\n\n        ui.myNextButtonCursorTargetComponent.addClickFunction(this._scrollVariableRequest.bind(this, 1));\n        ui.myNextButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myNextButtonBackgroundComponent.material));\n        ui.myNextButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myNextButtonBackgroundComponent.material));\n\n        ui.myPreviousButtonCursorTargetComponent.addClickFunction(this._scrollVariableRequest.bind(this, -1));\n        ui.myPreviousButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\n        ui.myPreviousButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\n\n        ui.myPositionLabelCursorTargetComponent.addClickFunction(this._resetComponentValues.bind(this, 0));\n        ui.myPositionLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myPositionLabelText));\n        ui.myPositionLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myPositionLabelText, this._mySetup.myComponentLabelTextScale));\n        for (let i = 0; i < 3; i++) {\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 0, i, 1));\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 0, i, -1));\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\n\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myPositionIncreaseButtonBackgroundComponents[i].material));\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionIncreaseButtonBackgroundComponents[i].material));\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myPositionDecreaseButtonBackgroundComponents[i].material));\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionDecreaseButtonBackgroundComponents[i].material));\n\n            ui.myPositionCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, 0, i));\n            ui.myPositionCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, 0, i, ui.myPositionTexts[i], true));\n            ui.myPositionCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, 0, i, ui.myPositionTexts[i], false));\n        }\n\n        ui.myRotationLabelCursorTargetComponent.addClickFunction(this._resetComponentValues.bind(this, 1));\n        ui.myRotationLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myRotationLabelText));\n        ui.myRotationLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myRotationLabelText, this._mySetup.myComponentLabelTextScale));\n        for (let i = 0; i < 3; i++) {\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 1, i, 1));\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 1, i, -1));\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\n\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myRotationIncreaseButtonBackgroundComponents[i].material));\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationIncreaseButtonBackgroundComponents[i].material));\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myRotationDecreaseButtonBackgroundComponents[i].material));\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationDecreaseButtonBackgroundComponents[i].material));\n\n            ui.myRotationCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, 1, i));\n            ui.myRotationCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, 1, i, ui.myRotationTexts[i], true));\n            ui.myRotationCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, 1, i, ui.myRotationTexts[i], false));\n        }\n\n        ui.myScaleLabelCursorTargetComponent.addClickFunction(this._resetComponentValues.bind(this, 2));\n        ui.myScaleLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myScaleLabelText));\n        ui.myScaleLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myScaleLabelText, this._mySetup.myComponentLabelTextScale));\n        for (let i = 0; i < 3; i++) {\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 2, i, 1));\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 2, i, -1));\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\n\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myScaleIncreaseButtonBackgroundComponents[i].material));\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleIncreaseButtonBackgroundComponents[i].material));\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myScaleDecreaseButtonBackgroundComponents[i].material));\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleDecreaseButtonBackgroundComponents[i].material));\n\n            ui.myScaleCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, 2, i));\n            ui.myScaleCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, 2, i, ui.myScaleTexts[i], true));\n            ui.myScaleCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, 2, i, ui.myScaleTexts[i], false));\n        }\n\n        ui.myPositionStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this, 0));\n        ui.myPositionStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, 0, ui.myPositionStepText, true));\n        ui.myPositionStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, 0, ui.myPositionStepText, false));\n\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 0, 1));\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0, 0));\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 0, -1));\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0, 0));\n\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPositionStepIncreaseButtonBackgroundComponent.material));\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionStepIncreaseButtonBackgroundComponent.material));\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPositionStepDecreaseButtonBackgroundComponent.material));\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionStepDecreaseButtonBackgroundComponent.material));\n\n        ui.myRotationStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this, 1));\n        ui.myRotationStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, 1, ui.myRotationStepText, true));\n        ui.myRotationStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, 1, ui.myRotationStepText, false));\n\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 1, 1));\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 1, 0));\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 1, -1));\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 1, 0));\n\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myRotationStepIncreaseButtonBackgroundComponent.material));\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationStepIncreaseButtonBackgroundComponent.material));\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myRotationStepDecreaseButtonBackgroundComponent.material));\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationStepDecreaseButtonBackgroundComponent.material));\n\n        ui.myScaleStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this, 2));\n        ui.myScaleStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, 2, ui.myScaleStepText, true));\n        ui.myScaleStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, 2, ui.myScaleStepText, false));\n\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 2, 1));\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 2, 0));\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 2, -1));\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 2, 0));\n\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myScaleStepIncreaseButtonBackgroundComponent.material));\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleStepIncreaseButtonBackgroundComponent.material));\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myScaleStepDecreaseButtonBackgroundComponent.material));\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleStepDecreaseButtonBackgroundComponent.material));\n\n    }\n\n    _setValueEditIntensity(componentIndex, index, value) {\n        if (this._isActive() || value == 0) {\n            if (value != 0) {\n                switch (componentIndex) {\n                    case 0:\n                        this._myValueRealValue = this._myVariable.myPosition[index];\n                        this._myComponentStepValue = this._myVariable.myPositionStepPerSecond;\n                        break;\n                    case 1:\n                        this._myValueRealValue = this._myVariable.myRotation[index];\n                        this._myComponentStepValue = this._myVariable.myRotationStepPerSecond;\n                        break;\n                    case 2:\n                        this._myValueRealValue = this._myVariable.myScale[index];\n                        this._myComponentStepValue = this._myVariable.myScaleStepPerSecond;\n                        break;\n                }\n\n                this._myValueButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\n                this._myValueEditIndex = index;\n                this._myComponentIndex = componentIndex;\n            }\n\n            this._myValueButtonEditIntensity = value;\n        }\n    }\n\n    _setStepEditIntensity(index, value) {\n        if (this._isActive() || value == 0) {\n            if (value != 0) {\n                this._myStepButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\n            }\n\n            this._myStepButtonEditIntensity = value;\n\n            this._myStepIndex = index;\n        }\n    }\n\n    _setValueEditActive(componentIndex, index, text, active) {\n        if (this._isActive() || !active) {\n            if (active) {\n                switch (componentIndex) {\n                    case 0:\n                        this._myValueRealValue = this._myVariable.myPosition[index];\n                        this._myComponentStepValue = this._myVariable.myPositionStepPerSecond;\n                        break;\n                    case 1:\n                        this._myValueRealValue = this._myVariable.myRotation[index];\n                        this._myComponentStepValue = this._myVariable.myRotationStepPerSecond;\n                        break;\n                    case 2:\n                        this._myValueRealValue = this._myVariable.myScale[index];\n                        this._myComponentStepValue = this._myVariable.myScaleStepPerSecond;\n                        break;\n                }\n\n                this._myValueEditIndex = index;\n                this._myComponentIndex = componentIndex;\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\n            } else {\n                text.scalingWorld = this._mySetup.myValueTextScale;\n            }\n\n            this._myValueEditActive = active;\n        }\n    }\n\n    _setStepEditActive(index, text, active) {\n        if (this._isActive() || !active) {\n            if (active) {\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\n            } else {\n                text.scalingWorld = this._mySetup.myStepTextScale;\n            }\n\n            this._myStepEditActive = active;\n            this._myStepIndex = index;\n        }\n    }\n\n    _scrollVariableRequest(amount) {\n        if (this._isActive()) {\n            for (let callback of this._myScrollVariableRequestCallbacks.values()) {\n                callback(amount);\n            }\n        }\n    }\n\n    _resetValue(componentIndex, index) {\n        if (this._isActive()) {\n            switch (componentIndex) {\n                case 0:\n                    this._myVariable.myPosition[index] = this._myVariable.myInitialPosition[index];\n                    this._myUI.myPositionTextComponents[index].text = this._myVariable.myPosition[index].toFixed(this._myVariable.myDecimalPlaces);\n                    break;\n                case 1:\n                    this._myVariable.myRotation[index] = this._myVariable.myInitialRotation[index];\n                    this._myUI.myRotationTextComponents[index].text = this._myVariable.myRotation[index].toFixed(this._myVariable.myDecimalPlaces);\n                    break;\n                case 2:\n                    this._myVariable.myScale[index] = this._myVariable.myInitialScale[index];\n                    this._myUI.myScaleTextComponents[index].text = this._myVariable.myScale[index].toFixed(this._myVariable.myDecimalPlaces);\n                    break;\n                default:\n                    initialValue = 0;\n            }\n        }\n    }\n\n    _resetAllValues() {\n        for (let i = 0; i < 3; i++) {\n            this._resetComponentValues(i);\n        }\n    }\n\n    _resetComponentValues(index) {\n        for (let i = 0; i < 3; i++) {\n            this._resetValue(index, i);\n        }\n    }\n\n    _resetStep(index) {\n        if (this._isActive()) {\n            let initialValue = 0;\n            switch (index) {\n                case 0:\n                    initialValue = this._myVariable.myInitialPositionStepPerSecond;\n                    break;\n                case 1:\n                    initialValue = this._myVariable.myInitialRotationStepPerSecond;\n                    break;\n                case 2:\n                    initialValue = this._myVariable.myInitialScaleStepPerSecond;\n                    break;\n                default:\n                    initialValue = 0;\n            }\n\n            this._changeStep(index, initialValue);\n        }\n    }\n\n    _changeStep(index, step) {\n        step = Math.pp_roundDecimal(step, 10);\n\n        switch (index) {\n            case 0:\n                this._myVariable.myPositionStepPerSecond = step;\n                this._myUI.myPositionStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myPositionStepPerSecond);\n                break;\n            case 1:\n                this._myVariable.myRotationStepPerSecond = step;\n                this._myUI.myRotationStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myRotationStepPerSecond);\n                break;\n            case 2:\n                this._myVariable.myScaleStepPerSecond = step;\n                this._myUI.myScaleStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myScaleStepPerSecond);\n                break;\n        }\n    }\n\n    _genericHover(material) {\n        material.color = this._mySetup.myButtonHoverColor;\n    }\n\n    _genericUnHover(material) {\n        material.color = this._mySetup.myBackgroundColor;\n    }\n\n    _genericTextHover(text) {\n        text.scale(this._mySetup.myTextHoverScaleMultiplier);\n    }\n\n    _genericTextUnHover(text, originalScale) {\n        text.scalingWorld = originalScale;\n    }\n};",
        "PP.EasyTuneSimpleTransformWidgetSetup = class EasyTuneSimpleTransformWidgetSetup {\n\n    constructor() {\n        this._initializeBuildSetup();\n        this._initializeRuntimeSetup();\n    }\n\n    _initializeBuildSetup() {\n        //General\n        this.myBackgroundColor = [46 / 255, 46 / 255, 46 / 255, 1];\n\n        this.myCursorTargetCollisionCollider = 2; // box\n        this.myCursorTargetCollisionGroup = 7;\n        this.myCursorTargetCollisionThickness = 0.001;\n\n        this.myDefaultTextColor = [255 / 255, 255 / 255, 255 / 255, 1];\n\n        this.myTextAlignment = 2; // center\n        this.myTextJustification = 2; // middle\n        this.myTextOutlineRange = [0.45, 0.45];\n        this.myTextColor = this.myDefaultTextColor;\n        this.myTextOutlineColor = this.myDefaultTextColor;\n\n        //Pivot\n        this.myPivotObjectPositions = [];\n        this.myPivotObjectPositions[PP.ToolHandedness.NONE] = [0, 0, 0];\n        this.myPivotObjectPositions[PP.ToolHandedness.LEFT] = [-0.04, 0.02, 0.00003713]; //little \"random\" z offset to avoid glitching with other widgets\n        this.myPivotObjectPositions[PP.ToolHandedness.RIGHT] = [-0.08, 0.02, 0.00003713];\n\n        let panelZ = 0.01;\n        let distanceFromBorder = 0.0125;\n        let distanceFromValue = 0.055;\n        let colliderZPosition = 0.017;\n        let backgroundHalfWidth = 0.2;\n\n        this.mySideButtonBackgroundScale = [0.015, 0.015, 1];\n        this.mySideButtonTextScale = [0.18, 0.18, 0.18];\n        this.mySideButtonTextPosition = [0, 0, 0.007];\n\n        this.mySideButtonCursorTargetPosition = [0, 0, 0];\n        this.mySideButtonCursorTargetPosition[2] = colliderZPosition - panelZ;\n        this.mySideButtonCollisionExtents = this.mySideButtonBackgroundScale.slice(0);\n        this.mySideButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myLeftSideButtonPosition = [-0.13, 0, 0];\n        this.myRightSideButtonPosition = [-this.myLeftSideButtonPosition[0], 0, 0];\n\n        this.myPreviousButtonPosition = [0, 0, -0.00001];\n        this.myPreviousButtonPosition[0] = -backgroundHalfWidth + this.mySideButtonBackgroundScale[0] + distanceFromBorder;\n\n        this.myNextButtonPosition = [0, 0, -0.00001];\n        this.myNextButtonPosition[0] = backgroundHalfWidth - this.mySideButtonBackgroundScale[0] - distanceFromBorder;\n\n        this.myIncreaseButtonText = \"+\";\n        this.myDecreaseButtonText = \"-\";\n\n        //Display\n        this.myDisplayPanelPosition = [0, 0.1, 0];\n\n        this.myVariableLabelPanelPosition = [0, 0.025, panelZ];\n        this.myVariableLabelTextScale = [0.19, 0.19, 0.19];\n\n        this.myVariableLabelCursorTargetPosition = [0, 0, 0];\n        this.myVariableLabelCursorTargetPosition[2] = colliderZPosition - panelZ;\n        this.myVariableLabelCollisionExtents = [0.065, 0.0175, 1];\n        this.myVariableLabelCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myNextButtonText = \">\";\n        this.myPreviousButtonText = \"<\";\n\n        let distanceBetweenComponents = Math.abs(this.myNextButtonPosition[0]) + Math.abs(this.myRightSideButtonPosition[0]);\n        let distanceFromVariableLabel = 0.045;\n        this.myPositionPanelPosition = [0, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, panelZ];\n        this.myRotationPanelPosition = [this.myPositionPanelPosition[0] + distanceBetweenComponents, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, panelZ];\n        this.myScalePanelPosition = [this.myPositionPanelPosition[0] - distanceBetweenComponents, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, panelZ];\n\n        this.myPositionText = \"Position\";\n        this.myRotationText = \"Rotation\";\n        this.myScaleText = \"Scale\";\n\n        this.myComponentLabelTextScale = [0.19, 0.19, 0.19];\n        this.myComponentLabelCursorTargetPosition = [0, 0, 0];\n        this.myComponentLabelCursorTargetPosition[2] = colliderZPosition - panelZ;\n        this.myComponentLabelCollisionExtents = [0.065, 0.0175, 1];\n        this.myComponentLabelCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        this.myValueTextScale = [0.4, 0.4, 0.4];\n\n        this.myValueCursorTargetPosition = [0, 0.0, 0];\n        this.myValueCursorTargetPosition[2] = colliderZPosition - panelZ;\n        this.myValueCollisionExtents = [0.065, 0.02, 1];\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        let distanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\n\n        this.myValuePanelsPositions = [];\n        this.myValuePanelsPositions[0] = [0, -distanceFromValue, 0];\n        for (let i = 1; i < 3; i++) {\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].slice(0);\n            this.myValuePanelsPositions[i][1] -= distanceBetweenValues;\n        }\n\n        //Step\n        let valuePanelLastPosition = this.myValuePanelsPositions[2][1];\n        this.myStepPanelPosition = [0, valuePanelLastPosition - distanceFromValue, 0];\n        this.myStepTextScale = [0.19, 0.19, 0.19];\n        this.myStepStartString = \"Step: \";\n\n        this.myStepCursorTargetPosition = [0, 0, 0];\n        this.myStepCursorTargetPosition[2] = colliderZPosition - this.myStepPanelPosition[2];\n        this.myStepCollisionExtents = [0.065, 0.0175, 1];\n        this.myStepCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n\n        //Background\n        {\n            let maxY = this.myDisplayPanelPosition[1] + this.myVariableLabelPanelPosition[1] + this.mySideButtonBackgroundScale[1] + distanceFromBorder * 1.25;\n            let minY = this.myDisplayPanelPosition[1] + this.myPositionPanelPosition[1] + this.myStepPanelPosition[1] - distanceFromBorder * 1.25 - this.mySideButtonBackgroundScale[1];\n\n            let maxX = this.myDisplayPanelPosition[0] + this.myRotationPanelPosition[0] + this.myRightSideButtonPosition[0] + this.mySideButtonBackgroundScale[0] + distanceFromBorder;\n            let minX = this.myDisplayPanelPosition[0] + this.myScalePanelPosition[0] + this.myLeftSideButtonPosition[0] - this.mySideButtonBackgroundScale[0] - distanceFromBorder;\n\n            this.myBackPanelPosition = [(maxX + minX) / 2, (maxY + minY) / 2, 0];\n            this.myBackBackgroundScale = [(maxX - minX) / 2, (maxY - minY) / 2, 1];\n            this.myBackBackgroundColor = [70 / 255, 70 / 255, 70 / 255, 1];\n        }\n\n        //Pointer\n        this.myPointerCollisionExtents = this.myBackBackgroundScale.slice(0);\n        this.myPointerCollisionExtents[2] = this.myCursorTargetCollisionThickness;\n        this.myPointerCursorTargetPosition = this.myBackPanelPosition.slice(0);\n        this.myPointerCursorTargetPosition[2] = colliderZPosition - 0.0001; // a little behind the button target to avoid hiding it\n    }\n\n    _initializeRuntimeSetup() {\n        this.myButtonHoverColor = [150 / 255, 150 / 255, 150 / 255, 1];\n        this.myTextHoverScaleMultiplier = [1.25, 1.25, 1.25];\n\n        this.myEditThumbstickMinThreshold = 0.35;\n        this.myStepMultiplierStepPerSecond = 2.25;\n        this.myButtonEditDelay = 0;\n    }\n};",
        "\nPP.EasyTuneSimpleTransformWidgetUI = class EasyTuneSimpleTransformWidgetUI {\n\n    build(parentObject, setup, additionalSetup) {\n        this._myParentObject = parentObject;\n        this._mySetup = setup;\n        this._myAdditionalSetup = additionalSetup;\n\n        this._myAdditionalButtonsActive = true;\n\n        this._myPlaneMesh = PP.MeshUtils.createPlaneMesh();\n\n        this._createSkeleton();\n        this._setTransforms();\n        this._addComponents();\n    }\n\n    setVisible(visible) {\n        this.myPivotObject.pp_setActiveHierarchy(visible);\n        if (visible) {\n            this.setAdditionalButtonsActive(this._myAdditionalButtonsActive);\n        }\n    }\n\n    setAdditionalButtonsActive(active) {\n        this._myAdditionalButtonsActive = active;\n\n        for (let i = 0; i < 3; i++) {\n            this.myPositionIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n            this.myPositionDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n        }\n        this.myPositionStepIncreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n        this.myPositionStepDecreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n\n        for (let i = 0; i < 3; i++) {\n            this.myRotationIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n            this.myRotationDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n        }\n        this.myRotationStepIncreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n        this.myRotationStepDecreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n\n        for (let i = 0; i < 3; i++) {\n            this.myScaleIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n            this.myScaleDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n        }\n        this.myScaleStepIncreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n        this.myScaleStepDecreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\n    }\n\n    //Skeleton\n    _createSkeleton() {\n        this.myPivotObject = WL.scene.addObject(this._myParentObject);\n\n        this.myBackPanel = WL.scene.addObject(this.myPivotObject);\n        this.myBackBackground = WL.scene.addObject(this.myBackPanel);\n\n        this._createDisplaySkeleton();\n        this._createStepSkeleton();\n        this._createPointerSkeleton();\n    }\n\n    _createDisplaySkeleton() {\n        this.myDisplayPanel = WL.scene.addObject(this.myPivotObject);\n\n        this.myVariableLabelPanel = WL.scene.addObject(this.myDisplayPanel);\n        this.myVariableLabelText = WL.scene.addObject(this.myVariableLabelPanel);\n        this.myVariableLabelCursorTarget = WL.scene.addObject(this.myVariableLabelPanel);\n\n        //Next/Previous\n        this.myNextButtonPanel = WL.scene.addObject(this.myVariableLabelPanel);\n        this.myNextButtonBackground = WL.scene.addObject(this.myNextButtonPanel);\n        this.myNextButtonText = WL.scene.addObject(this.myNextButtonPanel);\n        this.myNextButtonCursorTarget = WL.scene.addObject(this.myNextButtonPanel);\n\n        this.myPreviousButtonPanel = WL.scene.addObject(this.myVariableLabelPanel);\n        this.myPreviousButtonBackground = WL.scene.addObject(this.myPreviousButtonPanel);\n        this.myPreviousButtonText = WL.scene.addObject(this.myPreviousButtonPanel);\n        this.myPreviousButtonCursorTarget = WL.scene.addObject(this.myPreviousButtonPanel);\n\n        //Position\n        this.myPositionPanel = WL.scene.addObject(this.myDisplayPanel);\n        this.myPositionLabelText = WL.scene.addObject(this.myPositionPanel);\n        this.myPositionLabelCursorTarget = WL.scene.addObject(this.myPositionPanel);\n\n        this.myPositionPanels = [];\n        this.myPositionTexts = [];\n        this.myPositionCursorTargets = [];\n\n        this.myPositionIncreaseButtonPanels = [];\n        this.myPositionIncreaseButtonBackgrounds = [];\n        this.myPositionIncreaseButtonTexts = [];\n        this.myPositionIncreaseButtonCursorTargets = [];\n\n        this.myPositionDecreaseButtonPanels = [];\n        this.myPositionDecreaseButtonBackgrounds = [];\n        this.myPositionDecreaseButtonTexts = [];\n        this.myPositionDecreaseButtonCursorTargets = [];\n\n        for (let i = 0; i < 3; i++) {\n            this.myPositionPanels[i] = WL.scene.addObject(this.myPositionPanel);\n            this.myPositionTexts[i] = WL.scene.addObject(this.myPositionPanels[i]);\n            this.myPositionCursorTargets[i] = WL.scene.addObject(this.myPositionPanels[i]);\n\n            //Increase/Decrease\n            this.myPositionIncreaseButtonPanels[i] = WL.scene.addObject(this.myPositionPanels[i]);\n            this.myPositionIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myPositionIncreaseButtonPanels[i]);\n            this.myPositionIncreaseButtonTexts[i] = WL.scene.addObject(this.myPositionIncreaseButtonPanels[i]);\n            this.myPositionIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myPositionIncreaseButtonPanels[i]);\n\n            this.myPositionDecreaseButtonPanels[i] = WL.scene.addObject(this.myPositionPanels[i]);\n            this.myPositionDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myPositionDecreaseButtonPanels[i]);\n            this.myPositionDecreaseButtonTexts[i] = WL.scene.addObject(this.myPositionDecreaseButtonPanels[i]);\n            this.myPositionDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myPositionDecreaseButtonPanels[i]);\n        }\n\n        //Rotation\n        this.myRotationPanel = WL.scene.addObject(this.myDisplayPanel);\n        this.myRotationLabelText = WL.scene.addObject(this.myRotationPanel);\n        this.myRotationLabelCursorTarget = WL.scene.addObject(this.myRotationPanel);\n\n        this.myRotationPanels = [];\n        this.myRotationTexts = [];\n        this.myRotationCursorTargets = [];\n\n        this.myRotationIncreaseButtonPanels = [];\n        this.myRotationIncreaseButtonBackgrounds = [];\n        this.myRotationIncreaseButtonTexts = [];\n        this.myRotationIncreaseButtonCursorTargets = [];\n\n        this.myRotationDecreaseButtonPanels = [];\n        this.myRotationDecreaseButtonBackgrounds = [];\n        this.myRotationDecreaseButtonTexts = [];\n        this.myRotationDecreaseButtonCursorTargets = [];\n\n        for (let i = 0; i < 3; i++) {\n            this.myRotationPanels[i] = WL.scene.addObject(this.myRotationPanel);\n            this.myRotationTexts[i] = WL.scene.addObject(this.myRotationPanels[i]);\n            this.myRotationCursorTargets[i] = WL.scene.addObject(this.myRotationPanels[i]);\n\n            //Increase/Decrease\n            this.myRotationIncreaseButtonPanels[i] = WL.scene.addObject(this.myRotationPanels[i]);\n            this.myRotationIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myRotationIncreaseButtonPanels[i]);\n            this.myRotationIncreaseButtonTexts[i] = WL.scene.addObject(this.myRotationIncreaseButtonPanels[i]);\n            this.myRotationIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myRotationIncreaseButtonPanels[i]);\n\n            this.myRotationDecreaseButtonPanels[i] = WL.scene.addObject(this.myRotationPanels[i]);\n            this.myRotationDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myRotationDecreaseButtonPanels[i]);\n            this.myRotationDecreaseButtonTexts[i] = WL.scene.addObject(this.myRotationDecreaseButtonPanels[i]);\n            this.myRotationDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myRotationDecreaseButtonPanels[i]);\n        }\n\n        //Scale\n        this.myScalePanel = WL.scene.addObject(this.myDisplayPanel);\n        this.myScaleLabelText = WL.scene.addObject(this.myScalePanel);\n        this.myScaleLabelCursorTarget = WL.scene.addObject(this.myScalePanel);\n\n        this.myScalePanels = [];\n        this.myScaleTexts = [];\n        this.myScaleCursorTargets = [];\n\n        this.myScaleIncreaseButtonPanels = [];\n        this.myScaleIncreaseButtonBackgrounds = [];\n        this.myScaleIncreaseButtonTexts = [];\n        this.myScaleIncreaseButtonCursorTargets = [];\n\n        this.myScaleDecreaseButtonPanels = [];\n        this.myScaleDecreaseButtonBackgrounds = [];\n        this.myScaleDecreaseButtonTexts = [];\n        this.myScaleDecreaseButtonCursorTargets = [];\n\n        for (let i = 0; i < 3; i++) {\n            this.myScalePanels[i] = WL.scene.addObject(this.myScalePanel);\n            this.myScaleTexts[i] = WL.scene.addObject(this.myScalePanels[i]);\n            this.myScaleCursorTargets[i] = WL.scene.addObject(this.myScalePanels[i]);\n\n            //Increase/Decrease\n            this.myScaleIncreaseButtonPanels[i] = WL.scene.addObject(this.myScalePanels[i]);\n            this.myScaleIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myScaleIncreaseButtonPanels[i]);\n            this.myScaleIncreaseButtonTexts[i] = WL.scene.addObject(this.myScaleIncreaseButtonPanels[i]);\n            this.myScaleIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myScaleIncreaseButtonPanels[i]);\n\n            this.myScaleDecreaseButtonPanels[i] = WL.scene.addObject(this.myScalePanels[i]);\n            this.myScaleDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myScaleDecreaseButtonPanels[i]);\n            this.myScaleDecreaseButtonTexts[i] = WL.scene.addObject(this.myScaleDecreaseButtonPanels[i]);\n            this.myScaleDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myScaleDecreaseButtonPanels[i]);\n        }\n    }\n\n    _createStepSkeleton() {\n        //Position\n        this.myPositionStepPanel = WL.scene.addObject(this.myPositionPanel);\n        this.myPositionStepText = WL.scene.addObject(this.myPositionStepPanel);\n        this.myPositionStepCursorTarget = WL.scene.addObject(this.myPositionStepPanel);\n\n        //Increase/Decrease\n        this.myPositionStepIncreaseButtonPanel = WL.scene.addObject(this.myPositionStepPanel);\n        this.myPositionStepIncreaseButtonBackground = WL.scene.addObject(this.myPositionStepIncreaseButtonPanel);\n        this.myPositionStepIncreaseButtonText = WL.scene.addObject(this.myPositionStepIncreaseButtonPanel);\n        this.myPositionStepIncreaseButtonCursorTarget = WL.scene.addObject(this.myPositionStepIncreaseButtonPanel);\n\n        this.myPositionStepDecreaseButtonPanel = WL.scene.addObject(this.myPositionStepPanel);\n        this.myPositionStepDecreaseButtonBackground = WL.scene.addObject(this.myPositionStepDecreaseButtonPanel);\n        this.myPositionStepDecreaseButtonText = WL.scene.addObject(this.myPositionStepDecreaseButtonPanel);\n        this.myPositionStepDecreaseButtonCursorTarget = WL.scene.addObject(this.myPositionStepDecreaseButtonPanel);\n\n        //Rotation\n        this.myRotationStepPanel = WL.scene.addObject(this.myRotationPanel);\n        this.myRotationStepText = WL.scene.addObject(this.myRotationStepPanel);\n        this.myRotationStepCursorTarget = WL.scene.addObject(this.myRotationStepPanel);\n\n        //Increase/Decrease\n        this.myRotationStepIncreaseButtonPanel = WL.scene.addObject(this.myRotationStepPanel);\n        this.myRotationStepIncreaseButtonBackground = WL.scene.addObject(this.myRotationStepIncreaseButtonPanel);\n        this.myRotationStepIncreaseButtonText = WL.scene.addObject(this.myRotationStepIncreaseButtonPanel);\n        this.myRotationStepIncreaseButtonCursorTarget = WL.scene.addObject(this.myRotationStepIncreaseButtonPanel);\n\n        this.myRotationStepDecreaseButtonPanel = WL.scene.addObject(this.myRotationStepPanel);\n        this.myRotationStepDecreaseButtonBackground = WL.scene.addObject(this.myRotationStepDecreaseButtonPanel);\n        this.myRotationStepDecreaseButtonText = WL.scene.addObject(this.myRotationStepDecreaseButtonPanel);\n        this.myRotationStepDecreaseButtonCursorTarget = WL.scene.addObject(this.myRotationStepDecreaseButtonPanel);\n\n        //Scale\n        this.myScaleStepPanel = WL.scene.addObject(this.myScalePanel);\n        this.myScaleStepText = WL.scene.addObject(this.myScaleStepPanel);\n        this.myScaleStepCursorTarget = WL.scene.addObject(this.myScaleStepPanel);\n\n        //Increase/Decrease\n        this.myScaleStepIncreaseButtonPanel = WL.scene.addObject(this.myScaleStepPanel);\n        this.myScaleStepIncreaseButtonBackground = WL.scene.addObject(this.myScaleStepIncreaseButtonPanel);\n        this.myScaleStepIncreaseButtonText = WL.scene.addObject(this.myScaleStepIncreaseButtonPanel);\n        this.myScaleStepIncreaseButtonCursorTarget = WL.scene.addObject(this.myScaleStepIncreaseButtonPanel);\n\n        this.myScaleStepDecreaseButtonPanel = WL.scene.addObject(this.myScaleStepPanel);\n        this.myScaleStepDecreaseButtonBackground = WL.scene.addObject(this.myScaleStepDecreaseButtonPanel);\n        this.myScaleStepDecreaseButtonText = WL.scene.addObject(this.myScaleStepDecreaseButtonPanel);\n        this.myScaleStepDecreaseButtonCursorTarget = WL.scene.addObject(this.myScaleStepDecreaseButtonPanel);\n    }\n\n    _createPointerSkeleton() {\n        this.myPointerCursorTarget = WL.scene.addObject(this.myPivotObject);\n    }\n\n    //Transforms\n    _setTransforms() {\n        this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectPositions[this._myAdditionalSetup.myHandedness]);\n\n        this.myBackPanel.setTranslationLocal(this._mySetup.myBackPanelPosition);\n        this.myBackBackground.scale(this._mySetup.myBackBackgroundScale);\n\n        this._setDisplayTransforms();\n        this._setStepTransforms();\n        this._setPointerTransform();\n    }\n\n    _setDisplayTransforms() {\n        this.myDisplayPanel.setTranslationLocal(this._mySetup.myDisplayPanelPosition);\n\n        this.myVariableLabelPanel.setTranslationLocal(this._mySetup.myVariableLabelPanelPosition);\n        this.myVariableLabelText.scale(this._mySetup.myVariableLabelTextScale);\n        this.myVariableLabelCursorTarget.setTranslationLocal(this._mySetup.myVariableLabelCursorTargetPosition);\n\n        //Next/Previous\n        this.myNextButtonPanel.setTranslationLocal(this._mySetup.myNextButtonPosition);\n        this.myNextButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myNextButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myNextButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myNextButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        this.myPreviousButtonPanel.setTranslationLocal(this._mySetup.myPreviousButtonPosition);\n        this.myPreviousButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myPreviousButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myPreviousButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myPreviousButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        //Position\n        this.myPositionPanel.setTranslationLocal(this._mySetup.myPositionPanelPosition);\n        this.myPositionLabelText.scale(this._mySetup.myComponentLabelTextScale);\n        this.myPositionLabelCursorTarget.setTranslationLocal(this._mySetup.myComponentLabelCursorTargetPosition);\n\n        for (let i = 0; i < 3; i++) {\n            this.myPositionPanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\n            this.myPositionTexts[i].scale(this._mySetup.myValueTextScale);\n            this.myPositionCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\n\n            this.myPositionIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myRightSideButtonPosition);\n            this.myPositionIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\n            this.myPositionIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n            this.myPositionIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\n            this.myPositionIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n            this.myPositionDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\n            this.myPositionDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\n            this.myPositionDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n            this.myPositionDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\n            this.myPositionDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n        }\n\n        //Rotation\n        this.myRotationPanel.setTranslationLocal(this._mySetup.myRotationPanelPosition);\n        this.myRotationLabelText.scale(this._mySetup.myComponentLabelTextScale);\n        this.myRotationLabelCursorTarget.setTranslationLocal(this._mySetup.myComponentLabelCursorTargetPosition);\n\n        for (let i = 0; i < 3; i++) {\n            this.myRotationPanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\n            this.myRotationTexts[i].scale(this._mySetup.myValueTextScale);\n            this.myRotationCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\n\n            this.myRotationIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myRightSideButtonPosition);\n            this.myRotationIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\n            this.myRotationIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n            this.myRotationIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\n            this.myRotationIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n            this.myRotationDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\n            this.myRotationDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\n            this.myRotationDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n            this.myRotationDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\n            this.myRotationDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n        }\n\n        //Scale\n        this.myScalePanel.setTranslationLocal(this._mySetup.myScalePanelPosition);\n        this.myScaleLabelText.scale(this._mySetup.myComponentLabelTextScale);\n        this.myScaleLabelCursorTarget.setTranslationLocal(this._mySetup.myComponentLabelCursorTargetPosition);\n\n        for (let i = 0; i < 3; i++) {\n            this.myScalePanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\n            this.myScaleTexts[i].scale(this._mySetup.myValueTextScale);\n            this.myScaleCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\n\n            this.myScaleIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myRightSideButtonPosition);\n            this.myScaleIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\n            this.myScaleIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n            this.myScaleIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\n            this.myScaleIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n            this.myScaleDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\n            this.myScaleDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\n            this.myScaleDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n            this.myScaleDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\n            this.myScaleDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n        }\n    }\n\n    _setStepTransforms() {\n        //Position\n        this.myPositionStepPanel.setTranslationLocal(this._mySetup.myStepPanelPosition);\n        this.myPositionStepText.scale(this._mySetup.myStepTextScale);\n        this.myPositionStepCursorTarget.setTranslationLocal(this._mySetup.myStepCursorTargetPosition);\n\n        //Increase/Decrease\n        this.myPositionStepIncreaseButtonPanel.setTranslationLocal(this._mySetup.myRightSideButtonPosition);\n        this.myPositionStepIncreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myPositionStepIncreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myPositionStepIncreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myPositionStepIncreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        this.myPositionStepDecreaseButtonPanel.setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\n        this.myPositionStepDecreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myPositionStepDecreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myPositionStepDecreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myPositionStepDecreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        //Rotation\n        this.myRotationStepPanel.setTranslationLocal(this._mySetup.myStepPanelPosition);\n        this.myRotationStepText.scale(this._mySetup.myStepTextScale);\n        this.myRotationStepCursorTarget.setTranslationLocal(this._mySetup.myStepCursorTargetPosition);\n\n        //Increase/Decrease\n        this.myRotationStepIncreaseButtonPanel.setTranslationLocal(this._mySetup.myRightSideButtonPosition);\n        this.myRotationStepIncreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myRotationStepIncreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myRotationStepIncreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myRotationStepIncreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        this.myRotationStepDecreaseButtonPanel.setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\n        this.myRotationStepDecreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myRotationStepDecreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myRotationStepDecreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myRotationStepDecreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        //Scale\n        this.myScaleStepPanel.setTranslationLocal(this._mySetup.myStepPanelPosition);\n        this.myScaleStepText.scale(this._mySetup.myStepTextScale);\n        this.myScaleStepCursorTarget.setTranslationLocal(this._mySetup.myStepCursorTargetPosition);\n\n        //Increase/Decrease\n        this.myScaleStepIncreaseButtonPanel.setTranslationLocal(this._mySetup.myRightSideButtonPosition);\n        this.myScaleStepIncreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myScaleStepIncreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myScaleStepIncreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myScaleStepIncreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n        this.myScaleStepDecreaseButtonPanel.setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\n        this.myScaleStepDecreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\n        this.myScaleStepDecreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\n        this.myScaleStepDecreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\n        this.myScaleStepDecreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\n\n    }\n\n    _setPointerTransform() {\n        this.myPointerCursorTarget.setTranslationLocal(this._mySetup.myPointerCursorTargetPosition);\n    }\n\n    //Components\n    _addComponents() {\n        this.myBackBackgroundComponent = this.myBackBackground.addComponent('mesh');\n        this.myBackBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myBackBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myBackBackgroundComponent.material.color = this._mySetup.myBackBackgroundColor;\n\n        this._addDisplayComponents();\n        this._addStepComponents();\n        this._addPointerComponents();\n    }\n\n    _addDisplayComponents() {\n        this.myVariableLabelTextComponent = this.myVariableLabelText.addComponent('text');\n        this._setupTextComponent(this.myVariableLabelTextComponent);\n        this.myVariableLabelTextComponent.text = \" \";\n\n        this.myVariableLabelCursorTargetComponent = this.myVariableLabelCursorTarget.addComponent('cursor-target');\n        this.myVariableLabelCollisionComponent = this.myVariableLabelCursorTarget.addComponent('collision');\n        this.myVariableLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myVariableLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myVariableLabelCollisionComponent.extents = this._mySetup.myVariableLabelCollisionExtents;\n\n        //Next/Previous\n        this.myNextButtonBackgroundComponent = this.myNextButtonBackground.addComponent('mesh');\n        this.myNextButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myNextButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myNextButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myNextButtonTextComponent = this.myNextButtonText.addComponent('text');\n        this._setupTextComponent(this.myNextButtonTextComponent);\n        this.myNextButtonTextComponent.text = this._mySetup.myNextButtonText;\n\n        this.myNextButtonCursorTargetComponent = this.myNextButtonCursorTarget.addComponent('cursor-target');\n        this.myNextButtonCollisionComponent = this.myNextButtonCursorTarget.addComponent('collision');\n        this.myNextButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myNextButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myNextButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        this.myPreviousButtonBackgroundComponent = this.myPreviousButtonBackground.addComponent('mesh');\n        this.myPreviousButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myPreviousButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myPreviousButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myPreviousButtonTextComponent = this.myPreviousButtonText.addComponent('text');\n        this._setupTextComponent(this.myPreviousButtonTextComponent);\n        this.myPreviousButtonTextComponent.text = this._mySetup.myPreviousButtonText;\n\n        this.myPreviousButtonCursorTargetComponent = this.myPreviousButtonCursorTarget.addComponent('cursor-target');\n        this.myPreviousButtonCollisionComponent = this.myPreviousButtonCursorTarget.addComponent('collision');\n        this.myPreviousButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPreviousButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPreviousButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        //Position\n        this.myPositionLabelTextComponent = this.myPositionLabelText.addComponent('text');\n        this._setupTextComponent(this.myPositionLabelTextComponent);\n        this.myPositionLabelTextComponent.text = this._mySetup.myPositionText;\n\n        this.myPositionLabelCursorTargetComponent = this.myPositionLabelCursorTarget.addComponent('cursor-target');\n        this.myPositionLabelCollisionComponent = this.myPositionLabelCursorTarget.addComponent('collision');\n        this.myPositionLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPositionLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPositionLabelCollisionComponent.extents = this._mySetup.myComponentLabelCollisionExtents;\n\n        this.myPositionTextComponents = [];\n        this.myPositionCursorTargetComponents = [];\n        this.myPositionCollisionComponents = [];\n\n        this.myPositionIncreaseButtonBackgroundComponents = [];\n        this.myPositionIncreaseButtonTextComponents = [];\n        this.myPositionIncreaseButtonCursorTargetComponents = [];\n        this.myPositionIncreaseButtonCollisionComponents = [];\n\n        this.myPositionDecreaseButtonBackgroundComponents = [];\n        this.myPositionDecreaseButtonTextComponents = [];\n        this.myPositionDecreaseButtonCursorTargetComponents = [];\n        this.myPositionDecreaseButtonCollisionComponents = [];\n\n        for (let i = 0; i < 3; i++) {\n            this.myPositionTextComponents[i] = this.myPositionTexts[i].addComponent('text');\n            this._setupTextComponent(this.myPositionTextComponents[i]);\n            this.myPositionTextComponents[i].text = \" \";\n\n            this.myPositionCursorTargetComponents[i] = this.myPositionCursorTargets[i].addComponent('cursor-target');\n            this.myPositionCollisionComponents[i] = this.myPositionCursorTargets[i].addComponent('collision');\n            this.myPositionCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myPositionCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myPositionCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\n\n            //Increase/Decrease\n            this.myPositionIncreaseButtonBackgroundComponents[i] = this.myPositionIncreaseButtonBackgrounds[i].addComponent('mesh');\n            this.myPositionIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\n            this.myPositionIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            this.myPositionIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\n\n            this.myPositionIncreaseButtonTextComponents[i] = this.myPositionIncreaseButtonTexts[i].addComponent('text');\n            this._setupTextComponent(this.myPositionIncreaseButtonTextComponents[i]);\n            this.myPositionIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\n\n            this.myPositionIncreaseButtonCursorTargetComponents[i] = this.myPositionIncreaseButtonCursorTargets[i].addComponent('cursor-target');\n            this.myPositionIncreaseButtonCollisionComponents[i] = this.myPositionIncreaseButtonCursorTargets[i].addComponent('collision');\n            this.myPositionIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myPositionIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myPositionIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\n\n            this.myPositionDecreaseButtonBackgroundComponents[i] = this.myPositionDecreaseButtonBackgrounds[i].addComponent('mesh');\n            this.myPositionDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\n            this.myPositionDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            this.myPositionDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\n\n            this.myPositionDecreaseButtonTextComponents[i] = this.myPositionDecreaseButtonTexts[i].addComponent('text');\n            this._setupTextComponent(this.myPositionDecreaseButtonTextComponents[i]);\n            this.myPositionDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\n\n            this.myPositionDecreaseButtonCursorTargetComponents[i] = this.myPositionDecreaseButtonCursorTargets[i].addComponent('cursor-target');\n            this.myPositionDecreaseButtonCollisionComponents[i] = this.myPositionDecreaseButtonCursorTargets[i].addComponent('collision');\n            this.myPositionDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myPositionDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myPositionDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\n        }\n\n        //Rotation\n        this.myRotationLabelTextComponent = this.myRotationLabelText.addComponent('text');\n        this._setupTextComponent(this.myRotationLabelTextComponent);\n        this.myRotationLabelTextComponent.text = this._mySetup.myRotationText;\n\n        this.myRotationLabelCursorTargetComponent = this.myRotationLabelCursorTarget.addComponent('cursor-target');\n        this.myRotationLabelCollisionComponent = this.myRotationLabelCursorTarget.addComponent('collision');\n        this.myRotationLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myRotationLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myRotationLabelCollisionComponent.extents = this._mySetup.myComponentLabelCollisionExtents;\n\n        this.myRotationTextComponents = [];\n        this.myRotationCursorTargetComponents = [];\n        this.myRotationCollisionComponents = [];\n\n        this.myRotationIncreaseButtonBackgroundComponents = [];\n        this.myRotationIncreaseButtonTextComponents = [];\n        this.myRotationIncreaseButtonCursorTargetComponents = [];\n        this.myRotationIncreaseButtonCollisionComponents = [];\n\n        this.myRotationDecreaseButtonBackgroundComponents = [];\n        this.myRotationDecreaseButtonTextComponents = [];\n        this.myRotationDecreaseButtonCursorTargetComponents = [];\n        this.myRotationDecreaseButtonCollisionComponents = [];\n\n        for (let i = 0; i < 3; i++) {\n            this.myRotationTextComponents[i] = this.myRotationTexts[i].addComponent('text');\n            this._setupTextComponent(this.myRotationTextComponents[i]);\n            this.myRotationTextComponents[i].text = \" \";\n\n            this.myRotationCursorTargetComponents[i] = this.myRotationCursorTargets[i].addComponent('cursor-target');\n            this.myRotationCollisionComponents[i] = this.myRotationCursorTargets[i].addComponent('collision');\n            this.myRotationCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myRotationCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myRotationCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\n\n            //Increase/Decrease\n            this.myRotationIncreaseButtonBackgroundComponents[i] = this.myRotationIncreaseButtonBackgrounds[i].addComponent('mesh');\n            this.myRotationIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\n            this.myRotationIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            this.myRotationIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\n\n            this.myRotationIncreaseButtonTextComponents[i] = this.myRotationIncreaseButtonTexts[i].addComponent('text');\n            this._setupTextComponent(this.myRotationIncreaseButtonTextComponents[i]);\n            this.myRotationIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\n\n            this.myRotationIncreaseButtonCursorTargetComponents[i] = this.myRotationIncreaseButtonCursorTargets[i].addComponent('cursor-target');\n            this.myRotationIncreaseButtonCollisionComponents[i] = this.myRotationIncreaseButtonCursorTargets[i].addComponent('collision');\n            this.myRotationIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myRotationIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myRotationIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\n\n            this.myRotationDecreaseButtonBackgroundComponents[i] = this.myRotationDecreaseButtonBackgrounds[i].addComponent('mesh');\n            this.myRotationDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\n            this.myRotationDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            this.myRotationDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\n\n            this.myRotationDecreaseButtonTextComponents[i] = this.myRotationDecreaseButtonTexts[i].addComponent('text');\n            this._setupTextComponent(this.myRotationDecreaseButtonTextComponents[i]);\n            this.myRotationDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\n\n            this.myRotationDecreaseButtonCursorTargetComponents[i] = this.myRotationDecreaseButtonCursorTargets[i].addComponent('cursor-target');\n            this.myRotationDecreaseButtonCollisionComponents[i] = this.myRotationDecreaseButtonCursorTargets[i].addComponent('collision');\n            this.myRotationDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myRotationDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myRotationDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\n        }\n\n        //Scale\n        this.myScaleLabelTextComponent = this.myScaleLabelText.addComponent('text');\n        this._setupTextComponent(this.myScaleLabelTextComponent);\n        this.myScaleLabelTextComponent.text = this._mySetup.myScaleText;\n\n        this.myScaleLabelCursorTargetComponent = this.myScaleLabelCursorTarget.addComponent('cursor-target');\n        this.myScaleLabelCollisionComponent = this.myScaleLabelCursorTarget.addComponent('collision');\n        this.myScaleLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myScaleLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myScaleLabelCollisionComponent.extents = this._mySetup.myComponentLabelCollisionExtents;\n\n        this.myScaleTextComponents = [];\n        this.myScaleCursorTargetComponents = [];\n        this.myScaleCollisionComponents = [];\n\n        this.myScaleIncreaseButtonBackgroundComponents = [];\n        this.myScaleIncreaseButtonTextComponents = [];\n        this.myScaleIncreaseButtonCursorTargetComponents = [];\n        this.myScaleIncreaseButtonCollisionComponents = [];\n\n        this.myScaleDecreaseButtonBackgroundComponents = [];\n        this.myScaleDecreaseButtonTextComponents = [];\n        this.myScaleDecreaseButtonCursorTargetComponents = [];\n        this.myScaleDecreaseButtonCollisionComponents = [];\n\n        for (let i = 0; i < 3; i++) {\n            this.myScaleTextComponents[i] = this.myScaleTexts[i].addComponent('text');\n            this._setupTextComponent(this.myScaleTextComponents[i]);\n            this.myScaleTextComponents[i].text = \" \";\n\n            this.myScaleCursorTargetComponents[i] = this.myScaleCursorTargets[i].addComponent('cursor-target');\n            this.myScaleCollisionComponents[i] = this.myScaleCursorTargets[i].addComponent('collision');\n            this.myScaleCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myScaleCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myScaleCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\n\n            //Increase/Decrease\n            this.myScaleIncreaseButtonBackgroundComponents[i] = this.myScaleIncreaseButtonBackgrounds[i].addComponent('mesh');\n            this.myScaleIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\n            this.myScaleIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            this.myScaleIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\n\n            this.myScaleIncreaseButtonTextComponents[i] = this.myScaleIncreaseButtonTexts[i].addComponent('text');\n            this._setupTextComponent(this.myScaleIncreaseButtonTextComponents[i]);\n            this.myScaleIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\n\n            this.myScaleIncreaseButtonCursorTargetComponents[i] = this.myScaleIncreaseButtonCursorTargets[i].addComponent('cursor-target');\n            this.myScaleIncreaseButtonCollisionComponents[i] = this.myScaleIncreaseButtonCursorTargets[i].addComponent('collision');\n            this.myScaleIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myScaleIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myScaleIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\n\n            this.myScaleDecreaseButtonBackgroundComponents[i] = this.myScaleDecreaseButtonBackgrounds[i].addComponent('mesh');\n            this.myScaleDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\n            this.myScaleDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\n            this.myScaleDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\n\n            this.myScaleDecreaseButtonTextComponents[i] = this.myScaleDecreaseButtonTexts[i].addComponent('text');\n            this._setupTextComponent(this.myScaleDecreaseButtonTextComponents[i]);\n            this.myScaleDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\n\n            this.myScaleDecreaseButtonCursorTargetComponents[i] = this.myScaleDecreaseButtonCursorTargets[i].addComponent('cursor-target');\n            this.myScaleDecreaseButtonCollisionComponents[i] = this.myScaleDecreaseButtonCursorTargets[i].addComponent('collision');\n            this.myScaleDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\n            this.myScaleDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n            this.myScaleDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\n        }\n    }\n\n    _addStepComponents() {\n        //Position\n        this.myPositionStepTextComponent = this.myPositionStepText.addComponent('text');\n        this._setupTextComponent(this.myPositionStepTextComponent);\n        this.myPositionStepTextComponent.text = \" \";\n\n        this.myPositionStepCursorTargetComponent = this.myPositionStepCursorTarget.addComponent('cursor-target');\n        this.myPositionStepCollisionComponent = this.myPositionStepCursorTarget.addComponent('collision');\n        this.myPositionStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPositionStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPositionStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\n\n        //Increase/Decrease\n        this.myPositionStepIncreaseButtonBackgroundComponent = this.myPositionStepIncreaseButtonBackground.addComponent('mesh');\n        this.myPositionStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myPositionStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myPositionStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myPositionStepIncreaseButtonTextComponent = this.myPositionStepIncreaseButtonText.addComponent('text');\n        this._setupTextComponent(this.myPositionStepIncreaseButtonTextComponent);\n        this.myPositionStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\n\n        this.myPositionStepIncreaseButtonCursorTargetComponent = this.myPositionStepIncreaseButtonCursorTarget.addComponent('cursor-target');\n        this.myPositionStepIncreaseButtonCollisionComponent = this.myPositionStepIncreaseButtonCursorTarget.addComponent('collision');\n        this.myPositionStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPositionStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPositionStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        this.myPositionStepDecreaseButtonBackgroundComponent = this.myPositionStepDecreaseButtonBackground.addComponent('mesh');\n        this.myPositionStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myPositionStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myPositionStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myPositionStepDecreaseButtonTextComponent = this.myPositionStepDecreaseButtonText.addComponent('text');\n        this._setupTextComponent(this.myPositionStepDecreaseButtonTextComponent);\n        this.myPositionStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\n\n        this.myPositionStepDecreaseButtonCursorTargetComponent = this.myPositionStepDecreaseButtonCursorTarget.addComponent('cursor-target');\n        this.myPositionStepDecreaseButtonCollisionComponent = this.myPositionStepDecreaseButtonCursorTarget.addComponent('collision');\n        this.myPositionStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPositionStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPositionStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        //Rotation\n        this.myRotationStepTextComponent = this.myRotationStepText.addComponent('text');\n        this._setupTextComponent(this.myRotationStepTextComponent);\n        this.myRotationStepTextComponent.text = \" \";\n\n        this.myRotationStepCursorTargetComponent = this.myRotationStepCursorTarget.addComponent('cursor-target');\n        this.myRotationStepCollisionComponent = this.myRotationStepCursorTarget.addComponent('collision');\n        this.myRotationStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myRotationStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myRotationStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\n\n        //Increase/Decrease\n        this.myRotationStepIncreaseButtonBackgroundComponent = this.myRotationStepIncreaseButtonBackground.addComponent('mesh');\n        this.myRotationStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myRotationStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myRotationStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myRotationStepIncreaseButtonTextComponent = this.myRotationStepIncreaseButtonText.addComponent('text');\n        this._setupTextComponent(this.myRotationStepIncreaseButtonTextComponent);\n        this.myRotationStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\n\n        this.myRotationStepIncreaseButtonCursorTargetComponent = this.myRotationStepIncreaseButtonCursorTarget.addComponent('cursor-target');\n        this.myRotationStepIncreaseButtonCollisionComponent = this.myRotationStepIncreaseButtonCursorTarget.addComponent('collision');\n        this.myRotationStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myRotationStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myRotationStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        this.myRotationStepDecreaseButtonBackgroundComponent = this.myRotationStepDecreaseButtonBackground.addComponent('mesh');\n        this.myRotationStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myRotationStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myRotationStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myRotationStepDecreaseButtonTextComponent = this.myRotationStepDecreaseButtonText.addComponent('text');\n        this._setupTextComponent(this.myRotationStepDecreaseButtonTextComponent);\n        this.myRotationStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\n\n        this.myRotationStepDecreaseButtonCursorTargetComponent = this.myRotationStepDecreaseButtonCursorTarget.addComponent('cursor-target');\n        this.myRotationStepDecreaseButtonCollisionComponent = this.myRotationStepDecreaseButtonCursorTarget.addComponent('collision');\n        this.myRotationStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myRotationStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myRotationStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        //Scale\n        this.myScaleStepTextComponent = this.myScaleStepText.addComponent('text');\n        this._setupTextComponent(this.myScaleStepTextComponent);\n        this.myScaleStepTextComponent.text = \" \";\n\n        this.myScaleStepCursorTargetComponent = this.myScaleStepCursorTarget.addComponent('cursor-target');\n        this.myScaleStepCollisionComponent = this.myScaleStepCursorTarget.addComponent('collision');\n        this.myScaleStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myScaleStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myScaleStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\n\n        //Increase/Decrease\n        this.myScaleStepIncreaseButtonBackgroundComponent = this.myScaleStepIncreaseButtonBackground.addComponent('mesh');\n        this.myScaleStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myScaleStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myScaleStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myScaleStepIncreaseButtonTextComponent = this.myScaleStepIncreaseButtonText.addComponent('text');\n        this._setupTextComponent(this.myScaleStepIncreaseButtonTextComponent);\n        this.myScaleStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\n\n        this.myScaleStepIncreaseButtonCursorTargetComponent = this.myScaleStepIncreaseButtonCursorTarget.addComponent('cursor-target');\n        this.myScaleStepIncreaseButtonCollisionComponent = this.myScaleStepIncreaseButtonCursorTarget.addComponent('collision');\n        this.myScaleStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myScaleStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myScaleStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n\n        this.myScaleStepDecreaseButtonBackgroundComponent = this.myScaleStepDecreaseButtonBackground.addComponent('mesh');\n        this.myScaleStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\n        this.myScaleStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\n        this.myScaleStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\n\n        this.myScaleStepDecreaseButtonTextComponent = this.myScaleStepDecreaseButtonText.addComponent('text');\n        this._setupTextComponent(this.myScaleStepDecreaseButtonTextComponent);\n        this.myScaleStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\n\n        this.myScaleStepDecreaseButtonCursorTargetComponent = this.myScaleStepDecreaseButtonCursorTarget.addComponent('cursor-target');\n        this.myScaleStepDecreaseButtonCollisionComponent = this.myScaleStepDecreaseButtonCursorTarget.addComponent('collision');\n        this.myScaleStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myScaleStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myScaleStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\n    }\n\n    _addPointerComponents() {\n        this.myPointerCollisionComponent = this.myPointerCursorTarget.addComponent('collision');\n        this.myPointerCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\n        this.myPointerCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\n        this.myPointerCollisionComponent.extents = this._mySetup.myPointerCollisionExtents;\n    }\n\n    _setupTextComponent(textComponent) {\n        textComponent.alignment = this._mySetup.myTextAlignment;\n        textComponent.justification = this._mySetup.myTextJustification;\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\n        textComponent.material.outlineRange = this._mySetup.myTextOutlineRange;\n        textComponent.material.color = this._mySetup.myTextColor;\n        textComponent.material.outlineColor = this._mySetup.myTextOutlineColor;\n        textComponent.text = \"\";\n    }\n};",
        "PP.EasyTuneWidget = class EasyTuneWidget {\n\n    constructor() {\n        this._myIsStarted = false;\n        this._myStartVariable = null;\n\n        this._myWidgetFrame = new PP.WidgetFrame(\"E\", 1);\n        this._myWidgetFrame.registerWidgetVisibleChangedEventListener(this, this._widgetVisibleChanged.bind(this));\n\n        this._mySetup = new PP.EasyTuneWidgetSetup();\n        this._myAdditionalSetup = null;\n\n        this._myWidgets = [];\n\n        this._myEasyTuneVariables = null;\n        this._myEasyTuneLastSize = 0;\n        this._myVariableNames = null;\n\n        this._myCurrentWidget = null;\n        this._myCurrentVariable = null;\n\n        this._myScrollVariableTimer = 0;\n\n        this._myGamepad = null;\n\n        this._myRefreshVariablesTimer = 0;\n\n        this._myDirty = false;\n    }\n\n    setActiveVariable(variableName) {\n        if (!this._myIsStarted) {\n            this._myStartVariable = variableName;\n        } else if (this._myEasyTuneVariables.has(variableName)) {\n            this._myCurrentVariable = this._myEasyTuneVariables.get(variableName);\n            this._selectCurrentWidget();\n        } else {\n            console.log(\"Can't set easy tune active variable\");\n        }\n    }\n\n    refresh() {\n        if (this._myWidgetFrame.myIsWidgetVisible) {\n            this._myDirty = true;\n        }\n    }\n\n    start(parentObject, additionalSetup, easyTuneVariables) {\n        this._myRightGamepad = PP.myRightGamepad; //@EDIT get right gamepad here based on how you store it in your game\n        this._myLeftGamepad = PP.myLeftGamepad; //@EDIT get left gamepad here based on how you store it in your game\n        if (this._mySetup.myGamepadHandedness == PP.ToolHandedness.RIGHT) {\n            this._myGamepad = this._myRightGamepad;\n        } else if (this._mySetup.myGamepadHandedness == PP.ToolHandedness.LEFT) {\n            this._myGamepad = this._myLeftGamepad;\n        }\n\n        this._myIsStarted = true;\n\n        this._myAdditionalSetup = additionalSetup;\n\n        this._myWidgetFrame.start(parentObject, additionalSetup);\n\n        this._myEasyTuneVariables = easyTuneVariables;\n        this._myEasyTuneLastSize = this._myEasyTuneVariables.size;\n        this._myVariableNames = Array.from(this._myEasyTuneVariables.keys());\n\n        if (this._myEasyTuneVariables.size > 0) {\n            this._myCurrentVariable = this._myEasyTuneVariables.get(this._myVariableNames[0]);\n        }\n\n        if (this._myStartVariable) {\n            if (this._myEasyTuneVariables.has(this._myStartVariable)) {\n                this._myCurrentVariable = this._myEasyTuneVariables.get(this._myStartVariable);\n            } else {\n                console.log(\"Can't set easy tune active variable\");\n            }\n        }\n\n        this._initializeWidgets();\n    }\n\n    update(dt) {\n        this._myWidgetFrame.update(dt);\n\n        if (this._myEasyTuneVariables.size != this._myEasyTuneLastSize || this._myDirty) {\n            this._refreshEasyTuneVariables();\n        }\n\n        if (this._myWidgetFrame.myIsWidgetVisible && this._myEasyTuneVariables.size > 0) {\n            if (this._mySetup.myRefreshVariablesDelay != null) {\n                this._myRefreshVariablesTimer += dt;\n                if (this._myRefreshVariablesTimer > this._mySetup.myRefreshVariablesDelay) {\n                    this._myRefreshVariablesTimer = 0;\n                    this._refreshEasyTuneVariables();\n                }\n            }\n\n            if (this._myCurrentWidget) {\n                this._myCurrentWidget.update(dt);\n            }\n\n            if (this._myAdditionalSetup.myEnableChangeVariableShortcut) {\n                this._updateGamepadScrollVariable(dt);\n            }\n        }\n\n        this._updateGamepadWidgetVisibility();\n\n        this._updateActiveVariable();\n    }\n\n    _initializeWidgets() {\n        this._myWidgets[PP.EasyTuneVariableType.NONE] = new PP.EasyTuneNoneWidget();\n        this._myWidgets[PP.EasyTuneVariableType.NUMBER] = new PP.EasyTuneNumberWidget(this._myGamepad);\n        this._myWidgets[PP.EasyTuneVariableType.BOOL] = new PP.EasyTuneBoolWidget(this._myGamepad);\n        this._myWidgets[PP.EasyTuneVariableType.EASY_TRANSFORM] = new PP.EasyTuneSimpleTransformWidget(this._myGamepad);\n\n        for (let item of this._myWidgets) {\n            item.start(this._myWidgetFrame.getWidgetObject(), this._myAdditionalSetup);\n            item.setVisible(false);\n            item.registerScrollVariableRequestEventListener(this, this._scrollVariable.bind(this));\n        }\n\n        this._selectCurrentWidget();\n    }\n\n    _selectCurrentWidget() {\n        if (this._myEasyTuneVariables.size <= 0) {\n            return;\n        }\n\n        if (this._myCurrentWidget) {\n            this._myCurrentWidget.setVisible(false);\n        }\n\n        if (this._myCurrentVariable.myType in this._myWidgets) {\n            this._myCurrentWidget = this._myWidgets[this._myCurrentVariable.myType];\n            this._myCurrentWidget.setEasyTuneVariable(this._myCurrentVariable, this._createIndexString());\n            this._myCurrentWidget.setVisible(this._myWidgetFrame.myIsWidgetVisible);\n        } else {\n            this._myCurrentWidget = this._myWidgets[PP.EasyTuneVariableType.NONE];\n            this._myCurrentWidget.setEasyTuneVariable(this._myCurrentVariable, this._createIndexString());\n            this._myCurrentWidget.setVisible(this._myWidgetFrame.myIsWidgetVisible);\n        }\n    }\n\n    _refreshEasyTuneVariables() {\n        this._myVariableNames = Array.from(this._myEasyTuneVariables.keys());\n        this._myEasyTuneLastSize = this._myEasyTuneVariables.size;\n\n        if (this._myEasyTuneVariables.size > 0) {\n            if (this._myCurrentVariable && this._myEasyTuneVariables.has(this._myCurrentVariable.myName)) {\n                this._myCurrentVariable = this._myEasyTuneVariables.get(this._myCurrentVariable.myName);\n            } else {\n                this._myCurrentVariable = this._myEasyTuneVariables.get(this._myVariableNames[0]);\n            }\n\n            this._selectCurrentWidget();\n        } else {\n            this._myCurrentVariable = null;\n            if (this._myCurrentWidget) {\n                this._myCurrentWidget.setVisible(false);\n                this._myCurrentWidget = null;\n            }\n        }\n\n        this._myDirty = false;\n    }\n\n    _updateGamepadWidgetVisibility() {\n        if (this._myGamepad) {\n            if ((this._myGamepad.getButtonInfo(PP.ButtonType.BOTTOM_BUTTON).isPressStart() && this._myGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).myIsPressed) ||\n                (this._myGamepad.getButtonInfo(PP.ButtonType.TOP_BUTTON).isPressStart() && this._myGamepad.getButtonInfo(PP.ButtonType.BOTTOM_BUTTON).myIsPressed)) {\n                this._toggleVisibility();\n            }\n        }\n    }\n\n    _toggleVisibility() {\n        this._myWidgetFrame.toggleVisibility();\n    }\n\n    _widgetVisibleChanged(visible) {\n        if (this._myCurrentWidget) {\n            if (this._myEasyTuneVariables.size > 0) {\n                this._myCurrentWidget.setVisible(visible);\n            } else {\n                this._myCurrentWidget.setVisible(false);\n            }\n        }\n\n        if (visible) {\n            this._refreshEasyTuneVariables();\n        }\n    }\n\n    _updateGamepadScrollVariable(dt) {\n        if (this._myGamepad && (!this._mySetup.myScrollVariableButtonType || this._myGamepad.getButtonInfo(this._mySetup.myScrollVariableButtonType).myIsPressed)) {\n            let x = this._myGamepad.getAxesInfo().myAxes[0];\n            let y = this._myGamepad.getAxesInfo().myAxes[1];\n            if (Math.abs(x) > this._mySetup.myScrollVariableMinXThreshold && Math.abs(y) < this._mySetup.myScrollVariableMaxYThreshold) {\n                this._myScrollVariableTimer += dt;\n                while (this._myScrollVariableTimer > this._mySetup.myScrollVariableDelay) {\n                    this._myScrollVariableTimer -= this._mySetup.myScrollVariableDelay;\n                    this._scrollVariable(Math.sign(x));\n                }\n            } else {\n                this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\n            }\n        } else {\n            this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\n        }\n    }\n\n    _scrollVariable(amount) {\n        if (this._myEasyTuneVariables.size <= 0) {\n            return;\n        }\n\n        let variableIndex = this._getVariableIndex(this._myCurrentVariable);\n        if (variableIndex >= 0) {\n            let newIndex = (((variableIndex + amount) % this._myVariableNames.length) + this._myVariableNames.length) % this._myVariableNames.length; //manage negative numbers\n            if (this._myEasyTuneVariables.has(this._myVariableNames[newIndex])) {\n                this._myCurrentVariable = this._myEasyTuneVariables.get(this._myVariableNames[newIndex]);\n                this._selectCurrentWidget();\n            } else {\n                this._refreshEasyTuneVariables();\n            }\n        } else {\n            this._refreshEasyTuneVariables();\n        }\n    }\n\n    _createIndexString() {\n        let indexString = \" (\";\n        let index = (this._getVariableIndex(this._myCurrentVariable) + 1).toString();\n        let length = (this._myEasyTuneVariables.size).toString();\n        while (index.length < length.length) {\n            index = \"0\".concat(index);\n        }\n\n        indexString = indexString.concat(index).concat(\" - \").concat(length).concat(\")\");\n\n        return indexString;\n    }\n\n    _getVariableIndex(variable) {\n        let variableIndex = this._myVariableNames.indexOf(variable.myName);\n        return variableIndex;\n    }\n\n    _updateActiveVariable() {\n        this._myEasyTuneVariables.forEach(function (value) {\n            value.myIsActive = false;\n        });\n\n        if (this._myWidgetFrame.myIsWidgetVisible && this._myCurrentVariable) {\n            this._myCurrentVariable.myIsActive = true;\n        }\n    }\n};",
        "PP.EasyTuneWidgetSetup = class EasyTuneWidgetSetup {\n\n    constructor() {\n        this._initializeRuntimeSetup();\n    }\n\n    _initializeRuntimeSetup() {\n        this.myGamepadHandedness = PP.ToolHandedness.RIGHT;\n\n        this.myScrollVariableDelay = 0.5;\n        this.myScrollVariableMinXThreshold = 0.6;\n        this.myScrollVariableMaxYThreshold = 0.25;\n        this.myScrollVariableButtonType = null;\n\n        this.myRefreshVariablesDelay = null;\n    }\n};",
        "WL.registerComponent(\"pp-debug-axes\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myDebugAxes = new PP.DebugAxes();\r\n    },\r\n    update: function (dt) {\r\n        this._myDebugAxes.setTransform(this.object.transformWorld);\r\n    }\r\n});",
        "class IAmHereWaveSetup {\r\n    constructor() {\r\n        this.myClonesCount = new RangeValueOverTime([1, 1], [1, 1], 0, 0, true);\r\n        this.mySpawnConeAngle = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.myMinAngleBetweenClones = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.myWaveStartAngle = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.myTimeBetweenClones = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.mySameTimeBetweenClones = new RangeValueOverTime([-1, -1], [-1, -1], 0, 0, false); // >= 0 means true\r\n        this.myFirstCloneInTheMiddle = true;\r\n        this.myDoneDelay = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.myTimeBeforeStart = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n\r\n        this.myDiscardOutsideValidAngle = new RangeValueOverTime([1, 1], [1, 1], 0, 0, false); // >= 0 means true\r\n\r\n        this.myRefDirection = null;\r\n    }\r\n\r\n    createWave(ventRuntimeSetup, timeElapsed, refDirection = null) {\r\n        return new IAmHereWave(ventRuntimeSetup, this, timeElapsed, refDirection);\r\n    }\r\n\r\n    getAverageClonesCount(timeElapsed) {\r\n        return this.myClonesCount.getAverage(timeElapsed);\r\n    }\r\n\r\n    getPrecomputed(timeElapsed) {\r\n        let setup = new IAmHereWaveSetup();\r\n\r\n        setup.myClonesCount = this.myClonesCount.get(timeElapsed);\r\n        setup.mySpawnConeAngle = this.mySpawnConeAngle.get(timeElapsed);\r\n        setup.myMinAngleBetweenClones = this.myMinAngleBetweenClones.get(timeElapsed);\r\n        setup.myWaveStartAngle = this.myWaveStartAngle.get(timeElapsed);\r\n        setup.mySameTimeBetweenClones = this.mySameTimeBetweenClones.get(timeElapsed);\r\n        if (setup.mySameTimeBetweenClones >= 0) {\r\n            setup.myTimeBetweenClones = this.myTimeBetweenClones.get(timeElapsed);\r\n        } else {\r\n            setup.myTimeBetweenClones = this.myTimeBetweenClones;\r\n        }\r\n\r\n        setup.myFirstCloneInTheMiddle = this.myFirstCloneInTheMiddle;\r\n        setup.myDoneDelay = this.myDoneDelay.get(timeElapsed);\r\n        setup.myTimeBeforeStart = this.myTimeBeforeStart.get(timeElapsed);\r\n\r\n        setup.myDiscardOutsideValidAngle = this.myDiscardOutsideValidAngle.get(timeElapsed);\r\n\r\n        setup.myRefDirection = this.myRefDirection;\r\n\r\n        return setup;\r\n    }\r\n}\r\n\r\nclass IAmHereWave {\r\n    constructor(ventRuntimeSetup, waveSetup, timeElapsed, refDirection) {\r\n        this._myGameTimeElapsed = timeElapsed;\r\n        this._myWaveSetup = waveSetup;\r\n        this._myVentRuntimeSetup = ventRuntimeSetup;\r\n\r\n        this._myTotalClonesCount = this._myWaveSetup.myClonesCount.get(timeElapsed);\r\n        this._myClonesCount = this._myTotalClonesCount;\r\n        this._mySpawnConeAngle = this._myWaveSetup.mySpawnConeAngle.get(timeElapsed);\r\n        this._myMinAngleBetweenClones = this._myWaveSetup.myMinAngleBetweenClones.get(timeElapsed);\r\n        this._myPreviousAngle = 0;\r\n\r\n        this._mySameTimeBetweenClones = waveSetup.mySameTimeBetweenClones.get(timeElapsed) >= 0;\r\n\r\n        this._myDiscardOutsideValidAngle = waveSetup.myDiscardOutsideValidAngle.get(timeElapsed) >= 0;\r\n\r\n        if (refDirection == null) {\r\n            this._myRefDirectionParams = Global.myPlayerForward.pp_clone();\r\n        } else {\r\n            this._myRefDirectionParams = refDirection.pp_clone();\r\n        }\r\n\r\n        let spawnTimeMultiplier = this._myVentRuntimeSetup.myVentMultipliers.mySpawnTimeMultiplier.get(this._myGameTimeElapsed);\r\n        this._myTimeBetweenClones = this._myWaveSetup.myTimeBetweenClones.get(this._myGameTimeElapsed) * spawnTimeMultiplier;\r\n\r\n        this._mySpawnTimer = new PP.Timer(this._myWaveSetup.myTimeBeforeStart.get(this._myGameTimeElapsed) * spawnTimeMultiplier);\r\n        let doneTimeMultiplier = this._myVentRuntimeSetup.myVentMultipliers.myDoneTimeMultiplier.get(this._myGameTimeElapsed);\r\n        this._myDoneDelayTimer = new PP.Timer(this._myWaveSetup.myDoneDelay.get(this._myGameTimeElapsed) * doneTimeMultiplier, false);\r\n\r\n        this._myFirst = true;\r\n        this._myLastSign = null;\r\n\r\n        this._myOneCloneSetupValid = false;\r\n        this._myLastValidSpawnTimer = this._mySpawnTimer.getDuration();\r\n\r\n        this._myFirstUpdate = true;\r\n\r\n        this._myDuration = 0;\r\n        this._myActualClonesCount = 0;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.isDone()) {\r\n            return [];\r\n        }\r\n\r\n        this._myDuration += dt;\r\n\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            this._computeWaveStartDirection(this._myRefDirectionParams);\r\n        }\r\n\r\n        let cloneSetups = [];\r\n\r\n        if (this._mySpawnTimer.isRunning()) {\r\n            this._mySpawnTimer.update(dt);\r\n            if (this._mySpawnTimer.isDone()) {\r\n\r\n                if (this._myClonesCount > 0) {\r\n                    cloneSetups = this._createCloneSetups();\r\n\r\n                    if (cloneSetups.length > 0) {\r\n                        this._myClonesCount -= 1;\r\n                    }\r\n\r\n                    cloneSetups.pp_removeAll(element => element == null);\r\n\r\n                    if (cloneSetups.length > 0) {\r\n                        this._myOneCloneSetupValid = true;\r\n                    }\r\n                }\r\n\r\n                if (this._myClonesCount <= 0) {\r\n                    if (this._myOneCloneSetupValid) {\r\n                        if (cloneSetups.length > 0) {\r\n                            this._myDoneDelayTimer.start();\r\n                        } else {\r\n                            this._myDoneDelayTimer.start(this._myDoneDelayTimer.getDuration() - this._myLastValidSpawnTimer);\r\n                        }\r\n                    } else {\r\n                        this._myDoneDelayTimer.start(0);\r\n                    }\r\n                } else {\r\n                    if (cloneSetups.length > 0) {\r\n                        this._mySpawnTimer.start(this._myTimeBetweenClones);\r\n                        if (!this._mySameTimeBetweenClones) {\r\n                            let spawnTimeMultiplier = this._myVentRuntimeSetup.myVentMultipliers.mySpawnTimeMultiplier.get(this._myGameTimeElapsed);\r\n                            this._myTimeBetweenClones = this._myWaveSetup.myTimeBetweenClones.get(this._myGameTimeElapsed) * spawnTimeMultiplier;\r\n                        }\r\n                        this._myLastValidSpawnTimer = this._mySpawnTimer.getDuration();\r\n                    } else {\r\n                        this._mySpawnTimer.start(0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myDoneDelayTimer.isRunning()) {\r\n            this._myDoneDelayTimer.update(dt);\r\n        }\r\n\r\n        this._myActualClonesCount += cloneSetups.length;\r\n\r\n        return cloneSetups;\r\n    }\r\n\r\n    getDuration() {\r\n        return this._myDuration;\r\n    }\r\n\r\n    getActualClonesCount() {\r\n        return this._myActualClonesCount;\r\n    }\r\n\r\n    getAverageClonesCount() {\r\n        return this._myTotalClonesCount;\r\n    }\r\n\r\n    isDone() {\r\n        return this._myDoneDelayTimer.isDone();\r\n    }\r\n\r\n    _createCloneSetups() {\r\n        let cloneSetups = [];\r\n\r\n        let direction = null;\r\n\r\n        if (this._myFirst && this._myWaveSetup.myFirstCloneInTheMiddle) {\r\n            this._myFirst = false;\r\n            direction = this._myWaveStartDirection.pp_clone();\r\n            direction.vec3_normalize(direction);\r\n\r\n            this._myPreviousAngle = 0;\r\n        } else {\r\n\r\n            let attempts = 100;\r\n            let angle = 0;\r\n\r\n            let angleValid = false;\r\n            let startDirection = [];\r\n            while (attempts > 0) {\r\n                if (this._myLastSign != null) {\r\n                    angle = Math.pp_random(0, this._mySpawnConeAngle) * -this._myLastSign;\r\n                } else {\r\n                    angle = Math.pp_random(0, this._mySpawnConeAngle) * Math.pp_randomSign();\r\n                }\r\n                if (Math.pp_angleDistance(angle, this._myPreviousAngle) >= this._myMinAngleBetweenClones || this._myFirst) {\r\n                    this._myWaveStartDirection.vec3_rotateAxis(angle, [0, 1, 0], startDirection);\r\n                    angleValid = this._checkDirectionValid(startDirection);\r\n\r\n                    if (angleValid) {\r\n                        attempts = 0;\r\n                    }\r\n                }\r\n                attempts--;\r\n            }\r\n\r\n            if (this._myLastSign == null) {\r\n                this._myLastSign = Math.pp_sign(angle);\r\n            } else {\r\n                this._myLastSign *= -1;\r\n            }\r\n\r\n            direction = this._myWaveStartDirection.pp_clone();\r\n            direction.vec3_rotateAxis(angle, [0, 1, 0], direction);\r\n            direction.vec3_normalize(direction);\r\n            this._myPreviousAngle = angle;\r\n\r\n            this._myFirst = false;\r\n        }\r\n\r\n        let tempCloneSetups = this._createCloneSetupsWithDirection(direction);\r\n\r\n        for (let cloneSetup of tempCloneSetups) {\r\n            if (cloneSetup != null && (!this._myDiscardOutsideValidAngle || this._checkVentAngleValid(cloneSetup.myDirection))) {\r\n                cloneSetups.push(cloneSetup);\r\n            } else {\r\n                cloneSetups.push(null);\r\n            }\r\n        }\r\n\r\n        return cloneSetups;\r\n    }\r\n\r\n    _createCloneSetupsWithDirection(direction) {\r\n        let cloneSetups = [];\r\n\r\n        let cloneSetup = new MrNOTCloneSetup();\r\n        cloneSetup.myDirection = direction;\r\n\r\n        cloneSetups.push(cloneSetup);\r\n\r\n        return cloneSetups;\r\n    }\r\n\r\n    _checkVentAngleValid(direction) {\r\n        let angleValid = false;\r\n        for (let range of this._myVentRuntimeSetup.myValidAngleRanges) {\r\n            let angle = direction.vec3_angleSigned(range[1], [0, 1, 0]);\r\n            if (range[0].isInsideAngle(angle, Global.myVentDuration)) {\r\n                angleValid = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return angleValid;\r\n    }\r\n\r\n    _checkDirectionValid(direction) {\r\n        return this._checkVentAngleValid(direction);\r\n    }\r\n\r\n    _computeWaveStartDirection(refDirection) {\r\n        if (this._myWaveSetup.myRefDirection != null) {\r\n            refDirection = this._myWaveSetup.myRefDirection;\r\n        } else if (refDirection == null) {\r\n            refDirection = Global.myPlayerForward;\r\n        }\r\n\r\n        let attempts = 100;\r\n        let angleValid = false;\r\n\r\n        let flatRefDirection = refDirection.vec3_removeComponentAlongAxis([0, 1, 0]);\r\n\r\n        let startDirection = [];\r\n        while (attempts > 0 && !angleValid) {\r\n            this._myWaveStartAngle = this._myWaveSetup.myWaveStartAngle.get(this._myGameTimeElapsed) * Math.pp_randomSign();\r\n            flatRefDirection.vec3_rotateAxis(this._myWaveStartAngle, [0, 1, 0], startDirection);\r\n            angleValid = this._checkDirectionValid(startDirection);\r\n\r\n            attempts--;\r\n        }\r\n\r\n        this._myWaveStartDirection = flatRefDirection.vec3_rotateAxis(this._myWaveStartAngle, [0, 1, 0]);\r\n        this._myWaveStartDirection.vec3_normalize(this._myWaveStartDirection);\r\n    }\r\n}",
        "class NextWaveChanceBooster {\r\n    constructor() {\r\n        this._myWavesDataMap = new Map();\r\n    }\r\n\r\n    addSetup(id, setup) {\r\n        let data = new NextWaveChanceBoosterData(setup);\r\n        this._myWavesDataMap.set(id, data);\r\n    }\r\n\r\n    nextWaveSelected(selectedID, timeElapsed) {\r\n        let selectedData = this._myWavesDataMap.get(selectedID);\r\n        if (selectedData) {\r\n\r\n            let group = selectedData.getBoostGroup();\r\n            let divider = selectedData.getDivider(timeElapsed);\r\n\r\n            for (let currentID of group) {\r\n                let data = this._myWavesDataMap.get(currentID);\r\n                data.divide(divider);\r\n            }\r\n\r\n            selectedData.reset();\r\n        }\r\n    }\r\n\r\n    getChanceBoost(id, timeElapsed) {\r\n        let data = this._myWavesDataMap.get(id);\r\n        if (data) {\r\n            return data.getChanceBoost(timeElapsed);\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getTimeSinceLastPick(id) {\r\n        let data = this._myWavesDataMap.get(id);\r\n        if (data) {\r\n            return data.getTimeSinceLastPick();\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getBoostGroupName(id) {\r\n        let data = this._myWavesDataMap.get(id);\r\n        if (data) {\r\n            return data.getBoostGroupName();\r\n        }\r\n\r\n        return \"0\";\r\n    }\r\n\r\n    update(dt, timeElapsed) {\r\n        this._myWavesDataMap.forEach(function (data) { data.update(dt, timeElapsed); });\r\n    }\r\n\r\n    reset() {\r\n        this._myWavesDataMap.forEach(function (data) { data.reset(); });\r\n    }\r\n}\r\n\r\nclass NextWaveChanceBoosterData {\r\n    constructor(setup) {\r\n        this._mySetup = setup;\r\n\r\n        this._myTimeSinceLastPick = 0;\r\n        this._myChanceBoost = 0;\r\n    }\r\n\r\n    update(dt, timeElapsed) {\r\n        if (timeElapsed >= this._mySetup.myStartTime) {\r\n            this._myTimeSinceLastPick += dt;\r\n            this._myChanceBoost += dt;\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this._myTimeSinceLastPick = 0;\r\n        this._myChanceBoost = this._mySetup.myBoostValueOnReset;\r\n    }\r\n\r\n    getTimeSinceLastPick() {\r\n        return this._myTimeSinceLastPick;\r\n    }\r\n\r\n    getChanceBoost(timeElapsed) {\r\n        let damping = this._mySetup.myDampingOverLastPick.get(this._myTimeSinceLastPick);\r\n        let chanceBoost = this._myChanceBoost + damping;\r\n\r\n        if (chanceBoost >= 0) {\r\n            chanceBoost = this._myChanceBoost * this._mySetup.myBoostMultiplier.get(timeElapsed);\r\n        }\r\n\r\n        return chanceBoost;\r\n    }\r\n\r\n    getBoostGroup() {\r\n        return this._mySetup.myBoostGroup;\r\n    }\r\n\r\n    getBoostGroupName() {\r\n        return this._mySetup.myBoostGroupName;\r\n    }\r\n\r\n    divide(divider) {\r\n        if (this._myChanceBoost > 0) {\r\n            this._myChanceBoost /= divider;\r\n        }\r\n    }\r\n\r\n    getDivider(timeElapsed) {\r\n        return this._mySetup.myBoostDivider.get(timeElapsed);\r\n    }\r\n}\r\n\r\nclass NextWaveChanceBoosterSetup {\r\n    constructor(startTime, boostGroup, boostGroupName, dampingOverLastPick, boostMultiplier, boostDivider, boostValueOnReset) {\r\n        this.myStartTime = startTime;\r\n        this.myBoostGroup = boostGroup;\r\n        this.myBoostGroupName = boostGroupName;\r\n        this.myDampingOverLastPick = dampingOverLastPick;\r\n        this.myBoostMultiplier = boostMultiplier;\r\n        this.myBoostDivider = boostDivider;\r\n        this.myBoostValueOnReset = boostValueOnReset;\r\n    }\r\n}",
        "class NextWavesSetup {\r\n    constructor() {\r\n        this._myNextWaves = [];\r\n    }\r\n\r\n    addWave(waveID, chance, startTime = 0, endTime = null) {\r\n        let wave = new NextWaveSetup(waveID, chance, startTime, endTime);\r\n        this._myNextWaves.push(wave);\r\n    }\r\n\r\n    removeWave(waveID) {\r\n        this._myNextWaves.pp_removeAll(element => element.myWaveID == waveID);\r\n    }\r\n\r\n    getNextWave(timeElapsed, booster) {\r\n        let validWaves = [];\r\n        let totalChance = 0;\r\n        for (let i = 0; i < this._myNextWaves.length; i++) {\r\n            let waveToCheck = this._myNextWaves[i];\r\n            if (waveToCheck.myStartTime <= timeElapsed && (waveToCheck.myEndTime == null || waveToCheck.myEndTime > timeElapsed)) {\r\n                if (waveToCheck.myChance.get(timeElapsed) >= 1) {\r\n                    validWaves.push(waveToCheck);\r\n\r\n                    let minChance = 10;\r\n                    totalChance += Math.max(minChance, Math.floor(waveToCheck.myChance.get(timeElapsed) + booster.getChanceBoost(waveToCheck.myWaveID, timeElapsed)));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (validWaves.length == 0) {\r\n            validWaves.push(this._myNextWaves[0]);\r\n            console.error(\"No valid next wave found, how?\");\r\n        }\r\n\r\n        let nextWave = null;\r\n        let randomChance = Math.pp_random(0, totalChance);\r\n        let currentChance = 0;\r\n        for (let i = 0; i < validWaves.length; i++) {\r\n            let validWave = validWaves[i];\r\n\r\n            let minChance = 10;\r\n            currentChance += Math.max(minChance, Math.floor(validWave.myChance.get(timeElapsed) + booster.getChanceBoost(validWave.myWaveID, timeElapsed)));\r\n            if (randomChance < currentChance) {\r\n                nextWave = validWave;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (nextWave == null) {\r\n            nextWave = validWaves[validWaves.length - 1];\r\n            console.error(\"No random wave found, how?\");\r\n        }\r\n\r\n        //validWavesGlobal = validWaves;\r\n\r\n        //console.warn(booster.getBoostGroupName(nextWave.myWaveID), \"-\", booster.getChanceBoost(nextWave.myWaveID).toFixed(3), \"-\", booster.getTimeSinceLastPick(nextWave.myWaveID).toFixed(3), \"-\", nextWave.myWaveID);\r\n\r\n        return nextWave.myWaveID;\r\n    }\r\n}\r\n\r\n//var validWavesGlobal = null;\r\n\r\nclass NextWaveSetup {\r\n    constructor(waveID, chance, startTime, endTime) {\r\n        this.myWaveID = waveID;\r\n        this.myChance = chance;\r\n        this.myStartTime = startTime;\r\n        this.myEndTime = endTime;\r\n    }\r\n}",
        "class ValueOverTime {\r\n    constructor(startValue, endValue, startTime, endTime, isInt = false) {\r\n        this._myStartValue = startValue;\r\n        this._myEndValue = endValue;\r\n        this._myStartTime = startTime;\r\n        this._myEndTime = endTime;\r\n        this._myIsInt = isInt;\r\n\r\n        this._myUseFloor = this._myStartValue <= this._myEndValue;\r\n    }\r\n\r\n    get(timeElapsed) {\r\n        let interpolationValue = Math.pp_mapToRange(timeElapsed, this._myStartTime, this._myEndTime, 0, 1);\r\n        let lerpValue = Math.pp_lerp(this._myStartValue, this._myEndValue, interpolationValue);\r\n\r\n        if (this._myIsInt) {\r\n            if (this._myUseFloor) {\r\n                lerpValue = Math.floor(lerpValue);\r\n            } else {\r\n                lerpValue = Math.ceil(lerpValue);\r\n            }\r\n        }\r\n\r\n        return lerpValue;\r\n    }\r\n\r\n    getAverage(timeElapsed) {\r\n        return this.get(timeElapsed);\r\n    }\r\n}\r\n\r\nclass RangeValueOverTime {\r\n    constructor(startRange, endRange, startTime, endTime, isInt = false) {\r\n        this._myRangeStartValue = new ValueOverTime(startRange[0], endRange[0], startTime, endTime, isInt);\r\n        this._myRangeEndValue = new ValueOverTime(startRange[1], endRange[1], startTime, endTime, isInt);\r\n        this._myIsInt = isInt;\r\n    }\r\n\r\n    get(timeElapsed) {\r\n        let startValue = this._myRangeStartValue.get(timeElapsed);\r\n        let endValue = this._myRangeEndValue.get(timeElapsed);\r\n\r\n        let randomValue = null;\r\n\r\n        if (this._myIsInt) {\r\n            randomValue = Math.pp_randomInt(startValue, endValue);\r\n        } else {\r\n            randomValue = Math.pp_random(startValue, endValue);\r\n        }\r\n\r\n        return randomValue;\r\n    }\r\n\r\n    isInside(value, timeElapsed) {\r\n        let startValue = this._myRangeStartValue.get(timeElapsed);\r\n        let endValue = this._myRangeEndValue.get(timeElapsed);\r\n\r\n        let min = Math.min(startValue, endValue);\r\n        let max = Math.max(startValue, endValue);\r\n\r\n        return value >= min && value <= max;\r\n    }\r\n\r\n    isInsideAngle(value, timeElapsed) {\r\n        let startValue = this._myRangeStartValue.get(timeElapsed);\r\n        let endValue = this._myRangeEndValue.get(timeElapsed);\r\n\r\n        return Math.pp_isInsideAngleRange(value, startValue, endValue);\r\n    }\r\n\r\n    getAverage(timeElapsed) {\r\n        let startValue = this._myRangeStartValue.get(timeElapsed);\r\n        let endValue = this._myRangeEndValue.get(timeElapsed);\r\n\r\n        let average = (startValue + endValue) / 2;\r\n        if (this._myIsInt) {\r\n            average = Math.round(average);\r\n        }\r\n\r\n        return average;\r\n    }\r\n}\r\n\r\nclass RangeValue {\r\n    constructor(range, isInt = false) {\r\n        this._myRange = range;\r\n        this._myIsInt = isInt;\r\n    }\r\n\r\n    get() {\r\n        let randomValue = null;\r\n\r\n        if (this._myIsInt) {\r\n            randomValue = Math.pp_randomInt(this._myRange[0], this._myRange[1]);\r\n        } else {\r\n            randomValue = Math.pp_random(this._myRange[0], this._myRange[1]);\r\n        }\r\n\r\n        return randomValue;\r\n    }\r\n\r\n    isInside(value) {\r\n        let min = Math.min(this._myRange[0], this._myRange[1]);\r\n        let max = Math.max(this._myRange[0], this._myRange[1]);\r\n\r\n        return value >= min && value <= max;\r\n    }\r\n\r\n    isInsideAngle(value) {\r\n        return Math.pp_isInsideAngleRange(value, this._myRange[0], this._myRange[1]);\r\n    }\r\n\r\n    getAverage(timeElapsed) {\r\n        let average = (this._myRange[0] + this._myRange[1]) / 2;\r\n        if (this._myIsInt) {\r\n            average = Math.round(average);\r\n        }\r\n\r\n        return average;\r\n    }\r\n}\r\n\r\nNumber.prototype.get = function () {\r\n    return this.valueOf();\r\n};\r\n\r\nNumber.prototype.getAverage = function () {\r\n    return this.valueOf();\r\n};",
        "class WaveOfWavesSetup {\r\n    constructor() {\r\n        this.myWavesCount = new RangeValueOverTime([1, 1], [1, 1], 0, 0, true);\r\n        this.myTimeBetweenWaves = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.mySameTimeBetweenWaves = new RangeValueOverTime([-1, -1], [-1, -1], 0, 0, false); // >= 0 means true\r\n        this.myDoneDelay = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.myTimeBeforeStart = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n\r\n        this.myWaveStartAngle = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n\r\n        this.myWavesSetup = []; // every item is an array, 0 is a wave setup, 1 is the chance, 2 is the debug name\r\n        this.myWavesSetupPickOne = new RangeValueOverTime([-1, -1], [-1, -1], 0, 0, false); // >= 0 means true\r\n        this.myWavesSetupPrecompute = new RangeValueOverTime([-1, -1], [-1, -1], 0, 0, false); // >= 0 means true\r\n    }\r\n\r\n    getAverageClonesCount(timeElapsed) {\r\n        let average = 0;\r\n        for (let waveSetup of this.myWavesSetup) {\r\n            average += waveSetup[0].getAverageClonesCount(timeElapsed);\r\n        }\r\n        average = average / this.myWavesSetup.length;\r\n\r\n        return Math.round(this.myWavesCount.getAverage(timeElapsed) * average);\r\n    }\r\n\r\n    getPrecomputed(timeElapsed) {\r\n        let setup = new WaveOfWavesSetup();\r\n\r\n        setup.myWavesCount = this.myWavesCount.get(timeElapsed);\r\n        setup.mySameTimeBetweenWaves = this.mySameTimeBetweenWaves.get(timeElapsed);\r\n        if (setup.mySameTimeBetweenWaves >= 0) {\r\n            setup.myTimeBetweenWaves = this.myTimeBetweenWaves.get(timeElapsed);\r\n        } else {\r\n            setup.myTimeBetweenWaves = this.myTimeBetweenWaves;\r\n        }\r\n        setup.myDoneDelay = this.myDoneDelay.get(timeElapsed);\r\n        setup.myTimeBeforeStart = this.myTimeBeforeStart.get(timeElapsed);\r\n\r\n        setup.myWaveStartAngle = this.myWaveStartAngle.get(timeElapsed);\r\n\r\n        setup.myWavesSetup = this.myWavesSetup.pp_clone();\r\n        setup.myWavesSetupPickOne = this.myWavesSetupPickOne.get(timeElapsed);\r\n        setup.myWavesSetupPrecompute = this.myWavesSetupPrecompute.get(timeElapsed);\r\n\r\n        if (setup.myWavesSetup.length == 0) {\r\n            setup.myWavesSetup.push([new IAmHereWaveSetup(), 1, \"I_Am_Here\"]);\r\n        }\r\n\r\n        if (setup.myWavesSetupPickOne >= 0) {\r\n            setup._pickOneWave(timeElapsed);\r\n        }\r\n\r\n        if (setup.myWavesSetupPrecompute >= 0) {\r\n            let wavesSetup = setup.myWavesSetup;\r\n            setup.myWavesSetup = [];\r\n            for (let setup of wavesSetup) {\r\n                setup.myWavesSetup.push([setup[0].getPrecomputed(timeElapsed), setup[1], setup[2]]);\r\n            }\r\n        }\r\n\r\n        return setup;\r\n    }\r\n\r\n    _pickOneWave(timeElapsed) {\r\n        let wave = this.myWavesSetup[0][0];\r\n        let name = this.myWavesSetup[0][2];\r\n\r\n        let totalChance = 0;\r\n        for (let waveSetup of this.myWavesSetup) {\r\n            totalChance += Math.floor(waveSetup[1].get(timeElapsed));\r\n        }\r\n\r\n        let randomChance = Math.pp_randomInt(1, totalChance);\r\n        let currentChance = 0;\r\n        for (let waveSetup of this.myWavesSetup) {\r\n            currentChance += Math.floor(waveSetup[1].get(timeElapsed));\r\n            if (randomChance <= currentChance) {\r\n                wave = waveSetup[0];\r\n                name = waveSetup[2];\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.myWavesSetup = [];\r\n        this.myWavesSetup.push([wave, 1, name]);\r\n    }\r\n}\r\n\r\nclass WaveOfWaves {\r\n    constructor(ventRuntimeSetup, waveSetup, timeElapsed, refDirection) {\r\n        this._myGameTimeElapsed = timeElapsed;\r\n        this._myWaveSetup = waveSetup;\r\n        this._myVentRuntimeSetup = ventRuntimeSetup;\r\n        this._mySpawnWavesSetup = waveSetup.myWavesSetup.pp_clone();\r\n\r\n        if (this._mySpawnWavesSetup.length == 0) {\r\n            this._mySpawnWavesSetup.push([new IAmHereWaveSetup(), 1, \"I_Am_Here\"]);\r\n        }\r\n\r\n        if (waveSetup.myWavesSetupPickOne.get(timeElapsed) >= 0) {\r\n            this._getWaveSetup(true);\r\n        }\r\n\r\n        if (waveSetup.myWavesSetupPrecompute.get(timeElapsed) >= 0) {\r\n            let wavesSetup = this._mySpawnWavesSetup;\r\n            this._mySpawnWavesSetup = [];\r\n            for (let setup of wavesSetup) {\r\n                this._mySpawnWavesSetup.push([setup[0].getPrecomputed(this._myGameTimeElapsed), setup[1], setup[2]]);\r\n            }\r\n        }\r\n\r\n        this._myTotalWavesCount = this._myWaveSetup.myWavesCount.get(timeElapsed);\r\n        this._myWavesCount = this._myTotalWavesCount;\r\n        this._mySameTimeBetweenWaves = waveSetup.mySameTimeBetweenWaves.get(timeElapsed) >= 0;\r\n\r\n        let spawnTimeMultiplier = this._myVentRuntimeSetup.myVentMultipliers.mySpawnTimeMultiplier.get(this._myGameTimeElapsed);\r\n        this._myTimeBetweenWaves = this._myWaveSetup.myTimeBetweenWaves.get(this._myGameTimeElapsed) * spawnTimeMultiplier;\r\n        this._mySpawnTimer = new PP.Timer(this._myWaveSetup.myTimeBeforeStart.get(this._myGameTimeElapsed) * spawnTimeMultiplier);\r\n        let doneTimeMultiplier = this._myVentRuntimeSetup.myVentMultipliers.myDoneTimeMultiplier.get(this._myGameTimeElapsed);\r\n        this._myDoneDelayTimer = new PP.Timer(this._myWaveSetup.myDoneDelay.get(this._myGameTimeElapsed) * doneTimeMultiplier, false);\r\n\r\n        this._computeWaveStartDirection(refDirection);\r\n\r\n        this._myCurrentWaves = [];\r\n\r\n        this._myDebugActive = false;\r\n\r\n        this._myOneCloneSetupValid = false;\r\n        this._myOneCloneSetupValidCurrentWave = false;\r\n        this._myLastValidSpawnTimer = this._mySpawnTimer.getDuration();\r\n\r\n        this._myDuration = 0;\r\n        this._myActualClonesCount = 0;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.isDone()) {\r\n            return [];\r\n        }\r\n\r\n        this._myDuration += dt;\r\n\r\n        let cloneSetups = [];\r\n\r\n        if (this._mySpawnTimer.isRunning()) {\r\n            this._mySpawnTimer.update(dt);\r\n            if (this._mySpawnTimer.isDone()) {\r\n                if (this._myWavesCount > 0) {\r\n                    this._myOneCloneSetupValidCurrentWave = false;\r\n                    this._myCurrentWaves = this._createNextWaves();\r\n                    this._myWavesCount -= this._myCurrentWaves.length;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let wave of this._myCurrentWaves) {\r\n            if (wave != null) {\r\n                let innerCloneSetups = wave.update(dt);\r\n                cloneSetups.push(...innerCloneSetups);\r\n            }\r\n        }\r\n\r\n        if (cloneSetups.length > 0) {\r\n            this._myOneCloneSetupValid = true;\r\n            this._myOneCloneSetupValidCurrentWave = true;\r\n        }\r\n\r\n        this._myCurrentWaves.pp_removeAll(element => element == null || element.isDone());\r\n\r\n        if (this._myCurrentWaves.length == 0 && this._myWavesCount > 0 && !this._mySpawnTimer.isRunning()) {\r\n            if (this._myOneCloneSetupValidCurrentWave) {\r\n                this._mySpawnTimer.start(this._getSpawnTimer());\r\n                this._myLastValidSpawnTimer = this._mySpawnTimer.getDuration();\r\n            } else {\r\n                this._mySpawnTimer.start(0);\r\n            }\r\n        } else if (!this._myDoneDelayTimer.isRunning() && this._myWavesCount <= 0 && this._myCurrentWaves.length == 0) {\r\n            if (this._myOneCloneSetupValid) {\r\n                if (this._myOneCloneSetupValidCurrentWave) {\r\n                    this._myDoneDelayTimer.start();\r\n                } else {\r\n                    this._myDoneDelayTimer.start(this._myDoneDelayTimer.getDuration() - this._myLastValidSpawnTimer);\r\n                }\r\n            } else {\r\n                this._myDoneDelayTimer.start(0);\r\n            }\r\n        }\r\n\r\n        if (this._myDoneDelayTimer.isRunning()) {\r\n            this._myDoneDelayTimer.update(dt);\r\n        }\r\n\r\n        this._myActualClonesCount += cloneSetups.length;\r\n\r\n        return cloneSetups;\r\n    }\r\n\r\n    isDone() {\r\n        return this._myDoneDelayTimer.isDone();\r\n    }\r\n\r\n    getActualClonesCount() {\r\n        return this._myActualClonesCount;\r\n    }\r\n\r\n    getDuration() {\r\n        return this._myDuration;\r\n    }\r\n\r\n    getAverageClonesCount() {\r\n        let average = 0;\r\n        for (let waveSetup of this._mySpawnWavesSetup) {\r\n            average += waveSetup[0].getAverageClonesCount(this._myGameTimeElapsed);\r\n        }\r\n        average = average / this._mySpawnWavesSetup.length;\r\n\r\n        return Math.round(this._myTotalWavesCount * average);\r\n    }\r\n\r\n    _createNextWaves() {\r\n        let waves = [];\r\n\r\n        return waves;\r\n    }\r\n\r\n    _getSpawnTimer() {\r\n        if (!this._mySameTimeBetweenWaves) {\r\n            let spawnTimeMultiplier = this._myVentRuntimeSetup.myVentMultipliers.mySpawnTimeMultiplier.get(this._myGameTimeElapsed);\r\n            this._myTimeBetweenWaves = this._myWaveSetup.myTimeBetweenWaves.get(this._myGameTimeElapsed) * spawnTimeMultiplier;\r\n        }\r\n\r\n        return this._myTimeBetweenWaves;\r\n    }\r\n\r\n    _getWaveSetup(setWaveSetup = false) {\r\n        let wave = this._mySpawnWavesSetup[0][0];\r\n        let name = this._mySpawnWavesSetup[0][2];\r\n\r\n        let totalChance = 0;\r\n        for (let waveSetup of this._mySpawnWavesSetup) {\r\n            totalChance += Math.floor(waveSetup[1].get(this._myGameTimeElapsed));\r\n        }\r\n\r\n        let randomChance = Math.pp_randomInt(1, totalChance);\r\n        let currentChance = 0;\r\n        for (let waveSetup of this._mySpawnWavesSetup) {\r\n            currentChance += Math.floor(waveSetup[1].get(this._myGameTimeElapsed));\r\n            if (randomChance <= currentChance) {\r\n                wave = waveSetup[0];\r\n                name = waveSetup[2];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (setWaveSetup) {\r\n            this._mySpawnWavesSetup = [];\r\n            this._mySpawnWavesSetup.push([wave, 1, name]);\r\n        } else if (this._myDebugActive && this._mySpawnWavesSetup.length > 1) {\r\n            console.log(\"   Wave -\", name);\r\n        }\r\n\r\n        return wave;\r\n    }\r\n\r\n    _checkVentAngleValid(direction) {\r\n        let angleValid = false;\r\n        for (let range of this._myVentRuntimeSetup.myValidAngleRanges) {\r\n            let angle = direction.vec3_angleSigned(range[1], [0, 1, 0]);\r\n            if (range[0].isInsideAngle(angle, Global.myVentDuration)) {\r\n                angleValid = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return angleValid;\r\n    }\r\n\r\n    _computeWaveStartDirection(refDirection) {\r\n        if (refDirection == null) {\r\n            refDirection = Global.myPlayerForward;\r\n        }\r\n\r\n        let attempts = 100;\r\n        let angleValid = false;\r\n\r\n        let flatRefDirection = refDirection.vec3_removeComponentAlongAxis([0, 1, 0]);\r\n\r\n        while (attempts > 0 && !angleValid) {\r\n            this._myWaveStartAngle = this._myWaveSetup.myWaveStartAngle.get(this._myGameTimeElapsed) * Math.pp_randomSign();\r\n            let startDirection = flatRefDirection.vec3_rotateAxis(this._myWaveStartAngle, [0, 1, 0]);\r\n            angleValid = this._checkVentAngleValid(startDirection);\r\n\r\n            attempts--;\r\n        }\r\n\r\n        this._myWaveStartDirection = flatRefDirection.vec3_rotateAxis(this._myWaveStartAngle, [0, 1, 0]);\r\n        this._myWaveStartDirection.vec3_normalize(this._myWaveStartDirection);\r\n    }\r\n}",
        "\r\nclass ZeroWaveSetup {\r\n    constructor() {\r\n    }\r\n\r\n    createWave(ventRuntimeSetup, timeElapsed, refDirection = null) {\r\n        return new ZeroWave();\r\n    }\r\n\r\n    getAverageClonesCount(timeElapsed) {\r\n        return 0;\r\n    }\r\n}\r\n\r\nclass ZeroWave {\r\n    constructor() {\r\n    }\r\n\r\n    update(dt) {\r\n        let cloneSetups = [];\r\n        return cloneSetups;\r\n    }\r\n\r\n    getDuration() {\r\n        return 0;\r\n    }\r\n\r\n    getActualClonesCount() {\r\n        return 0;\r\n    }\r\n\r\n    getAverageClonesCount() {\r\n        return 0;\r\n    }\r\n\r\n    isDone() {\r\n        return true;\r\n    }\r\n}",
        "class GiveUsAHugSetup extends IAmHereWaveSetup {\r\n    constructor() {\r\n        super();\r\n\r\n        this.myHugSize = new RangeValueOverTime([2, 2], [2, 2], 0, 0, true);\r\n        this.myHugAngle = new RangeValueOverTime([40, 40], [40, 40], 0, 0, false);\r\n        this.mySameHugAngle = new RangeValueOverTime([-1, -1], [-1, -1], 0, 0, false); // >= 0 means true\r\n        this.mySameHugSize = new RangeValueOverTime([1, 1], [1, 1], 0, 0, false); // >= 0 means true\r\n\r\n        this.myHugClonesSameDistance = new RangeValueOverTime([1, 1], [1, 1], 0, 0, false); // >= 0 means true\r\n        this.myMinAngleBetweenClonesHugging = new RangeValueOverTime([30, 30], [30, 30], 0, 0, false);\r\n    }\r\n\r\n    createWave(ventRuntimeSetup, timeElapsed, refDirection = null) {\r\n        return new GiveUsAHug(ventRuntimeSetup, this, timeElapsed, refDirection);\r\n    }\r\n\r\n    getAverageClonesCount(timeElapsed) {\r\n        return this.myClonesCount.getAverage(timeElapsed) * this.myHugSize.getAverage(timeElapsed);\r\n    }\r\n\r\n    getPrecomputed(timeElapsed) {\r\n        let setup = new GiveUsAHugSetup();\r\n\r\n        setup.myClonesCount = this.myClonesCount.get(timeElapsed);\r\n        setup.mySpawnConeAngle = this.mySpawnConeAngle.get(timeElapsed);\r\n        setup.myMinAngleBetweenClones = this.myMinAngleBetweenClones.get(timeElapsed);\r\n        setup.myWaveStartAngle = this.myWaveStartAngle.get(timeElapsed);\r\n        setup.mySameTimeBetweenClones = this.mySameTimeBetweenClones.get(timeElapsed);\r\n        if (setup.mySameTimeBetweenClones >= 0) {\r\n            setup.myTimeBetweenClones = this.myTimeBetweenClones.get(timeElapsed);\r\n        } else {\r\n            setup.myTimeBetweenClones = this.myTimeBetweenClones;\r\n        }\r\n\r\n        setup.myFirstCloneInTheMiddle = this.myFirstCloneInTheMiddle;\r\n        setup.myDoneDelay = this.myDoneDelay.get(timeElapsed);\r\n        setup.myTimeBeforeStart = this.myTimeBeforeStart.get(timeElapsed);\r\n\r\n        setup.myDiscardOutsideValidAngle = this.myDiscardOutsideValidAngle.get(timeElapsed);\r\n\r\n        setup.myRefDirection = this.myRefDirection;\r\n\r\n        setup.mySameHugAngle = this.mySameHugAngle.get(timeElapsed);\r\n        if (setup.mySameHugAngle >= 0) {\r\n            setup.myHugAngle = this.myHugAngle.get(timeElapsed);\r\n        } else {\r\n            setup.myHugAngle = this.myHugAngle;\r\n        }\r\n        setup.mySameHugSize = this.mySameHugSize.get(timeElapsed);\r\n        if (setup.mySameHugSize >= 0) {\r\n            setup.myHugSize = this.myHugSize.get(timeElapsed);\r\n        } else {\r\n            setup.myHugSize = this.myHugSize;\r\n        }\r\n\r\n        setup.myHugClonesSameDistance = this.myHugClonesSameDistance.get(timeElapsed);\r\n        setup.myMinAngleBetweenClonesHugging = this.myMinAngleBetweenClonesHugging.get(timeElapsed);\r\n\r\n        return setup;\r\n    }\r\n}\r\n\r\nclass GiveUsAHug extends IAmHereWave {\r\n    constructor(ventRuntimeSetup, waveSetup, timeElapsed, refDirection) {\r\n        super(ventRuntimeSetup, waveSetup, timeElapsed, refDirection);\r\n\r\n        this._myHugSize = waveSetup.myHugSize.get(timeElapsed);\r\n        this._myHugAngle = waveSetup.myHugAngle.get(timeElapsed);\r\n        this._mySameHugAngle = waveSetup.mySameHugAngle.get(timeElapsed) >= 0;\r\n        this._mySameHugSize = waveSetup.mySameHugSize.get(timeElapsed) >= 0;\r\n        this._myHugClonesSameDistance = waveSetup.myHugClonesSameDistance.get(timeElapsed) >= 0;\r\n        this._myMinAngleBetweenClonesHugging = waveSetup.myMinAngleBetweenClonesHugging.get(timeElapsed);\r\n    }\r\n\r\n    getAverageClonesCount() {\r\n        return this._myTotalClonesCount * this._myHugSize;\r\n    }\r\n\r\n    _createCloneSetupsWithDirection(direction) {\r\n        let cloneSetups = [];\r\n\r\n        if (this._myHugClonesSameDistance) {\r\n            let totalAngle = this._myHugAngle * 2;\r\n            let sliceAngle = totalAngle / (this._myHugSize - 1);\r\n\r\n            let startAngle = -this._myHugAngle;\r\n\r\n            for (let i = 0; i < this._myHugSize; i++) {\r\n                let angle = startAngle + sliceAngle * i;\r\n\r\n                let cloneSetup = new MrNOTCloneSetup();\r\n                cloneSetup.myDirection = direction.pp_clone();\r\n                cloneSetup.myDirection.vec3_rotateAxis(angle, [0, 1, 0], cloneSetup.myDirection);\r\n                if (this._areFarEnough(cloneSetup, cloneSetups)) {\r\n                    cloneSetups.push(cloneSetup);\r\n                } else {\r\n                    cloneSetups.push(null);\r\n                }\r\n            }\r\n        } else {\r\n            let previousAngles = [];\r\n            for (let i = 0; i < this._myHugSize; i++) {\r\n                let attempts = 100;\r\n                let angle = 0;\r\n\r\n                let startDirection = [];\r\n                while (attempts > 0) {\r\n                    angle = Math.pp_random(0, this._myHugAngle) * Math.pp_randomSign();\r\n                    let angleValid = true;\r\n\r\n                    for (let previousAngle of previousAngles) {\r\n                        if (Math.pp_angleDistance(angle, previousAngle) < this._myMinAngleBetweenClonesHugging) {\r\n                            angleValid = false;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (angleValid) {\r\n                        direction.vec3_rotateAxis(angle, [0, 1, 0], startDirection);\r\n                        angleValid = this._checkVentAngleValid(startDirection);\r\n\r\n                        if (angleValid) {\r\n                            attempts = 0;\r\n                        }\r\n                    }\r\n\r\n                    attempts--;\r\n                }\r\n\r\n                previousAngles.push(angle);\r\n\r\n                let cloneSetup = new MrNOTCloneSetup();\r\n                cloneSetup.myDirection = direction.pp_clone();\r\n                cloneSetup.myDirection.vec3_rotateAxis(angle, [0, 1, 0], cloneSetup.myDirection);\r\n                if (this._areFarEnough(cloneSetup, cloneSetups)) {\r\n                    cloneSetups.push(cloneSetup);\r\n                } else {\r\n                    cloneSetups.push(null);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!this._mySameHugAngle) {\r\n            this._myHugAngle = this._myWaveSetup.myHugAngle.get(this._myGameTimeElapsed);\r\n        }\r\n\r\n        if (!this._mySameHugSize) {\r\n            this._myHugSize = this._myWaveSetup.myHugSize.get(this._myGameTimeElapsed);\r\n        }\r\n\r\n        return cloneSetups;\r\n    }\r\n\r\n    _areFarEnough(cloneSetupToTest, cloneSetups) {\r\n        let valid = true;\r\n        for (let cloneSetup of cloneSetups) {\r\n            if (cloneSetup != null && cloneSetup.myDirection.vec3_angle(cloneSetupToTest.myDirection) < this._myMinAngleBetweenClonesHugging) {\r\n                valid = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n    _checkDirectionValid(direction) {\r\n        let isValid = true;\r\n\r\n        if (this._myHugClonesSameDistance) {\r\n            let totalAngle = this._myHugAngle * 2;\r\n            let sliceAngle = totalAngle / (this._myHugSize - 1);\r\n\r\n            let startAngle = -this._myHugAngle;\r\n\r\n            let cloneDirection = direction.pp_clone();\r\n            for (let i = 0; i < this._myHugSize; i++) {\r\n                let angle = startAngle + sliceAngle * i;\r\n\r\n                cloneDirection.pp_copy(direction);\r\n                cloneDirection.vec3_rotateAxis(angle, [0, 1, 0], cloneDirection);\r\n                if (!this._checkVentAngleValid(cloneDirection)) {\r\n                    isValid = false;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            isValid = super._checkDirectionValid(direction);\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n}",
        "class IAmEverywhereWaveSetup extends WaveOfWavesSetup {\r\n    constructor() {\r\n        super();\r\n\r\n        this.myAngleBetweenWaves = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n    }\r\n\r\n    createWave(ventRuntimeSetup, timeElapsed, refDirection = null) {\r\n        return new IAmEverywhereWave(ventRuntimeSetup, this, timeElapsed, refDirection);\r\n    }\r\n}\r\n\r\nclass IAmEverywhereWave extends WaveOfWaves {\r\n    constructor(ventRuntimeSetup, waveSetup, timeElapsed, refDirection) {\r\n        super(ventRuntimeSetup, waveSetup, timeElapsed, refDirection);\r\n\r\n        this._myCurrentDirection = this._myWaveStartDirection.pp_clone();\r\n        this._myFirst = true;\r\n    }\r\n\r\n    _createNextWaves() {\r\n        let waves = [];\r\n\r\n        if (!this._myFirst) {\r\n            let angle = 0;\r\n            let attempts = 100;\r\n\r\n            let startDirection = [];\r\n            while (attempts > 0) {\r\n                angle = this._myWaveSetup.myAngleBetweenWaves.get(this._myGameTimeElapsed) * Math.pp_randomSign();\r\n\r\n                this._myCurrentDirection.vec3_rotateAxis(angle, [0, 1, 0], startDirection);\r\n                let angleValid = this._checkVentAngleValid(startDirection);\r\n\r\n                if (angleValid) {\r\n                    attempts = 0;\r\n                }\r\n\r\n                attempts--;\r\n            }\r\n\r\n            this._myCurrentDirection.vec3_rotateAxis(angle, [0, 1, 0], this._myCurrentDirection);\r\n        } else {\r\n            this._myFirst = false;\r\n        }\r\n\r\n        let direction = this._myCurrentDirection.pp_clone();\r\n        direction.vec3_normalize(direction);\r\n\r\n        waves.push(this._getWaveSetup().createWave(this._myVentRuntimeSetup, this._myGameTimeElapsed, direction));\r\n\r\n        return waves;\r\n    }\r\n}",
        "class ManInTheMiddleSetup extends WaveOfWavesSetup {\r\n    constructor() {\r\n        super();\r\n\r\n        this.myAngleBetweenWaves = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.myTimeBeforeOpposite = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.mySameOppositeTimeBetweenWaves = new RangeValueOverTime([1, 1], [1, 1], 0, 0, false); // >= 0 means true\r\n        this.myOppositeTimeAsTimeBetweenWaves = new RangeValueOverTime([1, 1], [1, 1], 0, 0, false); // >= 0 means true\r\n\r\n        this.myOppositeTimeLessThanTimeBetweenWaves = new RangeValueOverTime([1, 1], [1, 1], 0, 0, false); // >= 0 means true\r\n        this.myAllSameTimes = null;\r\n\r\n        this.mySameTimeBetweenWaves = new RangeValueOverTime([1, 1], [1, 1], 0, 0, false); // >= 0 means true\r\n    }\r\n\r\n    createWave(ventRuntimeSetup, timeElapsed, refDirection = null) {\r\n        return new ManInTheMiddle(ventRuntimeSetup, this, timeElapsed, refDirection);\r\n    }\r\n\r\n    getPrecomputed(timeElapsed) {\r\n        let setup = new ManInTheMiddleSetup();\r\n\r\n        setup.myWavesCount = this.myWavesCount.get(timeElapsed);\r\n        setup.mySameTimeBetweenWaves = this.mySameTimeBetweenWaves.get(timeElapsed);\r\n        setup.myDoneDelay = this.myDoneDelay.get(timeElapsed);\r\n        setup.myTimeBeforeStart = this.myTimeBeforeStart.get(timeElapsed);\r\n\r\n        setup.myWaveStartAngle = this.myWaveStartAngle.get(timeElapsed);\r\n\r\n        setup.myWavesSetup = this.myWavesSetup.pp_clone();\r\n        setup.myWavesSetupPickOne = this.myWavesSetupPickOne.get(timeElapsed);\r\n        setup.myWavesSetupPrecompute = this.myWavesSetupPrecompute.get(timeElapsed);\r\n\r\n        setup.myAngleBetweenWaves = this.myAngleBetweenWaves.get(timeElapsed);\r\n        setup.mySameOppositeTimeBetweenWaves = this.mySameOppositeTimeBetweenWaves.get(timeElapsed);\r\n        setup.myOppositeTimeAsTimeBetweenWaves = this.myOppositeTimeAsTimeBetweenWaves.get(timeElapsed);\r\n\r\n        setup.myOppositeTimeLessThanTimeBetweenWaves = this.myOppositeTimeLessThanTimeBetweenWaves.get(timeElapsed);\r\n\r\n        setup.myAllSameTimes = this.myAllSameTimes;\r\n        if (setup.myAllSameTimes != null) {\r\n            setup.myAllSameTimes = setup.myAllSameTimes.get(timeElapsed);\r\n            if (setup.myAllSameTimes >= 0) {\r\n                setup.myOppositeTimeAsTimeBetweenWaves = 1;\r\n                setup.mySameOppositeTimeBetweenWaves = 1;\r\n                setup.mySameTimeBetweenWaves = 1;\r\n            } else {\r\n                setup.myOppositeTimeAsTimeBetweenWaves = -1;\r\n                setup.mySameOppositeTimeBetweenWaves = -1;\r\n                setup.mySameTimeBetweenWaves = -1;\r\n            }\r\n        }\r\n\r\n        if (setup.mySameTimeBetweenWaves >= 0) {\r\n            setup.myTimeBetweenWaves = this.myTimeBetweenWaves.get(timeElapsed);\r\n        } else {\r\n            setup.myTimeBetweenWaves = this.myTimeBetweenWaves;\r\n        }\r\n\r\n        if (setup.mySameOppositeTimeBetweenWaves >= 0) {\r\n            setup.myTimeBeforeOpposite = this.myTimeBeforeOpposite.get(timeElapsed);\r\n        } else {\r\n            setup.myTimeBeforeOpposite = this.myTimeBeforeOpposite;\r\n        }\r\n\r\n        if (setup.myWavesSetup.length == 0) {\r\n            setup.myWavesSetup.push([new IAmHereWaveSetup(), 1, \"I_Am_Here\"]);\r\n        }\r\n\r\n        if (setup.myWavesSetupPickOne >= 0) {\r\n            setup._pickOneWave(timeElapsed);\r\n        }\r\n\r\n        if (setup.myWavesSetupPrecompute >= 0) {\r\n            let wavesSetup = setup.myWavesSetup;\r\n            setup.myWavesSetup = [];\r\n            for (let setup of wavesSetup) {\r\n                setup.myWavesSetup.push([setup[0].getPrecomputed(timeElapsed), setup[1], setup[2]]);\r\n            }\r\n        }\r\n\r\n        return setup;\r\n    }\r\n}\r\n\r\nclass ManInTheMiddle extends WaveOfWaves {\r\n    constructor(ventRuntimeSetup, waveSetup, timeElapsed, refDirection) {\r\n        super(ventRuntimeSetup, waveSetup, timeElapsed, refDirection);\r\n\r\n        this._myWavesCount *= 2;\r\n        this._myOppositeTimeAsTimeBetweenWaves = waveSetup.myOppositeTimeAsTimeBetweenWaves.get(timeElapsed) >= 0;\r\n        this._mySameOppositeTimeBetweenWaves = waveSetup.mySameOppositeTimeBetweenWaves.get(timeElapsed) >= 0;\r\n        let spawnTimeMultiplier = this._myVentRuntimeSetup.myVentMultipliers.mySpawnTimeMultiplier.get(this._myGameTimeElapsed);\r\n        this._myTimeBeforeOpposite = this._myWaveSetup.myTimeBeforeOpposite.get(this._myGameTimeElapsed) * spawnTimeMultiplier;\r\n        this._myOppositeTimeLessThanTimeBetweenWaves = waveSetup.myOppositeTimeLessThanTimeBetweenWaves.get(timeElapsed) >= 0;\r\n\r\n        this._myAllSameTimes = null;\r\n        if (waveSetup.myAllSameTimes != null) {\r\n            this._myAllSameTimes = waveSetup.myAllSameTimes.get(timeElapsed) >= 0;\r\n            if (this._myAllSameTimes) {\r\n                this._myOppositeTimeAsTimeBetweenWaves = true;\r\n                this._mySameOppositeTimeBetweenWaves = true;\r\n                this._mySameTimeBetweenWaves = true;\r\n            } else {\r\n                this._myOppositeTimeAsTimeBetweenWaves = false;\r\n                this._mySameOppositeTimeBetweenWaves = false;\r\n                this._mySameTimeBetweenWaves = false;\r\n            }\r\n        }\r\n\r\n        if (this._myOppositeTimeAsTimeBetweenWaves) {\r\n            this._myTimeBeforeOpposite = this._myTimeBetweenWaves;\r\n        }\r\n\r\n        this._myFirst = true;\r\n\r\n        this._myCurrentDirection = this._myWaveStartDirection.pp_clone();\r\n        this._myIsOpposite = false;\r\n    }\r\n\r\n    _getSpawnTimer() {\r\n        if (!this._myIsOpposite) {\r\n            return super._getSpawnTimer();\r\n        }\r\n\r\n        if (this._myOppositeTimeAsTimeBetweenWaves) {\r\n            this._myTimeBeforeOpposite = this._myTimeBetweenWaves;\r\n        } else if (!this._mySameOppositeTimeBetweenWaves) {\r\n            let spawnTimeMultiplier = this._myVentRuntimeSetup.myVentMultipliers.mySpawnTimeMultiplier.get(this._myGameTimeElapsed);\r\n\r\n            let attempts = 100;\r\n            while (attempts > 0) {\r\n                this._myTimeBeforeOpposite = this._myWaveSetup.myTimeBeforeOpposite.get(this._myGameTimeElapsed) * spawnTimeMultiplier;\r\n                if (this._myTimeBeforeOpposite <= this._myTimeBetweenWaves || !this._myOppositeTimeLessThanTimeBetweenWaves) {\r\n                    attempts = 0;\r\n                }\r\n                attempts--;\r\n            }\r\n        }\r\n\r\n        if (this._myTimeBeforeOpposite > this._myTimeBetweenWaves && this._myOppositeTimeLessThanTimeBetweenWaves) {\r\n            this._myTimeBeforeOpposite = this._myTimeBetweenWaves;\r\n        }\r\n\r\n        return this._myTimeBeforeOpposite;\r\n    }\r\n\r\n    _checkVentAngleValid(direction) {\r\n        let angleValid = false;\r\n        let oppositeAngleValid = false;\r\n        for (let range of this._myVentRuntimeSetup.myValidAngleRanges) {\r\n            let angle = direction.vec3_angleSigned(range[1], [0, 1, 0]);\r\n            if (range[0].isInsideAngle(angle, Global.myVentDuration)) {\r\n                angleValid = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (angleValid) {\r\n            let negateDirection = direction.vec3_negate();\r\n            for (let range of this._myVentRuntimeSetup.myValidAngleRanges) {\r\n                let oppositeAngle = negateDirection.vec3_angleSigned(range[1], [0, 1, 0]);\r\n                if (range[0].isInsideAngle(oppositeAngle, Global.myVentDuration)) {\r\n                    oppositeAngleValid = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return angleValid && oppositeAngleValid;\r\n    }\r\n\r\n    _createNextWaves() {\r\n        let waves = [];\r\n\r\n        if (!this._myFirst) {\r\n            if (!this._myIsOpposite) {\r\n                let angle = 0;\r\n                let attempts = 100;\r\n\r\n                let startDirection = [];\r\n                while (attempts > 0) {\r\n                    angle = this._myWaveSetup.myAngleBetweenWaves.get(this._myGameTimeElapsed) * Math.pp_randomSign();\r\n                    this._myCurrentDirection.vec3_rotateAxis(angle, [0, 1, 0], startDirection);\r\n                    if (this._checkVentAngleValid(startDirection)) {\r\n                        attempts = 0;\r\n                    }\r\n\r\n                    attempts--;\r\n                }\r\n\r\n                this._myCurrentDirection.vec3_rotateAxis(angle, [0, 1, 0], this._myCurrentDirection);\r\n                this._myCurrentDirection.vec3_normalize(this._myCurrentDirection);\r\n            }\r\n        } else {\r\n            this._myFirst = false;\r\n        }\r\n\r\n        let direction = this._myCurrentDirection.pp_clone();\r\n        if (this._myIsOpposite) {\r\n            direction = direction.vec3_negate();\r\n        }\r\n\r\n        this._myIsOpposite = !this._myIsOpposite;\r\n\r\n        waves.push(this._getWaveSetup().createWave(this._myVentRuntimeSetup, this._myGameTimeElapsed, direction));\r\n\r\n        return waves;\r\n    }\r\n}",
        "class MerryGoRoundSetup extends WaveOfWavesSetup {\r\n    constructor() {\r\n        super();\r\n\r\n        this.myAngleBetweenWaves = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n        this.mySameAngleBetweenWaves = new RangeValueOverTime([1, 1], [1, 1], 0, 0, false); // >= 0 means true\r\n        this.myWaveDirection = new RangeValueOverTime([-1, 1], [-1, 1], 0, 0, false); // >= 0 means right\r\n        this.myPrecomputeWaveDirection = new RangeValueOverTime([1, 1], [1, 1], 0, 0, false); // >= 0 means true\r\n    }\r\n\r\n    createWave(ventRuntimeSetup, timeElapsed, refDirection = null) {\r\n        return new MerryGoRound(ventRuntimeSetup, this, timeElapsed, refDirection);\r\n    }\r\n\r\n    getPrecomputed(timeElapsed) {\r\n        let setup = new MerryGoRoundSetup();\r\n\r\n        setup.myWavesCount = this.myWavesCount.get(timeElapsed);\r\n        setup.mySameTimeBetweenWaves = this.mySameTimeBetweenWaves.get(timeElapsed);\r\n        if (setup.mySameTimeBetweenWaves >= 0) {\r\n            setup.myTimeBetweenWaves = this.myTimeBetweenWaves.get(timeElapsed);\r\n        } else {\r\n            setup.myTimeBetweenWaves = this.myTimeBetweenWaves;\r\n        }\r\n        setup.myDoneDelay = this.myDoneDelay.get(timeElapsed);\r\n        setup.myTimeBeforeStart = this.myTimeBeforeStart.get(timeElapsed);\r\n\r\n        setup.myWaveStartAngle = this.myWaveStartAngle.get(timeElapsed);\r\n\r\n        setup.myWavesSetup = this.myWavesSetup.pp_clone();\r\n        setup.myWavesSetupPickOne = this.myWavesSetupPickOne.get(timeElapsed);\r\n        setup.myWavesSetupPrecompute = this.myWavesSetupPrecompute.get(timeElapsed);\r\n\r\n        setup.mySameAngleBetweenWaves = this.mySameAngleBetweenWaves.get(timeElapsed);\r\n        if (setup.mySameAngleBetweenWaves >= 0) {\r\n            setup.myAngleBetweenWaves = this.myAngleBetweenWaves.get(timeElapsed);\r\n        } else {\r\n            setup.myAngleBetweenWaves = this.myAngleBetweenWaves;\r\n        }\r\n\r\n        setup.myPrecomputeWaveDirection = this.myPrecomputeWaveDirection.get(timeElapsed);\r\n        if (setup.myPrecomputeWaveDirection >= 0) {\r\n            setup.myWaveDirection = this.myWaveDirection.get(timeElapsed);\r\n        } else {\r\n            setup.myWaveDirection = this.myWaveDirection;\r\n        }\r\n\r\n        if (setup.myWavesSetup.length == 0) {\r\n            setup.myWavesSetup.push([new IAmHereWaveSetup(), 1, \"I_Am_Here\"]);\r\n        }\r\n\r\n        if (setup.myWavesSetupPickOne >= 0) {\r\n            setup._pickOneWave(timeElapsed);\r\n        }\r\n\r\n        if (setup.myWavesSetupPrecompute >= 0) {\r\n            let wavesSetup = setup.myWavesSetup;\r\n            setup.myWavesSetup = [];\r\n            for (let setup of wavesSetup) {\r\n                setup.myWavesSetup.push([setup[0].getPrecomputed(timeElapsed), setup[1], setup[2]]);\r\n            }\r\n        }\r\n\r\n        return setup;\r\n    }\r\n}\r\n\r\nclass MerryGoRound extends WaveOfWaves {\r\n    constructor(ventRuntimeSetup, waveSetup, timeElapsed, refDirection) {\r\n        super(ventRuntimeSetup, waveSetup, timeElapsed, refDirection);\r\n\r\n        this._myWaveDirection = (this._myWaveSetup.myWaveDirection.get(timeElapsed) >= 0) ? 1 : -1;\r\n\r\n        this._myAngleBetweenWaves = waveSetup.myAngleBetweenWaves.get(timeElapsed);\r\n        this._mySameAngleBetweenWaves = waveSetup.mySameAngleBetweenWaves.get(timeElapsed) >= 0;\r\n\r\n        this._myCurrentDirection = this._myWaveStartDirection.pp_clone();\r\n        this._myFirst = true;\r\n    }\r\n\r\n    _createNextWaves() {\r\n        let waves = [];\r\n\r\n        if (!this._myFirst) {\r\n            if (!this._mySameAngleBetweenWaves) {\r\n                this._myAngleBetweenWaves = this._myWaveSetup.myAngleBetweenWaves.get(this._myGameTimeElapsed);\r\n            }\r\n            let angle = this._myAngleBetweenWaves * this._myWaveDirection;\r\n\r\n            let maxAttempts = 0;\r\n            let attempts = maxAttempts;\r\n\r\n            while (attempts > 0) {\r\n                let startDirection = this._myCurrentDirection.vec3_rotateAxis(angle, [0, 1, 0]);\r\n                let angleValid = this._checkVentAngleValid(startDirection);\r\n\r\n                if (angleValid) {\r\n                    attempts = 0;\r\n                } else {\r\n                    angle += (360 / maxAttempts) * this._myWaveDirection;\r\n                }\r\n\r\n                attempts--;\r\n            }\r\n\r\n            this._myCurrentDirection.vec3_rotateAxis(angle, [0, 1, 0], this._myCurrentDirection);\r\n        } else {\r\n            this._myFirst = false;\r\n        }\r\n\r\n        let direction = this._myCurrentDirection.pp_clone();\r\n        direction.vec3_normalize(direction);\r\n\r\n        waves.push(this._getWaveSetup().createWave(this._myVentRuntimeSetup, this._myGameTimeElapsed, direction));\r\n\r\n        return waves;\r\n    }\r\n}",
        "class QueueForYouWaveSetup extends IAmHereWaveSetup {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    createWave(ventRuntimeSetup, timeElapsed, refDirection = null) {\r\n        return new QueueForYouWave(ventRuntimeSetup, this, timeElapsed, refDirection);\r\n    }\r\n\r\n    getPrecomputed(timeElapsed) {\r\n        let setup = new QueueForYouWaveSetup();\r\n\r\n        setup.myClonesCount = this.myClonesCount.get(timeElapsed);\r\n        setup.mySpawnConeAngle = this.mySpawnConeAngle.get(timeElapsed);\r\n        setup.myMinAngleBetweenClones = this.myMinAngleBetweenClones.get(timeElapsed);\r\n        setup.myWaveStartAngle = this.myWaveStartAngle.get(timeElapsed);\r\n        setup.mySameTimeBetweenClones = this.mySameTimeBetweenClones.get(timeElapsed);\r\n        if (setup.mySameTimeBetweenClones >= 0) {\r\n            setup.myTimeBetweenClones = this.myTimeBetweenClones.get(timeElapsed);\r\n        } else {\r\n            setup.myTimeBetweenClones = this.myTimeBetweenClones;\r\n        }\r\n\r\n        setup.myFirstCloneInTheMiddle = this.myFirstCloneInTheMiddle;\r\n        setup.myDoneDelay = this.myDoneDelay.get(timeElapsed);\r\n        setup.myTimeBeforeStart = this.myTimeBeforeStart.get(timeElapsed);\r\n\r\n        setup.myDiscardOutsideValidAngle = this.myDiscardOutsideValidAngle.get(timeElapsed);\r\n\r\n        setup.myRefDirection = this.myRefDirection;\r\n\r\n        return setup;\r\n    }\r\n}\r\n\r\nclass QueueForYouWave extends IAmHereWave {\r\n    constructor(ventRuntimeSetup, waveSetup, timeElapsed, refDirection) {\r\n        super(ventRuntimeSetup, waveSetup, timeElapsed, refDirection);\r\n        this._mySpawnConeAngle = 0;\r\n    }\r\n}",
        "ArcadeState.prototype._chatVentSetup = function () {\r\n    let ventSetup = this._disputeVentSetup(true);\r\n\r\n    ventSetup.myVentMultipliers.mySpawnTimeMultiplier *= 1.5;\r\n    ventSetup.myVentMultipliers.myDoneTimeMultiplier *= 1.5;\r\n    ventSetup.myVentMultipliers.myBreakTimeMultiplier *= 1.25;\r\n    ventSetup.myVentMultipliers.myBreakDelayTimeMultiplier *= 1;\r\n    ventSetup.myVentMultipliers.mySmallBreakTimeMultiplier *= 1.25;\r\n    ventSetup.myVentMultipliers.mySmallBreakDelayTimeMultiplier *= 1;\r\n\r\n    ventSetup.myMrNOTSetup.myVentMultipliers.mySpawnTimeMultiplier *= 1.5;\r\n    ventSetup.myMrNOTSetup.myVentMultipliers.myDoneTimeMultiplier *= 1.5;\r\n    ventSetup.myMrNOTSetup.myVentMultipliers.myBreakTimeMultiplier *= 1.25;\r\n    ventSetup.myMrNOTSetup.myVentMultipliers.myBreakDelayTimeMultiplier *= 1;\r\n    ventSetup.myMrNOTSetup.myVentMultipliers.mySmallBreakTimeMultiplier *= 1.25;\r\n    ventSetup.myMrNOTSetup.myVentMultipliers.mySmallBreakDelayTimeMultiplier *= 1;\r\n\r\n    ventSetup.myMrNOTSetup.myMrNOTTimeCooldown = new RangeValueOverTime([130, 150], [80, 100], 10, 300, false);\r\n    ventSetup.myMrNOTSetup.myBreakDuration = new RangeValueOverTime([4 * 1.25, 5 * 1.25], [2.5 * 1.25, 3.5 * 1.25], 10, 300, false);\r\n\r\n    return ventSetup;\r\n};",
        "ArcadeState.prototype._disputeVentSetup = function (avoidHarderGroups = false) {\r\n    let ventSetup = new VentSetup();\r\n\r\n    ventSetup.myBreakSetup.myBreakDuration = new RangeValueOverTime([3, 4], [1.5, 2.5], 10, 200, false);\r\n    ventSetup.myBreakSetup.myBreakTimeCooldown = new RangeValueOverTime([40, 60], [35, 45], 10, 150, false);\r\n    ventSetup.myBreakSetup.myBreakCloneCooldown = 5;\r\n\r\n    ventSetup.mySmallBreakSetup.myBreakDuration = new RangeValueOverTime([1.5, 2.5], [0.5, 1], 50, 200, false);\r\n    ventSetup.mySmallBreakSetup.myBreakTimeCooldown = new RangeValueOverTime([18, 22], [12, 16], 50, 150, false);\r\n    ventSetup.mySmallBreakSetup.myBreakCloneCooldown = 3;\r\n\r\n    ventSetup.myCloneRotationSetup.mySpinSpeed = new RangeValue([4, 6], false);\r\n    ventSetup.myCloneRotationSetup.mySpinChance = new RangeValueOverTime([1, 12], [1, 6], 135, 300, true);\r\n    ventSetup.myCloneRotationSetup.mySpinStartTime = 135;\r\n\r\n    ventSetup.myCloneRotationSetup.myTiltAngle = new RangeValueOverTime([0, 5], [0, 15], 65, 200, false);\r\n    ventSetup.myCloneRotationSetup.myTiltChance = new RangeValueOverTime([1, 6], [1, 2], 65, 200, true);\r\n    ventSetup.myCloneRotationSetup.myTiltStartTime = 65;\r\n\r\n    ventSetup.myVentMultipliers = new VentRuntimeMultipliers();\r\n    ventSetup.myVentMultipliers.mySpawnTimeMultiplier = 0.9;\r\n    ventSetup.myVentMultipliers.myDoneTimeMultiplier = 0.9;\r\n    ventSetup.myVentMultipliers.myBreakTimeMultiplier = 1;\r\n    ventSetup.myVentMultipliers.myBreakDelayTimeMultiplier = 1;\r\n    ventSetup.myVentMultipliers.mySmallBreakTimeMultiplier = 1;\r\n    ventSetup.myVentMultipliers.mySmallBreakDelayTimeMultiplier = 1;\r\n\r\n    ventSetup.myMrNOTSetup = new VentMrNOTSetup();\r\n\r\n    ventSetup.myMrNOTSetup.myMrNOTAppearenceEnabled = true;\r\n    ventSetup.myMrNOTSetup.myMrNOTTimeCooldown = new RangeValueOverTime([90, 100], [60, 80], 10, 300, false);\r\n    //ventSetup.myMrNOTSetup.myMrNOTTimeCooldown = 255;\r\n    ventSetup.myMrNOTSetup.myBreakDuration = new RangeValueOverTime([4, 5], [2.5, 3.5], 10, 300, false);\r\n\r\n    ventSetup.myMrNOTSetup.myVentMultipliers = new VentRuntimeMultipliers();\r\n    ventSetup.myMrNOTSetup.myVentMultipliers.mySpawnTimeMultiplier = ventSetup.myVentMultipliers.mySpawnTimeMultiplier * 1.5;\r\n    ventSetup.myMrNOTSetup.myVentMultipliers.myDoneTimeMultiplier = ventSetup.myVentMultipliers.mySpawnTimeMultiplier * 1.5;\r\n    ventSetup.myMrNOTSetup.myVentMultipliers.myBreakTimeMultiplier = 0;\r\n    ventSetup.myMrNOTSetup.myVentMultipliers.myBreakDelayTimeMultiplier = 100;\r\n    ventSetup.myMrNOTSetup.myVentMultipliers.mySmallBreakTimeMultiplier = 1.5;\r\n    ventSetup.myMrNOTSetup.myVentMultipliers.mySmallBreakDelayTimeMultiplier = 0.75;\r\n\r\n    ventSetup.myMrNOTSetup.myStartAngle = new RangeValueOverTime([0, 0], [0, 0], 0, 0, false);\r\n    ventSetup.myMrNOTSetup.myTimeToReachTarget = new RangeValueOverTime([35, 45], [25, 40], 10, 300, false);\r\n    ventSetup.myMrNOTSetup.myMaxPatience = new ValueOverTime(13, 26, 25, 45, true);\r\n\r\n    //ventSetup.myMrNOTSetup.myTimeToReachTarget = 45;\r\n    //ventSetup.myMrNOTSetup.myMaxPatience = 100;\r\n\r\n    let nextWavesSetup = new NextWavesSetup();\r\n\r\n    let firstWavesStartTime = 15;\r\n    let secondWavesStartTime = 130;\r\n    let thirdWavesStartTime = 245;\r\n    let fourthWavesStartTime = 350;\r\n\r\n    let firstWavesStartTimeGroup = firstWavesStartTime;\r\n    let secondWavesStartTimeGroup = secondWavesStartTime - 40;\r\n    let thirdWavesStartTimeGroup = thirdWavesStartTime - 40;\r\n    let fourthWavesStartTimeGroup = fourthWavesStartTime - 40;\r\n\r\n    let firstGroupChance = 350;\r\n    let secondGroupChance = 215;\r\n    let thirdGroupChance = 135;\r\n    let fourthGroupChance = 70;\r\n    let fifthGroupChance = 40;\r\n\r\n    // FIRST\r\n    nextWavesSetup.addWave(\"I_Am_Here\", firstGroupChance, 0, secondWavesStartTime);\r\n    nextWavesSetup.addWave(\"Queue_For_You\", firstGroupChance, 10, secondWavesStartTime);\r\n    nextWavesSetup.addWave(\"Merry_Go_Round\", firstGroupChance, 10, secondWavesStartTime);\r\n\r\n    nextWavesSetup.addWave(\"I_Am_Everywhere\", secondGroupChance, 45, secondWavesStartTime);\r\n    nextWavesSetup.addWave(\"Give_Us_A_Hug_2\", Math.floor(secondGroupChance * 2 / 3), 45, secondWavesStartTime);\r\n    nextWavesSetup.addWave(\"Give_Us_A_Hug_3\", Math.floor(secondGroupChance * 1 / 3), 45, secondWavesStartTime);\r\n    nextWavesSetup.addWave(\"Man_In_The_Middle\", secondGroupChance, 45, secondWavesStartTime);\r\n\r\n    //\r\n\r\n    //\r\n\r\n    //\r\n\r\n    // SECOND\r\n    nextWavesSetup.addWave(\"I_Am_Here\", firstGroupChance, secondWavesStartTime);\r\n    nextWavesSetup.addWave(\"I_Am_Here_2\", firstGroupChance, secondWavesStartTime);\r\n    nextWavesSetup.addWave(\"Queue_For_You\", firstGroupChance, secondWavesStartTime);\r\n    nextWavesSetup.addWave(\"Queue_For_You_2\", firstGroupChance, secondWavesStartTime);\r\n    nextWavesSetup.addWave(\"Merry_Go_Round\", Math.floor(firstGroupChance * 2 * 2 / 3), secondWavesStartTime);\r\n    nextWavesSetup.addWave(\"Merry_Go_Round_Waves\", Math.floor(firstGroupChance * 2 * 1 / 3), secondWavesStartTime);\r\n\r\n    let secondGroupSecondWaveChance = secondGroupChance * 2;\r\n    nextWavesSetup.addWave(\"I_Am_Everywhere\", Math.floor(secondGroupSecondWaveChance * 1 / 2), secondWavesStartTime, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"I_Am_Everywhere_2\", Math.floor(secondGroupSecondWaveChance * 1 / 2), secondWavesStartTime, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"Give_Us_A_Hug_2\", Math.floor(secondGroupSecondWaveChance * 2 / 3), secondWavesStartTime, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"Give_Us_A_Hug_3\", Math.floor(secondGroupSecondWaveChance * 1 / 3), secondWavesStartTime, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"Man_In_The_Middle\", secondGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n\r\n    let thirdGroupSecondWaveChance = thirdGroupChance;\r\n    nextWavesSetup.addWave(\"I_Am_Everywhere_Waves\", thirdGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"I_Am_Here_Rain\", thirdGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"Queue_For_You_Rain\", thirdGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"I_Am_Everywhere_Waves\", thirdGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"I_Am_Here_Rain\", thirdGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"Queue_For_You_Rain\", thirdGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n\r\n    if (!avoidHarderGroups) {\r\n        let fourthGroupSecondWaveChance = fourthGroupChance;\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle_Everywhere\", fourthGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere_GUAH2\", fourthGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_GUAH2\", fourthGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle_Everywhere\", fourthGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere_GUAH2\", fourthGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_GUAH2\", fourthGroupSecondWaveChance, secondWavesStartTime, thirdWavesStartTime);\r\n\r\n    }\r\n\r\n    //\r\n\r\n    // THIRD\r\n\r\n    //\r\n\r\n    let secondGroupThirdWaveChance = secondGroupChance * 2;\r\n    nextWavesSetup.addWave(\"I_Am_Everywhere\", Math.floor(secondGroupThirdWaveChance * 1 / 2), thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"I_Am_Everywhere_2\", Math.floor(secondGroupThirdWaveChance * 1 / 2), thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"Give_Us_A_Hug_2\", Math.floor(secondGroupThirdWaveChance * 2 / 3), thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"Give_Us_A_Hug_3\", Math.floor(secondGroupThirdWaveChance * 1 / 3), thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"Man_In_The_Middle\", Math.floor(secondGroupThirdWaveChance * 2 / 3), thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"Merry_Go_Round_MITM\", Math.floor(secondGroupThirdWaveChance * 1 / 3), thirdWavesStartTime);\r\n\r\n    let thirdGroupThirdWaveChance = thirdGroupChance * 6 / 5;\r\n    nextWavesSetup.addWave(\"I_Am_Everywhere_Waves\", thirdGroupThirdWaveChance, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"I_Am_Here_Rain\", thirdGroupThirdWaveChance, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"Queue_For_You_Rain\", thirdGroupThirdWaveChance, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"Merry_Go_Round_Rain\", thirdGroupThirdWaveChance, thirdWavesStartTime);\r\n    nextWavesSetup.addWave(\"Man_In_The_Middle_Waves\", thirdGroupThirdWaveChance, thirdWavesStartTime);\r\n\r\n    if (!avoidHarderGroups) {\r\n        let fourthGroupThirdWaveChance = fourthGroupChance * 2;\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle_Everywhere\", Math.floor(fourthGroupThirdWaveChance * 1 / 2), thirdWavesStartTime);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere_GUAH2\", Math.floor(fourthGroupThirdWaveChance * 2 / 3), thirdWavesStartTime);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_GUAH2\", Math.floor(fourthGroupThirdWaveChance * 2 / 3), thirdWavesStartTime);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle_Everywhere_Waves\", Math.floor(fourthGroupThirdWaveChance * 1 / 2), thirdWavesStartTime);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere_GUAH3\", Math.floor(fourthGroupThirdWaveChance * 1 / 3), thirdWavesStartTime);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_GUAH3\", Math.floor(fourthGroupThirdWaveChance * 1 / 3), thirdWavesStartTime);\r\n\r\n        let fifthGroupThirdWaveChance = fifthGroupChance * 2;\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug_4\", Math.floor(fifthGroupThirdWaveChance * 1 / 2), thirdWavesStartTime, fourthWavesStartTime);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle_GUAH2\", Math.floor(fifthGroupThirdWaveChance * 1 / 2), thirdWavesStartTime, fourthWavesStartTime);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle_Everywhere_GUAH2\", Math.floor(fifthGroupThirdWaveChance * 1 / 2), thirdWavesStartTime, fourthWavesStartTime);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug_4\", Math.floor(fifthGroupThirdWaveChance * 1 / 2), thirdWavesStartTime, fourthWavesStartTime);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle_GUAH2\", Math.floor(fifthGroupThirdWaveChance * 1 / 2), thirdWavesStartTime, fourthWavesStartTime);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle_Everywhere_GUAH2\", Math.floor(fifthGroupThirdWaveChance * 1 / 2), thirdWavesStartTime, fourthWavesStartTime);\r\n    }\r\n\r\n    //FOURTH\r\n\r\n    //\r\n\r\n    //\r\n\r\n    //\r\n\r\n    //\r\n\r\n    if (!avoidHarderGroups) {\r\n        let fifthGroupFourthWaveChance = fifthGroupChance * 2;\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug_4\", Math.floor(fifthGroupFourthWaveChance * 2 / 3), fourthWavesStartTime);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle_GUAH2\", Math.floor(fifthGroupFourthWaveChance * 2 / 3), fourthWavesStartTime);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle_Everywhere_GUAH2\", Math.floor(fifthGroupFourthWaveChance * 2 / 3), fourthWavesStartTime);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle_GUAH3\", Math.floor(fifthGroupFourthWaveChance * 1 / 3), fourthWavesStartTime);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle_Everywhere_GUAH3\", Math.floor(fifthGroupFourthWaveChance * 1 / 3), fourthWavesStartTime);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug_Cross\", Math.floor(fifthGroupFourthWaveChance * 1 / 3), fourthWavesStartTime);\r\n    }\r\n\r\n    //nextWavesSetup.addWave(\"Give_Us_A_Hug_Distance\", 0, 0);\r\n\r\n    // Wave Data\r\n\r\n    let waveStartAngle = new RangeValue([25, 175]);\r\n\r\n    let timeBetweenClones = new RangeValueOverTime([2, 3], [1, 1.5], 10, 100, false);\r\n    let doneDelay = new RangeValueOverTime([2, 4], [1.5, 2.5], 10, 100, false);\r\n\r\n    let timeBetweenClonesHard = new RangeValueOverTime([2, 3], [1.5, 2], 50, 200, false);\r\n    let doneDelayHard = new RangeValueOverTime([3, 4], [2, 3], 50, 200, false);\r\n\r\n    let timeBetweenClonesVeryHard = new RangeValueOverTime([2.5, 3], [2, 2.5], secondWavesStartTime, secondWavesStartTime + 150, false);\r\n    let doneDelayVeryHard = new RangeValueOverTime([3, 4], [2.5, 3.5], secondWavesStartTime, secondWavesStartTime + 150, false);\r\n\r\n    let timeBetweenClonesMegaHard = new RangeValueOverTime([3, 3.5], [2.5, 3], fourthWavesStartTime, fourthWavesStartTime + 150, false);\r\n    let doneDelayMegaHard = new RangeValueOverTime([4, 4.5], [3, 4], fourthWavesStartTime, fourthWavesStartTime + 150, false);\r\n\r\n    let randomTrue = new RangeValueOverTime([1, 1], [-0.5, 1], secondWavesStartTime, secondWavesStartTime + 5, false); // >= 0 means true\r\n    let randomVeryTrue = new RangeValueOverTime([1, 1], [-0.75, 1], secondWavesStartTime, secondWavesStartTime + 5, false); // >= 0 means true\r\n    let randomFalse = new RangeValueOverTime([-1, -1], [-1, 0.5], secondWavesStartTime, secondWavesStartTime + 5, false); // >= 0 means true\r\n    let randomRandom = new RangeValue([-1, 1]); // >= 0 means true\r\n\r\n    // Booster Data   \r\n    let boosterGroup1 = [\"I_Am_Here\", \"I_Am_Here_2\", \"Queue_For_You\", \"Queue_For_You_2\", \"Merry_Go_Round\", \"Merry_Go_Round_Waves\"];\r\n    let boosterGroup2 = [\"I_Am_Everywhere\", \"I_Am_Everywhere_2\", \"Give_Us_A_Hug_2\", \"Give_Us_A_Hug_3\", \"Man_In_The_Middle\", \"Merry_Go_Round_MITM\"];\r\n    let boosterGroup3 = [\"I_Am_Everywhere_Waves\", \"I_Am_Here_Rain\", \"Queue_For_You_Rain\", \"Man_In_The_Middle_Waves\", \"Merry_Go_Round_Rain\"];\r\n    let boosterGroup4 = [\"Man_In_The_Middle_Everywhere\", \"I_Am_Everywhere_GUAH2\", \"Merry_Go_Round_GUAH2\", \"Man_In_The_Middle_Everywhere_Waves\", \"I_Am_Everywhere_GUAH3\", \"Merry_Go_Round_GUAH3\"];\r\n    let boosterGroup5 = [\"Give_Us_A_Hug_4\", \"Man_In_The_Middle_GUAH2\", \"Man_In_The_Middle_Everywhere_GUAH2\", \"Man_In_The_Middle_GUAH3\", \"Man_In_The_Middle_Everywhere_GUAH3\", \"Give_Us_A_Hug_Cross\"];\r\n\r\n    let boosterGroupName1 = \"1\";\r\n    let boosterGroupName2 = \"2\";\r\n    let boosterGroupName3 = \"3\";\r\n    let boosterGroupName4 = \"4\";\r\n    let boosterGroupName5 = \"5\";\r\n\r\n    let dampingOverLastPick1 = new ValueOverTime(-90, 0, 0, 30);\r\n    let dampingOverLastPick2 = new ValueOverTime(-80, 0, 0, 30);\r\n    let dampingOverLastPick3 = new ValueOverTime(-70, 0, 0, 30);\r\n    let dampingOverLastPick4 = new ValueOverTime(-60, 0, 0, 30);\r\n    let dampingOverLastPick5 = new ValueOverTime(-50, 0, 0, 30);\r\n\r\n    dampingOverLastPick1 = new ValueOverTime(-90, 0, 0, 30);\r\n    dampingOverLastPick2 = new ValueOverTime(-90, 0, 0, 30);\r\n    dampingOverLastPick3 = new ValueOverTime(-90, 0, 0, 30);\r\n    dampingOverLastPick4 = new ValueOverTime(-90, 0, 0, 30);\r\n    dampingOverLastPick5 = new ValueOverTime(-90, 0, 0, 30);\r\n\r\n    let boostMultiplier1 = new ValueOverTime(1.5, 2, 400, 600);\r\n    let boostMultiplier2 = new ValueOverTime(6, 2, 50, 450);\r\n    let boostMultiplier3 = new ValueOverTime(10, 1.75, secondWavesStartTime, 550);\r\n    let boostMultiplier4 = new ValueOverTime(6, 1.5, secondWavesStartTime, 600);\r\n    let boostMultiplier5 = new ValueOverTime(8, 1.25, thirdWavesStartTime, 650);\r\n\r\n    boostMultiplier1 = 2;\r\n    boostMultiplier2 = 2;\r\n    boostMultiplier3 = 1.75;\r\n    boostMultiplier4 = 1.25;\r\n    boostMultiplier5 = 1;\r\n\r\n    let boostDivider1 = new ValueOverTime(3, 2, 400, 600);\r\n    let boostDivider2 = new ValueOverTime(1.5, 2, 50, 200);\r\n    let boostDivider3 = new ValueOverTime(1.5, 2, secondWavesStartTime, secondWavesStartTime + 150);\r\n    let boostDivider4 = new ValueOverTime(1.5, 2, secondWavesStartTime, secondWavesStartTime + 150);\r\n    let boostDivider5 = new ValueOverTime(1.5, 2, thirdWavesStartTime, thirdWavesStartTime + 150);\r\n\r\n    boostDivider1 = 2;\r\n    boostDivider2 = 2;\r\n    boostDivider3 = 2;\r\n    boostDivider4 = 2;\r\n    boostDivider5 = 2;\r\n\r\n    let boostValueOnReset1 = -30;\r\n    let boostValueOnReset2 = -30;\r\n    let boostValueOnReset3 = -30;\r\n    let boostValueOnReset4 = -30;\r\n    let boostValueOnReset5 = -30;\r\n\r\n    // Waves\r\n\r\n    {\r\n        let wave = new ZeroWaveSetup();\r\n\r\n        let testNextWavesSetup = new NextWavesSetup();\r\n        testNextWavesSetup.addWave(\"Test_Wave_No_Clones\", 1);\r\n\r\n        ventSetup.myWavesMap.set(\"Zero\", wave);\r\n        //ventSetup.myNextWavesMap.set(\"Zero\", testNextWavesSetup);\r\n        ventSetup.myNextWavesMap.set(\"Zero\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new IAmHereWaveSetup();\r\n\r\n        wave.myClonesCount = 1;\r\n        wave.myTimeBeforeStart = 10000;\r\n\r\n        let testNextWavesSetup = new NextWavesSetup();\r\n        testNextWavesSetup.addWave(\"Test_Wave_No_Clones\", 1);\r\n\r\n        ventSetup.myWavesMap.set(\"Test_Wave_No_Clones\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Test_Wave_No_Clones\", testNextWavesSetup);\r\n    }\r\n\r\n    let subOneWave = new IAmHereWaveSetup();\r\n    subOneWave.myClonesCount = 1;\r\n    subOneWave.myWaveStartAngle = 0;\r\n    subOneWave.myFirstCloneInTheMiddle = true;\r\n    subOneWave.myDoneDelay = 0;\r\n\r\n    let subHereWave = new IAmHereWaveSetup();\r\n    subHereWave.myClonesCount = new RangeValueOverTime([2, 3], [2, 3], 10, 100, true);\r\n    subHereWave.myWaveStartAngle = 0;\r\n    subHereWave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n    subHereWave.mySameTimeBetweenClones = randomRandom;\r\n    subHereWave.myMinAngleBetweenClones = 10;\r\n    subHereWave.myFirstCloneInTheMiddle = true;\r\n    subHereWave.myTimeBetweenClones = new RangeValueOverTime([1, 1.5], [0.75, 1.25], secondWavesStartTime, secondWavesStartTime + 100, false);\r\n    subHereWave.myDoneDelay = 0;\r\n\r\n    let subQueueWave = new QueueForYouWaveSetup();\r\n    subQueueWave.myClonesCount = new RangeValueOverTime([2, 3], [2, 3], 10, 100, true);\r\n    subQueueWave.myWaveStartAngle = 0;\r\n    subQueueWave.mySameTimeBetweenClones = randomTrue;\r\n    subQueueWave.myTimeBetweenClones = new RangeValueOverTime([1, 1.5], [0.75, 1.25], secondWavesStartTime, secondWavesStartTime + 100, false);\r\n    subQueueWave.myDoneDelay = 0;\r\n\r\n    let subGiveUsAHug2Wave = new GiveUsAHugSetup();\r\n    subGiveUsAHug2Wave.myClonesCount = 1;\r\n    subGiveUsAHug2Wave.myWaveStartAngle = 0;\r\n    subGiveUsAHug2Wave.myFirstCloneInTheMiddle = true;\r\n    subGiveUsAHug2Wave.myTimeBetweenClones = 0;\r\n    subGiveUsAHug2Wave.myHugSize = 2;\r\n    subGiveUsAHug2Wave.myHugAngle = new RangeValueOverTime([20, 30], [20, 35], 10, 100, false);\r\n    subGiveUsAHug2Wave.mySameHugAngle = randomTrue;\r\n    subGiveUsAHug2Wave.myDoneDelay = 0;\r\n\r\n    let subGiveUsAHug3Wave = new GiveUsAHugSetup();\r\n    subGiveUsAHug3Wave.myClonesCount = 1;\r\n    subGiveUsAHug3Wave.myWaveStartAngle = 0;\r\n    subGiveUsAHug3Wave.myFirstCloneInTheMiddle = true;\r\n    subGiveUsAHug3Wave.myTimeBetweenClones = 0;\r\n    subGiveUsAHug3Wave.myHugSize = 3;\r\n    subGiveUsAHug3Wave.myHugAngle = new RangeValueOverTime([40, 50], [40, 60], 10, 100, false);\r\n    subGiveUsAHug3Wave.mySameHugAngle = randomTrue;\r\n    subGiveUsAHug3Wave.myDoneDelay = 0;\r\n\r\n    let subMerryWave = new MerryGoRoundSetup();\r\n    subMerryWave.myWavesCount = new RangeValueOverTime([3, 4], [3, 4], 10, 100, true);\r\n    subMerryWave.myWaveStartAngle = 0;\r\n    subMerryWave.myAngleBetweenWaves = new RangeValueOverTime([15, 25], [15, 35], 10, 100, false);\r\n    subMerryWave.mySameTimeBetweenWaves = randomVeryTrue;\r\n    subMerryWave.mySameAngleBetweenWaves = randomVeryTrue;\r\n    subMerryWave.myTimeBetweenWaves = new RangeValueOverTime([2, 3], [0.75, 1.25], 10, 100, false);\r\n    subMerryWave.myPrecomputeWaveDirection = randomFalse;\r\n    subMerryWave.myDoneDelay = 0;\r\n\r\n    let subMITMWave = new ManInTheMiddleSetup();\r\n    subMITMWave.myWavesCount = 1;\r\n    subMITMWave.myWaveStartAngle = 0;\r\n    subMITMWave.myTimeBetweenWaves = new RangeValueOverTime([1.5, 2], [1, 1.5], 10, 100, false);\r\n    subMITMWave.myTimeBeforeOpposite = new RangeValueOverTime([1.5, 2], [1, 1.5], 10, 100, false);\r\n    subMITMWave.myOppositeTimeAsTimeBetweenWaves = -1;\r\n    subMITMWave.mySameOppositeTimeBetweenWaves = 1;\r\n    subMITMWave.mySameTimeBetweenWaves = -1;\r\n    subMITMWave.myDoneDelay = 0;\r\n\r\n    // I AM HERE\r\n\r\n    {\r\n        let wave = new IAmHereWaveSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 3], [1, 5], 10, 150, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.mySameTimeBetweenClones = randomRandom;\r\n        wave.myMinAngleBetweenClones = 10;\r\n        wave.myFirstCloneInTheMiddle = true;\r\n        wave.myTimeBetweenClones = timeBetweenClones;\r\n        wave.myDoneDelay = doneDelay;\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Here\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Here\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"I_Am_Here\",\r\n            new NextWaveChanceBoosterSetup(firstWavesStartTimeGroup, boosterGroup1, boosterGroupName1, dampingOverLastPick1, boostMultiplier1, boostDivider1, boostValueOnReset1));\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Here_2\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Here_2\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"I_Am_Here_2\",\r\n            new NextWaveChanceBoosterSetup(secondWavesStartTimeGroup, boosterGroup1, boosterGroupName1, dampingOverLastPick1, boostMultiplier1, boostDivider1, boostValueOnReset1));\r\n    }\r\n\r\n    {\r\n        let wave = new IAmHereWaveSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([4, 6], [4, 8], secondWavesStartTime, secondWavesStartTime + 150, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.mySameTimeBetweenClones = randomRandom;\r\n        wave.myMinAngleBetweenClones = 10;\r\n        wave.myFirstCloneInTheMiddle = true;\r\n        wave.myTimeBetweenClones = new RangeValueOverTime([0.75, 1.25], [0.6, 1], secondWavesStartTime, secondWavesStartTime + 150, false);\r\n        wave.myDoneDelay = doneDelayHard;\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Here_Rain\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Here_Rain\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"I_Am_Here_Rain\",\r\n            new NextWaveChanceBoosterSetup(secondWavesStartTimeGroup, boosterGroup3, boosterGroupName3, dampingOverLastPick3, boostMultiplier3, boostDivider3, boostValueOnReset3));\r\n    }\r\n\r\n    // QUEUE FOR YOU\r\n\r\n    {\r\n        let wave = new QueueForYouWaveSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([2, 3], [2, 5], 10, 150, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.mySameTimeBetweenClones = randomTrue;\r\n        wave.myTimeBetweenClones = timeBetweenClones;\r\n        wave.myDoneDelay = doneDelay;\r\n\r\n        ventSetup.myWavesMap.set(\"Queue_For_You\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Queue_For_You\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Queue_For_You\",\r\n            new NextWaveChanceBoosterSetup(firstWavesStartTimeGroup, boosterGroup1, boosterGroupName1, dampingOverLastPick1, boostMultiplier1, boostDivider1, boostValueOnReset1));\r\n\r\n        ventSetup.myWavesMap.set(\"Queue_For_You_2\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Queue_For_You_2\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Queue_For_You_2\",\r\n            new NextWaveChanceBoosterSetup(secondWavesStartTimeGroup, boosterGroup1, boosterGroupName1, dampingOverLastPick1, boostMultiplier1, boostDivider1, boostValueOnReset1));\r\n    }\r\n\r\n    {\r\n        let wave = new QueueForYouWaveSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([4, 6], [4, 8], secondWavesStartTime, secondWavesStartTime + 150, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.mySameTimeBetweenClones = randomTrue;\r\n        wave.myTimeBetweenClones = new RangeValueOverTime([0.75, 1.25], [0.6, 1], secondWavesStartTime, secondWavesStartTime + 150, false);\r\n        wave.myDoneDelay = doneDelayHard;\r\n\r\n        ventSetup.myWavesMap.set(\"Queue_For_You_Rain\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Queue_For_You_Rain\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Queue_For_You_Rain\",\r\n            new NextWaveChanceBoosterSetup(secondWavesStartTimeGroup, boosterGroup3, boosterGroupName3, dampingOverLastPick3, boostMultiplier3, boostDivider3, boostValueOnReset3));\r\n    }\r\n\r\n    // MERRY GO ROUND\r\n\r\n    {\r\n        let wave = new MerryGoRoundSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([3, 5], [3, 6], 10, 100, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myAngleBetweenWaves = new RangeValueOverTime([15, 25], [15, 35], 10, 100, false);\r\n        wave.mySameTimeBetweenWaves = randomVeryTrue;\r\n        wave.mySameAngleBetweenWaves = randomVeryTrue;\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([2, 3], [0.75, 1.25], 10, 100, false);\r\n        wave.myDoneDelay = doneDelay;\r\n\r\n        ventSetup.myWavesMap.set(\"Merry_Go_Round\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Merry_Go_Round\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Merry_Go_Round\",\r\n            new NextWaveChanceBoosterSetup(firstWavesStartTimeGroup, boosterGroup1, boosterGroupName1, dampingOverLastPick1, boostMultiplier1 * 2 * 20 / 30, boostDivider1, boostValueOnReset1));\r\n    }\r\n\r\n    {\r\n        let wave = new MerryGoRoundSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([8, 10], [8, 12], secondWavesStartTime, secondWavesStartTime + 150, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myAngleBetweenWaves = new RangeValueOverTime([15, 25], [15, 35], 10, 100, false);\r\n        wave.mySameTimeBetweenWaves = randomVeryTrue;\r\n        wave.mySameAngleBetweenWaves = randomVeryTrue;\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([0.5, 0.9], [0.4, 0.8], thirdWavesStartTime, thirdWavesStartTime + 150, false);\r\n        wave.myDoneDelay = doneDelayHard;\r\n\r\n        ventSetup.myWavesMap.set(\"Merry_Go_Round_Rain\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Merry_Go_Round_Rain\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Merry_Go_Round_Rain\",\r\n            new NextWaveChanceBoosterSetup(thirdWavesStartTimeGroup, boosterGroup3, boosterGroupName3, dampingOverLastPick3, boostMultiplier3, boostDivider3, boostValueOnReset3));\r\n    }\r\n\r\n    {\r\n        let wave = new MerryGoRoundSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([3, 3], [3, 4], secondWavesStartTime, secondWavesStartTime + 100, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myAngleBetweenWaves = new RangeValueOverTime([15, 25], [15, 35], 10, 100, false);\r\n        wave.mySameTimeBetweenWaves = randomVeryTrue;\r\n        wave.mySameAngleBetweenWaves = randomVeryTrue;\r\n        wave.myTimeBetweenWaves = timeBetweenClones;\r\n        wave.myDoneDelay = doneDelay;\r\n\r\n        wave.myWavesSetup.push([subHereWave, 1, \"I_Am_Here\"]);\r\n        wave.myWavesSetup.push([subQueueWave, 2, \"Queue_For_You\"]);\r\n        wave.myWavesSetupPrecompute = randomTrue;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Merry_Go_Round_Waves\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Merry_Go_Round_Waves\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Merry_Go_Round_Waves\",\r\n            new NextWaveChanceBoosterSetup(secondWavesStartTimeGroup, boosterGroup1, boosterGroupName1, dampingOverLastPick1, boostMultiplier1 * 2 * 10 / 30, boostDivider1, boostValueOnReset1));\r\n    }\r\n\r\n    {\r\n        let wave = new MerryGoRoundSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([3, 4], [3, 6], secondWavesStartTime, secondWavesStartTime + 150, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myAngleBetweenWaves = new RangeValue([25, 35]);\r\n        wave.mySameTimeBetweenWaves = randomVeryTrue;\r\n        wave.mySameAngleBetweenWaves = randomVeryTrue;\r\n        wave.myTimeBetweenWaves = timeBetweenClones;\r\n        wave.myDoneDelay = doneDelayHard;\r\n\r\n        wave.myWavesSetup.push([subGiveUsAHug2Wave, 1, \"Give Us A Hug 2\"]);\r\n        wave.myWavesSetupPrecompute = randomRandom;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Merry_Go_Round_GUAH2\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Merry_Go_Round_GUAH2\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Merry_Go_Round_GUAH2\",\r\n            new NextWaveChanceBoosterSetup(secondWavesStartTimeGroup, boosterGroup4, boosterGroupName4, dampingOverLastPick4, boostMultiplier4 * 2 * 20 / 30, boostDivider4, boostValueOnReset4));\r\n    }\r\n\r\n    {\r\n        let wave = new MerryGoRoundSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([3, 3], [3, 4], thirdWavesStartTime, thirdWavesStartTime + 100, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myAngleBetweenWaves = new RangeValue([25, 35]);\r\n        wave.mySameTimeBetweenWaves = randomVeryTrue;\r\n        wave.mySameAngleBetweenWaves = randomVeryTrue;\r\n        wave.myTimeBetweenWaves = timeBetweenClonesHard;\r\n        wave.myDoneDelay = doneDelayVeryHard;\r\n\r\n        wave.myWavesSetup.push([subGiveUsAHug3Wave, 1, \"Give Us A Hug 3\"]);\r\n        wave.myWavesSetupPrecompute = randomRandom;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Merry_Go_Round_GUAH3\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Merry_Go_Round_GUAH3\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Merry_Go_Round_GUAH3\",\r\n            new NextWaveChanceBoosterSetup(thirdWavesStartTimeGroup, boosterGroup4, boosterGroupName4, dampingOverLastPick4, boostMultiplier4 * 2 * 10 / 30, boostDivider4, boostValueOnReset4));\r\n    }\r\n\r\n    {\r\n        let wave = new MerryGoRoundSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([3, 5], [3, 6], thirdWavesStartTime, thirdWavesStartTime + 100, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myAngleBetweenWaves = new RangeValueOverTime([15, 25], [15, 35], 10, 100, false);\r\n        wave.mySameTimeBetweenWaves = randomVeryTrue;\r\n        wave.mySameAngleBetweenWaves = randomVeryTrue;\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([1.5, 2], [1, 1.5], 10, 100, false);\r\n        wave.myDoneDelay = doneDelayHard;\r\n\r\n        wave.myWavesSetup.push([subMITMWave, 1, \"Man_In_The_Middle\"]);\r\n        wave.myWavesSetupPrecompute = randomTrue;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Merry_Go_Round_MITM\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Merry_Go_Round_MITM\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Merry_Go_Round_MITM\",\r\n            new NextWaveChanceBoosterSetup(thirdWavesStartTimeGroup, boosterGroup2, boosterGroupName2, dampingOverLastPick2, boostMultiplier2 * 2 * 10 / 30, boostDivider2, boostValueOnReset2));\r\n    }\r\n\r\n    // I AM EVERYWHERE\r\n\r\n    {\r\n        let wave = new IAmEverywhereWaveSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([3, 4], [3, 6], 10, 150, true);\r\n        wave.myAngleBetweenWaves = new RangeValue([55, 175]);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myTimeBetweenWaves = timeBetweenClonesHard;\r\n        wave.myDoneDelay = doneDelayHard;\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Everywhere\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Everywhere\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"I_Am_Everywhere\",\r\n            new NextWaveChanceBoosterSetup(firstWavesStartTimeGroup, boosterGroup2, boosterGroupName2, dampingOverLastPick2, boostMultiplier2, boostDivider2, boostValueOnReset2));\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Everywhere_2\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Everywhere_2\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"I_Am_Everywhere_2\",\r\n            new NextWaveChanceBoosterSetup(secondWavesStartTimeGroup, boosterGroup2, boosterGroupName2, dampingOverLastPick2, boostMultiplier2, boostDivider2, boostValueOnReset2));\r\n    }\r\n\r\n    {\r\n        let wave = new IAmEverywhereWaveSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([2, 3], [2, 5], secondWavesStartTime, secondWavesStartTime + 150, true);\r\n        wave.myAngleBetweenWaves = new RangeValue([55, 175]);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myTimeBetweenWaves = timeBetweenClones;\r\n        wave.myDoneDelay = doneDelayVeryHard;\r\n\r\n        wave.myWavesSetup.push([subOneWave, 2, \"I_Am_Here_One\"]);\r\n        wave.myWavesSetup.push([subHereWave, 2, \"I_Am_Here\"]);\r\n        wave.myWavesSetup.push([subQueueWave, 4, \"Queue_For_You\"]);\r\n        wave.myWavesSetup.push([subMerryWave, 4, \"Merry_Go_Round\"]);\r\n        wave.myWavesSetupPrecompute = randomTrue;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Everywhere_Waves\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Everywhere_Waves\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"I_Am_Everywhere_Waves\",\r\n            new NextWaveChanceBoosterSetup(secondWavesStartTimeGroup, boosterGroup3, boosterGroupName3, dampingOverLastPick3, boostMultiplier3, boostDivider3, boostValueOnReset3));\r\n    }\r\n\r\n    {\r\n        let wave = new IAmEverywhereWaveSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([2, 3], [2, 5], secondWavesStartTime, secondWavesStartTime + 150, true);\r\n        wave.myAngleBetweenWaves = new RangeValue([55, 175]);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myTimeBetweenWaves = timeBetweenClonesHard;\r\n        wave.myDoneDelay = doneDelayHard;\r\n\r\n        wave.myWavesSetup.push([subGiveUsAHug2Wave, 1, \"Give Us A Hug 2\"]);\r\n        wave.myWavesSetupPrecompute = randomRandom;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Everywhere_GUAH2\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Everywhere_GUAH2\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"I_Am_Everywhere_GUAH2\",\r\n            new NextWaveChanceBoosterSetup(secondWavesStartTimeGroup, boosterGroup4, boosterGroupName4, dampingOverLastPick4, boostMultiplier4 * 2 * 20 / 30, boostDivider4, boostValueOnReset4));\r\n    }\r\n\r\n\r\n    {\r\n        let wave = new IAmEverywhereWaveSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([2, 3], [2, 4], secondWavesStartTime, secondWavesStartTime + 100, true);\r\n        wave.myAngleBetweenWaves = new RangeValue([55, 175]);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myTimeBetweenWaves = timeBetweenClonesVeryHard;\r\n        wave.myDoneDelay = doneDelayVeryHard;\r\n\r\n        wave.myWavesSetup.push([subGiveUsAHug3Wave, 1, \"Give Us A Hug 3\"]);\r\n        wave.myWavesSetupPrecompute = randomRandom;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Everywhere_GUAH3\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Everywhere_GUAH3\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"I_Am_Everywhere_GUAH3\",\r\n            new NextWaveChanceBoosterSetup(thirdWavesStartTimeGroup, boosterGroup4, boosterGroupName4, dampingOverLastPick4, boostMultiplier4 * 2 * 10 / 30, boostDivider4, boostValueOnReset4));\r\n    }\r\n\r\n    // GIVE US A HUG\r\n\r\n    {\r\n        let wave = new GiveUsAHugSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 1], [1, 5], 10, 150, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n        wave.myTimeBetweenClones = timeBetweenClonesHard;\r\n        wave.myDoneDelay = doneDelayHard;\r\n\r\n        wave.myHugSize = 2;\r\n        wave.myHugAngle = new RangeValueOverTime([20, 30], [20, 35], 10, 100, false);\r\n        wave.mySameHugAngle = randomTrue;\r\n        wave.mySameHugSize = randomTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Give_Us_A_Hug_2\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Give_Us_A_Hug_2\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Give_Us_A_Hug_2\",\r\n            new NextWaveChanceBoosterSetup(firstWavesStartTimeGroup, boosterGroup2, boosterGroupName2, dampingOverLastPick2, boostMultiplier2 * 2 * 20 / 30, boostDivider2, boostValueOnReset2));\r\n    }\r\n\r\n    {\r\n        let wave = new GiveUsAHugSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 1], [1, 3], 10, 150, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n        wave.myTimeBetweenClones = timeBetweenClonesVeryHard;\r\n        wave.myDoneDelay = doneDelayVeryHard;\r\n\r\n        wave.myHugSize = 3;\r\n        wave.myHugAngle = new RangeValueOverTime([40, 50], [40, 60], 10, 100, false);\r\n        wave.mySameHugAngle = randomTrue;\r\n        wave.mySameHugSize = randomTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Give_Us_A_Hug_3\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Give_Us_A_Hug_3\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Give_Us_A_Hug_3\",\r\n            new NextWaveChanceBoosterSetup(firstWavesStartTimeGroup, boosterGroup2, boosterGroupName2, dampingOverLastPick2, boostMultiplier2 * 2 * 10 / 30, boostDivider2, boostValueOnReset2));\r\n    }\r\n\r\n    {\r\n        let wave = new GiveUsAHugSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 1], [1, 4], thirdWavesStartTime, thirdWavesStartTime + 150, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n        wave.myTimeBetweenClones = timeBetweenClonesVeryHard;\r\n        wave.myDoneDelay = doneDelayVeryHard;\r\n\r\n        wave.myHugSize = 4;\r\n        wave.myHugAngle = new RangeValueOverTime([60, 70], [60, 80], thirdWavesStartTime, thirdWavesStartTime + 100, false);\r\n        wave.mySameHugAngle = randomTrue;\r\n        wave.mySameHugSize = randomTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Give_Us_A_Hug_4\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Give_Us_A_Hug_4\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Give_Us_A_Hug_4\",\r\n            new NextWaveChanceBoosterSetup(thirdWavesStartTimeGroup, boosterGroup5, boosterGroupName5, dampingOverLastPick5, boostMultiplier5 * 2 * 20 / 30, boostDivider5, boostValueOnReset5));\r\n    }\r\n\r\n    /*\r\n    {\r\n        let wave = new GiveUsAHugSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 1], [1, 3], 10, 100, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n        wave.myTimeBetweenClones = timeBetweenClonesVeryHard;\r\n        wave.myDoneDelay = doneDelayVeryHard;\r\n\r\n        wave.myHugSize = new RangeValueOverTime([3, 3], [3, 3], 10, 100, true);\r\n        wave.myHugAngle = new RangeValueOverTime([80, 100], [80, 100], 10, 100, false);\r\n        wave.mySameHugAngle = randomTrue;\r\n        wave.mySameHugSize = randomTrue;\r\n        wave.myHugClonesSameDistance = -1;\r\n\r\n        ventSetup.myWavesMap.set(\"Give_Us_A_Hug_Distance\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Give_Us_A_Hug_Distance\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Give_Us_A_Hug_Distance\",\r\n            new NextWaveChanceBoosterSetup(thirdWavesStartTimeGroup, boosterGroup3, boosterGroupName3, dampingOverLastPick3, boostMultiplier3, boostDivider3, boostValueOnReset3));\r\n    }\r\n    */\r\n\r\n    {\r\n        let wave = new GiveUsAHugSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 1], [1, 4], fourthGroupChance, fourthGroupChance + 150, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myFirstCloneInTheMiddle = true;\r\n        wave.myTimeBetweenClones = timeBetweenClonesMegaHard;\r\n        wave.myDoneDelay = doneDelayMegaHard;\r\n\r\n        wave.myHugSize = 5;\r\n        wave.myHugAngle = 180;\r\n\r\n        ventSetup.myWavesMap.set(\"Give_Us_A_Hug_Cross\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Give_Us_A_Hug_Cross\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Give_Us_A_Hug_Cross\",\r\n            new NextWaveChanceBoosterSetup(fourthWavesStartTimeGroup, boosterGroup5, boosterGroupName5, dampingOverLastPick5, boostMultiplier5 * 2 * 10 / 30, boostDivider5, boostValueOnReset5));\r\n    }\r\n\r\n    // MAN IN THE MIDDLE\r\n\r\n    {\r\n        let wave = new ManInTheMiddleSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([2, 3], [2, 4], 10, 150, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([1.5, 2], [1, 1.5], 10, 150, false);\r\n        wave.myTimeBeforeOpposite = new RangeValueOverTime([1.5, 2], [1, 1.5], 10, 150, false);\r\n        wave.myAllSameTimes = randomVeryTrue;\r\n        wave.myOppositeTimeLessThanTimeBetweenWaves = -1;\r\n        wave.myDoneDelay = doneDelayHard;\r\n\r\n        ventSetup.myWavesMap.set(\"Man_In_The_Middle\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Man_In_The_Middle\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Man_In_The_Middle\",\r\n            new NextWaveChanceBoosterSetup(firstWavesStartTimeGroup, boosterGroup2, boosterGroupName2, dampingOverLastPick2, boostMultiplier2 * 2 * 20 / 30, boostDivider2, boostValueOnReset2));\r\n    }\r\n\r\n    {\r\n        let wave = new ManInTheMiddleSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([2, 3], [2, 4], secondWavesStartTime, secondWavesStartTime + 100, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myTimeBeforeOpposite = new RangeValueOverTime([1, 1.5], [0.7, 1], secondWavesStartTime, secondWavesStartTime + 150, false);\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([1.5, 2], [1, 1.5], 10, 150, false);\r\n        wave.myOppositeTimeAsTimeBetweenWaves = -1;\r\n        wave.mySameOppositeTimeBetweenWaves = -1;\r\n        wave.mySameTimeBetweenWaves = -1;\r\n        wave.myAngleBetweenWaves = new RangeValue([40, 140]);\r\n        wave.myDoneDelay = doneDelayVeryHard;\r\n\r\n        ventSetup.myWavesMap.set(\"Man_In_The_Middle_Everywhere\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Man_In_The_Middle_Everywhere\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Man_In_The_Middle_Everywhere\",\r\n            new NextWaveChanceBoosterSetup(secondWavesStartTimeGroup, boosterGroup4, boosterGroupName4, dampingOverLastPick4, boostMultiplier4, boostDivider4, boostValueOnReset4));\r\n    }\r\n\r\n    {\r\n        let wave = new ManInTheMiddleSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([2, 2], [2, 3], thirdWavesStartTime, thirdWavesStartTime + 100, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([1, 1.5], [0.7, 1], secondWavesStartTime, secondWavesStartTime + 150, false);\r\n        wave.myTimeBeforeOpposite = new RangeValueOverTime([1, 1.5], [0.7, 1], secondWavesStartTime, secondWavesStartTime + 150, false);\r\n        wave.myAllSameTimes = randomVeryTrue;\r\n        wave.myOppositeTimeLessThanTimeBetweenWaves = -1;\r\n        wave.myDoneDelay = doneDelayVeryHard;\r\n\r\n        wave.myWavesSetup.push([subOneWave, 2, \"I_Am_Here_One\"]);\r\n        wave.myWavesSetup.push([subHereWave, 2, \"I_Am_Here\"]);\r\n        wave.myWavesSetup.push([subQueueWave, 8, \"Queue_For_You\"]);\r\n        wave.myWavesSetupPrecompute = randomTrue;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Man_In_The_Middle_Waves\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Man_In_The_Middle_Waves\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Man_In_The_Middle_Waves\",\r\n            new NextWaveChanceBoosterSetup(thirdWavesStartTimeGroup, boosterGroup3, boosterGroupName3, dampingOverLastPick3, boostMultiplier3, boostDivider3, boostValueOnReset3));\r\n    }\r\n\r\n    {\r\n        let wave = new ManInTheMiddleSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([2, 2], [2, 3], thirdWavesStartTime, thirdWavesStartTime + 100, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myTimeBeforeOpposite = new RangeValueOverTime([1, 1.5], [0.7, 1], secondWavesStartTime, secondWavesStartTime + 150, false);\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([1.5, 2], [1, 1.5], 10, 150, false);\r\n        wave.myOppositeTimeAsTimeBetweenWaves = -1;\r\n        wave.mySameOppositeTimeBetweenWaves = -1;\r\n        wave.mySameTimeBetweenWaves = -1;\r\n        wave.myAngleBetweenWaves = new RangeValue([40, 140]);\r\n        wave.myDoneDelay = doneDelayVeryHard;\r\n\r\n        wave.myWavesSetup.push([subHereWave, 1, \"I_Am_Here\"]);\r\n        wave.myWavesSetup.push([subQueueWave, 2, \"Queue_For_You\"]);\r\n        wave.myWavesSetupPrecompute = randomTrue;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Man_In_The_Middle_Everywhere_Waves\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Man_In_The_Middle_Everywhere_Waves\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Man_In_The_Middle_Everywhere_Waves\",\r\n            new NextWaveChanceBoosterSetup(thirdWavesStartTimeGroup, boosterGroup4, boosterGroupName4, dampingOverLastPick4, boostMultiplier4, boostDivider4, boostValueOnReset4));\r\n    }\r\n\r\n    {\r\n        let wave = new ManInTheMiddleSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([2, 3], [2, 4], thirdWavesStartTime, thirdWavesStartTime + 100, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myTimeBetweenWaves = timeBetweenClones;\r\n        wave.myTimeBeforeOpposite = timeBetweenClones;\r\n        wave.myAllSameTimes = randomVeryTrue;\r\n        wave.myOppositeTimeLessThanTimeBetweenWaves = -1;\r\n        wave.myDoneDelay = doneDelayHard;\r\n\r\n        wave.myWavesSetup.push([subGiveUsAHug2Wave, 1, \"Give Us A Hug 2\"]);\r\n        wave.myWavesSetupPrecompute = randomRandom;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Man_In_The_Middle_GUAH2\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Man_In_The_Middle_GUAH2\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Man_In_The_Middle_GUAH2\",\r\n            new NextWaveChanceBoosterSetup(thirdWavesStartTimeGroup, boosterGroup5, boosterGroupName5, dampingOverLastPick5, boostMultiplier5 * 2 * 20 / 30, boostDivider5, boostValueOnReset5));\r\n    }\r\n\r\n    {\r\n        let wave = new ManInTheMiddleSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([2, 3], [2, 4], thirdWavesStartTime, thirdWavesStartTime + 100, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myTimeBeforeOpposite = timeBetweenClones;\r\n        wave.myTimeBetweenWaves = timeBetweenClonesHard;\r\n        wave.myOppositeTimeAsTimeBetweenWaves = -1;\r\n        wave.mySameOppositeTimeBetweenWaves = -1;\r\n        wave.mySameTimeBetweenWaves = -1;\r\n        wave.myAngleBetweenWaves = new RangeValue([40, 140]);\r\n        wave.myDoneDelay = doneDelayHard;\r\n\r\n        wave.myWavesSetup.push([subGiveUsAHug2Wave, 1, \"Give Us A Hug 2\"]);\r\n        wave.myWavesSetupPrecompute = randomRandom;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Man_In_The_Middle_Everywhere_GUAH2\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Man_In_The_Middle_Everywhere_GUAH2\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Man_In_The_Middle_Everywhere_GUAH2\",\r\n            new NextWaveChanceBoosterSetup(thirdWavesStartTimeGroup, boosterGroup5, boosterGroupName5, dampingOverLastPick5, boostMultiplier5 * 2 * 20 / 30, boostDivider5, boostValueOnReset5));\r\n    }\r\n\r\n    {\r\n        let wave = new ManInTheMiddleSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([2, 2], [2, 3], fourthWavesStartTime, fourthWavesStartTime + 100, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myTimeBeforeOpposite = timeBetweenClonesHard;\r\n        wave.myTimeBetweenWaves = timeBetweenClonesHard;\r\n        wave.myAllSameTimes = randomVeryTrue;\r\n        wave.myOppositeTimeLessThanTimeBetweenWaves = -1;\r\n        wave.myDoneDelay = doneDelayHard;\r\n\r\n        wave.myWavesSetup.push([subGiveUsAHug3Wave, 1, \"Give Us A Hug 3\"]);\r\n        wave.myWavesSetupPrecompute = randomRandom;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Man_In_The_Middle_GUAH3\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Man_In_The_Middle_GUAH3\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Man_In_The_Middle_GUAH3\",\r\n            new NextWaveChanceBoosterSetup(fourthWavesStartTimeGroup, boosterGroup5, boosterGroupName5, dampingOverLastPick5, boostMultiplier5 * 2 * 10 / 30, boostDivider5, boostValueOnReset5));\r\n    }\r\n\r\n    {\r\n        let wave = new ManInTheMiddleSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([2, 2], [2, 3], fourthWavesStartTime, fourthWavesStartTime + 100, true);\r\n        wave.myWaveStartAngle = waveStartAngle;\r\n        wave.myTimeBeforeOpposite = timeBetweenClonesHard;\r\n        wave.myTimeBetweenWaves = timeBetweenClonesVeryHard;\r\n        wave.myOppositeTimeAsTimeBetweenWaves = -1;\r\n        wave.mySameOppositeTimeBetweenWaves = -1;\r\n        wave.mySameTimeBetweenWaves = -1;\r\n        wave.myAngleBetweenWaves = new RangeValue([40, 140]);\r\n        wave.myDoneDelay = doneDelayVeryHard;\r\n\r\n        wave.myWavesSetup.push([subGiveUsAHug3Wave, 1, \"Give Us A Hug 3\"]);\r\n        wave.myWavesSetupPrecompute = randomRandom;\r\n        wave.myWavesSetupPickOne = randomVeryTrue;\r\n\r\n        ventSetup.myWavesMap.set(\"Man_In_The_Middle_Everywhere_GUAH3\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Man_In_The_Middle_Everywhere_GUAH3\", nextWavesSetup);\r\n        ventSetup.myNextWaveChanceBoosterSetupMap.set(\"Man_In_The_Middle_Everywhere_GUAH3\",\r\n            new NextWaveChanceBoosterSetup(fourthWavesStartTimeGroup, boosterGroup5, boosterGroupName5, dampingOverLastPick5, boostMultiplier5 * 2 * 10 / 30, boostDivider5, boostValueOnReset5));\r\n    }\r\n\r\n    ventSetup.myFirstWave = \"Zero\";\r\n\r\n    return ventSetup;\r\n};",
        "TrialState.prototype._firstVentSetup = function () {\r\n    let ventSetup = new VentSetup();\r\n\r\n    ventSetup.myIsEndless = false;\r\n    ventSetup.myClonesToDismiss = 0;\r\n    ventSetup.myVentDuration = 80;\r\n\r\n    ventSetup.myBreakSetup.myBreakDuration = new RangeValue([4, 5]);\r\n    ventSetup.myBreakSetup.myBreakTimeCooldown = new RangeValueOverTime([30, 40], [20, 30], 10, 30, false);\r\n    ventSetup.myBreakSetup.myBreakCloneCooldown = 5;\r\n\r\n    ventSetup.mySmallBreakSetup.myBreakDuration = new RangeValueOverTime([2, 3], [1.5, 2.5], 30, 60, false);\r\n    ventSetup.mySmallBreakSetup.myBreakTimeCooldown = new RangeValueOverTime([40, 50], [7, 12], 10, 45, false);\r\n    ventSetup.mySmallBreakSetup.myBreakCloneCooldown = new ValueOverTime(5, 3, 45, 50, true);\r\n\r\n    {\r\n        let wave = new IAmHereWaveSetup();\r\n\r\n        wave.myClonesCount = 1;\r\n        wave.myWaveStartAngle = 0;\r\n        wave.myDoneDelay = new RangeValue([5, 6], false);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n        wave.myRefDirection = [0, 0, -1];\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"I_Am_Here_Warm_Up\", 100);\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Here_Start\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Here_Start\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new IAmHereWaveSetup();\r\n\r\n        wave.myClonesCount = 1;\r\n        wave.myWaveStartAngle = new RangeValueOverTime([10, 20], [20, 40], 10, 30, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([5, 6], [2.5, 4], 10, 30, false);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n        wave.myRefDirection = [0, 0, -1];\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"I_Am_Here_Warm_Up\", 100, 0, 30);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100, 30, null);\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Here_Warm_Up\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Here_Warm_Up\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new IAmHereWaveSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 1], [1, 3], 30, 65, true);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([10, 30], [10, 50], 30, 70, false);\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.myMinAngleBetweenClones = 10;\r\n        wave.myTimeBetweenClones = new RangeValueOverTime([2, 3], [1, 2], 30, 70, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([2.5, 4], [2.5, 3], 30, 70, false);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", new ValueOverTime(1000000, 150, 60, 70), 60);\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Here_Front\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Here_Front\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new IAmHereWaveSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 1], [1, 3], 30, 65, true);\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.myMinAngleBetweenClones = 10;\r\n        wave.myWaveStartAngle = new RangeValueOverTime([70, 110], [60, 150], 30, 70, false);\r\n        wave.myTimeBetweenClones = new RangeValueOverTime([2, 3], [1, 2], 30, 70, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([2.5, 4], [2.5, 3], 30, 70, false);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 75);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", new ValueOverTime(1000000, 150, 60, 70), 60);\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Here_Side\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Here_Side\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new IAmEverywhereWaveSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([3, 3], [3, 4], 65, 70, true);\r\n        wave.myAngleBetweenWaves = new RangeValueOverTime([60, 110], [60, 110], 65, 75, false);\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([2, 3], [1.5, 2.5], 65, 75, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([3, 4], [2.5, 4], 65, 75, false);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([60, 110], [60, 110], 65, 75, false);\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 75);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Everywhere\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Everywhere\", nextWavesSetup);\r\n    }\r\n\r\n    ventSetup.myFirstWave = \"I_Am_Here_Start\";\r\n\r\n    return ventSetup;\r\n};",
        "TrialState.prototype._secondVentSetup = function () {\r\n    let ventSetup = new VentSetup();\r\n\r\n    ventSetup.myIsEndless = false;\r\n    ventSetup.myClonesToDismiss = 0;\r\n    ventSetup.myVentDuration = 95;\r\n\r\n    ventSetup.myBreakSetup.myBreakDuration = new RangeValue([4, 5]);\r\n    ventSetup.myBreakSetup.myBreakTimeCooldown = new RangeValueOverTime([30, 35], [30, 35], 10, 30, false);\r\n    ventSetup.myBreakSetup.myBreakCloneCooldown = 5;\r\n\r\n    ventSetup.mySmallBreakSetup.myBreakDuration = new RangeValueOverTime([2, 3], [1.5, 2.5], 30, 75, false);\r\n    ventSetup.mySmallBreakSetup.myBreakTimeCooldown = new RangeValueOverTime([40, 50], [8, 12], 10, 45, false);\r\n    ventSetup.mySmallBreakSetup.myBreakCloneCooldown = 3;\r\n\r\n    ventSetup.myCloneRotationSetup.myTiltAngle = new RangeValueOverTime([0, 10], [0, 15], 40, 75, false);\r\n    ventSetup.myCloneRotationSetup.myTiltChance = new RangeValueOverTime([1, 6], [1, 3], 40, 75, true);\r\n    ventSetup.myCloneRotationSetup.myTiltStartTime = 40;\r\n\r\n    {\r\n        let wave = new IAmHereWaveSetup();\r\n\r\n        wave.myClonesCount = 1;\r\n        wave.myWaveStartAngle = new RangeValueOverTime([10, 30], [10, 50], 10, 70, false);\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.myMinAngleBetweenClones = 10;\r\n        wave.myTimeBetweenClones = new RangeValueOverTime([2, 3], [1, 2], 0, 70, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([2, 4], [2, 2.5], 10, 70, false);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n        wave.myRefDirection = [0, 0, -1];\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"I_Am_Here_Warm_Up\", 100, 0, 20);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100, 20);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100, 20);\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Here_Warm_Up\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Here_Warm_Up\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new IAmHereWaveSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 1], [1, 3], 0, 30, true);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([10, 30], [10, 50], 10, 70, false);\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.myMinAngleBetweenClones = 10;\r\n        wave.myTimeBetweenClones = new RangeValueOverTime([2, 3], [1, 2], 0, 70, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([2, 4], [2, 2.5], 10, 70, false);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 125);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 125);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 125, 50);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", new ValueOverTime(1000000, 150, 50, 60), 50);\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Here_Front\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Here_Front\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new IAmHereWaveSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 1], [1, 3], 0, 30, true);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([70, 110], [60, 150], 10, 70, false);\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.myMinAngleBetweenClones = 10;\r\n        wave.myTimeBetweenClones = new RangeValueOverTime([2, 3], [1, 2], 0, 70, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([2, 4], [2, 2.5], 10, 70, false);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 125);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 125);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 125, 50);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", new ValueOverTime(1000000, 150, 50, 60), 50);\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Here_Side\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Here_Side\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new IAmEverywhereWaveSetup();\r\n\r\n        wave.myWavesCount = new RangeValue([3, 4]);\r\n        wave.myAngleBetweenWaves = new RangeValueOverTime([60, 110], [60, 130], 20, 60, false);\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([2, 3], [1.5, 2.25], 0, 70, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([3, 4], [2.5, 4], 10, 70, false);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([60, 110], [60, 130], 20, 60, false);\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 125);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 125);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", new ValueOverTime(1000000, 150, 50, 60), 50);\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Everywhere\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Everywhere\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new MerryGoRoundSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([4, 5], [4, 6], 30, 60, true);\r\n        wave.myAngleBetweenWaves = new RangeValue([15, 25]);\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([2, 3], [0.75, 1.25], 0, 70, false);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([10, 30], [10, 120], 20, 70, false);\r\n        wave.mySameTimeBetweenWaves = 1;\r\n        wave.myDoneDelay = new RangeValueOverTime([2, 4], [2, 2.5], 10, 70, false);\r\n        wave.myWaveDirection = 1;\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 125, 50);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", new ValueOverTime(1000000, 150, 50, 60), 50);\r\n\r\n        ventSetup.myWavesMap.set(\"Merry_Go_Round_Left\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Merry_Go_Round_Left\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new MerryGoRoundSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([4, 5], [4, 6], 30, 60, true);\r\n        wave.myAngleBetweenWaves = new RangeValue([15, 25]);\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([2, 3], [0.75, 1.25], 0, 70, false);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([10, 30], [10, 120], 20, 70, false);\r\n        wave.mySameTimeBetweenWaves = 1;\r\n        wave.myDoneDelay = new RangeValueOverTime([2, 4], [2, 2.5], 10, 70, false);\r\n        wave.myWaveDirection = -1;\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 125, 50);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", new ValueOverTime(1000000, 150, 50, 60), 50);\r\n\r\n        ventSetup.myWavesMap.set(\"Merry_Go_Round_Right\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Merry_Go_Round_Right\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new QueueForYouWaveSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([3, 3], [2, 4], 55, 60, true);\r\n        wave.myWaveStartAngle = new RangeValue([25, 120]);\r\n        wave.myTimeBetweenClones = new RangeValueOverTime([2, 3], [1, 2], 0, 70, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([2, 4], [2, 2.5], 10, 70, false);\r\n        wave.mySameTimeBetweenClones = 1;\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 125);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 125);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 125, 50);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n\r\n        ventSetup.myWavesMap.set(\"Queue_For_You\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Queue_For_You\", nextWavesSetup);\r\n    }\r\n\r\n    ventSetup.myFirstWave = \"I_Am_Here_Warm_Up\";\r\n\r\n    return ventSetup;\r\n};",
        "TrialState.prototype._thirdVentSetup = function () {\r\n    let ventSetup = new VentSetup();\r\n\r\n    ventSetup.myIsEndless = false;\r\n    ventSetup.myClonesToDismiss = 0;\r\n    ventSetup.myVentDuration = 110;\r\n\r\n    ventSetup.myBreakSetup.myBreakDuration = new RangeValue([3, 4]);\r\n    ventSetup.myBreakSetup.myBreakTimeCooldown = new RangeValueOverTime([40, 45], [30, 35], 10, 30, false);\r\n    ventSetup.myBreakSetup.myBreakCloneCooldown = 5;\r\n\r\n    ventSetup.mySmallBreakSetup.myBreakDuration = new RangeValueOverTime([2, 3], [1.5, 2.5], 30, 75, false);\r\n    ventSetup.mySmallBreakSetup.myBreakTimeCooldown = new RangeValueOverTime([40, 50], [8, 12], 10, 45, false);\r\n    ventSetup.mySmallBreakSetup.myBreakCloneCooldown = 3;\r\n\r\n    ventSetup.myCloneRotationSetup.mySpinSpeed = new RangeValue([4, 6], false);\r\n    ventSetup.myCloneRotationSetup.mySpinChance = new RangeValueOverTime([1, 12], [1, 4], 50, 95, true);\r\n    ventSetup.myCloneRotationSetup.mySpinStartTime = 50;\r\n\r\n    ventSetup.myCloneRotationSetup.myTiltAngle = new RangeValueOverTime([0, 10], [0, 15], 30, 60, false);\r\n    ventSetup.myCloneRotationSetup.myTiltChance = new RangeValueOverTime([1, 5], [1, 2], 30, 70, true);\r\n    ventSetup.myCloneRotationSetup.myTiltStartTime = 30;\r\n\r\n    {\r\n        let wave = new ZeroWaveSetup();\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n\r\n        ventSetup.myWavesMap.set(\"Zero\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Zero\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new IAmHereWaveSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 3], [1, 5], 10, 70, true);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([10, 30], [10, 50], 10, 70, false);\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.myMinAngleBetweenClones = 10;\r\n        wave.myTimeBetweenClones = new RangeValueOverTime([2, 3], [1, 2], 10, 70, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([2, 4], [2, 2.75], 10, 70, false);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 30, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 83, 93);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 60, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 150, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 100, 110);\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Here_Front\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Here_Front\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new IAmHereWaveSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 3], [1, 5], 10, 70, true);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([70, 110], [60, 150], 10, 70, false);\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.myMinAngleBetweenClones = 10;\r\n        wave.myTimeBetweenClones = new RangeValueOverTime([2, 3], [1, 2], 10, 70, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([2, 4], [2, 2.75], 10, 70, false);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 30, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 83, 93);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 60, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 150, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 100, 110);\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Here_Side\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Here_Side\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new IAmEverywhereWaveSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([3, 4], [3, 5], 10, 70, true);\r\n        wave.myAngleBetweenWaves = new RangeValueOverTime([60, 110], [60, 150], 10, 70, false);\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([2, 3], [1.5, 2.25], 10, 70, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([3, 4], [2.5, 3], 10, 70, false);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([60, 110], [60, 150], 10, 70, false);\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 30, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 83, 93);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 60, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 150, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 100, 110);\r\n\r\n        ventSetup.myWavesMap.set(\"I_Am_Everywhere\", wave);\r\n        ventSetup.myNextWavesMap.set(\"I_Am_Everywhere\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new MerryGoRoundSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([3, 5], [4, 7], 10, 60, true);\r\n        wave.myAngleBetweenWaves = new RangeValue([15, 25]);\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([2, 3], [0.75, 1.25], 10, 70, false);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([10, 60], [10, 140], 10, 70, false);\r\n        wave.mySameTimeBetweenWaves = 1;\r\n        wave.myDoneDelay = new RangeValueOverTime([2, 4], [2, 2.75], 10, 70, false);\r\n        wave.myWaveDirection = 1;\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 30, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 83, 93);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 60, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 150, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 100, 110);\r\n\r\n        ventSetup.myWavesMap.set(\"Merry_Go_Round_Left\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Merry_Go_Round_Left\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new MerryGoRoundSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([3, 5], [4, 7], 10, 60, true);\r\n        wave.myAngleBetweenWaves = new RangeValue([15, 25]);\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([2, 3], [0.75, 1.25], 10, 70, false);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([10, 60], [10, 140], 10, 70, false);\r\n        wave.mySameTimeBetweenWaves = 1;\r\n        wave.myDoneDelay = new RangeValueOverTime([2, 4], [2, 2.75], 10, 70, false);\r\n        wave.myWaveDirection = -1;\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 30, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 83, 93);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 60, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 150, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 100, 110);\r\n\r\n        ventSetup.myWavesMap.set(\"Merry_Go_Round_Right\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Merry_Go_Round_Right\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new QueueForYouWaveSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([2, 3], [2, 5], 10, 70, true);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([10, 60], [10, 140], 10, 70, false);\r\n        wave.myTimeBetweenClones = new RangeValueOverTime([2, 3], [1, 2], 10, 70, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([2, 4], [2, 2.75], 10, 70, false);\r\n        wave.mySameTimeBetweenClones = new RangeValueOverTime([1, 1], [-0.5, 1], 10, 70, false); // >= 0 means true\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 30, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 83, 93);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 60, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 150, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 100, 110);\r\n\r\n        ventSetup.myWavesMap.set(\"Queue_For_You\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Queue_For_You\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new GiveUsAHugSetup();\r\n\r\n        wave.myClonesCount = new RangeValueOverTime([1, 1], [2, 3], 40, 50, true);\r\n        wave.mySpawnConeAngle = new RangeValue([20, 40]);\r\n        wave.myMinAngleBetweenClones = 10;\r\n        wave.myWaveStartAngle = new RangeValueOverTime([0, 0], [10, 80], 40, 70, false);\r\n        wave.myTimeBetweenClones = new RangeValueOverTime([2, 3], [2, 3], 10, 70, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([2.5, 4], [2.5, 3], 10, 70, false);\r\n        wave.myFirstCloneInTheMiddle = true;\r\n\r\n        wave.myHugSize = new RangeValueOverTime([2, 2], [2, 2], 40, 50, true);\r\n        wave.myHugAngle = new RangeValueOverTime([30, 40], [30, 50], 40, 60, false);\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 60, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 150, 70);\r\n        nextWavesSetup.addWave(\"Man_In_The_Middle\", 1000000, 100, 110);\r\n\r\n        ventSetup.myWavesMap.set(\"Give_Us_A_Hug\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Give_Us_A_Hug\", nextWavesSetup);\r\n    }\r\n\r\n    {\r\n        let wave = new ManInTheMiddleSetup();\r\n\r\n        wave.myWavesCount = new RangeValueOverTime([3, 3], [3, 4], 70, 85, true);\r\n        wave.myTimeBeforeStart = new RangeValueOverTime([1.5, 2], [1.5, 2], 70, 85, false);\r\n        wave.myTimeBetweenWaves = new RangeValueOverTime([1.5, 2], [1, 1.5], 70, 85, false);\r\n        wave.myWaveStartAngle = new RangeValueOverTime([10, 140], [10, 140], 70, 85, false);\r\n        wave.myDoneDelay = new RangeValueOverTime([3, 4], [2.5, 3], 10, 70, false);\r\n\r\n        let nextWavesSetup = new NextWavesSetup();\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Right\", 100);\r\n        nextWavesSetup.addWave(\"Merry_Go_Round_Left\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Front\", 50);\r\n        nextWavesSetup.addWave(\"I_Am_Here_Side\", 100);\r\n        nextWavesSetup.addWave(\"I_Am_Everywhere\", 100);\r\n        nextWavesSetup.addWave(\"Queue_For_You\", 100);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 30, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 100, 40);\r\n        nextWavesSetup.addWave(\"Give_Us_A_Hug\", 1000000, 83, 93);\r\n\r\n        ventSetup.myWavesMap.set(\"Man_In_The_Middle\", wave);\r\n        ventSetup.myNextWavesMap.set(\"Man_In_The_Middle\", nextWavesSetup);\r\n    }\r\n\r\n    ventSetup.myFirstWave = \"Zero\";\r\n\r\n    return ventSetup;\r\n};"
    ],
    "mappings": "qoBAAA,yBAEA,OAAO,eAAe,EAAS,aAAc,CAC3C,MAAO,KAET,EAAQ,mBAAqB,GAC7B,EAAQ,SAAW,GACnB,EAAQ,OAAS,GACjB,EAAQ,OAAS,EAAQ,WAAa,EAAQ,QAAU,OAOxD,GAAI,IAAU,KACd,EAAQ,QAAU,GAClB,GAAI,IAAa,MAAO,eAAiB,YAAc,aAAe,MACtE,EAAQ,WAAa,GACrB,GAAI,IAAS,KAAK,OAOlB,EAAQ,OAAS,GAEjB,YAA4B,EAAM,CAChC,EAAQ,WAAa,GAAa,EAGpC,GAAI,IAAS,KAAK,GAAK,IAOvB,YAAkB,EAAG,CACnB,MAAO,GAAI,GAab,YAAgB,EAAG,EAAG,CACpB,MAAO,MAAK,IAAI,EAAI,IAAM,GAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAI,KAAK,IAAI,IAG1E,AAAK,KAAK,OAAO,MAAK,MAAQ,UAAY,CAIxC,OAHI,GAAI,EACJ,EAAI,UAAU,OAEX,KACL,GAAK,UAAU,GAAK,UAAU,GAGhC,MAAO,MAAK,KAAK,OCjEnB,0BAEA,YAAiB,EAAK,CAA6B,MAAI,OAAO,SAAW,YAAc,MAAO,QAAO,UAAa,SAAY,GAAU,SAAiB,EAAK,CAAE,MAAO,OAAO,IAAiB,GAAU,SAAiB,EAAK,CAAE,MAAO,IAAO,MAAO,SAAW,YAAc,EAAI,cAAgB,QAAU,IAAQ,OAAO,UAAY,SAAW,MAAO,IAAiB,GAAQ,GAEnX,OAAO,eAAe,EAAS,aAAc,CAC3C,MAAO,KAET,EAAQ,OAAS,GACjB,EAAQ,MAAQ,GAChB,EAAQ,KAAO,GACf,EAAQ,SAAW,GACnB,EAAQ,WAAa,GACrB,EAAQ,IAAM,GACd,EAAQ,UAAY,GACpB,EAAQ,OAAS,GACjB,EAAQ,QAAU,GAClB,EAAQ,YAAc,GACtB,EAAQ,SAAW,GACnB,EAAQ,OAAS,GACjB,EAAQ,MAAQ,GAChB,EAAQ,aAAe,GACvB,EAAQ,YAAc,GACtB,EAAQ,IAAM,GACd,EAAQ,KAAO,GACf,EAAQ,IAAM,GACd,EAAQ,IAAM,GACd,EAAQ,SAAW,GACnB,EAAQ,YAAc,GACtB,EAAQ,OAAS,GACjB,EAAQ,eAAiB,GACzB,EAAQ,qBAAuB,GAC/B,EAAQ,IAAM,EAAQ,IAAM,OAE5B,GAAI,IAAW,GAAwB,KAEvC,aAAoC,CAAE,GAAI,MAAO,UAAY,WAAY,MAAO,MAAM,GAAI,GAAQ,GAAI,SAAW,UAA2B,UAAoC,CAAE,MAAO,IAAiB,EAE1M,YAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAO,GAAI,IAAQ,MAAQ,GAAQ,KAAS,UAAY,MAAO,IAAQ,WAAc,MAAO,CAAE,QAAW,GAAS,GAAI,GAAQ,KAA4B,GAAI,GAAS,EAAM,IAAI,GAAQ,MAAO,GAAM,IAAI,GAAQ,GAAI,GAAS,GAAQ,EAAwB,OAAO,gBAAkB,OAAO,yBAA0B,OAAS,KAAO,GAAO,GAAI,OAAO,UAAU,eAAe,KAAK,EAAK,GAAM,CAAE,GAAI,GAAO,EAAwB,OAAO,yBAAyB,EAAK,GAAO,KAAM,AAAI,GAAS,GAAK,KAAO,EAAK,KAAQ,OAAO,eAAe,EAAQ,EAAK,GAAgB,EAAO,GAAO,EAAI,GAAY,SAAO,QAAa,EAAS,GAAS,EAAM,IAAI,EAAK,GAAkB,EAYruB,aAAkB,CAChB,GAAI,GAAM,GAAI,IAAS,WAAW,GAElC,MAAI,IAAS,YAAc,cACzB,GAAI,GAAK,EACT,EAAI,GAAK,GAGX,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAUT,YAAe,EAAG,CAChB,GAAI,GAAM,GAAI,IAAS,WAAW,GAClC,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAWT,YAAc,EAAK,EAAG,CACpB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAUT,YAAkB,EAAK,CACrB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAaT,YAAoB,EAAK,EAAK,EAAK,EAAK,CACtC,GAAI,GAAM,GAAI,IAAS,WAAW,GAClC,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAcT,YAAa,EAAK,EAAK,EAAK,EAAK,EAAK,CACpC,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAWT,YAAmB,EAAK,EAAG,CAGzB,GAAI,IAAQ,EAAG,CACb,GAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,MAET,GAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GAGb,MAAO,GAWT,YAAgB,EAAK,EAAG,CACtB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GAEP,EAAM,EAAK,EAAK,EAAK,EAEzB,MAAK,GAIL,GAAM,EAAM,EACZ,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,CAAC,EAAK,EACf,EAAI,GAAK,CAAC,EAAK,EACf,EAAI,GAAK,EAAK,EACP,GARE,KAmBX,YAAiB,EAAK,EAAG,CAEvB,GAAI,GAAK,EAAE,GACX,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,EACF,EAUT,YAAqB,EAAG,CACtB,MAAO,GAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAYhC,YAAkB,EAAK,EAAG,EAAG,CAC3B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACjB,EAYT,YAAgB,EAAK,EAAG,EAAK,CAC3B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACjB,SAAI,GAAK,EAAK,EAAI,EAAK,EACvB,EAAI,GAAK,EAAK,EAAI,EAAK,EACvB,EAAI,GAAK,EAAK,CAAC,EAAI,EAAK,EACxB,EAAI,GAAK,EAAK,CAAC,EAAI,EAAK,EACjB,EAYT,YAAe,EAAK,EAAG,EAAG,CACxB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACP,EAeT,YAAsB,EAAK,EAAK,CAC9B,GAAI,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACjB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,CAAC,EACV,EAAI,GAAK,EACF,EAeT,YAAqB,EAAK,EAAG,CAC3B,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GACJ,EAUT,YAAa,EAAG,CACd,MAAO,QAAU,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,IAUpE,YAAc,EAAG,CACf,MAAO,MAAK,MAAM,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,IAWxC,YAAa,EAAG,EAAG,EAAG,EAAG,CACvB,SAAE,GAAK,EAAE,GAAK,EAAE,GAChB,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAChB,CAAC,EAAG,EAAG,GAYhB,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAkB,EAAK,EAAG,EAAG,CAC3B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAWT,YAAqB,EAAG,EAAG,CACzB,MAAO,GAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,GAWvE,YAAgB,EAAG,EAAG,CACpB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,MAAO,MAAK,IAAI,EAAK,IAAO,GAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,GAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,GAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,GAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,IAYrV,YAAwB,EAAK,EAAG,EAAG,CACjC,SAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EACT,EAaT,YAA8B,EAAK,EAAG,EAAG,EAAO,CAC9C,SAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EAChB,EAQT,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAM,GACV,EAAQ,IAAM,KC9ed,0BAEA,YAAiB,EAAK,CAA6B,MAAI,OAAO,SAAW,YAAc,MAAO,QAAO,UAAa,SAAY,GAAU,SAAiB,EAAK,CAAE,MAAO,OAAO,IAAiB,GAAU,SAAiB,EAAK,CAAE,MAAO,IAAO,MAAO,SAAW,YAAc,EAAI,cAAgB,QAAU,IAAQ,OAAO,UAAY,SAAW,MAAO,IAAiB,GAAQ,GAEnX,OAAO,eAAe,EAAS,aAAc,CAC3C,MAAO,KAET,EAAQ,OAAS,GACjB,EAAQ,MAAQ,GAChB,EAAQ,KAAO,GACf,EAAQ,SAAW,GACnB,EAAQ,WAAa,GACrB,EAAQ,IAAM,GACd,EAAQ,OAAS,GACjB,EAAQ,YAAc,GACtB,EAAQ,SAAW,GACnB,EAAQ,OAAS,GACjB,EAAQ,MAAQ,GAChB,EAAQ,UAAY,GACpB,EAAQ,aAAe,GACvB,EAAQ,YAAc,GACtB,EAAQ,gBAAkB,GAC1B,EAAQ,IAAM,GACd,EAAQ,KAAO,GACf,EAAQ,IAAM,GACd,EAAQ,SAAW,GACnB,EAAQ,eAAiB,GACzB,EAAQ,qBAAuB,GAC/B,EAAQ,YAAc,GACtB,EAAQ,OAAS,GACjB,EAAQ,IAAM,EAAQ,IAAM,OAE5B,GAAI,GAAW,GAAwB,KAEvC,aAAoC,CAAE,GAAI,MAAO,UAAY,WAAY,MAAO,MAAM,GAAI,GAAQ,GAAI,SAAW,UAA2B,UAAoC,CAAE,MAAO,IAAiB,EAE1M,YAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAO,GAAI,IAAQ,MAAQ,GAAQ,KAAS,UAAY,MAAO,IAAQ,WAAc,MAAO,CAAE,QAAW,GAAS,GAAI,GAAQ,KAA4B,GAAI,GAAS,EAAM,IAAI,GAAQ,MAAO,GAAM,IAAI,GAAQ,GAAI,GAAS,GAAQ,EAAwB,OAAO,gBAAkB,OAAO,yBAA0B,OAAS,KAAO,GAAO,GAAI,OAAO,UAAU,eAAe,KAAK,EAAK,GAAM,CAAE,GAAI,GAAO,EAAwB,OAAO,yBAAyB,EAAK,GAAO,KAAM,AAAI,GAAS,GAAK,KAAO,EAAK,KAAQ,OAAO,eAAe,EAAQ,EAAK,GAAgB,EAAO,GAAO,EAAI,GAAY,SAAO,QAAa,EAAS,GAAS,EAAM,IAAI,EAAK,GAAkB,EA0BruB,aAAkB,CAChB,GAAI,GAAM,GAAI,GAAS,WAAW,GAElC,MAAI,GAAS,YAAc,cACzB,GAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,GAGX,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAUT,YAAe,EAAG,CAChB,GAAI,GAAM,GAAI,GAAS,WAAW,GAClC,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAWT,YAAc,EAAK,EAAG,CACpB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAUT,YAAkB,EAAK,CACrB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAeT,YAAoB,EAAG,EAAG,EAAG,EAAG,EAAI,EAAI,CACtC,GAAI,GAAM,GAAI,GAAS,WAAW,GAClC,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAgBT,YAAa,EAAK,EAAG,EAAG,EAAG,EAAG,EAAI,EAAI,CACpC,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAWT,YAAgB,EAAK,EAAG,CACtB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAK,EAAK,EAAK,EAEzB,MAAK,GAIL,GAAM,EAAM,EACZ,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,CAAC,EAAK,EACf,EAAI,GAAK,CAAC,EAAK,EACf,EAAI,GAAK,EAAK,EACd,EAAI,GAAM,GAAK,EAAM,EAAK,GAAO,EACjC,EAAI,GAAM,GAAK,EAAM,EAAK,GAAO,EAC1B,GAVE,KAoBX,YAAqB,EAAG,CACtB,MAAO,GAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAYhC,YAAkB,EAAK,EAAG,EAAG,CAC3B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAC7B,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EACtB,EAYT,YAAgB,EAAK,EAAG,EAAK,CAC3B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACjB,SAAI,GAAK,EAAK,EAAI,EAAK,EACvB,EAAI,GAAK,EAAK,EAAI,EAAK,EACvB,EAAI,GAAK,EAAK,CAAC,EAAI,EAAK,EACxB,EAAI,GAAK,EAAK,CAAC,EAAI,EAAK,EACxB,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAYT,YAAe,EAAK,EAAG,EAAG,CACxB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAYT,YAAmB,EAAK,EAAG,EAAG,CAC5B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAC7B,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EACtB,EAeT,YAAsB,EAAK,EAAK,CAC9B,GAAI,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACjB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,CAAC,EACV,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAeT,YAAqB,EAAK,EAAG,CAC3B,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAeT,YAAyB,EAAK,EAAG,CAC/B,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAUT,YAAa,EAAG,CACd,MAAO,SAAW,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,IAUjG,YAAc,EAAG,CACf,MAAO,MAAK,MAAM,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,GAYxD,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAkB,EAAK,EAAG,EAAG,CAC3B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAwB,EAAK,EAAG,EAAG,CACjC,SAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EACT,EAaT,YAA8B,EAAK,EAAG,EAAG,EAAO,CAC9C,SAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EAChB,EAWT,YAAqB,EAAG,EAAG,CACzB,MAAO,GAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,GAWzG,YAAgB,EAAG,EAAG,CACpB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,MAAO,MAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,IAQ/f,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAM,GACV,EAAQ,IAAM,KCliBd,0BAEA,YAAiB,EAAK,CAA6B,MAAI,OAAO,SAAW,YAAc,MAAO,QAAO,UAAa,SAAY,GAAU,SAAiB,EAAK,CAAE,MAAO,OAAO,IAAiB,GAAU,SAAiB,EAAK,CAAE,MAAO,IAAO,MAAO,SAAW,YAAc,EAAI,cAAgB,QAAU,IAAQ,OAAO,UAAY,SAAW,MAAO,IAAiB,GAAQ,GAEnX,OAAO,eAAe,EAAS,aAAc,CAC3C,MAAO,KAET,EAAQ,OAAS,GACjB,EAAQ,SAAW,GACnB,EAAQ,MAAQ,GAChB,EAAQ,KAAO,GACf,EAAQ,WAAa,GACrB,EAAQ,IAAM,GACd,EAAQ,SAAW,GACnB,EAAQ,UAAY,GACpB,EAAQ,OAAS,GACjB,EAAQ,QAAU,GAClB,EAAQ,YAAc,GACtB,EAAQ,SAAW,GACnB,EAAQ,UAAY,GACpB,EAAQ,OAAS,GACjB,EAAQ,MAAQ,GAChB,EAAQ,gBAAkB,GAC1B,EAAQ,aAAe,GACvB,EAAQ,YAAc,GACtB,EAAQ,UAAY,GACpB,EAAQ,SAAW,GACnB,EAAQ,eAAiB,GACzB,EAAQ,WAAa,GACrB,EAAQ,IAAM,GACd,EAAQ,KAAO,GACf,EAAQ,IAAM,GACd,EAAQ,SAAW,GACnB,EAAQ,eAAiB,GACzB,EAAQ,qBAAuB,GAC/B,EAAQ,YAAc,GACtB,EAAQ,OAAS,GACjB,EAAQ,IAAM,EAAQ,IAAM,OAE5B,GAAI,GAAW,GAAwB,KAEvC,aAAoC,CAAE,GAAI,MAAO,UAAY,WAAY,MAAO,MAAM,GAAI,GAAQ,GAAI,SAAW,UAA2B,UAAoC,CAAE,MAAO,IAAiB,EAE1M,YAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAO,GAAI,IAAQ,MAAQ,GAAQ,KAAS,UAAY,MAAO,IAAQ,WAAc,MAAO,CAAE,QAAW,GAAS,GAAI,GAAQ,KAA4B,GAAI,GAAS,EAAM,IAAI,GAAQ,MAAO,GAAM,IAAI,GAAQ,GAAI,GAAS,GAAQ,EAAwB,OAAO,gBAAkB,OAAO,yBAA0B,OAAS,KAAO,GAAO,GAAI,OAAO,UAAU,eAAe,KAAK,EAAK,GAAM,CAAE,GAAI,GAAO,EAAwB,OAAO,yBAAyB,EAAK,GAAO,KAAM,AAAI,GAAS,GAAK,KAAO,EAAK,KAAQ,OAAO,eAAe,EAAQ,EAAK,GAAgB,EAAO,GAAO,EAAI,GAAY,SAAO,QAAa,EAAS,GAAS,EAAM,IAAI,EAAK,GAAkB,EAYruB,aAAkB,CAChB,GAAI,GAAM,GAAI,GAAS,WAAW,GAElC,MAAI,GAAS,YAAc,cACzB,GAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,GAGX,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAWT,YAAkB,EAAK,EAAG,CACxB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,IACJ,EAUT,YAAe,EAAG,CAChB,GAAI,GAAM,GAAI,GAAS,WAAW,GAClC,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAWT,YAAc,EAAK,EAAG,CACpB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAkBT,YAAoB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,CAC/D,GAAI,GAAM,GAAI,GAAS,WAAW,GAClC,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAmBT,YAAa,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,CAC7D,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAUT,YAAkB,EAAK,CACrB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAWT,YAAmB,EAAK,EAAG,CAEzB,GAAI,IAAQ,EAAG,CACb,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACZ,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,MAET,GAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GAGb,MAAO,GAWT,YAAgB,EAAK,EAAG,CACtB,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,CAAC,EAAM,EAAM,EAAM,EACzB,EAAM,EAAM,EAAM,EAAM,EAExB,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAExC,MAAK,GAIL,GAAM,EAAM,EACZ,EAAI,GAAK,EAAM,EACf,EAAI,GAAM,EAAC,EAAM,EAAM,EAAM,GAAO,EACpC,EAAI,GAAM,GAAM,EAAM,EAAM,GAAO,EACnC,EAAI,GAAK,EAAM,EACf,EAAI,GAAM,GAAM,EAAM,EAAM,GAAO,EACnC,EAAI,GAAM,EAAC,EAAM,EAAM,EAAM,GAAO,EACpC,EAAI,GAAK,EAAM,EACf,EAAI,GAAM,EAAC,EAAM,EAAM,EAAM,GAAO,EACpC,EAAI,GAAM,GAAM,EAAM,EAAM,GAAO,EAC5B,GAbE,KAwBX,YAAiB,EAAK,EAAG,CACvB,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACZ,SAAI,GAAK,EAAM,EAAM,EAAM,EAC3B,EAAI,GAAK,EAAM,EAAM,EAAM,EAC3B,EAAI,GAAK,EAAM,EAAM,EAAM,EAC3B,EAAI,GAAK,EAAM,EAAM,EAAM,EAC3B,EAAI,GAAK,EAAM,EAAM,EAAM,EAC3B,EAAI,GAAK,EAAM,EAAM,EAAM,EAC3B,EAAI,GAAK,EAAM,EAAM,EAAM,EAC3B,EAAI,GAAK,EAAM,EAAM,EAAM,EAC3B,EAAI,GAAK,EAAM,EAAM,EAAM,EACpB,EAUT,YAAqB,EAAG,CACtB,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACZ,MAAO,GAAO,GAAM,EAAM,EAAM,GAAO,EAAO,EAAC,EAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAYnG,YAAkB,EAAK,EAAG,EAAG,CAC3B,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACZ,SAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAChC,EAYT,YAAmB,EAAK,EAAG,EAAG,CAC5B,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAI,EAAM,EAAI,EAAM,EAC7B,EAAI,GAAK,EAAI,EAAM,EAAI,EAAM,EAC7B,EAAI,GAAK,EAAI,EAAM,EAAI,EAAM,EACtB,EAYT,YAAgB,EAAK,EAAG,EAAK,CAC3B,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACjB,SAAI,GAAK,EAAI,EAAM,EAAI,EACvB,EAAI,GAAK,EAAI,EAAM,EAAI,EACvB,EAAI,GAAK,EAAI,EAAM,EAAI,EACvB,EAAI,GAAK,EAAI,EAAM,EAAI,EACvB,EAAI,GAAK,EAAI,EAAM,EAAI,EACvB,EAAI,GAAK,EAAI,EAAM,EAAI,EACvB,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAYT,YAAe,EAAK,EAAG,EAAG,CACxB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAI,EAAE,GACf,EAAI,GAAK,EAAI,EAAE,GACf,EAAI,GAAK,EAAI,EAAE,GACf,EAAI,GAAK,EAAI,EAAE,GACf,EAAI,GAAK,EAAI,EAAE,GACf,EAAI,GAAK,EAAI,EAAE,GACf,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAeT,YAAyB,EAAK,EAAG,CAC/B,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACF,EAeT,YAAsB,EAAK,EAAK,CAC9B,GAAI,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACjB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,CAAC,EACV,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAeT,YAAqB,EAAK,EAAG,CAC3B,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAWT,YAAmB,EAAK,EAAG,CACzB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACF,EAYT,YAAkB,EAAK,EAAG,CACxB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACb,SAAI,GAAK,EAAI,EAAK,EAClB,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAI,EAAK,EAClB,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAI,EAAK,EACX,EAYT,YAAwB,EAAK,EAAG,CAC9B,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EAExB,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAE5E,MAAK,GAIL,GAAM,EAAM,EACZ,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACxC,GAbE,KAyBX,YAAoB,EAAK,EAAO,EAAQ,CACtC,SAAI,GAAK,EAAI,EACb,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,GAAK,EACd,EAAI,GAAK,EACT,EAAI,GAAK,GACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAUT,YAAa,EAAG,CACd,MAAO,QAAU,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,IAU1I,YAAc,EAAG,CACf,MAAO,MAAK,MAAM,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,IAYtE,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAkB,EAAK,EAAG,EAAG,CAC3B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAwB,EAAK,EAAG,EAAG,CACjC,SAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EACT,EAaT,YAA8B,EAAK,EAAG,EAAG,EAAO,CAC9C,SAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EAChB,EAWT,YAAqB,EAAG,EAAG,CACzB,MAAO,GAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,GAW5J,YAAgB,EAAG,EAAG,CACpB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,MAAO,MAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,IAQ9vB,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAM,GACV,EAAQ,IAAM,KCp1Bd,0BAEA,YAAiB,EAAK,CAA6B,MAAI,OAAO,SAAW,YAAc,MAAO,QAAO,UAAa,SAAY,GAAU,SAAiB,EAAK,CAAE,MAAO,OAAO,IAAiB,GAAU,SAAiB,EAAK,CAAE,MAAO,IAAO,MAAO,SAAW,YAAc,EAAI,cAAgB,QAAU,IAAQ,OAAO,UAAY,SAAW,MAAO,IAAiB,GAAQ,GAEnX,OAAO,eAAe,EAAS,aAAc,CAC3C,MAAO,KAET,EAAQ,OAAS,GACjB,EAAQ,MAAQ,GAChB,EAAQ,KAAO,GACf,EAAQ,WAAa,GACrB,EAAQ,IAAM,GACd,EAAQ,SAAW,GACnB,EAAQ,UAAY,GACpB,EAAQ,OAAS,GACjB,EAAQ,QAAU,GAClB,EAAQ,YAAc,GACtB,EAAQ,SAAW,GACnB,EAAQ,UAAY,GACpB,EAAQ,MAAQ,GAChB,EAAQ,OAAS,GACjB,EAAQ,QAAU,GAClB,EAAQ,QAAU,GAClB,EAAQ,QAAU,GAClB,EAAQ,gBAAkB,GAC1B,EAAQ,YAAc,GACtB,EAAQ,aAAe,GACvB,EAAQ,cAAgB,GACxB,EAAQ,cAAgB,GACxB,EAAQ,cAAgB,GACxB,EAAQ,wBAA0B,GAClC,EAAQ,UAAY,GACpB,EAAQ,eAAiB,GACzB,EAAQ,WAAa,GACrB,EAAQ,YAAc,GACtB,EAAQ,6BAA+B,GACvC,EAAQ,mCAAqC,GAC7C,EAAQ,SAAW,GACnB,EAAQ,QAAU,GAClB,EAAQ,YAAc,GACtB,EAAQ,2BAA6B,GACrC,EAAQ,MAAQ,GAChB,EAAQ,OAAS,GACjB,EAAQ,SAAW,GACnB,EAAQ,IAAM,GACd,EAAQ,KAAO,GACf,EAAQ,IAAM,GACd,EAAQ,SAAW,GACnB,EAAQ,eAAiB,GACzB,EAAQ,qBAAuB,GAC/B,EAAQ,YAAc,GACtB,EAAQ,OAAS,GACjB,EAAQ,IAAM,EAAQ,IAAM,OAE5B,GAAI,GAAW,GAAwB,KAEvC,aAAoC,CAAE,GAAI,MAAO,UAAY,WAAY,MAAO,MAAM,GAAI,GAAQ,GAAI,SAAW,UAA2B,UAAoC,CAAE,MAAO,IAAiB,EAE1M,YAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAO,GAAI,IAAQ,MAAQ,GAAQ,KAAS,UAAY,MAAO,IAAQ,WAAc,MAAO,CAAE,QAAW,GAAS,GAAI,GAAQ,KAA4B,GAAI,GAAS,EAAM,IAAI,GAAQ,MAAO,GAAM,IAAI,GAAQ,GAAI,GAAS,GAAQ,EAAwB,OAAO,gBAAkB,OAAO,yBAA0B,OAAS,KAAO,GAAO,GAAI,OAAO,UAAU,eAAe,KAAK,EAAK,GAAM,CAAE,GAAI,GAAO,EAAwB,OAAO,yBAAyB,EAAK,GAAO,KAAM,AAAI,GAAS,GAAK,KAAO,EAAK,KAAQ,OAAO,eAAe,EAAQ,EAAK,GAAgB,EAAO,GAAO,EAAI,GAAY,SAAO,QAAa,EAAS,GAAS,EAAM,IAAI,EAAK,GAAkB,EAYruB,aAAkB,CAChB,GAAI,GAAM,GAAI,GAAS,WAAW,IAElC,MAAI,GAAS,YAAc,cACzB,GAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,GAGZ,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EACV,EAAI,IAAM,EACH,EAUT,YAAe,EAAG,CAChB,GAAI,GAAM,GAAI,GAAS,WAAW,IAClC,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACL,EAWT,YAAc,EAAK,EAAG,CACpB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACL,EAyBT,YAAoB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,CAClG,GAAI,GAAM,GAAI,GAAS,WAAW,IAClC,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACH,EA0BT,YAAa,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,CAChG,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACH,EAUT,YAAkB,EAAK,CACrB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACH,EAWT,YAAmB,EAAK,EAAG,CAEzB,GAAI,IAAQ,EAAG,CACb,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,IACZ,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,IACX,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,IACX,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,MAEV,GAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,IACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,IACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,GACZ,EAAI,IAAM,EAAE,GACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IAGd,MAAO,GAWT,YAAgB,EAAK,EAAG,CACtB,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EAExB,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAE5E,MAAK,GAIL,GAAM,EAAM,EACZ,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAC/C,EAAI,IAAO,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAChD,EAAI,IAAO,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAChD,EAAI,IAAO,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAChD,EAAI,IAAO,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAChD,EAAI,IAAO,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EAChD,EAAI,IAAO,GAAM,EAAM,EAAM,EAAM,EAAM,GAAO,EACzC,GApBE,KA+BX,YAAiB,EAAK,EAAG,CACvB,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACZ,SAAI,GAAK,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAClG,EAAI,GAAK,CAAE,GAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,IACpG,EAAI,GAAK,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAClG,EAAI,GAAK,CAAE,GAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,IACpG,EAAI,GAAK,CAAE,GAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,IACpG,EAAI,GAAK,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAClG,EAAI,GAAK,CAAE,GAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,IACpG,EAAI,GAAK,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAClG,EAAI,GAAK,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAClG,EAAI,GAAK,CAAE,GAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,IACpG,EAAI,IAAM,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GACnG,EAAI,IAAM,CAAE,GAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,IACrG,EAAI,IAAM,CAAE,GAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,IACrG,EAAI,IAAM,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GACnG,EAAI,IAAM,CAAE,GAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,IACrG,EAAI,IAAM,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAAO,EAAO,GAAM,EAAM,EAAM,GAC5F,EAUT,YAAqB,EAAG,CACtB,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,EAE5B,MAAO,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAY3E,YAAkB,EAAK,EAAG,EAAG,CAC3B,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IAER,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAC/C,EAAI,GAAK,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAC/C,EAAI,GAAK,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAC/C,EAAI,GAAK,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAC/C,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAI,GAAK,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAC/C,EAAI,GAAK,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAC/C,EAAI,GAAK,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAC/C,EAAI,GAAK,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAC/C,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,IACP,EAAK,EAAE,IACP,EAAI,GAAK,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAC/C,EAAI,GAAK,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAC/C,EAAI,IAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAChD,EAAI,IAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAChD,EAAK,EAAE,IACP,EAAK,EAAE,IACP,EAAK,EAAE,IACP,EAAK,EAAE,IACP,EAAI,IAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAChD,EAAI,IAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAChD,EAAI,IAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAChD,EAAI,IAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EACzC,EAYT,YAAmB,EAAK,EAAG,EAAG,CAC5B,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,EAEnB,MAAI,KAAM,EACR,GAAI,IAAM,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAC7C,EAAI,IAAM,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAC7C,EAAI,IAAM,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAAI,EAAE,IAC9C,EAAI,IAAM,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAAI,EAAE,KAE9C,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EAAM,EAAI,EAAM,EAAI,EAAM,EAAI,EAAE,IAC1C,EAAI,IAAM,EAAM,EAAI,EAAM,EAAI,EAAM,EAAI,EAAE,IAC1C,EAAI,IAAM,EAAM,EAAI,EAAM,EAAI,EAAM,EAAI,EAAE,IAC1C,EAAI,IAAM,EAAM,EAAI,EAAM,EAAI,EAAM,EAAI,EAAE,KAGrC,EAYT,YAAe,EAAK,EAAG,EAAG,CACxB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,IAAM,EAAE,IAAM,EAClB,EAAI,IAAM,EAAE,IAAM,EAClB,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACL,EAaT,YAAgB,EAAK,EAAG,EAAK,EAAM,CACjC,GAAI,GAAI,EAAK,GACT,EAAI,EAAK,GACT,EAAI,EAAK,GACT,EAAM,KAAK,MAAM,EAAG,EAAG,GACvB,EAAG,EAAG,EACN,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EACV,EAAK,EAAK,EACV,EAAK,EAAK,EAEd,MAAI,GAAM,EAAS,QACV,KAGT,GAAM,EAAI,EACV,GAAK,EACL,GAAK,EACL,GAAK,EACL,EAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACb,EAAI,EAAI,EACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,IACR,EAAM,EAAE,IAER,EAAM,EAAI,EAAI,EAAI,EAClB,EAAM,EAAI,EAAI,EAAI,EAAI,EACtB,EAAM,EAAI,EAAI,EAAI,EAAI,EACtB,EAAM,EAAI,EAAI,EAAI,EAAI,EACtB,EAAM,EAAI,EAAI,EAAI,EAClB,EAAM,EAAI,EAAI,EAAI,EAAI,EACtB,EAAM,EAAI,EAAI,EAAI,EAAI,EACtB,EAAM,EAAI,EAAI,EAAI,EAAI,EACtB,EAAM,EAAI,EAAI,EAAI,EAElB,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAAI,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACxC,EAAI,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAEpC,IAAM,GAER,GAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,KAGP,GAYT,YAAiB,EAAK,EAAG,EAAK,CAC5B,GAAI,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACb,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,IACR,EAAM,EAAE,IAEZ,MAAI,KAAM,GAER,GAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,KAId,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,IAAM,EAAM,EAAI,EAAM,EAC1B,EAAI,IAAM,EAAM,EAAI,EAAM,EACnB,EAYT,YAAiB,EAAK,EAAG,EAAK,CAC5B,GAAI,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACb,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,IACR,EAAM,EAAE,IAEZ,MAAI,KAAM,GAER,GAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,KAId,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,IAAM,EAAM,EAAI,EAAM,EAC1B,EAAI,IAAM,EAAM,EAAI,EAAM,EACnB,EAYT,YAAiB,EAAK,EAAG,EAAK,CAC5B,GAAI,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACb,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GAEZ,MAAI,KAAM,GAER,GAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,IACZ,EAAI,IAAM,EAAE,KAId,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EACzB,EAAI,GAAK,EAAM,EAAI,EAAM,EAClB,EAeT,YAAyB,EAAK,EAAG,CAC/B,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EAAE,GACZ,EAAI,IAAM,EAAE,GACZ,EAAI,IAAM,EAAE,GACZ,EAAI,IAAM,EACH,EAeT,YAAqB,EAAK,EAAG,CAC3B,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EAAE,GACZ,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACH,EAgBT,YAAsB,EAAK,EAAK,EAAM,CACpC,GAAI,GAAI,EAAK,GACT,EAAI,EAAK,GACT,EAAI,EAAK,GACT,EAAM,KAAK,MAAM,EAAG,EAAG,GACvB,EAAG,EAAG,EAEV,MAAI,GAAM,EAAS,QACV,KAGT,GAAM,EAAI,EACV,GAAK,EACL,GAAK,EACL,GAAK,EACL,EAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACb,EAAI,EAAI,EAER,EAAI,GAAK,EAAI,EAAI,EAAI,EACrB,EAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EACzB,EAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EACzB,EAAI,GAAK,EACT,EAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EACzB,EAAI,GAAK,EAAI,EAAI,EAAI,EACrB,EAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EACzB,EAAI,GAAK,EACT,EAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EACzB,EAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EACzB,EAAI,IAAM,EAAI,EAAI,EAAI,EACtB,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACH,GAeT,YAAuB,EAAK,EAAK,CAC/B,GAAI,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GAEjB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,CAAC,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACH,EAeT,YAAuB,EAAK,EAAK,CAC/B,GAAI,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GAEjB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,CAAC,EACV,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACH,EAeT,YAAuB,EAAK,EAAK,CAC/B,GAAI,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GAEjB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,CAAC,EACV,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACH,EAmBT,YAAiC,EAAK,EAAG,EAAG,CAE1C,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACb,SAAI,GAAK,EAAK,GAAK,GACnB,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EACT,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,GAAK,GACnB,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EACT,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,IAAM,EAAK,GAAK,GACpB,EAAI,IAAM,EACV,EAAI,IAAM,EAAE,GACZ,EAAI,IAAM,EAAE,GACZ,EAAI,IAAM,EAAE,GACZ,EAAI,IAAM,EACH,EAWT,YAAmB,EAAK,EAAG,CACzB,GAAI,GAAc,GAAI,GAAS,WAAW,GACtC,EAAK,CAAC,EAAE,GACR,EAAK,CAAC,EAAE,GACR,EAAK,CAAC,EAAE,GACR,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAY,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAEnD,MAAI,GAAY,EACd,GAAY,GAAM,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAI,EAC/D,EAAY,GAAM,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAI,EAC/D,EAAY,GAAM,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAI,GAE/D,GAAY,GAAM,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAC3D,EAAY,GAAM,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAC3D,EAAY,GAAM,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAG7D,GAAwB,EAAK,EAAG,GACzB,EAaT,YAAwB,EAAK,EAAK,CAChC,SAAI,GAAK,EAAI,IACb,EAAI,GAAK,EAAI,IACb,EAAI,GAAK,EAAI,IACN,EAcT,YAAoB,EAAK,EAAK,CAC5B,GAAI,GAAM,EAAI,GACV,EAAM,EAAI,GACV,EAAM,EAAI,GACV,EAAM,EAAI,GACV,EAAM,EAAI,GACV,EAAM,EAAI,GACV,EAAM,EAAI,GACV,EAAM,EAAI,GACV,EAAM,EAAI,IACd,SAAI,GAAK,KAAK,MAAM,EAAK,EAAK,GAC9B,EAAI,GAAK,KAAK,MAAM,EAAK,EAAK,GAC9B,EAAI,GAAK,KAAK,MAAM,EAAK,EAAK,GACvB,EAaT,YAAqB,EAAK,EAAK,CAC7B,GAAI,GAAU,GAAI,GAAS,WAAW,GACtC,GAAW,EAAS,GACpB,GAAI,GAAM,EAAI,EAAQ,GAClB,EAAM,EAAI,EAAQ,GAClB,EAAM,EAAI,EAAQ,GAClB,EAAO,EAAI,GAAK,EAChB,EAAO,EAAI,GAAK,EAChB,EAAO,EAAI,GAAK,EAChB,EAAO,EAAI,GAAK,EAChB,EAAO,EAAI,GAAK,EAChB,EAAO,EAAI,GAAK,EAChB,EAAO,EAAI,GAAK,EAChB,EAAO,EAAI,GAAK,EAChB,EAAO,EAAI,IAAM,EACjB,EAAQ,EAAO,EAAO,EACtB,EAAI,EAER,MAAI,GAAQ,EACV,GAAI,KAAK,KAAK,EAAQ,GAAO,EAC7B,EAAI,GAAK,IAAO,EAChB,EAAI,GAAM,GAAO,GAAQ,EACzB,EAAI,GAAM,GAAO,GAAQ,EACzB,EAAI,GAAM,GAAO,GAAQ,GACpB,AAAI,EAAO,GAAQ,EAAO,EAC/B,GAAI,KAAK,KAAK,EAAM,EAAO,EAAO,GAAQ,EAC1C,EAAI,GAAM,GAAO,GAAQ,EACzB,EAAI,GAAK,IAAO,EAChB,EAAI,GAAM,GAAO,GAAQ,EACzB,EAAI,GAAM,GAAO,GAAQ,GACpB,AAAI,EAAO,EAChB,GAAI,KAAK,KAAK,EAAM,EAAO,EAAO,GAAQ,EAC1C,EAAI,GAAM,GAAO,GAAQ,EACzB,EAAI,GAAM,GAAO,GAAQ,EACzB,EAAI,GAAK,IAAO,EAChB,EAAI,GAAM,GAAO,GAAQ,GAEzB,GAAI,KAAK,KAAK,EAAM,EAAO,EAAO,GAAQ,EAC1C,EAAI,GAAM,GAAO,GAAQ,EACzB,EAAI,GAAM,GAAO,GAAQ,EACzB,EAAI,GAAM,GAAO,GAAQ,EACzB,EAAI,GAAK,IAAO,GAGX,EAqBT,YAAsC,EAAK,EAAG,EAAG,EAAG,CAElD,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAM,GAAK,GAAK,IAAO,EAC3B,EAAI,GAAM,GAAK,GAAM,EACrB,EAAI,GAAM,GAAK,GAAM,EACrB,EAAI,GAAK,EACT,EAAI,GAAM,GAAK,GAAM,EACrB,EAAI,GAAM,GAAK,GAAK,IAAO,EAC3B,EAAI,GAAM,GAAK,GAAM,EACrB,EAAI,GAAK,EACT,EAAI,GAAM,GAAK,GAAM,EACrB,EAAI,GAAM,GAAK,GAAM,EACrB,EAAI,IAAO,GAAK,GAAK,IAAO,EAC5B,EAAI,IAAM,EACV,EAAI,IAAM,EAAE,GACZ,EAAI,IAAM,EAAE,GACZ,EAAI,IAAM,EAAE,GACZ,EAAI,IAAM,EACH,EAwBT,YAA4C,EAAK,EAAG,EAAG,EAAG,EAAG,CAE3D,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAQ,GAAK,GAAK,IAAO,EACzB,EAAQ,GAAK,GAAM,EACnB,EAAQ,GAAK,GAAM,EACnB,EAAQ,GAAK,GAAM,EACnB,EAAQ,GAAK,GAAK,IAAO,EACzB,GAAQ,GAAK,GAAM,EACnB,GAAQ,GAAK,GAAM,EACnB,GAAQ,GAAK,GAAM,EACnB,GAAS,GAAK,GAAK,IAAO,EAC9B,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,GACT,EAAI,GAAK,EACT,EAAI,GAAK,GACT,EAAI,GAAK,GACT,EAAI,IAAM,GACV,EAAI,IAAM,EACV,EAAI,IAAM,EAAE,GAAK,EAAM,GAAO,EAAK,EAAO,EAAK,GAAO,GACtD,EAAI,IAAM,EAAE,GAAK,EAAM,GAAO,EAAK,EAAO,EAAK,GAAO,GACtD,EAAI,IAAM,EAAE,GAAK,EAAM,GAAO,EAAK,GAAO,EAAK,GAAQ,GACvD,EAAI,IAAM,EACH,EAYT,YAAkB,EAAK,EAAG,CACxB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACT,EAAK,EAAI,EACb,SAAI,GAAK,EAAI,EAAK,EAClB,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EACT,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAI,EAAK,EAClB,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EACT,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,IAAM,EAAI,EAAK,EACnB,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACH,EAgBT,YAAiB,EAAK,EAAM,EAAO,EAAQ,EAAK,EAAM,EAAK,CACzD,GAAI,GAAK,EAAK,GAAQ,GAClB,EAAK,EAAK,GAAM,GAChB,EAAK,EAAK,GAAO,GACrB,SAAI,GAAK,EAAO,EAAI,EACpB,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAO,EAAI,EACpB,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAM,GAAQ,GAAQ,EAC1B,EAAI,GAAM,GAAM,GAAU,EAC1B,EAAI,IAAO,GAAM,GAAQ,EACzB,EAAI,IAAM,GACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EAAM,EAAO,EAAI,EAC3B,EAAI,IAAM,EACH,EAeT,YAAqB,EAAK,EAAM,EAAQ,EAAM,EAAK,CACjD,GAAI,GAAI,EAAM,KAAK,IAAI,EAAO,GAC1B,EACJ,SAAI,GAAK,EAAI,EACb,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,GACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EAEV,AAAI,GAAO,MAAQ,IAAQ,SACzB,GAAK,EAAK,GAAO,GACjB,EAAI,IAAO,GAAM,GAAQ,EACzB,EAAI,IAAM,EAAI,EAAM,EAAO,GAE3B,GAAI,IAAM,GACV,EAAI,IAAM,GAAK,GAGV,EAeT,YAAoC,EAAK,EAAK,EAAM,EAAK,CACvD,GAAI,GAAQ,KAAK,IAAI,EAAI,UAAY,KAAK,GAAK,KAC3C,EAAU,KAAK,IAAI,EAAI,YAAc,KAAK,GAAK,KAC/C,EAAU,KAAK,IAAI,EAAI,YAAc,KAAK,GAAK,KAC/C,EAAW,KAAK,IAAI,EAAI,aAAe,KAAK,GAAK,KACjD,EAAS,EAAO,GAAU,GAC1B,EAAS,EAAO,GAAQ,GAC5B,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,CAAG,IAAU,GAAY,EAAS,IAC3C,EAAI,GAAM,GAAQ,GAAW,EAAS,GACtC,EAAI,IAAM,EAAO,GAAO,GACxB,EAAI,IAAM,GACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EAAM,EAAQ,GAAO,GAC/B,EAAI,IAAM,EACH,EAgBT,YAAe,EAAK,EAAM,EAAO,EAAQ,EAAK,EAAM,EAAK,CACvD,GAAI,GAAK,EAAK,GAAO,GACjB,EAAK,EAAK,GAAS,GACnB,EAAK,EAAK,GAAO,GACrB,SAAI,GAAK,GAAK,EACd,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,GAAK,EACd,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EAAI,EACd,EAAI,IAAM,EACV,EAAI,IAAO,GAAO,GAAS,EAC3B,EAAI,IAAO,GAAM,GAAU,EAC3B,EAAI,IAAO,GAAM,GAAQ,EACzB,EAAI,IAAM,EACH,EAcT,YAAgB,EAAK,EAAK,EAAQ,EAAI,CACpC,GAAI,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACpC,EAAO,EAAI,GACX,EAAO,EAAI,GACX,EAAO,EAAI,GACX,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAU,EAAO,GACjB,EAAU,EAAO,GACjB,EAAU,EAAO,GAErB,MAAI,MAAK,IAAI,EAAO,GAAW,EAAS,SAAW,KAAK,IAAI,EAAO,GAAW,EAAS,SAAW,KAAK,IAAI,EAAO,GAAW,EAAS,QAC7H,GAAS,GAGlB,GAAK,EAAO,EACZ,EAAK,EAAO,EACZ,EAAK,EAAO,EACZ,EAAM,EAAI,KAAK,MAAM,EAAI,EAAI,GAC7B,GAAM,EACN,GAAM,EACN,GAAM,EACN,EAAK,EAAM,EAAK,EAAM,EACtB,EAAK,EAAM,EAAK,EAAM,EACtB,EAAK,EAAM,EAAK,EAAM,EACtB,EAAM,KAAK,MAAM,EAAI,EAAI,GAEzB,AAAK,EAKH,GAAM,EAAI,EACV,GAAM,EACN,GAAM,EACN,GAAM,GAPN,GAAK,EACL,EAAK,EACL,EAAK,GAQP,EAAK,EAAK,EAAK,EAAK,EACpB,EAAK,EAAK,EAAK,EAAK,EACpB,EAAK,EAAK,EAAK,EAAK,EACpB,EAAM,KAAK,MAAM,EAAI,EAAI,GAEzB,AAAK,EAKH,GAAM,EAAI,EACV,GAAM,EACN,GAAM,EACN,GAAM,GAPN,GAAK,EACL,EAAK,EACL,EAAK,GAQP,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,CAAE,GAAK,EAAO,EAAK,EAAO,EAAK,GACzC,EAAI,IAAM,CAAE,GAAK,EAAO,EAAK,EAAO,EAAK,GACzC,EAAI,IAAM,CAAE,GAAK,EAAO,EAAK,EAAO,EAAK,GACzC,EAAI,IAAM,EACH,GAaT,YAAkB,EAAK,EAAK,EAAQ,EAAI,CACtC,GAAI,GAAO,EAAI,GACX,EAAO,EAAI,GACX,EAAO,EAAI,GACX,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAM,EAAG,GACT,EAAK,EAAO,EAAO,GACnB,EAAK,EAAO,EAAO,GACnB,EAAK,EAAO,EAAO,GACnB,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAEnC,AAAI,EAAM,GACR,GAAM,EAAI,KAAK,KAAK,GACpB,GAAM,EACN,GAAM,EACN,GAAM,GAGR,GAAI,GAAK,EAAM,EAAK,EAAM,EACtB,EAAK,EAAM,EAAK,EAAM,EACtB,EAAK,EAAM,EAAK,EAAM,EAC1B,SAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAE3B,EAAM,GACR,GAAM,EAAI,KAAK,KAAK,GACpB,GAAM,EACN,GAAM,EACN,GAAM,GAGR,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACV,EAAI,IAAM,EACH,EAUT,YAAa,EAAG,CACd,MAAO,QAAU,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,IAAM,KAAO,EAAE,IAAM,KAAO,EAAE,IAAM,KAAO,EAAE,IAAM,KAAO,EAAE,IAAM,KAAO,EAAE,IAAM,IAUlP,YAAc,EAAG,CACf,MAAO,MAAK,MAAM,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,IAAK,EAAE,IAAK,EAAE,IAAK,EAAE,IAAK,EAAE,IAAK,EAAE,KAYrH,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,IAAM,EAAE,IAAM,EAAE,IACpB,EAAI,IAAM,EAAE,IAAM,EAAE,IACpB,EAAI,IAAM,EAAE,IAAM,EAAE,IACpB,EAAI,IAAM,EAAE,IAAM,EAAE,IACpB,EAAI,IAAM,EAAE,IAAM,EAAE,IACpB,EAAI,IAAM,EAAE,IAAM,EAAE,IACb,EAYT,YAAkB,EAAK,EAAG,EAAG,CAC3B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,IAAM,EAAE,IAAM,EAAE,IACpB,EAAI,IAAM,EAAE,IAAM,EAAE,IACpB,EAAI,IAAM,EAAE,IAAM,EAAE,IACpB,EAAI,IAAM,EAAE,IAAM,EAAE,IACpB,EAAI,IAAM,EAAE,IAAM,EAAE,IACpB,EAAI,IAAM,EAAE,IAAM,EAAE,IACb,EAYT,YAAwB,EAAK,EAAG,EAAG,CACjC,SAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,IAAM,EAAE,IAAM,EAClB,EAAI,IAAM,EAAE,IAAM,EAClB,EAAI,IAAM,EAAE,IAAM,EAClB,EAAI,IAAM,EAAE,IAAM,EAClB,EAAI,IAAM,EAAE,IAAM,EAClB,EAAI,IAAM,EAAE,IAAM,EACX,EAaT,YAA8B,EAAK,EAAG,EAAG,EAAO,CAC9C,SAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,IAAM,EAAE,IAAM,EAAE,IAAM,EAC1B,EAAI,IAAM,EAAE,IAAM,EAAE,IAAM,EAC1B,EAAI,IAAM,EAAE,IAAM,EAAE,IAAM,EAC1B,EAAI,IAAM,EAAE,IAAM,EAAE,IAAM,EAC1B,EAAI,IAAM,EAAE,IAAM,EAAE,IAAM,EAC1B,EAAI,IAAM,EAAE,IAAM,EAAE,IAAM,EACnB,EAWT,YAAqB,EAAG,EAAG,CACzB,MAAO,GAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,IAW9R,YAAgB,EAAG,EAAG,CACpB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,EAAM,EAAE,IACR,GAAM,EAAE,IACR,GAAM,EAAE,IACZ,MAAO,MAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAM,IAAQ,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAM,KAAK,IAAI,KAAS,KAAK,IAAI,EAAM,IAAQ,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAM,KAAK,IAAI,KAAS,KAAK,IAAI,EAAM,IAAQ,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAM,KAAK,IAAI,KAAS,KAAK,IAAI,EAAM,IAAQ,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAM,KAAK,IAAI,KAAS,KAAK,IAAI,EAAM,KAAQ,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAM,KAAK,IAAI,MAAS,KAAK,IAAI,EAAM,KAAQ,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAM,KAAK,IAAI,KAQx2C,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAM,GACV,EAAQ,IAAM,KC93Dd,0BAEA,YAAiB,EAAK,CAA6B,MAAI,OAAO,SAAW,YAAc,MAAO,QAAO,UAAa,SAAY,GAAU,SAAiB,EAAK,CAAE,MAAO,OAAO,IAAiB,GAAU,SAAiB,EAAK,CAAE,MAAO,IAAO,MAAO,SAAW,YAAc,EAAI,cAAgB,QAAU,IAAQ,OAAO,UAAY,SAAW,MAAO,IAAiB,GAAQ,GAEnX,OAAO,eAAe,EAAS,aAAc,CAC3C,MAAO,KAET,EAAQ,OAAS,GACjB,EAAQ,MAAQ,GAChB,EAAQ,OAAS,GACjB,EAAQ,WAAa,GACrB,EAAQ,KAAO,GACf,EAAQ,IAAM,GACd,EAAQ,IAAM,GACd,EAAQ,SAAW,GACnB,EAAQ,SAAW,GACnB,EAAQ,OAAS,GACjB,EAAQ,KAAO,GACf,EAAQ,MAAQ,GAChB,EAAQ,IAAM,GACd,EAAQ,IAAM,GACd,EAAQ,MAAQ,GAChB,EAAQ,MAAQ,GAChB,EAAQ,YAAc,GACtB,EAAQ,SAAW,GACnB,EAAQ,gBAAkB,GAC1B,EAAQ,cAAgB,GACxB,EAAQ,OAAS,GACjB,EAAQ,QAAU,GAClB,EAAQ,UAAY,GACpB,EAAQ,IAAM,GACd,EAAQ,MAAQ,GAChB,EAAQ,KAAO,GACf,EAAQ,QAAU,GAClB,EAAQ,OAAS,GACjB,EAAQ,OAAS,GACjB,EAAQ,cAAgB,GACxB,EAAQ,cAAgB,GACxB,EAAQ,cAAgB,GACxB,EAAQ,QAAU,GAClB,EAAQ,QAAU,GAClB,EAAQ,QAAU,GAClB,EAAQ,MAAQ,GAChB,EAAQ,KAAO,GACf,EAAQ,IAAM,GACd,EAAQ,YAAc,GACtB,EAAQ,OAAS,GACjB,EAAQ,QAAU,EAAQ,OAAS,EAAQ,IAAM,EAAQ,QAAU,EAAQ,KAAO,EAAQ,IAAM,EAAQ,IAAM,EAAQ,IAAM,OAE5H,GAAI,IAAW,GAAwB,KAEvC,aAAoC,CAAE,GAAI,MAAO,UAAY,WAAY,MAAO,MAAM,GAAI,GAAQ,GAAI,SAAW,UAA2B,UAAoC,CAAE,MAAO,IAAiB,EAE1M,YAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAO,GAAI,IAAQ,MAAQ,GAAQ,KAAS,UAAY,MAAO,IAAQ,WAAc,MAAO,CAAE,QAAW,GAAS,GAAI,GAAQ,KAA4B,GAAI,GAAS,EAAM,IAAI,GAAQ,MAAO,GAAM,IAAI,GAAQ,GAAI,GAAS,GAAQ,EAAwB,OAAO,gBAAkB,OAAO,yBAA0B,OAAS,KAAO,GAAO,GAAI,OAAO,UAAU,eAAe,KAAK,EAAK,GAAM,CAAE,GAAI,GAAO,EAAwB,OAAO,yBAAyB,EAAK,GAAO,KAAM,AAAI,GAAS,GAAK,KAAO,EAAK,KAAQ,OAAO,eAAe,EAAQ,EAAK,GAAgB,EAAO,GAAO,EAAI,GAAY,SAAO,QAAa,EAAS,GAAS,EAAM,IAAI,EAAK,GAAkB,EAYruB,aAAkB,CAChB,GAAI,GAAM,GAAI,IAAS,WAAW,GAElC,MAAI,IAAS,YAAc,cACzB,GAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,GAGJ,EAUT,YAAe,EAAG,CAChB,GAAI,GAAM,GAAI,IAAS,WAAW,GAClC,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAUT,YAAgB,EAAG,CACjB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACV,MAAO,MAAK,MAAM,EAAG,EAAG,GAY1B,YAAoB,EAAG,EAAG,EAAG,CAC3B,GAAI,GAAM,GAAI,IAAS,WAAW,GAClC,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAWT,YAAc,EAAK,EAAG,CACpB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAaT,YAAa,EAAK,EAAG,EAAG,EAAG,CACzB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAYT,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAkB,EAAK,EAAG,EAAG,CAC3B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAkB,EAAK,EAAG,EAAG,CAC3B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAgB,EAAK,EAAG,EAAG,CACzB,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAWT,YAAc,EAAK,EAAG,CACpB,SAAI,GAAK,KAAK,KAAK,EAAE,IACrB,EAAI,GAAK,KAAK,KAAK,EAAE,IACrB,EAAI,GAAK,KAAK,KAAK,EAAE,IACd,EAWT,YAAe,EAAK,EAAG,CACrB,SAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACf,EAYT,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IACnB,EAYT,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IACnB,EAWT,YAAe,EAAK,EAAG,CACrB,SAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACf,EAYT,YAAe,EAAK,EAAG,EAAG,CACxB,SAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EACT,EAaT,YAAqB,EAAK,EAAG,EAAG,EAAO,CACrC,SAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EAChB,EAWT,YAAkB,EAAG,EAAG,CACtB,GAAI,GAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACjB,MAAO,MAAK,MAAM,EAAG,EAAG,GAW1B,YAAyB,EAAG,EAAG,CAC7B,GAAI,GAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACjB,MAAO,GAAI,EAAI,EAAI,EAAI,EAAI,EAU7B,YAAuB,EAAG,CACxB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACV,MAAO,GAAI,EAAI,EAAI,EAAI,EAAI,EAW7B,YAAgB,EAAK,EAAG,CACtB,SAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACL,EAWT,YAAiB,EAAK,EAAG,CACvB,SAAI,GAAK,EAAM,EAAE,GACjB,EAAI,GAAK,EAAM,EAAE,GACjB,EAAI,GAAK,EAAM,EAAE,GACV,EAWT,YAAmB,EAAK,EAAG,CACzB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAM,EAAI,EAAI,EAAI,EAAI,EAAI,EAE9B,MAAI,GAAM,GAER,GAAM,EAAI,KAAK,KAAK,IAGtB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EACT,EAWT,YAAa,EAAG,EAAG,CACjB,MAAO,GAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAY9C,YAAe,EAAK,EAAG,EAAG,CACxB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACjB,EAaT,YAAc,EAAK,EAAG,EAAG,EAAG,CAC1B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAK,GAAE,GAAK,GAC1B,EAAI,GAAK,EAAK,EAAK,GAAE,GAAK,GAC1B,EAAI,GAAK,EAAK,EAAK,GAAE,GAAK,GACnB,EAeT,YAAiB,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,CACnC,GAAI,GAAe,EAAI,EACnB,EAAU,EAAgB,GAAI,EAAI,GAAK,EACvC,EAAU,EAAgB,GAAI,GAAK,EACnC,EAAU,EAAgB,GAAI,GAC9B,EAAU,EAAgB,GAAI,EAAI,GACtC,SAAI,GAAK,EAAE,GAAK,EAAU,EAAE,GAAK,EAAU,EAAE,GAAK,EAAU,EAAE,GAAK,EACnE,EAAI,GAAK,EAAE,GAAK,EAAU,EAAE,GAAK,EAAU,EAAE,GAAK,EAAU,EAAE,GAAK,EACnE,EAAI,GAAK,EAAE,GAAK,EAAU,EAAE,GAAK,EAAU,EAAE,GAAK,EAAU,EAAE,GAAK,EAC5D,EAeT,YAAgB,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,CAClC,GAAI,GAAgB,EAAI,EACpB,EAAwB,EAAgB,EACxC,EAAe,EAAI,EACnB,EAAU,EAAwB,EAClC,EAAU,EAAI,EAAI,EAClB,EAAU,EAAI,EAAe,EAC7B,EAAU,EAAe,EAC7B,SAAI,GAAK,EAAE,GAAK,EAAU,EAAE,GAAK,EAAU,EAAE,GAAK,EAAU,EAAE,GAAK,EACnE,EAAI,GAAK,EAAE,GAAK,EAAU,EAAE,GAAK,EAAU,EAAE,GAAK,EAAU,EAAE,GAAK,EACnE,EAAI,GAAK,EAAE,GAAK,EAAU,EAAE,GAAK,EAAU,EAAE,GAAK,EAAU,EAAE,GAAK,EAC5D,EAWT,YAAgB,EAAK,EAAO,CAC1B,EAAQ,GAAS,EACjB,GAAI,GAAI,GAAS,SAAW,EAAM,KAAK,GACnC,EAAI,GAAS,SAAW,EAAM,EAC9B,EAAS,KAAK,KAAK,EAAM,EAAI,GAAK,EACtC,SAAI,GAAK,KAAK,IAAI,GAAK,EACvB,EAAI,GAAK,KAAK,IAAI,GAAK,EACvB,EAAI,GAAK,EAAI,EACN,EAaT,YAAuB,EAAK,EAAG,EAAG,CAChC,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAAI,EAAE,IAC5C,SAAI,GAAK,EACT,EAAI,GAAM,GAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,KAAO,EACpD,EAAI,GAAM,GAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,KAAO,EACpD,EAAI,GAAM,GAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAAI,EAAE,KAAO,EAC9C,EAYT,YAAuB,EAAK,EAAG,EAAG,CAChC,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GACrC,EAAI,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GACrC,EAAI,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAC9B,EAaT,YAAuB,EAAK,EAAG,EAAG,CAEhC,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GAGN,EAAM,EAAK,EAAI,EAAK,EACpB,EAAM,EAAK,EAAI,EAAK,EACpB,EAAM,EAAK,EAAI,EAAK,EAEpB,EAAO,EAAK,EAAM,EAAK,EACvB,EAAO,EAAK,EAAM,EAAK,EACvB,EAAO,EAAK,EAAM,EAAK,EAEvB,EAAK,EAAK,EACd,UAAO,EACP,GAAO,EACP,GAAO,EAEP,GAAQ,EACR,GAAQ,EACR,GAAQ,EAER,EAAI,GAAK,EAAI,EAAM,EACnB,EAAI,GAAK,EAAI,EAAM,EACnB,EAAI,GAAK,EAAI,EAAM,EACZ,EAYT,YAAiB,EAAK,EAAG,EAAG,EAAK,CAC/B,GAAI,GAAI,GACJ,EAAI,GAER,SAAE,GAAK,EAAE,GAAK,EAAE,GAChB,EAAE,GAAK,EAAE,GAAK,EAAE,GAChB,EAAE,GAAK,EAAE,GAAK,EAAE,GAEhB,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GAAK,KAAK,IAAI,GAAO,EAAE,GAAK,KAAK,IAAI,GAC9C,EAAE,GAAK,EAAE,GAAK,KAAK,IAAI,GAAO,EAAE,GAAK,KAAK,IAAI,GAE9C,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAiB,EAAK,EAAG,EAAG,EAAK,CAC/B,GAAI,GAAI,GACJ,EAAI,GAER,SAAE,GAAK,EAAE,GAAK,EAAE,GAChB,EAAE,GAAK,EAAE,GAAK,EAAE,GAChB,EAAE,GAAK,EAAE,GAAK,EAAE,GAEhB,EAAE,GAAK,EAAE,GAAK,KAAK,IAAI,GAAO,EAAE,GAAK,KAAK,IAAI,GAC9C,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GAAK,KAAK,IAAI,GAAO,EAAE,GAAK,KAAK,IAAI,GAE9C,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAiB,EAAK,EAAG,EAAG,EAAK,CAC/B,GAAI,GAAI,GACJ,EAAI,GAER,SAAE,GAAK,EAAE,GAAK,EAAE,GAChB,EAAE,GAAK,EAAE,GAAK,EAAE,GAChB,EAAE,GAAK,EAAE,GAAK,EAAE,GAEhB,EAAE,GAAK,EAAE,GAAK,KAAK,IAAI,GAAO,EAAE,GAAK,KAAK,IAAI,GAC9C,EAAE,GAAK,EAAE,GAAK,KAAK,IAAI,GAAO,EAAE,GAAK,KAAK,IAAI,GAC9C,EAAE,GAAK,EAAE,GAET,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAUT,YAAe,EAAG,EAAG,CACnB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAO,KAAK,KAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAC1C,EAAO,KAAK,KAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAC1C,EAAM,EAAO,EACb,EAAS,GAAO,GAAI,EAAG,GAAK,EAChC,MAAO,MAAK,KAAK,KAAK,IAAI,KAAK,IAAI,EAAQ,IAAK,IAUlD,YAAc,EAAK,CACjB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAUT,YAAa,EAAG,CACd,MAAO,QAAU,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,IAWtD,YAAqB,EAAG,EAAG,CACzB,MAAO,GAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,GAWtD,YAAgB,EAAG,EAAG,CACpB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,MAAO,MAAK,IAAI,EAAK,IAAO,GAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,GAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,GAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,IAQhQ,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAO,GAMX,EAAQ,KAAO,GACf,GAAI,IAAU,GAMd,EAAQ,QAAU,GAClB,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAS,GAcb,EAAQ,OAAS,GAEjB,GAAI,IAAU,UAAY,CACxB,GAAI,GAAM,KACV,MAAO,UAAU,EAAG,EAAQ,EAAQ,EAAO,EAAI,EAAK,CAClD,GAAI,GAAG,EAgBP,IAdK,GACH,GAAS,GAGN,GACH,GAAS,GAGX,AAAI,EACF,EAAI,KAAK,IAAI,EAAQ,EAAS,EAAQ,EAAE,QAExC,EAAI,EAAE,OAGH,EAAI,EAAQ,EAAI,EAAG,GAAK,EAC3B,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,EAAI,GACf,EAAI,GAAK,EAAE,EAAI,GACf,EAAG,EAAK,EAAK,GACb,EAAE,GAAK,EAAI,GACX,EAAE,EAAI,GAAK,EAAI,GACf,EAAE,EAAI,GAAK,EAAI,GAGjB,MAAO,OAIX,EAAQ,QAAU,KCz3BlB,0BAEA,YAAiB,EAAK,CAA6B,MAAI,OAAO,SAAW,YAAc,MAAO,QAAO,UAAa,SAAY,GAAU,SAAiB,EAAK,CAAE,MAAO,OAAO,IAAiB,GAAU,SAAiB,EAAK,CAAE,MAAO,IAAO,MAAO,SAAW,YAAc,EAAI,cAAgB,QAAU,IAAQ,OAAO,UAAY,SAAW,MAAO,IAAiB,GAAQ,GAEnX,OAAO,eAAe,EAAS,aAAc,CAC3C,MAAO,KAET,EAAQ,OAAS,GACjB,EAAQ,MAAQ,GAChB,EAAQ,WAAa,GACrB,EAAQ,KAAO,GACf,EAAQ,IAAM,GACd,EAAQ,IAAM,GACd,EAAQ,SAAW,GACnB,EAAQ,SAAW,GACnB,EAAQ,OAAS,GACjB,EAAQ,KAAO,GACf,EAAQ,MAAQ,GAChB,EAAQ,IAAM,GACd,EAAQ,IAAM,GACd,EAAQ,MAAQ,GAChB,EAAQ,MAAQ,GAChB,EAAQ,YAAc,GACtB,EAAQ,SAAW,GACnB,EAAQ,gBAAkB,GAC1B,EAAQ,OAAS,GACjB,EAAQ,cAAgB,GACxB,EAAQ,OAAS,GACjB,EAAQ,QAAU,GAClB,EAAQ,UAAY,GACpB,EAAQ,IAAM,GACd,EAAQ,MAAQ,GAChB,EAAQ,KAAO,GACf,EAAQ,OAAS,GACjB,EAAQ,cAAgB,GACxB,EAAQ,cAAgB,GACxB,EAAQ,KAAO,GACf,EAAQ,IAAM,GACd,EAAQ,YAAc,GACtB,EAAQ,OAAS,GACjB,EAAQ,QAAU,EAAQ,OAAS,EAAQ,IAAM,EAAQ,QAAU,EAAQ,KAAO,EAAQ,IAAM,EAAQ,IAAM,EAAQ,IAAM,OAE5H,GAAI,GAAW,GAAwB,KAEvC,aAAoC,CAAE,GAAI,MAAO,UAAY,WAAY,MAAO,MAAM,GAAI,GAAQ,GAAI,SAAW,UAA2B,UAAoC,CAAE,MAAO,IAAiB,EAE1M,YAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAO,GAAI,IAAQ,MAAQ,GAAQ,KAAS,UAAY,MAAO,IAAQ,WAAc,MAAO,CAAE,QAAW,GAAS,GAAI,GAAQ,KAA4B,GAAI,GAAS,EAAM,IAAI,GAAQ,MAAO,GAAM,IAAI,GAAQ,GAAI,GAAS,GAAQ,EAAwB,OAAO,gBAAkB,OAAO,yBAA0B,OAAS,KAAO,GAAO,GAAI,OAAO,UAAU,eAAe,KAAK,EAAK,GAAM,CAAE,GAAI,GAAO,EAAwB,OAAO,yBAAyB,EAAK,GAAO,KAAM,AAAI,GAAS,GAAK,KAAO,EAAK,KAAQ,OAAO,eAAe,EAAQ,EAAK,GAAgB,EAAO,GAAO,EAAI,GAAY,SAAO,QAAa,EAAS,GAAS,EAAM,IAAI,EAAK,GAAkB,EAYruB,aAAkB,CAChB,GAAI,GAAM,GAAI,GAAS,WAAW,GAElC,MAAI,GAAS,YAAc,cACzB,GAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,GAGJ,EAUT,YAAe,EAAG,CAChB,GAAI,GAAM,GAAI,GAAS,WAAW,GAClC,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAaT,YAAoB,EAAG,EAAG,EAAG,EAAG,CAC9B,GAAI,GAAM,GAAI,GAAS,WAAW,GAClC,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAWT,YAAc,EAAK,EAAG,CACpB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAcT,YAAa,EAAK,EAAG,EAAG,EAAG,EAAG,CAC5B,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAYT,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAkB,EAAK,EAAG,EAAG,CAC3B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAkB,EAAK,EAAG,EAAG,CAC3B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAgB,EAAK,EAAG,EAAG,CACzB,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAWT,YAAc,EAAK,EAAG,CACpB,SAAI,GAAK,KAAK,KAAK,EAAE,IACrB,EAAI,GAAK,KAAK,KAAK,EAAE,IACrB,EAAI,GAAK,KAAK,KAAK,EAAE,IACrB,EAAI,GAAK,KAAK,KAAK,EAAE,IACd,EAWT,YAAe,EAAK,EAAG,CACrB,SAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACf,EAYT,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IACnB,EAYT,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IACnB,EAWT,YAAe,EAAK,EAAG,CACrB,SAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACf,EAYT,YAAe,EAAK,EAAG,EAAG,CACxB,SAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EACT,EAaT,YAAqB,EAAK,EAAG,EAAG,EAAO,CACrC,SAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EAChB,EAWT,YAAkB,EAAG,EAAG,CACtB,GAAI,GAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACjB,MAAO,MAAK,MAAM,EAAG,EAAG,EAAG,GAW7B,YAAyB,EAAG,EAAG,CAC7B,GAAI,GAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACjB,MAAO,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAUrC,YAAgB,EAAG,CACjB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACV,MAAO,MAAK,MAAM,EAAG,EAAG,EAAG,GAU7B,YAAuB,EAAG,CACxB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACV,MAAO,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAWrC,YAAgB,EAAK,EAAG,CACtB,SAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACL,EAWT,YAAiB,EAAK,EAAG,CACvB,SAAI,GAAK,EAAM,EAAE,GACjB,EAAI,GAAK,EAAM,EAAE,GACjB,EAAI,GAAK,EAAM,EAAE,GACjB,EAAI,GAAK,EAAM,EAAE,GACV,EAWT,YAAmB,EAAK,EAAG,CACzB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAM,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAEtC,MAAI,GAAM,GACR,GAAM,EAAI,KAAK,KAAK,IAGtB,EAAI,GAAK,EAAI,EACb,EAAI,GAAK,EAAI,EACb,EAAI,GAAK,EAAI,EACb,EAAI,GAAK,EAAI,EACN,EAWT,YAAa,EAAG,EAAG,CACjB,MAAO,GAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAa5D,YAAe,EAAK,EAAG,EAAG,EAAG,CAC3B,GAAI,GAAI,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAC3B,EAAI,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAC3B,EAAI,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAC3B,EAAI,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAC3B,EAAI,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAC3B,EAAI,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAC3B,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAC7B,EAAI,GAAK,CAAE,GAAI,GAAK,EAAI,EAAI,EAAI,EAChC,EAAI,GAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAC7B,EAAI,GAAK,CAAE,GAAI,GAAK,EAAI,EAAI,EAAI,EACzB,EAaT,YAAc,EAAK,EAAG,EAAG,EAAG,CAC1B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAK,GAAE,GAAK,GAC1B,EAAI,GAAK,EAAK,EAAK,GAAE,GAAK,GAC1B,EAAI,GAAK,EAAK,EAAK,GAAE,GAAK,GAC1B,EAAI,GAAK,EAAK,EAAK,GAAE,GAAK,GACnB,EAWT,YAAgB,EAAK,EAAO,CAC1B,EAAQ,GAAS,EAIjB,GAAI,GAAI,EAAI,EAAI,EACZ,EAAI,EAER,EACE,GAAK,EAAS,SAAW,EAAI,EAC7B,EAAK,EAAS,SAAW,EAAI,EAC7B,EAAK,EAAK,EAAK,EAAK,QACb,GAAM,GAEf,EACE,GAAK,EAAS,SAAW,EAAI,EAC7B,EAAK,EAAS,SAAW,EAAI,EAC7B,EAAK,EAAK,EAAK,EAAK,QACb,GAAM,GAEf,GAAI,GAAI,KAAK,KAAM,GAAI,GAAM,GAC7B,SAAI,GAAK,EAAQ,EACjB,EAAI,GAAK,EAAQ,EACjB,EAAI,GAAK,EAAQ,EAAK,EACtB,EAAI,GAAK,EAAQ,EAAK,EACf,EAYT,YAAuB,EAAK,EAAG,EAAG,CAChC,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAClD,EAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAClD,EAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAAI,EAAE,IAAM,EACnD,EAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAAM,EAAI,EAAE,IAAM,EAC5C,EAYT,YAAuB,EAAK,EAAG,EAAG,CAChC,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GAEP,EAAK,EAAK,EAAI,EAAK,EAAI,EAAK,EAC5B,EAAK,EAAK,EAAI,EAAK,EAAI,EAAK,EAC5B,EAAK,EAAK,EAAI,EAAK,EAAI,EAAK,EAC5B,EAAK,CAAC,EAAK,EAAI,EAAK,EAAI,EAAK,EAEjC,SAAI,GAAK,EAAK,EAAK,EAAK,CAAC,EAAK,EAAK,CAAC,EAAK,EAAK,CAAC,EAC/C,EAAI,GAAK,EAAK,EAAK,EAAK,CAAC,EAAK,EAAK,CAAC,EAAK,EAAK,CAAC,EAC/C,EAAI,GAAK,EAAK,EAAK,EAAK,CAAC,EAAK,EAAK,CAAC,EAAK,EAAK,CAAC,EAC/C,EAAI,GAAK,EAAE,GACJ,EAUT,YAAc,EAAK,CACjB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAUT,YAAa,EAAG,CACd,MAAO,QAAU,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,IAWpE,YAAqB,EAAG,EAAG,CACzB,MAAO,GAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,GAWvE,YAAgB,EAAG,EAAG,CACpB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,MAAO,MAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,IAQrV,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAO,GAMX,EAAQ,KAAO,GACf,GAAI,IAAU,GAMd,EAAQ,QAAU,GAClB,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAS,GAcb,EAAQ,OAAS,GAEjB,GAAI,IAAU,UAAY,CACxB,GAAI,GAAM,KACV,MAAO,UAAU,EAAG,EAAQ,EAAQ,EAAO,EAAI,EAAK,CAClD,GAAI,GAAG,EAgBP,IAdK,GACH,GAAS,GAGN,GACH,GAAS,GAGX,AAAI,EACF,EAAI,KAAK,IAAI,EAAQ,EAAS,EAAQ,EAAE,QAExC,EAAI,EAAE,OAGH,EAAI,EAAQ,EAAI,EAAG,GAAK,EAC3B,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,EAAI,GACf,EAAI,GAAK,EAAE,EAAI,GACf,EAAI,GAAK,EAAE,EAAI,GACf,EAAG,EAAK,EAAK,GACb,EAAE,GAAK,EAAI,GACX,EAAE,EAAI,GAAK,EAAI,GACf,EAAE,EAAI,GAAK,EAAI,GACf,EAAE,EAAI,GAAK,EAAI,GAGjB,MAAO,OAIX,EAAQ,QAAU,KC/uBlB,0BAEA,YAAiB,EAAK,CAA6B,MAAI,OAAO,SAAW,YAAc,MAAO,QAAO,UAAa,SAAY,GAAU,SAAiB,EAAK,CAAE,MAAO,OAAO,IAAiB,GAAU,SAAiB,EAAK,CAAE,MAAO,IAAO,MAAO,SAAW,YAAc,EAAI,cAAgB,QAAU,IAAQ,OAAO,UAAY,SAAW,MAAO,IAAiB,GAAQ,GAEnX,OAAO,eAAe,EAAS,aAAc,CAC3C,MAAO,KAET,EAAQ,OAAS,GACjB,EAAQ,SAAW,GACnB,EAAQ,aAAe,GACvB,EAAQ,aAAe,GACvB,EAAQ,SAAW,GACnB,EAAQ,SAAW,GACnB,EAAQ,QAAU,GAClB,EAAQ,QAAU,GAClB,EAAQ,QAAU,GAClB,EAAQ,WAAa,GACrB,EAAQ,IAAM,GACd,EAAQ,GAAK,GACb,EAAQ,IAAM,GACd,EAAQ,MAAQ,GAChB,EAAQ,OAAS,GACjB,EAAQ,OAAS,GACjB,EAAQ,UAAY,GACpB,EAAQ,SAAW,GACnB,EAAQ,UAAY,GACpB,EAAQ,IAAM,GACd,EAAQ,QAAU,EAAQ,OAAS,EAAQ,WAAa,EAAQ,OAAS,EAAQ,YAAc,EAAQ,UAAY,EAAQ,OAAS,EAAQ,cAAgB,EAAQ,IAAM,EAAQ,OAAS,EAAQ,KAAO,EAAQ,IAAM,EAAQ,MAAQ,EAAQ,IAAM,EAAQ,IAAM,EAAQ,IAAM,EAAQ,KAAO,EAAQ,WAAa,EAAQ,MAAQ,OAEtU,GAAI,IAAW,GAAwB,KAEnC,GAAO,GAAwB,MAE/B,GAAO,GAAwB,MAE/B,EAAO,GAAwB,MAEnC,aAAoC,CAAE,GAAI,MAAO,UAAY,WAAY,MAAO,MAAM,GAAI,GAAQ,GAAI,SAAW,UAA2B,UAAoC,CAAE,MAAO,IAAiB,EAE1M,YAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAO,GAAI,IAAQ,MAAQ,GAAQ,KAAS,UAAY,MAAO,IAAQ,WAAc,MAAO,CAAE,QAAW,GAAS,GAAI,GAAQ,KAA4B,GAAI,GAAS,EAAM,IAAI,GAAQ,MAAO,GAAM,IAAI,GAAQ,GAAI,GAAS,GAAQ,EAAwB,OAAO,gBAAkB,OAAO,yBAA0B,OAAS,KAAO,GAAO,GAAI,OAAO,UAAU,eAAe,KAAK,EAAK,GAAM,CAAE,GAAI,GAAO,EAAwB,OAAO,yBAAyB,EAAK,GAAO,KAAM,AAAI,GAAS,GAAK,KAAO,EAAK,KAAQ,OAAO,eAAe,EAAQ,EAAK,GAAgB,EAAO,GAAO,EAAI,GAAY,SAAO,QAAa,EAAS,GAAS,EAAM,IAAI,EAAK,GAAkB,EAYruB,aAAkB,CAChB,GAAI,GAAM,GAAI,IAAS,WAAW,GAElC,MAAI,IAAS,YAAc,cACzB,GAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,GAGX,EAAI,GAAK,EACF,EAUT,YAAkB,EAAK,CACrB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAaT,YAAsB,EAAK,EAAM,EAAK,CACpC,EAAM,EAAM,GACZ,GAAI,GAAI,KAAK,IAAI,GACjB,SAAI,GAAK,EAAI,EAAK,GAClB,EAAI,GAAK,EAAI,EAAK,GAClB,EAAI,GAAK,EAAI,EAAK,GAClB,EAAI,GAAK,KAAK,IAAI,GACX,EAiBT,YAAsB,EAAU,EAAG,CACjC,GAAI,GAAM,KAAK,KAAK,EAAE,IAAM,EACxB,EAAI,KAAK,IAAI,EAAM,GAEvB,MAAI,GAAI,GAAS,QACf,GAAS,GAAK,EAAE,GAAK,EACrB,EAAS,GAAK,EAAE,GAAK,EACrB,EAAS,GAAK,EAAE,GAAK,GAGrB,GAAS,GAAK,EACd,EAAS,GAAK,EACd,EAAS,GAAK,GAGT,EAWT,YAAkB,EAAG,EAAG,CACtB,GAAI,GAAa,GAAI,EAAG,GACxB,MAAO,MAAK,KAAK,EAAI,EAAa,EAAa,GAYjD,YAAkB,EAAK,EAAG,EAAG,CAC3B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACrC,EAYT,YAAiB,EAAK,EAAG,EAAK,CAC5B,GAAO,GACP,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,KAAK,IAAI,GACd,EAAK,KAAK,IAAI,GAClB,SAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACjB,EAYT,YAAiB,EAAK,EAAG,EAAK,CAC5B,GAAO,GACP,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,KAAK,IAAI,GACd,EAAK,KAAK,IAAI,GAClB,SAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACjB,EAYT,YAAiB,EAAK,EAAG,EAAK,CAC5B,GAAO,GACP,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,KAAK,IAAI,GACd,EAAK,KAAK,IAAI,GAClB,SAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACjB,EAaT,YAAoB,EAAK,EAAG,CAC1B,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,KAAK,KAAK,KAAK,IAAI,EAAM,EAAI,EAAI,EAAI,EAAI,EAAI,IAC/C,EAWT,YAAa,EAAK,EAAG,CACnB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,KAAK,KAAK,EAAI,EAAI,EAAI,EAAI,EAAI,GAClC,EAAK,KAAK,IAAI,GACd,EAAI,EAAI,EAAI,EAAK,KAAK,IAAI,GAAK,EAAI,EACvC,SAAI,GAAK,EAAI,EACb,EAAI,GAAK,EAAI,EACb,EAAI,GAAK,EAAI,EACb,EAAI,GAAK,EAAK,KAAK,IAAI,GAChB,EAWT,YAAY,EAAK,EAAG,CAClB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAI,KAAK,KAAK,EAAI,EAAI,EAAI,EAAI,EAAI,GAClC,EAAI,EAAI,EAAI,KAAK,MAAM,EAAG,GAAK,EAAI,EACvC,SAAI,GAAK,EAAI,EACb,EAAI,GAAK,EAAI,EACb,EAAI,GAAK,EAAI,EACb,EAAI,GAAK,GAAM,KAAK,IAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAC7C,EAYT,YAAa,EAAK,EAAG,EAAG,CACtB,UAAG,EAAK,GACR,GAAM,EAAK,EAAK,GAChB,GAAI,EAAK,GACF,EAaT,YAAe,EAAK,EAAG,EAAG,EAAG,CAG3B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAO,EAAO,EAAO,EAAQ,EAEjC,SAAQ,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAEvC,EAAQ,GACV,GAAQ,CAAC,EACT,EAAK,CAAC,EACN,EAAK,CAAC,EACN,EAAK,CAAC,EACN,EAAK,CAAC,GAIR,AAAI,EAAM,EAAQ,GAAS,QAEzB,GAAQ,KAAK,KAAK,GAClB,EAAQ,KAAK,IAAI,GACjB,EAAS,KAAK,IAAK,GAAM,GAAK,GAAS,EACvC,EAAS,KAAK,IAAI,EAAI,GAAS,GAI/B,GAAS,EAAM,EACf,EAAS,GAIX,EAAI,GAAK,EAAS,EAAK,EAAS,EAChC,EAAI,GAAK,EAAS,EAAK,EAAS,EAChC,EAAI,GAAK,EAAS,EAAK,EAAS,EAChC,EAAI,GAAK,EAAS,EAAK,EAAS,EACzB,EAUT,YAAgB,EAAK,CAGnB,GAAI,GAAK,GAAS,SACd,EAAK,GAAS,SACd,EAAK,GAAS,SACd,EAAe,KAAK,KAAK,EAAI,GAC7B,EAAS,KAAK,KAAK,GACvB,SAAI,GAAK,EAAe,KAAK,IAAI,EAAM,KAAK,GAAK,GACjD,EAAI,GAAK,EAAe,KAAK,IAAI,EAAM,KAAK,GAAK,GACjD,EAAI,GAAK,EAAS,KAAK,IAAI,EAAM,KAAK,GAAK,GAC3C,EAAI,GAAK,EAAS,KAAK,IAAI,EAAM,KAAK,GAAK,GACpC,EAWT,YAAgB,EAAK,EAAG,CACtB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACzC,EAAS,EAAM,EAAM,EAAM,EAE/B,SAAI,GAAK,CAAC,EAAK,EACf,EAAI,GAAK,CAAC,EAAK,EACf,EAAI,GAAK,CAAC,EAAK,EACf,EAAI,GAAK,EAAK,EACP,EAYT,YAAmB,EAAK,EAAG,CACzB,SAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,EAAE,GACJ,EAeT,YAAkB,EAAK,EAAG,CAGxB,GAAI,GAAS,EAAE,GAAK,EAAE,GAAK,EAAE,GACzB,EAEJ,GAAI,EAAS,EAEX,EAAQ,KAAK,KAAK,EAAS,GAE3B,EAAI,GAAK,GAAM,EACf,EAAQ,GAAM,EAEd,EAAI,GAAM,GAAE,GAAK,EAAE,IAAM,EACzB,EAAI,GAAM,GAAE,GAAK,EAAE,IAAM,EACzB,EAAI,GAAM,GAAE,GAAK,EAAE,IAAM,MACpB,CAEL,GAAI,GAAI,EACR,AAAI,EAAE,GAAK,EAAE,IAAI,GAAI,GACjB,EAAE,GAAK,EAAE,EAAI,EAAI,IAAI,GAAI,GAC7B,GAAI,GAAK,GAAI,GAAK,EACd,EAAK,GAAI,GAAK,EAClB,EAAQ,KAAK,KAAK,EAAE,EAAI,EAAI,GAAK,EAAE,EAAI,EAAI,GAAK,EAAE,EAAI,EAAI,GAAK,GAC/D,EAAI,GAAK,GAAM,EACf,EAAQ,GAAM,EACd,EAAI,GAAM,GAAE,EAAI,EAAI,GAAK,EAAE,EAAI,EAAI,IAAM,EACzC,EAAI,GAAM,GAAE,EAAI,EAAI,GAAK,EAAE,EAAI,EAAI,IAAM,EACzC,EAAI,GAAM,GAAE,EAAI,EAAI,GAAK,EAAE,EAAI,EAAI,IAAM,EAG3C,MAAO,GAcT,YAAmB,EAAK,EAAG,EAAG,EAAG,CAC/B,GAAI,GAAY,GAAM,KAAK,GAAK,IAChC,GAAK,EACL,GAAK,EACL,GAAK,EACL,GAAI,GAAK,KAAK,IAAI,GACd,EAAK,KAAK,IAAI,GACd,EAAK,KAAK,IAAI,GACd,EAAK,KAAK,IAAI,GACd,EAAK,KAAK,IAAI,GACd,EAAK,KAAK,IAAI,GAClB,SAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAClC,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAClC,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAClC,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC3B,EAUT,YAAa,EAAG,CACd,MAAO,QAAU,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,IAWpE,GAAI,IAAQ,EAAK,MAYjB,EAAQ,MAAQ,GAChB,GAAI,IAAa,EAAK,WAUtB,EAAQ,WAAa,GACrB,GAAI,IAAO,EAAK,KAahB,EAAQ,KAAO,GACf,GAAI,IAAM,EAAK,IAWf,EAAQ,IAAM,GACd,GAAI,IAAM,EAAK,IAMf,EAAQ,IAAM,GACd,GAAI,IAAM,GAWV,EAAQ,IAAM,GACd,GAAI,IAAQ,EAAK,MAUjB,EAAQ,MAAQ,GAChB,GAAI,IAAM,EAAK,IAYf,EAAQ,IAAM,GACd,GAAI,IAAO,EAAK,KAQhB,EAAQ,KAAO,GACf,GAAI,IAAS,EAAK,OAMlB,EAAQ,OAAS,GACjB,GAAI,IAAM,GASV,EAAQ,IAAM,GACd,GAAI,IAAgB,EAAK,cAMzB,EAAQ,cAAgB,GACxB,GAAI,IAAS,GAUb,EAAQ,OAAS,GACjB,GAAI,IAAY,EAAK,UASrB,EAAQ,UAAY,GACpB,GAAI,IAAc,EAAK,YASvB,EAAQ,YAAc,GACtB,GAAI,IAAS,EAAK,OAalB,EAAQ,OAAS,GAEjB,GAAI,IAAa,UAAY,CAC3B,GAAI,GAAU,GAAK,SACf,EAAY,GAAK,WAAW,EAAG,EAAG,GAClC,EAAY,GAAK,WAAW,EAAG,EAAG,GACtC,MAAO,UAAU,EAAK,EAAG,EAAG,CAC1B,GAAI,GAAM,GAAK,IAAI,EAAG,GAEtB,MAAI,GAAM,SACR,IAAK,MAAM,EAAS,EAAW,GAC3B,GAAK,IAAI,GAAW,MAAU,GAAK,MAAM,EAAS,EAAW,GACjE,GAAK,UAAU,EAAS,GACxB,GAAa,EAAK,EAAS,KAAK,IACzB,GACE,EAAM,QACf,GAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,GAEP,IAAK,MAAM,EAAS,EAAG,GACvB,EAAI,GAAK,EAAQ,GACjB,EAAI,GAAK,EAAQ,GACjB,EAAI,GAAK,EAAQ,GACjB,EAAI,GAAK,EAAI,EACN,GAAU,EAAK,QAiB5B,EAAQ,WAAa,GAErB,GAAI,IAAS,UAAY,CACvB,GAAI,GAAQ,KACR,EAAQ,KACZ,MAAO,UAAU,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,CACnC,UAAM,EAAO,EAAG,EAAG,GACnB,GAAM,EAAO,EAAG,EAAG,GACnB,GAAM,EAAK,EAAO,EAAO,EAAI,EAAK,GAAI,IAC/B,MAeX,EAAQ,OAAS,GAEjB,GAAI,IAAU,UAAY,CACxB,GAAI,GAAO,GAAK,SAChB,MAAO,UAAU,EAAK,EAAM,EAAO,EAAI,CACrC,SAAK,GAAK,EAAM,GAChB,EAAK,GAAK,EAAM,GAChB,EAAK,GAAK,EAAM,GAChB,EAAK,GAAK,EAAG,GACb,EAAK,GAAK,EAAG,GACb,EAAK,GAAK,EAAG,GACb,EAAK,GAAK,CAAC,EAAK,GAChB,EAAK,GAAK,CAAC,EAAK,GAChB,EAAK,GAAK,CAAC,EAAK,GACT,GAAU,EAAK,GAAS,EAAK,QAIxC,EAAQ,QAAU,KCtxBlB,0BAEA,YAAiB,EAAK,CAA6B,MAAI,OAAO,SAAW,YAAc,MAAO,QAAO,UAAa,SAAY,GAAU,SAAiB,EAAK,CAAE,MAAO,OAAO,IAAiB,GAAU,SAAiB,EAAK,CAAE,MAAO,IAAO,MAAO,SAAW,YAAc,EAAI,cAAgB,QAAU,IAAQ,OAAO,UAAY,SAAW,MAAO,IAAiB,GAAQ,GAEnX,OAAO,eAAe,EAAS,aAAc,CAC3C,MAAO,KAET,EAAQ,OAAS,GACjB,EAAQ,MAAQ,GAChB,EAAQ,WAAa,GACrB,EAAQ,8BAAgC,GACxC,EAAQ,wBAA0B,GAClC,EAAQ,gBAAkB,GAC1B,EAAQ,aAAe,GACvB,EAAQ,SAAW,GACnB,EAAQ,KAAO,GACf,EAAQ,SAAW,GACnB,EAAQ,IAAM,GACd,EAAQ,QAAU,GAClB,EAAQ,QAAU,GAClB,EAAQ,eAAiB,GACzB,EAAQ,UAAY,GACpB,EAAQ,QAAU,GAClB,EAAQ,QAAU,GAClB,EAAQ,QAAU,GAClB,EAAQ,mBAAqB,GAC7B,EAAQ,oBAAsB,GAC9B,EAAQ,iBAAmB,GAC3B,EAAQ,IAAM,GACd,EAAQ,SAAW,GACnB,EAAQ,MAAQ,GAChB,EAAQ,KAAO,GACf,EAAQ,OAAS,GACjB,EAAQ,UAAY,GACpB,EAAQ,UAAY,GACpB,EAAQ,IAAM,GACd,EAAQ,YAAc,GACtB,EAAQ,OAAS,GACjB,EAAQ,OAAS,EAAQ,cAAgB,EAAQ,IAAM,EAAQ,OAAS,EAAQ,IAAM,EAAQ,IAAM,EAAQ,QAAU,EAAQ,QAAU,OAExI,GAAI,GAAW,GAAwB,KAEnC,GAAO,GAAwB,MAE/B,GAAO,GAAwB,MAEnC,aAAoC,CAAE,GAAI,MAAO,UAAY,WAAY,MAAO,MAAM,GAAI,GAAQ,GAAI,SAAW,UAA2B,UAAoC,CAAE,MAAO,IAAiB,EAE1M,YAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAO,GAAI,IAAQ,MAAQ,GAAQ,KAAS,UAAY,MAAO,IAAQ,WAAc,MAAO,CAAE,QAAW,GAAS,GAAI,GAAQ,KAA4B,GAAI,GAAS,EAAM,IAAI,GAAQ,MAAO,GAAM,IAAI,GAAQ,GAAI,GAAS,GAAQ,EAAwB,OAAO,gBAAkB,OAAO,yBAA0B,OAAS,KAAO,GAAO,GAAI,OAAO,UAAU,eAAe,KAAK,EAAK,GAAM,CAAE,GAAI,GAAO,EAAwB,OAAO,yBAAyB,EAAK,GAAO,KAAM,AAAI,GAAS,GAAK,KAAO,EAAK,KAAQ,OAAO,eAAe,EAAQ,EAAK,GAAgB,EAAO,GAAO,EAAI,GAAY,SAAO,QAAa,EAAS,GAAS,EAAM,IAAI,EAAK,GAAkB,EAeruB,aAAkB,CAChB,GAAI,GAAK,GAAI,GAAS,WAAW,GAEjC,MAAI,GAAS,YAAc,cACzB,GAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,GAGV,EAAG,GAAK,EACD,EAWT,YAAe,EAAG,CAChB,GAAI,GAAK,GAAI,GAAS,WAAW,GACjC,SAAG,GAAK,EAAE,GACV,EAAG,GAAK,EAAE,GACV,EAAG,GAAK,EAAE,GACV,EAAG,GAAK,EAAE,GACV,EAAG,GAAK,EAAE,GACV,EAAG,GAAK,EAAE,GACV,EAAG,GAAK,EAAE,GACV,EAAG,GAAK,EAAE,GACH,EAkBT,YAAoB,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,CAClD,GAAI,GAAK,GAAI,GAAS,WAAW,GACjC,SAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACD,EAiBT,YAAuC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,CACjE,GAAI,GAAK,GAAI,GAAS,WAAW,GACjC,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,EAAG,GAAK,EACR,GAAI,GAAK,EAAK,GACV,EAAK,EAAK,GACV,EAAK,EAAK,GACd,SAAG,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACjC,EAAG,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACjC,EAAG,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACjC,EAAG,GAAK,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAC3B,EAaT,YAAiC,EAAK,EAAG,EAAG,CAC1C,GAAI,GAAK,EAAE,GAAK,GACZ,EAAK,EAAE,GAAK,GACZ,EAAK,EAAE,GAAK,GACZ,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAClC,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAClC,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAClC,EAAI,GAAK,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5B,EAYT,YAAyB,EAAK,EAAG,CAC/B,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GAAK,GAChB,EAAI,GAAK,EAAE,GAAK,GAChB,EAAI,GAAK,EAAE,GAAK,GAChB,EAAI,GAAK,EACF,EAYT,YAAsB,EAAK,EAAG,CAC5B,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAYT,YAAkB,EAAK,EAAG,CAExB,GAAI,GAAQ,GAAK,SACjB,GAAK,YAAY,EAAO,GACxB,GAAI,GAAI,GAAI,GAAS,WAAW,GAChC,UAAK,eAAe,EAAG,GACvB,GAAwB,EAAK,EAAO,GAC7B,EAYT,YAAc,EAAK,EAAG,CACpB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAUT,YAAkB,EAAK,CACrB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAmBT,YAAa,EAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,CAChD,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAUT,GAAI,IAAU,GAAK,KAQnB,EAAQ,QAAU,GAElB,YAAiB,EAAK,EAAG,CACvB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAYT,GAAI,IAAU,GAAK,KAUnB,EAAQ,QAAU,GAElB,YAAiB,EAAK,EAAG,CACvB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAUT,YAAwB,EAAK,EAAG,CAC9B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,CAAC,EAAE,GACR,EAAK,CAAC,EAAE,GACR,EAAK,CAAC,EAAE,GACR,EAAK,EAAE,GACX,SAAI,GAAM,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EACnD,EAAI,GAAM,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EACnD,EAAI,GAAM,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAC5C,EAYT,YAAmB,EAAK,EAAG,EAAG,CAC5B,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GAAK,GACb,EAAM,EAAE,GAAK,GACb,EAAM,EAAE,GAAK,GACb,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACZ,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC7C,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC7C,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC7C,EAAI,GAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACvC,EAYT,YAAiB,EAAK,EAAG,EAAK,CAC5B,GAAI,GAAK,CAAC,EAAE,GACR,EAAK,CAAC,EAAE,GACR,EAAK,CAAC,EAAE,GACR,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACzC,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACzC,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACzC,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC7C,UAAK,QAAQ,EAAK,EAAG,GACrB,EAAK,EAAI,GACT,EAAK,EAAI,GACT,EAAK,EAAI,GACT,EAAK,EAAI,GACT,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EACzC,EAYT,YAAiB,EAAK,EAAG,EAAK,CAC5B,GAAI,GAAK,CAAC,EAAE,GACR,EAAK,CAAC,EAAE,GACR,EAAK,CAAC,EAAE,GACR,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACzC,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACzC,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACzC,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC7C,UAAK,QAAQ,EAAK,EAAG,GACrB,EAAK,EAAI,GACT,EAAK,EAAI,GACT,EAAK,EAAI,GACT,EAAK,EAAI,GACT,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EACzC,EAYT,YAAiB,EAAK,EAAG,EAAK,CAC5B,GAAI,GAAK,CAAC,EAAE,GACR,EAAK,CAAC,EAAE,GACR,EAAK,CAAC,EAAE,GACR,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACzC,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACzC,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACzC,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC7C,UAAK,QAAQ,EAAK,EAAG,GACrB,EAAK,EAAI,GACT,EAAK,EAAI,GACT,EAAK,EAAI,GACT,EAAK,EAAI,GACT,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EACzC,EAYT,YAA4B,EAAK,EAAG,EAAG,CACrC,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACrC,EAYT,YAA6B,EAAK,EAAG,EAAG,CACtC,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACrC,EAaT,YAA0B,EAAK,EAAG,EAAM,EAAK,CAE3C,GAAI,KAAK,IAAI,GAAO,EAAS,QAC3B,MAAO,IAAK,EAAK,GAGnB,GAAI,GAAa,KAAK,MAAM,EAAK,GAAI,EAAK,GAAI,EAAK,IACnD,EAAM,EAAM,GACZ,GAAI,GAAI,KAAK,IAAI,GACb,EAAK,EAAI,EAAK,GAAK,EACnB,EAAK,EAAI,EAAK,GAAK,EACnB,EAAK,EAAI,EAAK,GAAK,EACnB,EAAK,KAAK,IAAI,GACd,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACZ,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,EAAI,GAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAAK,EAAM,EAChD,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC5C,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACrC,EAaT,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAkB,EAAK,EAAG,EAAG,CAC3B,GAAI,GAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAE,GACZ,SAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACnD,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACnD,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACnD,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACnD,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACnG,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACnG,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACnG,EAAI,GAAK,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC5F,EAQT,GAAI,IAAM,GAWV,EAAQ,IAAM,GAEd,YAAe,EAAK,EAAG,EAAG,CACxB,SAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EACT,EAYT,GAAI,IAAM,GAAK,IAYf,EAAQ,IAAM,GAEd,YAAc,EAAK,EAAG,EAAG,EAAG,CAC1B,GAAI,GAAK,EAAI,EACb,MAAI,IAAI,EAAG,GAAK,GAAG,GAAI,CAAC,GACxB,EAAI,GAAK,EAAE,GAAK,EAAK,EAAE,GAAK,EAC5B,EAAI,GAAK,EAAE,GAAK,EAAK,EAAE,GAAK,EAC5B,EAAI,GAAK,EAAE,GAAK,EAAK,EAAE,GAAK,EAC5B,EAAI,GAAK,EAAE,GAAK,EAAK,EAAE,GAAK,EAC5B,EAAI,GAAK,EAAE,GAAK,EAAK,EAAE,GAAK,EAC5B,EAAI,GAAK,EAAE,GAAK,EAAK,EAAE,GAAK,EAC5B,EAAI,GAAK,EAAE,GAAK,EAAK,EAAE,GAAK,EAC5B,EAAI,GAAK,EAAE,GAAK,EAAK,EAAE,GAAK,EACrB,EAWT,YAAgB,EAAK,EAAG,CACtB,GAAI,GAAQ,GAAc,GAC1B,SAAI,GAAK,CAAC,EAAE,GAAK,EACjB,EAAI,GAAK,CAAC,EAAE,GAAK,EACjB,EAAI,GAAK,CAAC,EAAE,GAAK,EACjB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,CAAC,EAAE,GAAK,EACjB,EAAI,GAAK,CAAC,EAAE,GAAK,EACjB,EAAI,GAAK,CAAC,EAAE,GAAK,EACjB,EAAI,GAAK,EAAE,GAAK,EACT,EAYT,YAAmB,EAAK,EAAG,CACzB,SAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,EAAE,GACJ,EAWT,GAAI,IAAS,GAAK,OAMlB,EAAQ,OAAS,GACjB,GAAI,IAAM,GASV,EAAQ,IAAM,GACd,GAAI,IAAgB,GAAK,cAMzB,EAAQ,cAAgB,GACxB,GAAI,IAAS,GAUb,EAAQ,OAAS,GAEjB,YAAmB,EAAK,EAAG,CACzB,GAAI,GAAY,GAAc,GAE9B,GAAI,EAAY,EAAG,CACjB,EAAY,KAAK,KAAK,GACtB,GAAI,GAAK,EAAE,GAAK,EACZ,EAAK,EAAE,GAAK,EACZ,EAAK,EAAE,GAAK,EACZ,EAAK,EAAE,GAAK,EACZ,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAU,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACjD,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAM,GAAK,EAAK,GAAW,EAC/B,EAAI,GAAM,GAAK,EAAK,GAAW,EAC/B,EAAI,GAAM,GAAK,EAAK,GAAW,EAC/B,EAAI,GAAM,GAAK,EAAK,GAAW,EAGjC,MAAO,GAUT,YAAa,EAAG,CACd,MAAO,SAAW,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,IAW7H,YAAqB,EAAG,EAAG,CACzB,MAAO,GAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,GAW3I,YAAgB,EAAG,EAAG,CACpB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,MAAO,MAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,EAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,OC15BzqB,0BAEA,YAAiB,EAAK,CAA6B,MAAI,OAAO,SAAW,YAAc,MAAO,QAAO,UAAa,SAAY,GAAU,SAAiB,EAAK,CAAE,MAAO,OAAO,IAAiB,GAAU,SAAiB,EAAK,CAAE,MAAO,IAAO,MAAO,SAAW,YAAc,EAAI,cAAgB,QAAU,IAAQ,OAAO,UAAY,SAAW,MAAO,IAAiB,GAAQ,GAEnX,OAAO,eAAe,EAAS,aAAc,CAC3C,MAAO,KAET,EAAQ,OAAS,GACjB,EAAQ,MAAQ,GAChB,EAAQ,WAAa,GACrB,EAAQ,KAAO,GACf,EAAQ,IAAM,GACd,EAAQ,IAAM,GACd,EAAQ,SAAW,GACnB,EAAQ,SAAW,GACnB,EAAQ,OAAS,GACjB,EAAQ,KAAO,GACf,EAAQ,MAAQ,GAChB,EAAQ,IAAM,GACd,EAAQ,IAAM,GACd,EAAQ,MAAQ,GAChB,EAAQ,MAAQ,GAChB,EAAQ,YAAc,GACtB,EAAQ,SAAW,GACnB,EAAQ,gBAAkB,GAC1B,EAAQ,OAAS,GACjB,EAAQ,cAAgB,GACxB,EAAQ,OAAS,GACjB,EAAQ,QAAU,GAClB,EAAQ,UAAY,GACpB,EAAQ,IAAM,GACd,EAAQ,MAAQ,GAChB,EAAQ,KAAO,GACf,EAAQ,OAAS,GACjB,EAAQ,cAAgB,GACxB,EAAQ,eAAiB,GACzB,EAAQ,cAAgB,GACxB,EAAQ,cAAgB,GACxB,EAAQ,OAAS,GACjB,EAAQ,MAAQ,GAChB,EAAQ,KAAO,GACf,EAAQ,IAAM,GACd,EAAQ,YAAc,GACtB,EAAQ,OAAS,GACjB,EAAQ,QAAU,EAAQ,OAAS,EAAQ,QAAU,EAAQ,KAAO,EAAQ,IAAM,EAAQ,IAAM,EAAQ,IAAM,EAAQ,IAAM,OAE5H,GAAI,IAAW,GAAwB,KAEvC,aAAoC,CAAE,GAAI,MAAO,UAAY,WAAY,MAAO,MAAM,GAAI,GAAQ,GAAI,SAAW,UAA2B,UAAoC,CAAE,MAAO,IAAiB,EAE1M,YAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAO,GAAI,IAAQ,MAAQ,GAAQ,KAAS,UAAY,MAAO,IAAQ,WAAc,MAAO,CAAE,QAAW,GAAS,GAAI,GAAQ,KAA4B,GAAI,GAAS,EAAM,IAAI,GAAQ,MAAO,GAAM,IAAI,GAAQ,GAAI,GAAS,GAAQ,EAAwB,OAAO,gBAAkB,OAAO,yBAA0B,OAAS,KAAO,GAAO,GAAI,OAAO,UAAU,eAAe,KAAK,EAAK,GAAM,CAAE,GAAI,GAAO,EAAwB,OAAO,yBAAyB,EAAK,GAAO,KAAM,AAAI,GAAS,GAAK,KAAO,EAAK,KAAQ,OAAO,eAAe,EAAQ,EAAK,GAAgB,EAAO,GAAO,EAAI,GAAY,SAAO,QAAa,EAAS,GAAS,EAAM,IAAI,EAAK,GAAkB,EAYruB,aAAkB,CAChB,GAAI,GAAM,GAAI,IAAS,WAAW,GAElC,MAAI,IAAS,YAAc,cACzB,GAAI,GAAK,EACT,EAAI,GAAK,GAGJ,EAUT,YAAe,EAAG,CAChB,GAAI,GAAM,GAAI,IAAS,WAAW,GAClC,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAWT,YAAoB,EAAG,EAAG,CACxB,GAAI,GAAM,GAAI,IAAS,WAAW,GAClC,SAAI,GAAK,EACT,EAAI,GAAK,EACF,EAWT,YAAc,EAAK,EAAG,CACpB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAYT,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,EACT,EAAI,GAAK,EACF,EAYT,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAkB,EAAK,EAAG,EAAG,CAC3B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAkB,EAAK,EAAG,EAAG,CAC3B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAYT,YAAgB,EAAK,EAAG,EAAG,CACzB,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAWT,YAAc,EAAK,EAAG,CACpB,SAAI,GAAK,KAAK,KAAK,EAAE,IACrB,EAAI,GAAK,KAAK,KAAK,EAAE,IACd,EAWT,YAAe,EAAK,EAAG,CACrB,SAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACf,EAYT,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IACnB,EAYT,YAAa,EAAK,EAAG,EAAG,CACtB,SAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IACnB,EAWT,YAAe,EAAK,EAAG,CACrB,SAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACf,EAYT,YAAe,EAAK,EAAG,EAAG,CACxB,SAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EACT,EAaT,YAAqB,EAAK,EAAG,EAAG,EAAO,CACrC,SAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EAChB,EAWT,YAAkB,EAAG,EAAG,CACtB,GAAI,GAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACjB,MAAO,MAAK,MAAM,EAAG,GAWvB,YAAyB,EAAG,EAAG,CAC7B,GAAI,GAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACjB,MAAO,GAAI,EAAI,EAAI,EAUrB,YAAgB,EAAG,CACjB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,MAAO,MAAK,MAAM,EAAG,GAUvB,YAAuB,EAAG,CACxB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,MAAO,GAAI,EAAI,EAAI,EAWrB,YAAgB,EAAK,EAAG,CACtB,SAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACL,EAWT,YAAiB,EAAK,EAAG,CACvB,SAAI,GAAK,EAAM,EAAE,GACjB,EAAI,GAAK,EAAM,EAAE,GACV,EAWT,YAAmB,EAAK,EAAG,CACzB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAM,EAAI,EAAI,EAAI,EAEtB,MAAI,GAAM,GAER,GAAM,EAAI,KAAK,KAAK,IAGtB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EACT,EAWT,YAAa,EAAG,EAAG,CACjB,MAAO,GAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAahC,YAAe,EAAK,EAAG,EAAG,CACxB,GAAI,GAAI,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAC/B,SAAI,GAAK,EAAI,GAAK,EAClB,EAAI,GAAK,EACF,EAaT,YAAc,EAAK,EAAG,EAAG,EAAG,CAC1B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAK,GAAE,GAAK,GAC1B,EAAI,GAAK,EAAK,EAAK,GAAE,GAAK,GACnB,EAWT,YAAgB,EAAK,EAAO,CAC1B,EAAQ,GAAS,EACjB,GAAI,GAAI,GAAS,SAAW,EAAM,KAAK,GACvC,SAAI,GAAK,KAAK,IAAI,GAAK,EACvB,EAAI,GAAK,KAAK,IAAI,GAAK,EAChB,EAYT,YAAuB,EAAK,EAAG,EAAG,CAChC,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAC3B,EAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EACpB,EAYT,YAAwB,EAAK,EAAG,EAAG,CACjC,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GACjC,EAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAC1B,EAaT,YAAuB,EAAK,EAAG,EAAG,CAChC,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GACjC,EAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAC1B,EAcT,YAAuB,EAAK,EAAG,EAAG,CAChC,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IACjC,EAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAC1B,EAYT,YAAgB,EAAK,EAAG,EAAG,EAAK,CAE9B,GAAI,GAAK,EAAE,GAAK,EAAE,GACd,EAAK,EAAE,GAAK,EAAE,GACd,EAAO,KAAK,IAAI,GAChB,EAAO,KAAK,IAAI,GAEpB,SAAI,GAAK,EAAK,EAAO,EAAK,EAAO,EAAE,GACnC,EAAI,GAAK,EAAK,EAAO,EAAK,EAAO,EAAE,GAC5B,EAUT,YAAe,EAAG,EAAG,CACnB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GAEX,EAAM,KAAK,KAAK,EAAK,EAAK,EAAK,GAAM,KAAK,KAAK,EAAK,EAAK,EAAK,GAE9D,EAAS,GAAQ,GAAK,EAAK,EAAK,GAAM,EAEtC,MAAO,MAAK,KAAK,KAAK,IAAI,KAAK,IAAI,EAAQ,IAAK,IAUlD,YAAc,EAAK,CACjB,SAAI,GAAK,EACT,EAAI,GAAK,EACF,EAUT,YAAa,EAAG,CACd,MAAO,QAAU,EAAE,GAAK,KAAO,EAAE,GAAK,IAWxC,YAAqB,EAAG,EAAG,CACzB,MAAO,GAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,GAWrC,YAAgB,EAAG,EAAG,CACpB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,MAAO,MAAK,IAAI,EAAK,IAAO,GAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,GAAS,QAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,IAQ3K,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAM,GAMV,EAAQ,IAAM,GACd,GAAI,IAAO,GAMX,EAAQ,KAAO,GACf,GAAI,IAAU,GAMd,EAAQ,QAAU,GAClB,GAAI,IAAS,GAcb,EAAQ,OAAS,GAEjB,GAAI,IAAU,UAAY,CACxB,GAAI,GAAM,KACV,MAAO,UAAU,EAAG,EAAQ,EAAQ,EAAO,EAAI,EAAK,CAClD,GAAI,GAAG,EAgBP,IAdK,GACH,GAAS,GAGN,GACH,GAAS,GAGX,AAAI,EACF,EAAI,KAAK,IAAI,EAAQ,EAAS,EAAQ,EAAE,QAExC,EAAI,EAAE,OAGH,EAAI,EAAQ,EAAI,EAAG,GAAK,EAC3B,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,EAAI,GACf,EAAG,EAAK,EAAK,GACb,EAAE,GAAK,EAAI,GACX,EAAE,EAAI,GAAK,EAAI,GAGjB,MAAO,OAIX,EAAQ,QAAU,KChtBlB,0BAEA,YAAiB,EAAK,CAA6B,MAAI,OAAO,SAAW,YAAc,MAAO,QAAO,UAAa,SAAY,GAAU,SAAiB,EAAK,CAAE,MAAO,OAAO,IAAiB,GAAU,SAAiB,EAAK,CAAE,MAAO,IAAO,MAAO,SAAW,YAAc,EAAI,cAAgB,QAAU,IAAQ,OAAO,UAAY,SAAW,MAAO,IAAiB,GAAQ,GAEnX,OAAO,eAAe,EAAS,aAAc,CAC3C,MAAO,KAET,EAAQ,KAAO,EAAQ,KAAO,EAAQ,KAAO,EAAQ,MAAQ,EAAQ,KAAO,EAAQ,KAAO,EAAQ,KAAO,EAAQ,MAAQ,EAAQ,KAAO,EAAQ,SAAW,OAE5J,GAAI,IAAW,GAAwB,KAEvC,EAAQ,SAAW,GAEnB,GAAI,IAAO,GAAwB,MAEnC,EAAQ,KAAO,GAEf,GAAI,IAAQ,GAAwB,MAEpC,EAAQ,MAAQ,GAEhB,GAAI,IAAO,GAAwB,MAEnC,EAAQ,KAAO,GAEf,GAAI,IAAO,GAAwB,MAEnC,EAAQ,KAAO,GAEf,GAAI,IAAO,GAAwB,MAEnC,EAAQ,KAAO,GAEf,GAAI,IAAQ,GAAwB,MAEpC,EAAQ,MAAQ,GAEhB,GAAI,IAAO,GAAwB,MAEnC,EAAQ,KAAO,GAEf,GAAI,IAAO,GAAwB,MAEnC,EAAQ,KAAO,GAEf,GAAI,IAAO,GAAwB,MAEnC,EAAQ,KAAO,GAEf,aAAoC,CAAE,GAAI,MAAO,UAAY,WAAY,MAAO,MAAM,GAAI,GAAQ,GAAI,SAAW,UAA2B,UAAoC,CAAE,MAAO,IAAiB,EAE1M,YAAiC,EAAK,CAAE,GAAI,GAAO,EAAI,WAAc,MAAO,GAAO,GAAI,IAAQ,MAAQ,GAAQ,KAAS,UAAY,MAAO,IAAQ,WAAc,MAAO,CAAE,QAAW,GAAS,GAAI,GAAQ,KAA4B,GAAI,GAAS,EAAM,IAAI,GAAQ,MAAO,GAAM,IAAI,GAAQ,GAAI,GAAS,GAAQ,EAAwB,OAAO,gBAAkB,OAAO,yBAA0B,OAAS,KAAO,GAAO,GAAI,OAAO,UAAU,eAAe,KAAK,EAAK,GAAM,CAAE,GAAI,GAAO,EAAwB,OAAO,yBAAyB,EAAK,GAAO,KAAM,AAAI,GAAS,GAAK,KAAO,EAAK,KAAQ,OAAO,eAAe,EAAQ,EAAK,GAAgB,EAAO,GAAO,EAAI,GAAY,SAAO,QAAa,EAAS,GAAS,EAAM,IAAI,EAAK,GAAkB,KCnDruB,cAQA,GAAG,kBAAkB,iBAAkB,CAEnC,OAAQ,CAAC,KAAM,GAAG,KAAK,KAAM,OAAQ,CAAC,OAAQ,OAAQ,SAAU,QAAS,SAC1E,CACC,KAAM,oBAEN,KAAM,UAAW,CACb,KAAK,SAAW,CAAC,EAAG,EAAG,EAAG,GAC1B,KAAK,SAAW,CAAC,EAAG,EAAG,EAAG,GAC1B,KAAK,QAAU,GAEf,GAAM,GAAO,CAAC,OAAQ,OAAQ,SAC9B,KAAK,OAAS,EAAK,KAAK,QACrB,KAAK,QAAU,QACd,MAAK,OAAS,QAGlB,KAAK,QAAU,KAAK,QAAQ,KAAK,MACjC,KAAK,SAAW,KAAK,SAAS,KAAK,MAEnC,IAAI,yBAAyB,CAEzB,IAAI,kBAAkB,iBACtB,IAAI,aAAa,iBACjB,OAGJ,AAAG,KAAK,QAAU,OACd,IAAI,IAAI,CAAC,OAAQ,OAAO,OAAW,WAAY,KAE5C,AAAG,KAAK,QAAU,OACrB,KAAI,aAAa,UAAU,CAAC,qBAAsB,KAClD,IAAI,IAAI,CAAC,OAAQ,OAAO,OAAW,WAAY,GAAO,aAAc,CAChE,UAAW,IAAI,SAAS,SAAS,UAGrC,QAAQ,MAAM,2CAA4C,KAAK,SAIvE,OAAQ,UAAW,CACf,GAAG,KAAK,QAAS,CAYb,GAXG,GAAG,MAAM,aAAa,QAAU,GAC/B,IAAG,MAAM,YAAY,KAAK,UAAW,CACjC,IAAI,aAAa,KAAK,OACtB,sBAEJ,GAAG,MAAM,aAAa,KAAK,UAAW,CAClC,IAAI,cAAc,KAAK,UAK5B,KAAK,SAAS,IAAM,GAAK,KAAK,SAAS,IAAM,GAC5C,KAAK,SAAS,IAAM,GAAK,KAAK,SAAS,IAAM,EAC7C,OAIJ,KAAK,OAAO,iBACZ,KAAK,OAAO,OAAO,KAAK,UACxB,KAAK,OAAO,UAAU,KAAK,YAMnC,SAAU,SAAS,EAAM,CACrB,GAAI,CAAC,EAAK,iBAAiB,QAAS,OACpC,GAAI,GAAI,EAAK,iBAAiB,QAAQ,SACtC,KAAK,SAAS,GAAK,EAAE,EACrB,KAAK,SAAS,GAAK,EAAE,EACrB,KAAK,SAAS,GAAK,EAAE,EACrB,KAAK,SAAS,GAAK,EAAE,EACrB,GAAI,GAAI,EAAK,iBAAiB,QAAQ,SACtC,KAAK,SAAS,GAAK,EAAE,EACrB,KAAK,SAAS,GAAK,EAAE,EACrB,KAAK,SAAS,GAAK,EAAE,GAGzB,QAAS,UAAW,CAChB,KAAK,QAAU,QCzFvB,cAkDA,GAAG,kBAAkB,gBAAiB,GACjC,CACD,KAAM,UAAY,CAChB,KAAK,eAAiB,GACtB,KAAK,iBAAmB,GACxB,KAAK,eAAiB,GACtB,KAAK,cAAgB,GACrB,KAAK,cAAgB,GACrB,KAAK,YAAc,IAErB,QAAS,SAAS,EAAQ,EAAQ,CAC9B,OAAQ,KAAK,MAAK,eAAgB,EAAE,EAAQ,IAEhD,UAAW,SAAS,EAAQ,EAAQ,CAChC,OAAQ,KAAK,MAAK,iBAAkB,EAAE,EAAQ,IAElD,QAAS,SAAS,EAAQ,EAAQ,CAC9B,OAAQ,KAAK,MAAK,eAAgB,EAAE,EAAQ,IAEhD,OAAQ,SAAS,EAAQ,EAAQ,CAC7B,OAAQ,KAAK,MAAK,cAAe,EAAE,EAAQ,IAE/C,OAAQ,SAAS,EAAQ,EAAQ,CAC7B,OAAQ,KAAK,MAAK,cAAe,EAAE,EAAQ,IAE/C,KAAM,SAAS,EAAQ,EAAQ,CAC3B,OAAQ,KAAK,MAAK,YAAa,EAAE,EAAQ,IAE7C,iBAAkB,SAAS,EAAG,CAC1B,KAAK,kBAAkB,GACvB,KAAK,eAAe,KAAK,IAE7B,oBAAqB,SAAS,EAAG,CAC7B,KAAK,kBAAkB,GACvB,KAAK,gBAAgB,KAAK,eAAgB,IAE9C,mBAAoB,SAAS,EAAG,CAC5B,KAAK,kBAAkB,GACvB,KAAK,iBAAiB,KAAK,IAE/B,sBAAuB,SAAS,EAAG,CAC/B,KAAK,kBAAkB,GACvB,KAAK,gBAAgB,KAAK,iBAAkB,IAEhD,iBAAkB,SAAS,EAAG,CAC1B,KAAK,kBAAkB,GACvB,KAAK,eAAe,KAAK,IAE7B,oBAAqB,SAAS,EAAG,CAC7B,KAAK,kBAAkB,GACvB,KAAK,gBAAgB,KAAK,eAAgB,IAE9C,gBAAiB,SAAS,EAAG,CACzB,KAAK,kBAAkB,GACvB,KAAK,cAAc,KAAK,IAE5B,mBAAoB,SAAS,EAAG,CAC5B,KAAK,kBAAkB,GACvB,KAAK,gBAAgB,KAAK,cAAe,IAE7C,gBAAiB,SAAS,EAAG,CACzB,KAAK,kBAAkB,GACvB,KAAK,cAAc,KAAK,IAE5B,mBAAoB,SAAS,EAAG,CAC5B,KAAK,kBAAkB,GACvB,KAAK,gBAAgB,KAAK,cAAe,IAE7C,cAAe,SAAS,EAAG,CACvB,KAAK,kBAAkB,GACvB,KAAK,YAAY,KAAK,IAE1B,iBAAkB,SAAS,EAAG,CAC1B,KAAK,kBAAkB,GACvB,KAAK,gBAAgB,KAAK,YAAa,IAG3C,gBAAiB,SAAS,EAAK,EAAO,CAClC,GAAI,GAAQ,EAAI,QAAQ,GACxB,MAAG,GAAQ,IAAI,EAAI,OAAO,EAAO,GAC1B,GAEX,kBAAmB,SAAS,EAAG,CAC3B,GAAG,MAAO,IAAM,WACZ,KAAM,IAAI,WAAU,KAAK,OAAO,KAC1B,wDCvIlB,8BAAyB,QAiBzB,GAAG,kBAAkB,SAAU,CAE3B,eAAgB,CAAC,KAAM,GAAG,KAAK,IAAK,QAAS,GAE7C,gBAAiB,CAAC,KAAM,GAAG,KAAK,QAEhC,qBAAsB,CAAC,KAAM,GAAG,KAAK,KAAM,OAAQ,CAAC,IAAK,IAAK,IAAK,QAAS,QAAS,KAErF,aAAc,CAAC,KAAM,GAAG,KAAK,QAE7B,WAAY,CAAC,KAAM,GAAG,KAAK,KAAM,OAAQ,CAAC,kBAAmB,OAAQ,QAAS,QAAS,QAAS,mBAEhG,YAAa,CAAC,KAAM,GAAG,KAAK,KAAM,OAAQ,CAAC,YAAa,SAAU,QAAS,aAE3E,YAAa,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,KAC1C,CACD,KAAM,UAAW,CAEb,KAAK,QAAU,KACf,KAAK,cAAiB,GAAK,KAAK,eAChC,KAAK,YAAc,KAEvB,MAAO,UAAW,CACd,GAAG,KAAK,YAAc,EAAG,CACrB,GAAM,GAAY,KAAK,OAAO,aAAa,SAC3C,AAAI,EAKA,MAAK,WAAa,EAAU,WAC5B,KAAK,MAAQ,GALb,QAAQ,KAAK,6BAA8B,KAAK,OAAO,KACnD,4FAOR,MAAK,WAAa,CAAC,OAAQ,SAAS,KAAK,WAAa,GAG1D,KAAK,aAAe,KAAK,OAAO,aAAa,iBAE7C,KAAK,OAAS,GAAI,cAAa,GAC/B,KAAK,eAAiB,GAAI,cAAa,GACvC,KAAK,UAAY,CAAC,EAAG,EAAG,GACxB,KAAK,SAAW,GAAI,cAAa,GACjC,KAAK,cAAgB,KAAK,OAAO,aAAa,QAG3C,KAAK,eAAiB,MACrB,IAAG,OAAO,iBAAiB,QAAS,KAAK,QAAQ,KAAK,OACtD,GAAG,OAAO,iBAAiB,cAAe,KAAK,cAAc,KAAK,OAClE,GAAG,OAAO,iBAAiB,cAAe,KAAK,cAAc,KAAK,OAClE,GAAG,OAAO,iBAAiB,YAAa,KAAK,YAAY,KAAK,OAE9D,KAAK,iBAAmB,GAAI,cAAa,IACzC,QAAK,OAAO,KAAK,iBAAkB,KAAK,cAAc,kBACtD,OAAO,iBAAiB,SAAU,KAAK,iBAAiB,KAAK,QAEjE,KAAK,WAAa,GAClB,KAAK,QAAU,GACf,KAAK,OAAS,GACd,KAAK,WAAa,GAElB,KAAK,UAAY,GAAI,cAAa,GAClC,KAAK,eAAiB,KAEtB,GAAG,iBAAiB,KAAK,KAAK,cAAc,KAAK,OAE9C,KAAK,iBACJ,MAAK,eAAiB,GAAI,cAAa,GACvC,KAAK,eAAe,IAAI,KAAK,gBAAgB,cAG7C,KAAK,OAAO,oBAAoB,KAAK,QACrC,KAAK,OAAO,WAAW,KAAK,WAC5B,KAAK,uBAAuB,CACxB,KAAK,OAAO,GAAK,KAAK,UAAU,GAChC,KAAK,OAAO,GAAK,KAAK,UAAU,GAChC,KAAK,OAAO,GAAK,KAAK,UAAU,OAG5C,iBAAkB,UAAW,CACzB,AAAG,CAAC,KAAK,eAGT,QAAK,OAAO,KAAK,iBAAkB,KAAK,cAAc,mBAG1D,uBAAwB,SAAS,EAAa,CAC1C,GAAG,CAAC,KAAK,gBAAiB,OAC1B,GAAM,GAAO,QAAK,KAAK,KAAK,OAAQ,GACpC,KAAK,gBAAgB,oBAAoB,CAAC,EAAK,EAAK,CAAC,EAAO,IACzD,KAAK,sBAAwB,GAC5B,MAAK,gBAAgB,eACrB,KAAK,eAAe,KAAK,sBAAwB,EAAK,EACtD,KAAK,gBAAgB,MAAM,KAAK,kBAIxC,qBAAsB,SAAS,EAAS,CACpC,AAAG,KAAK,SAAW,GACnB,MAAK,QAAU,EACZ,EAAC,KAAK,cAET,CAAG,EACC,MAAK,aAAa,eAClB,KAAK,aAAa,MAAM,KAAK,iBAE7B,MAAK,eAAe,IAAI,KAAK,aAAa,cAC1C,KAAK,aAAa,MAAM,CAAC,EAAG,EAAG,QAIvC,OAAQ,UAAW,CACf,KAAK,SAAS,KAGlB,SAAU,SAAS,EAAS,CAExB,GAAG,KAAK,QAAS,CAEb,GAAG,KAAK,aAAe,KAAK,OAAS,GAAG,UAAU,aAAa,GAAG,aAAe,QAAU,GAAG,UAAU,aAAa,GAAG,QAAS,CAC7H,GAAM,GAAI,GAAG,UAAU,aAAa,GAAG,QAAQ,KAE/C,KAAK,UAAY,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,IAC/B,KAAK,sBAEL,MAAK,OAAO,oBAAoB,KAAK,QACrC,KAAK,OAAO,WAAW,KAAK,WAEhC,GAAM,GAAS,KAAK,OAAU,KAAK,aAAe,EAC9C,GAAG,MAAM,QAAQ,KAAK,OAAQ,KAAK,UAAW,KAAK,eACnD,GAAG,QAAQ,QAAQ,KAAK,OAAQ,KAAK,UAAW,KAAK,cAAe,KAAK,aAE7E,AAAG,EAAO,SAAW,EACjB,KAAK,UAAU,IAAI,EAAO,UAAU,IAEpC,KAAK,UAAU,KAAK,GAGxB,KAAK,eAAe,EAAQ,GAGhC,AAAG,KAAK,cACJ,CAAG,KAAK,gBAAmB,MAAK,UAAU,IAAM,GAAK,KAAK,UAAU,IAAM,GAAK,KAAK,UAAU,IAAM,GAChG,MAAK,qBAAqB,IAC1B,KAAK,aAAa,oBAAoB,KAAK,WAC3C,KAAK,uBAAuB,KAAK,YAEjC,KAAK,qBAAqB,MAKtC,eAAgB,SAAS,EAAQ,EAAS,CACtC,GAAG,EAAO,SAAW,EAAG,CACpB,GAAG,CAAC,KAAK,gBAAkB,CAAC,KAAK,eAAe,OAAO,EAAO,QAAQ,IAAK,CAEvE,GAAG,KAAK,eAAgB,CACpB,GAAM,GAAe,KAAK,eAAe,aAAa,iBACtD,AAAG,GAAc,EAAa,UAAU,KAAK,eAAgB,MAC7D,KAAK,aAAa,UAAU,KAAK,eAAgB,MAIrD,KAAK,eAAiB,EAAO,QAAQ,GAClC,KAAK,aAAa,IAAG,OAAO,MAAM,OAAS,WAE9C,GAAI,GAAe,KAAK,eAAe,aAAa,iBACpD,AAAG,GACC,MAAK,qBAAuB,EAC5B,EAAa,QAAQ,KAAK,eAAgB,OAE9C,KAAK,aAAa,QAAQ,KAAK,eAAgB,MAGnD,AAAG,KAAK,sBACJ,KAAK,qBAAqB,OAAO,KAAK,eAAgB,MAI1D,GAAM,GAAe,KAAK,eAAe,aAAa,iBACtD,AAAG,KAAK,SAAW,KAAK,YACpB,CAAG,KAAK,OAED,IAAc,EAAa,OAAO,KAAK,eAAgB,MAC1D,KAAK,aAAa,OAAO,KAAK,eAAgB,OAG3C,IAAc,EAAa,KAAK,KAAK,eAAgB,MACxD,KAAK,aAAa,KAAK,KAAK,eAAgB,QAKjD,GACI,IAAc,EAAa,QAAQ,KAAK,eAAgB,MAC3D,KAAK,aAAa,QAAQ,KAAK,eAAgB,eAE7C,KAAK,gBAAkB,EAAO,UAAY,EAAG,CACnD,GAAM,GAAe,KAAK,eAAe,aAAa,iBACtD,AAAG,GAAc,EAAa,UAAU,KAAK,eAAgB,MAC7D,KAAK,aAAa,UAAU,KAAK,eAAgB,MACjD,KAAK,eAAiB,KACtB,KAAK,qBAAuB,KACzB,KAAK,aAAa,IAAG,OAAO,MAAM,OAAS,WAGlD,KAAK,WAAa,KAAK,QAU3B,cAAe,SAAS,EAAG,CAEvB,KAAK,QAAU,EACf,EAAE,iBAAiB,MAAO,SAAS,EAAG,CAGlC,KAAK,QAAU,MACjB,KAAK,OAEP,EAAE,iBAAiB,SAAU,KAAK,SAAS,KAAK,OAChD,EAAE,iBAAiB,cAAe,KAAK,cAAc,KAAK,OAC1D,EAAE,iBAAiB,YAAa,KAAK,YAAY,KAAK,OAGtD,KAAK,oBAIT,SAAU,SAAS,EAAG,CAClB,AAAG,EAAE,YAAY,YAAc,KAAK,YACpC,KAAK,SAAS,KAIlB,cAAe,SAAS,EAAG,CACvB,KAAK,YAAc,GAChB,EAAE,YAAY,YAAc,KAAK,YAAY,MAAK,OAAS,KAIlE,YAAa,SAAS,EAAG,CACrB,KAAK,YAAc,GAChB,EAAE,YAAY,YAAc,KAAK,YAAY,MAAK,OAAS,KAIlE,cAAe,SAAU,EAAG,CAExB,GAAG,CAAC,EAAE,UAAW,OACjB,GAAM,GAAS,EAAE,OAAO,wBAClB,EAAS,KAAK,eAAe,EAAE,QAAS,EAAE,QAAS,EAAO,MAAO,EAAO,QAE9E,KAAK,eAAe,EAAQ,KAIhC,QAAS,SAAU,EAAG,CAClB,GAAM,GAAS,EAAE,OAAO,wBAClB,EAAS,KAAK,eAAe,EAAE,QAAS,EAAE,QAAS,EAAO,MAAO,EAAO,QAC9E,KAAK,eAAe,EAAQ,KAIhC,cAAe,SAAU,EAAG,CAExB,GAAG,CAAC,EAAE,WAAa,EAAE,SAAW,EAAG,OACnC,GAAM,GAAS,EAAE,OAAO,wBAClB,EAAS,KAAK,eAAe,EAAE,QAAS,EAAE,QAAS,EAAO,MAAO,EAAO,QAC9E,KAAK,OAAS,GAEd,KAAK,eAAe,EAAQ,KAIhC,YAAa,SAAU,EAAG,CAEtB,GAAG,CAAC,EAAE,WAAa,EAAE,SAAW,EAAG,OACnC,GAAM,GAAS,EAAE,OAAO,wBAClB,EAAS,KAAK,eAAe,EAAE,QAAS,EAAE,QAAS,EAAO,MAAO,EAAO,QAC9E,KAAK,OAAS,GAEd,KAAK,eAAe,EAAQ,KAOhC,eAAgB,SAAS,EAAS,EAAS,EAAG,EAAG,CAE7C,GAAM,GAAO,EAAQ,EACf,EAAM,EAAQ,EACpB,YAAK,UAAY,CAAC,EAAK,EAAI,EAAG,CAAC,EAAI,EAAI,EAAG,IACnC,KAAK,mBAGhB,gBAAiB,UAAW,CACxB,KAAK,OAAO,oBAAoB,KAAK,QAGrC,QAAK,cAAc,KAAK,UAAW,KAAK,UACpC,KAAK,kBACT,QAAK,UAAU,KAAK,UAAW,KAAK,WACpC,QAAK,cAAc,KAAK,UAAW,KAAK,UAAW,KAAK,OAAO,gBAC/D,GAAM,GAAS,KAAK,OAAU,KAAK,aAAe,EAC9C,GAAG,MAAM,QAAQ,KAAK,OAAQ,KAAK,UAAW,KAAK,eACnD,GAAG,QAAQ,QAAQ,KAAK,OAAQ,KAAK,UAAW,KAAK,cAAe,KAAK,aAE7E,MAAG,GAAO,SAAW,EACjB,KAAK,UAAU,IAAI,EAAO,UAAU,IAEpC,KAAK,UAAU,KAAK,GAGjB,GAGX,aAAc,UAAW,CAErB,GADA,KAAK,qBAAqB,IACvB,KAAK,eAAgB,CACpB,GAAM,GAAS,KAAK,eAAe,aAAa,iBAChD,AAAG,GAAQ,EAAO,UAAU,KAAK,eAAgB,MACjD,KAAK,aAAa,UAAU,KAAK,eAAgB,MAErD,AAAG,KAAK,iBAAiB,KAAK,gBAAgB,MAAM,CAAC,EAAG,EAAG,KAG/D,WAAY,UAAW,CACnB,KAAK,qBAAqB,SC/VlC,cAQA,GAAG,kBAAkB,eAAgB,CAEjC,IAAK,CAAC,KAAM,GAAG,KAAK,SACrB,CACC,MAAO,UAAW,GAElB,KAAM,UAAW,CACb,GAAI,GAAS,CAAC,EAAG,EAAG,GACpB,SAAS,MAAM,eAAe,EAAQ,KAAK,OAAO,gBAClD,QAAQ,IAAI,gBAAiB,KAAK,OAAO,MACzC,QAAQ,IAAI,gBAAiB,KAAK,IAAI,MACtC,QAAQ,IAAI,eAAiB,GAC7B,QAAQ,IAAI,kBAAoB,KAAK,OAAO,gBAC5C,QAAQ,IAAI,kBAAoB,KAAK,OAAO,iBAEhD,OAAQ,UAAW,OCvBvB,cAGA,YAA2B,EAAK,EAAG,EAAG,EAAG,CACrC,GAAM,GAAK,KAAK,IAAI,EAAE,GAChB,EAAK,KAAK,IAAI,EAAE,GAChB,EAAK,KAAK,IAAI,EAAE,GAEhB,EAAK,KAAK,IAAI,EAAE,GAChB,EAAK,KAAK,IAAI,EAAE,GAChB,EAAK,KAAK,IAAI,EAAE,GAEtB,EAAI,GAAK,EAAG,EAAG,EAAK,EAAG,EAAG,EAC1B,EAAI,GAAK,EAAG,EAAG,EAAK,EAAG,EAAG,EAC1B,EAAI,GAAK,EAAG,EAAG,EAAK,EAAG,EAAG,EAC1B,EAAI,GAAK,EAAG,EAAG,EAAK,EAAG,EAAG,EAS9B,GAAG,kBAAkB,0BAA2B,GAC7C,CACC,MAAO,UAAW,CACd,KAAK,UAAY,EACjB,KAAK,UAAY,EAEjB,KAAK,YAAc,GACnB,KAAK,YAAc,IAEvB,KAAM,UAAW,CAEb,KAAK,kBAAoB,CAAC,EAAG,EAAG,EAAG,GACnC,KAAK,kBAAoB,EACzB,KAAK,QAAU,CAAC,EAAG,EAAG,GAEtB,OAAO,iBAAiB,oBAAoB,SAAS,EAAG,CACpD,GAAI,GAAQ,EAAE,OAAS,EACnB,EAAO,EAAE,MAAQ,EACjB,EAAQ,EAAE,OAAS,EACjB,EAAQ,KAAK,GAAG,IACtB,GAAiB,KAAK,kBAAmB,EAAK,EAAO,EAAM,EAAO,CAAC,EAAM,IAC3E,KAAK,OAEP,OAAO,iBAAiB,oBAAqB,SAAS,EAAG,CACrD,KAAK,kBAAoB,OAAO,aAAe,GACjD,KAAK,MAAO,KAGlB,OAAQ,UAAW,CAEf,AAAG,OAAO,eAAoB,MAE9B,UAAS,MAAM,eAAe,KAAK,QAAS,KAAK,OAAO,gBAExD,KAAK,OAAO,iBACT,KAAK,mBAAqB,GACzB,KAAK,OAAO,mBAAmB,CAAC,EAAG,EAAG,GAAI,KAAK,mBAEnD,KAAK,OAAO,OAAO,CAAC,CAAC,KAAK,KAAK,IAAM,EAAG,EAAG,KAAK,KAAK,MACrD,KAAK,OAAO,OAAO,KAAK,mBACxB,KAAK,OAAO,UAAU,KAAK,eChEnC,cASA,GAAG,kBAAkB,gBAAiB,GACnC,CACC,KAAM,UAAW,CACb,KAAK,WAAa,MAEtB,MAAO,UAAW,CACd,KAAK,IAAM,KAAK,OAAO,aAAa,cAExC,OAAQ,UAAW,CACf,GAAM,GAAW,KAAK,IAAI,gBAEtB,EAAe,KACnB,OAAQ,GAAI,EAAG,EAAI,EAAS,OAAQ,EAAE,EAAG,CACrC,GAAM,GAAI,EAAS,GAAG,OAChB,EAAS,EAAE,aAAa,iBAC9B,GAAG,EAAQ,CACP,AAAI,EAAO,OAAO,KAAK,aACnB,GAAO,QAAQ,EAAG,MAClB,EAAO,QAAQ,EAAG,OAEtB,EAAe,EACf,OAIR,GAAI,EAKA,KAAK,WAAa,MALJ,CACd,AAAG,KAAK,YAAY,KAAK,WAAW,UAAU,KAAK,WAAW,OAAQ,MACtE,KAAK,WAAa,KAClB,aCrCZ,cAOA,GAAG,kBAAkB,kBAAmB,CAEpC,eAAgB,CAAC,KAAM,GAAG,KAAK,MAAO,QAAS,KAChD,CACC,MAAO,UAAW,CACd,AAAG,GAAG,UACF,KAAK,oBAEL,GAAG,iBAAiB,KAAK,KAAK,kBAAkB,KAAK,QAG7D,kBAAmB,UAAW,CAC1B,AAAG,mBAAqB,SACpB,QAAO,gBAAgB,eAAiB,KAAK,qBCpBzD,8BAA8B,QAwB9B,GAAG,kBAAkB,gBAAiB,CAElC,WAAY,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,OAAQ,OAAQ,CAAC,OAAQ,UAEnE,UAAW,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,MAEzC,cAAe,CAAC,KAAM,GAAG,KAAK,SAAU,QAAS,MAEjD,SAAU,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,MAExC,8BAA+B,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,IAE7D,uBAAwB,CAAC,KAAM,GAAG,KAAK,SACxC,CACC,eAAgB,CACZ,QACA,mBAAoB,yBAA0B,uBAAwB,YACtE,0BAA2B,gCAAiC,oCAAqC,8BAA+B,mBAChI,2BAA4B,iCAAkC,qCAAsC,+BAAgC,oBACpI,yBAA0B,+BAAgC,mCAAoC,6BAA8B,kBAC5H,0BAA2B,gCAAiC,oCAAqC,8BAA+B,oBAEpI,KAAM,UAAW,CACb,KAAK,WAAa,CAAC,OAAQ,SAAS,KAAK,aAE7C,MAAO,UAAW,CAOd,GANA,KAAK,OAAS,GACd,KAAK,QAAU,KAEf,KAAK,QAAU,GACf,KAAK,gBAAkB,GAEpB,CAAE,WAAY,SAAS,CACtB,QAAQ,KAAK,sDACb,KAAK,OAAS,GACd,OAGJ,GAAG,KAAK,SAAU,CAEd,GAAI,GAAW,AADJ,KAAK,SACI,SAEpB,KAAK,OAAO,KAAK,eAAe,IAAM,GAAI,IAAG,OAAO,EAAS,IAI7D,OAAQ,GAAI,EAAG,EAAI,EAAS,OAAQ,EAAE,EAAG,CACrC,GAAI,GAAQ,GAAI,IAAG,OAAO,EAAS,IAEnC,KAAK,OAAO,EAAM,MAAQ,EAI9B,OAIJ,OAAQ,GAAI,EAAG,GAAK,KAAK,eAAe,OAAQ,EAAE,EAAG,CACjD,GAAI,GAAQ,GAAG,MAAM,UAAU,KAAK,OAAO,QACvC,EAAO,EAAM,aAAa,QAE9B,EAAK,KAAO,KAAK,UACjB,EAAK,SAAW,KAAK,cAErB,KAAK,OAAO,KAAK,eAAe,IAAM,IAI9C,OAAQ,SAAS,EAAI,CAKjB,GAJI,KAAK,SACF,GAAG,WAAW,KAAK,cAAc,GAAG,WAGxC,EAAC,KAAK,QAGT,IADA,KAAK,QAAU,GACZ,KAAK,SAAW,KAAK,QAAQ,aAC5B,OAAQ,GAAI,EAAG,GAAK,KAAK,QAAQ,aAAa,OAAQ,EAAE,EAAG,CACvD,GAAM,GAAc,KAAK,QAAQ,aAAa,GAC9C,GAAG,CAAC,GAAe,CAAC,EAAY,MAAQ,EAAY,YAAc,KAAK,WAAY,SAGnF,GAFA,KAAK,QAAU,GAEZ,EAAY,KAAK,IAAI,WAAa,KAAM,CACvC,GAAM,GAAI,OAAO,YAAe,aAAa,EAAY,KAAK,IAAI,SAAU,MAAM,UAAU,MAAM,WAClG,AAAG,GACC,MAAK,OAAO,2BACZ,KAAK,OAAO,eAAe,IAAI,CAC3B,EAAE,UAAU,YAAY,EACxB,EAAE,UAAU,YAAY,EACxB,EAAE,UAAU,YAAY,EACxB,EAAE,UAAU,YAAY,IAC5B,KAAK,OAAO,UAAU,CAClB,EAAE,UAAU,SAAS,EACrB,EAAE,UAAU,SAAS,EACrB,EAAE,UAAU,SAAS,KAIjC,GAAI,GAAiB,GAAI,cAAa,GAClC,EAAc,GAAI,cAAa,GACnC,QAAK,OAAO,EAAa,KAAK,OAAO,gBACrC,KAAK,OAAO,oBAAoB,GAEhC,OAAQ,GAAI,EAAG,EAAI,KAAK,eAAe,OAAQ,EAAE,EAAG,CAChD,GAAM,GAAY,KAAK,eAAe,GAChC,EAAQ,KAAK,OAAO,GAC1B,GAAG,GAAS,KAAM,SAElB,GAAI,GAAY,KAIhB,GAHG,EAAY,KAAK,IAAI,KAAe,MACnC,GAAY,OAAO,YAAe,aAAa,EAAY,KAAK,IAAI,GAAY,MAAM,UAAU,MAAM,YAEvG,IAAc,KACb,GAAG,KAAK,SACJ,EAAM,2BAEN,EAAM,UAAU,CACX,EAAU,UAAU,SAAS,EAAI,EAAe,GAChD,EAAU,UAAU,SAAS,EAAI,EAAe,GAChD,EAAU,UAAU,SAAS,EAAI,EAAe,KACrD,EAAM,OAAO,GACb,EAAM,aAAa,CACf,EAAU,UAAU,YAAY,EAChC,EAAU,UAAU,YAAY,EAChC,EAAU,UAAU,YAAY,EAChC,EAAU,UAAU,YAAY,QACjC,CACH,EAAM,iBACN,EAAM,eAAe,IAAI,CACrB,EAAU,UAAU,YAAY,EAChC,EAAU,UAAU,YAAY,EAChC,EAAU,UAAU,YAAY,EAChC,EAAU,UAAU,YAAY,IACpC,EAAM,UAAU,CACZ,EAAU,UAAU,SAAS,EAC7B,EAAU,UAAU,SAAS,EAC7B,EAAU,UAAU,SAAS,IAGjC,GAAM,GAAI,EAAU,QAAU,KAC9B,EAAM,MAAM,CAAC,EAAG,EAAG,QAIvB,AAAI,MAAK,UAAU,EAAM,MAAM,CAAC,EAAG,EAAG,KAMtD,AAAG,CAAC,KAAK,SAAW,KAAK,gBACrB,MAAK,gBAAkB,GAEpB,KAAK,+BACJ,KAAK,kBAAkB,IAGxB,KAAK,wBACJ,MAAK,uBAAuB,OAAS,GACrC,KAAK,kBAAkB,GAAM,KAAK,0BAEhC,KAAK,SAAW,CAAC,KAAK,iBAC5B,MAAK,gBAAkB,GAEpB,KAAK,+BACJ,KAAK,kBAAkB,IAGxB,KAAK,wBACJ,MAAK,uBAAuB,OAAS,GACrC,KAAK,kBAAkB,GAAO,KAAK,4BAK/C,kBAAmB,SAAS,EAAQ,EAAQ,CACxC,EAAS,GAAU,KAAK,OAExB,GAAM,GAAW,EAAO,SACxB,OAAU,KAAK,GACX,EAAE,OAAS,EACX,KAAK,kBAAkB,EAAQ,IAIvC,WAAY,UAAW,CACnB,GAAM,GAAc,CAAC,EAAG,EAAG,GAC3B,SAAM,eAAe,EAAa,KAAK,OAAO,oBAAoB,gBAClE,GAAM,GAAc,CAAC,EAAG,EAAG,GAC3B,gBAAM,eAAe,EAAa,KAAK,OAAO,aAAa,gBAEpD,QAAK,QAAQ,EAAa,GAAe,MAGpD,cAAe,SAAS,EAAG,CACvB,KAAK,QAAU,OC3NvB,8BAAoB,QASpB,GAAG,kBAAkB,oBAAqB,GACvC,CACC,KAAM,UAAW,CACb,GAAG,iBAAiB,KAAK,KAAK,eAAe,KAAK,OAClD,GAAG,iBAAiB,KAAK,KAAK,aAAa,KAAK,OAEhD,KAAK,YAAc,GAAI,cAAa,GACpC,KAAK,YAAY,IAAI,KAAK,OAAO,cACjC,KAAK,QAAU,GACf,KAAK,OAAO,MAAM,CAAC,EAAG,EAAG,KAE7B,OAAQ,SAAS,EAAI,CACjB,GAAM,GAAa,KAAK,QACxB,GAAG,KAAK,gBAAiB,CACrB,GAAM,GAAQ,OAAO,YACrB,GAAG,CAAC,EAAO,OACX,GAAI,GAAiB,EAAM,kBAAkB,KAAK,iBAClD,GAAG,EAAe,OAAS,EAAG,CAC1B,GAAI,GAAO,EAAe,GAAG,QAAQ,KAAK,eAC1C,KAAK,QAAU,GACf,SAAM,SAAS,KAAK,OAAO,eAAgB,EAAK,UAAU,QAC1D,KAAK,OAAO,eAEZ,MAAK,QAAU,GAIvB,AAAG,KAAK,SAAW,GACf,CAAI,KAAK,QAIL,MAAK,OAAO,aAAa,IAAI,KAAK,aAClC,KAAK,OAAO,YAJZ,MAAK,YAAY,IAAI,KAAK,OAAO,cACjC,KAAK,OAAO,MAAM,CAAC,EAAG,EAAG,OAOrC,eAAgB,SAAS,EAAS,CAC9B,EAAQ,sBAAsB,UAAU,KAAK,SAAS,EAAU,CAC5D,KAAK,cAAgB,EACrB,EAAQ,qBAAqB,CAAC,MAAO,KAAK,gBAAgB,KAAK,SAAS,EAAe,CACnF,KAAK,gBAAkB,GACzB,KAAK,OAAO,MAAM,QAAQ,QAC9B,KAAK,OAAO,MAAM,QAAQ,QAEhC,aAAc,UAAW,CACrB,AAAG,CAAC,KAAK,iBACT,MAAK,gBAAgB,SACrB,KAAK,gBAAkB,WCzD/B,cAUA,AAAC,WAAW,CAEV,aASA,GAAI,GAAe,UAAW,CAC5B,KAAK,QAEP,EAAa,UAAY,CAKvB,KAAM,UAAW,CACf,GAAI,GAAO,MAAQ,EAGnB,SAAK,SAAW,IAGhB,EAAK,gBAAkB,GACvB,EAAK,cAAgB,GAGrB,EAAK,QAAU,GACf,EAAK,OAAS,GACd,EAAK,OAAS,GACd,EAAK,QAAU,EACf,EAAK,cAAgB,iBACrB,EAAK,WAAc,MAAO,SAAW,aAAe,OAAO,UAAa,OAAO,UAAY,KAG3F,EAAK,WAAa,KAClB,EAAK,QAAU,GACf,EAAK,cAAgB,GACrB,EAAK,YAAc,GACnB,EAAK,IAAM,KAGX,EAAK,WAAa,GAGlB,EAAK,SAEE,GAQT,OAAQ,SAAS,EAAK,CACpB,GAAI,GAAO,MAAQ,EAQnB,GAPA,EAAM,WAAW,GAGZ,EAAK,KACR,IAGE,MAAO,IAAQ,aAAe,GAAO,GAAK,GAAO,EAAG,CAItD,GAHA,EAAK,QAAU,EAGX,EAAK,OACP,MAAO,GAIT,AAAI,EAAK,eACP,EAAK,WAAW,KAAK,eAAe,EAAK,EAAO,IAAI,aAItD,OAAS,GAAE,EAAG,EAAE,EAAK,OAAO,OAAQ,IAClC,GAAI,CAAC,EAAK,OAAO,GAAG,UAKlB,OAHI,GAAM,EAAK,OAAO,GAAG,eAGhB,EAAE,EAAG,EAAE,EAAI,OAAQ,IAAK,CAC/B,GAAI,GAAQ,EAAK,OAAO,GAAG,WAAW,EAAI,IAE1C,AAAI,GAAS,EAAM,OACjB,GAAM,MAAM,OAAS,EAAM,QAAU,GAM7C,MAAO,GAGT,MAAO,GAAK,SAOd,KAAM,SAAS,EAAO,CACpB,GAAI,GAAO,MAAQ,EAGnB,AAAK,EAAK,KACR,IAGF,EAAK,OAAS,EAGV,EAAK,eACP,EAAK,WAAW,KAAK,eAAe,EAAQ,EAAI,EAAK,QAAS,EAAO,IAAI,aAI3E,OAAS,GAAE,EAAG,EAAE,EAAK,OAAO,OAAQ,IAClC,GAAI,CAAC,EAAK,OAAO,GAAG,UAKlB,OAHI,GAAM,EAAK,OAAO,GAAG,eAGhB,EAAE,EAAG,EAAE,EAAI,OAAQ,IAAK,CAC/B,GAAI,GAAQ,EAAK,OAAO,GAAG,WAAW,EAAI,IAE1C,AAAI,GAAS,EAAM,OACjB,GAAM,MAAM,MAAS,EAAS,GAAO,EAAM,QAMnD,MAAO,IAMT,KAAM,UAAW,CAIf,OAHI,GAAO,MAAQ,EAGV,EAAE,EAAG,EAAE,EAAK,OAAO,OAAQ,IAClC,EAAK,OAAO,GAAG,OAGjB,MAAO,IAOT,OAAQ,UAAW,CAGjB,OAFI,GAAO,MAAQ,EAEV,EAAE,EAAK,OAAO,OAAO,EAAG,GAAG,EAAG,IACrC,EAAK,OAAO,GAAG,SAIjB,MAAI,GAAK,eAAiB,EAAK,KAAO,MAAO,GAAK,IAAI,OAAU,aAC9D,GAAK,IAAI,QACT,EAAK,IAAM,KACX,KAGK,GAQT,OAAQ,SAAS,EAAK,CACpB,MAAQ,OAAQ,GAAQ,QAAQ,EAAI,QAAQ,MAAO,MAOrD,OAAQ,UAAW,CACjB,GAAI,GAAO,MAAQ,EASnB,GANA,EAAK,MAAQ,EAAK,KAAM,EAAK,IAAI,OAAS,YAG1C,EAAK,eAGD,CAAC,EAAK,cAER,GAAI,MAAO,QAAU,YACnB,GAAI,CACF,GAAI,GAAO,GAAI,OAGf,AAAI,MAAO,GAAK,kBAAqB,aACnC,GAAK,cAAgB,iBAEjB,EAAN,CACA,EAAK,QAAU,OAGjB,GAAK,QAAU,GAKnB,GAAI,CACF,GAAI,GAAO,GAAI,OACf,AAAI,EAAK,OACP,GAAK,QAAU,UAEV,EAAP,EAGF,MAAK,GAAK,SACR,EAAK,eAGA,GAOT,aAAc,UAAW,CACvB,GAAI,GAAO,MAAQ,EACf,EAAY,KAGhB,GAAI,CACF,EAAa,MAAO,QAAU,YAAe,GAAI,OAAU,WACpD,EAAP,CACA,MAAO,GAGT,GAAI,CAAC,GAAa,MAAO,GAAU,aAAgB,WACjD,MAAO,GAGT,GAAI,GAAW,EAAU,YAAY,eAAe,QAAQ,OAAQ,IAGhE,EAAa,EAAK,YAAc,EAAK,WAAW,UAAU,MAAM,kBAChE,EAAc,GAAc,SAAS,EAAW,GAAG,MAAM,KAAK,GAAI,IAAM,GAE5E,SAAK,QAAU,CACb,IAAK,CAAC,CAAE,EAAC,GAAe,IAAY,EAAU,YAAY,cAAc,QAAQ,OAAQ,MACxF,KAAM,CAAC,CAAC,EACR,KAAM,CAAC,CAAC,EAAU,YAAY,4BAA4B,QAAQ,OAAQ,IAC1E,IAAK,CAAC,CAAC,EAAU,YAAY,8BAA8B,QAAQ,OAAQ,IAC3E,IAAK,CAAC,CAAC,EAAU,YAAY,8BAA8B,QAAQ,OAAQ,IAC3E,IAAK,CAAC,CAAE,GAAU,YAAY,0BAA4B,EAAU,YAAY,cAAc,QAAQ,OAAQ,IAC9G,IAAK,CAAC,CAAC,EAAU,YAAY,cAAc,QAAQ,OAAQ,IAC3D,IAAK,CAAC,CAAC,EAAU,YAAY,gBAAgB,QAAQ,OAAQ,IAC7D,IAAK,CAAC,CAAE,GAAU,YAAY,iBAAmB,EAAU,YAAY,eAAiB,EAAU,YAAY,eAAe,QAAQ,OAAQ,IAC7I,IAAK,CAAC,CAAE,GAAU,YAAY,iBAAmB,EAAU,YAAY,eAAiB,EAAU,YAAY,eAAe,QAAQ,OAAQ,IAC7I,IAAK,CAAC,CAAE,GAAU,YAAY,iBAAmB,EAAU,YAAY,eAAiB,EAAU,YAAY,eAAe,QAAQ,OAAQ,IAC7I,KAAM,CAAC,CAAC,EAAU,YAAY,+BAA+B,QAAQ,OAAQ,IAC7E,KAAM,CAAC,CAAC,EAAU,YAAY,+BAA+B,QAAQ,OAAQ,IAC7E,MAAO,CAAC,CAAC,EAAU,YAAY,4BAA4B,QAAQ,OAAQ,IAC3E,KAAM,CAAC,CAAE,GAAU,YAAY,kBAAoB,EAAU,YAAY,gBAAgB,QAAQ,OAAQ,KAGpG,GAST,aAAc,UAAW,CACvB,GAAI,GAAO,MAAQ,EAGnB,GAAI,IAAK,gBAAkB,CAAC,EAAK,KAIjC,GAAK,eAAiB,GACtB,EAAK,WAAa,GAKd,CAAC,EAAK,iBAAmB,EAAK,IAAI,aAAe,OACnD,GAAK,gBAAkB,GACvB,EAAK,UAKP,EAAK,eAAiB,EAAK,IAAI,aAAa,EAAG,EAAG,OAKlD,GAAI,GAAS,SAAS,EAAG,CAOvB,KAAO,EAAK,gBAAgB,OAAS,EAAK,eACxC,GAAI,CACF,GAAI,GAAY,GAAI,OAIpB,EAAU,UAAY,GAGtB,EAAK,mBAAmB,SACjB,EAAP,CACA,EAAK,QAAU,GACf,MAKJ,OAAS,GAAE,EAAG,EAAE,EAAK,OAAO,OAAQ,IAClC,GAAI,CAAC,EAAK,OAAO,GAAG,UAKlB,OAHI,GAAM,EAAK,OAAO,GAAG,eAGhB,EAAE,EAAG,EAAE,EAAI,OAAQ,IAAK,CAC/B,GAAI,GAAQ,EAAK,OAAO,GAAG,WAAW,EAAI,IAE1C,AAAI,GAAS,EAAM,OAAS,CAAC,EAAM,MAAM,WACvC,GAAM,MAAM,UAAY,GACxB,EAAM,MAAM,QAOpB,EAAK,cAGL,GAAI,GAAS,EAAK,IAAI,qBACtB,EAAO,OAAS,EAAK,eACrB,EAAO,QAAQ,EAAK,IAAI,aAGxB,AAAI,MAAO,GAAO,OAAU,YAC1B,EAAO,OAAO,GAEd,EAAO,MAAM,GAIX,MAAO,GAAK,IAAI,QAAW,YAC7B,EAAK,IAAI,SAIX,EAAO,QAAU,UAAW,CAC1B,EAAO,WAAW,GAGlB,EAAK,eAAiB,GAGtB,SAAS,oBAAoB,aAAc,EAAQ,IACnD,SAAS,oBAAoB,WAAY,EAAQ,IACjD,SAAS,oBAAoB,QAAS,EAAQ,IAG9C,OAAS,GAAE,EAAG,EAAE,EAAK,OAAO,OAAQ,IAClC,EAAK,OAAO,GAAG,MAAM,YAM3B,gBAAS,iBAAiB,aAAc,EAAQ,IAChD,SAAS,iBAAiB,WAAY,EAAQ,IAC9C,SAAS,iBAAiB,QAAS,EAAQ,IAEpC,IAQT,kBAAmB,UAAW,CAC5B,GAAI,GAAO,MAAQ,EAGnB,GAAI,EAAK,gBAAgB,OACvB,MAAO,GAAK,gBAAgB,MAI9B,GAAI,GAAW,GAAI,SAAQ,OAC3B,MAAI,IAAY,MAAO,UAAY,aAAgB,aAAoB,UAAW,MAAO,GAAS,MAAS,aACzG,EAAS,MAAM,UAAW,CACxB,QAAQ,KAAK,4EAIV,GAAI,QAOb,mBAAoB,SAAS,EAAO,CAClC,GAAI,GAAO,MAAQ,EAGnB,MAAI,GAAM,WACR,EAAK,gBAAgB,KAAK,GAGrB,GAQT,aAAc,UAAW,CACvB,GAAI,GAAO,KAEX,GAAI,GAAC,EAAK,aAAe,CAAC,EAAK,KAAO,MAAO,GAAK,IAAI,SAAY,aAAe,CAAC,EAAO,eAKzF,QAAS,GAAE,EAAG,EAAE,EAAK,OAAO,OAAQ,IAClC,GAAI,EAAK,OAAO,GAAG,WACjB,OAAS,GAAE,EAAG,EAAE,EAAK,OAAO,GAAG,QAAQ,OAAQ,IAC7C,GAAI,CAAC,EAAK,OAAO,GAAG,QAAQ,GAAG,QAC7B,MAAO,GAMf,MAAI,GAAK,eACP,aAAa,EAAK,eAIpB,EAAK,cAAgB,WAAW,UAAW,CACzC,GAAI,EAAC,EAAK,YAIV,GAAK,cAAgB,KACrB,EAAK,MAAQ,aAGb,GAAI,GAAmB,UAAW,CAChC,EAAK,MAAQ,YAET,EAAK,qBACP,OAAO,GAAK,oBACZ,EAAK,gBAMT,EAAK,IAAI,UAAU,KAAK,EAAkB,KACzC,KAEI,IAOT,YAAa,UAAW,CACtB,GAAI,GAAO,KAEX,GAAI,GAAC,EAAK,KAAO,MAAO,GAAK,IAAI,QAAW,aAAe,CAAC,EAAO,eAInE,MAAI,GAAK,QAAU,WAAa,EAAK,IAAI,QAAU,eAAiB,EAAK,cACvE,cAAa,EAAK,eAClB,EAAK,cAAgB,MAChB,AAAI,EAAK,QAAU,aAAe,EAAK,QAAU,WAAa,EAAK,IAAI,QAAU,cACtF,GAAK,IAAI,SAAS,KAAK,UAAW,CAChC,EAAK,MAAQ,UAGb,OAAS,GAAE,EAAG,EAAE,EAAK,OAAO,OAAQ,IAClC,EAAK,OAAO,GAAG,MAAM,YAIrB,EAAK,eACP,cAAa,EAAK,eAClB,EAAK,cAAgB,OAEd,EAAK,QAAU,cACxB,GAAK,oBAAsB,IAGtB,IAKX,GAAI,GAAS,GAAI,GASb,EAAO,SAAS,EAAG,CACrB,GAAI,GAAO,KAGX,GAAI,CAAC,EAAE,KAAO,EAAE,IAAI,SAAW,EAAG,CAChC,QAAQ,MAAM,8DACd,OAGF,EAAK,KAAK,IAEZ,EAAK,UAAY,CAMf,KAAM,SAAS,EAAG,CAChB,GAAI,GAAO,KAGX,MAAK,GAAO,KACV,IAIF,EAAK,UAAY,EAAE,UAAY,GAC/B,EAAK,QAAW,MAAO,GAAE,QAAW,SAAY,EAAE,OAAS,CAAC,EAAE,QAC9D,EAAK,OAAS,EAAE,OAAS,GACzB,EAAK,OAAS,EAAE,MAAQ,GACxB,EAAK,MAAQ,EAAE,MAAQ,GACvB,EAAK,MAAQ,EAAE,MAAQ,EACvB,EAAK,SAAY,MAAO,GAAE,SAAY,WAAa,EAAE,UAAY,WAAc,EAAE,QAAU,GAC3F,EAAK,MAAQ,EAAE,MAAQ,EACvB,EAAK,QAAU,EAAE,QAAU,GAC3B,EAAK,KAAQ,MAAO,GAAE,KAAQ,SAAY,EAAE,IAAM,CAAC,EAAE,KACrD,EAAK,QAAU,EAAE,SAAW,OAAY,EAAE,OAAS,EACnD,EAAK,KAAO,CACV,OAAQ,EAAE,KAAO,EAAE,IAAI,OAAS,EAAE,IAAI,OAAS,MAC/C,QAAS,EAAE,KAAO,EAAE,IAAI,QAAU,EAAE,IAAI,QAAU,KAClD,gBAAiB,EAAE,KAAO,EAAE,IAAI,gBAAkB,EAAE,IAAI,gBAAkB,IAI5E,EAAK,UAAY,EACjB,EAAK,OAAS,WACd,EAAK,QAAU,GACf,EAAK,WAAa,GAClB,EAAK,OAAS,GACd,EAAK,UAAY,GAGjB,EAAK,OAAS,EAAE,MAAQ,CAAC,CAAC,GAAI,EAAE,QAAU,GAC1C,EAAK,QAAU,EAAE,OAAS,CAAC,CAAC,GAAI,EAAE,SAAW,GAC7C,EAAK,QAAU,EAAE,OAAS,CAAC,CAAC,GAAI,EAAE,SAAW,GAC7C,EAAK,aAAe,EAAE,YAAc,CAAC,CAAC,GAAI,EAAE,cAAgB,GAC5D,EAAK,aAAe,EAAE,YAAc,CAAC,CAAC,GAAI,EAAE,cAAgB,GAC5D,EAAK,SAAW,EAAE,QAAU,CAAC,CAAC,GAAI,EAAE,UAAY,GAChD,EAAK,QAAU,EAAE,OAAS,CAAC,CAAC,GAAI,EAAE,SAAW,GAC7C,EAAK,QAAU,EAAE,OAAS,CAAC,CAAC,GAAI,EAAE,SAAW,GAC7C,EAAK,QAAU,EAAE,OAAS,CAAC,CAAC,GAAI,EAAE,SAAW,GAC7C,EAAK,UAAY,EAAE,SAAW,CAAC,CAAC,GAAI,EAAE,WAAa,GACnD,EAAK,QAAU,EAAE,OAAS,CAAC,CAAC,GAAI,EAAE,SAAW,GAC7C,EAAK,QAAU,EAAE,OAAS,CAAC,CAAC,GAAI,EAAE,SAAW,GAC7C,EAAK,UAAY,EAAE,SAAW,CAAC,CAAC,GAAI,EAAE,WAAa,GACnD,EAAK,UAAY,GAGjB,EAAK,UAAY,EAAO,eAAiB,CAAC,EAAK,OAG3C,MAAO,GAAO,KAAQ,aAAe,EAAO,KAAO,EAAO,YAC5D,EAAO,eAIT,EAAO,OAAO,KAAK,GAGf,EAAK,WACP,EAAK,OAAO,KAAK,CACf,MAAO,OACP,OAAQ,UAAW,CACjB,EAAK,UAMP,EAAK,UAAY,EAAK,WAAa,QACrC,EAAK,OAGA,GAOT,KAAM,UAAW,CACf,GAAI,GAAO,KACP,EAAM,KAGV,GAAI,EAAO,QAAS,CAClB,EAAK,MAAM,YAAa,KAAM,qBAC9B,OAIF,AAAI,MAAO,GAAK,MAAS,UACvB,GAAK,KAAO,CAAC,EAAK,OAIpB,OAAS,GAAE,EAAG,EAAE,EAAK,KAAK,OAAQ,IAAK,CACrC,GAAI,GAAK,EAET,GAAI,EAAK,SAAW,EAAK,QAAQ,GAE/B,EAAM,EAAK,QAAQ,OACd,CAGL,GADA,EAAM,EAAK,KAAK,GACZ,MAAO,IAAQ,SAAU,CAC3B,EAAK,MAAM,YAAa,KAAM,0DAC9B,SAIF,EAAM,0BAA0B,KAAK,GAChC,GACH,GAAM,aAAa,KAAK,EAAI,MAAM,IAAK,GAAG,KAGxC,GACF,GAAM,EAAI,GAAG,eAUjB,GALK,GACH,QAAQ,KAAK,8FAIX,GAAO,EAAO,OAAO,GAAM,CAC7B,EAAM,EAAK,KAAK,GAChB,OAIJ,GAAI,CAAC,EAAK,CACR,EAAK,MAAM,YAAa,KAAM,gDAC9B,OAGF,SAAK,KAAO,EACZ,EAAK,OAAS,UAIV,OAAO,SAAS,WAAa,UAAY,EAAI,MAAM,EAAG,KAAO,SAC/D,GAAK,OAAS,GACd,EAAK,UAAY,IAInB,GAAI,GAAM,GAGN,EAAK,WACP,EAAW,GAGN,GAST,KAAM,SAAS,EAAQ,EAAU,CAC/B,GAAI,GAAO,KACP,EAAK,KAGT,GAAI,MAAO,IAAW,SACpB,EAAK,EACL,EAAS,SACJ,IAAI,MAAO,IAAW,UAAY,EAAK,SAAW,UAAY,CAAC,EAAK,QAAQ,GAEjF,MAAO,MACF,GAAI,MAAO,IAAW,aAE3B,GAAS,YAIL,CAAC,EAAK,WAAW,CAEnB,OADI,GAAM,EACD,EAAE,EAAG,EAAE,EAAK,QAAQ,OAAQ,IACnC,AAAI,EAAK,QAAQ,GAAG,SAAW,CAAC,EAAK,QAAQ,GAAG,QAC9C,KACA,EAAK,EAAK,QAAQ,GAAG,KAIzB,AAAI,IAAQ,EACV,EAAS,KAET,EAAK,MAMX,GAAI,GAAQ,EAAK,EAAK,WAAW,GAAM,EAAK,iBAG5C,GAAI,CAAC,EACH,MAAO,MAWT,GAPI,GAAM,CAAC,GACT,GAAS,EAAM,SAAW,aAMxB,EAAK,SAAW,SAAU,CAE5B,EAAM,QAAU,EAGhB,EAAM,OAAS,GAGf,GAAI,GAAU,EAAM,IACpB,SAAK,OAAO,KAAK,CACf,MAAO,OACP,OAAQ,UAAW,CACjB,EAAK,KAAK,MAIP,EAIT,GAAI,GAAM,CAAC,EAAM,QAEf,MAAK,IACH,EAAK,WAAW,QAGX,EAAM,IAIf,AAAI,EAAK,WACP,EAAO,cAIT,GAAI,GAAO,KAAK,IAAI,EAAG,EAAM,MAAQ,EAAI,EAAM,MAAQ,EAAK,QAAQ,GAAQ,GAAK,KAC7E,EAAW,KAAK,IAAI,EAAK,GAAK,QAAQ,GAAQ,GAAK,EAAK,QAAQ,GAAQ,IAAM,IAAQ,GACtF,EAAW,EAAW,IAAQ,KAAK,IAAI,EAAM,OAC7C,EAAQ,EAAK,QAAQ,GAAQ,GAAK,IAClC,EAAQ,GAAK,QAAQ,GAAQ,GAAK,EAAK,QAAQ,GAAQ,IAAM,IACjE,EAAM,QAAU,EAIhB,EAAM,OAAS,GAGf,GAAI,GAAY,UAAW,CACzB,EAAM,QAAU,GAChB,EAAM,MAAQ,EACd,EAAM,OAAS,EACf,EAAM,MAAQ,EACd,EAAM,MAAQ,CAAC,CAAE,GAAM,OAAS,EAAK,QAAQ,GAAQ,KAIvD,GAAI,GAAQ,EAAM,CAChB,EAAK,OAAO,GACZ,OAIF,GAAI,GAAO,EAAM,MACjB,GAAI,EAAK,UAAW,CAElB,GAAI,GAAe,UAAW,CAC5B,EAAK,UAAY,GACjB,IACA,EAAK,eAAe,GAGpB,GAAI,GAAO,EAAM,QAAU,EAAK,OAAU,EAAI,EAAM,QACpD,EAAK,KAAK,eAAe,EAAK,EAAO,IAAI,aACzC,EAAM,WAAa,EAAO,IAAI,YAG9B,AAAI,MAAO,GAAK,aAAa,OAAU,YACrC,EAAM,MAAQ,EAAK,aAAa,YAAY,EAAG,EAAM,OAAS,EAAK,aAAa,YAAY,EAAG,EAAM,GAErG,EAAM,MAAQ,EAAK,aAAa,MAAM,EAAG,EAAM,OAAS,EAAK,aAAa,MAAM,EAAG,EAAM,GAIvF,IAAY,UACd,GAAK,WAAW,EAAM,KAAO,WAAW,EAAK,OAAO,KAAK,EAAM,GAAQ,IAGpE,GACH,WAAW,UAAW,CACpB,EAAK,MAAM,OAAQ,EAAM,KACzB,EAAK,cACJ,IAIP,AAAI,EAAO,QAAU,WAAa,EAAO,IAAI,QAAU,cACrD,IAEA,GAAK,UAAY,GAGjB,EAAK,KAAK,SAAU,GAGpB,EAAK,YAAY,EAAM,UAEpB,CAEL,GAAI,GAAY,UAAW,CACzB,EAAK,YAAc,EACnB,EAAK,MAAQ,EAAM,QAAU,EAAK,QAAU,EAAO,QAAU,EAAK,MAClE,EAAK,OAAS,EAAM,QAAU,EAAO,SACrC,EAAK,aAAe,EAAM,MAG1B,GAAI,CACF,GAAI,GAAO,EAAK,OAwChB,GArCA,AAAI,GAAQ,MAAO,UAAY,aAAgB,aAAgB,UAAW,MAAO,GAAK,MAAS,YAE7F,GAAK,UAAY,GAGjB,IAGA,EACG,KAAK,UAAW,CACf,EAAK,UAAY,GACjB,EAAK,UAAY,GACZ,GACH,GAAK,MAAM,OAAQ,EAAM,KACzB,EAAK,gBAGR,MAAM,UAAW,CAChB,EAAK,UAAY,GACjB,EAAK,MAAM,YAAa,EAAM,IAAK,+IAInC,EAAM,OAAS,GACf,EAAM,QAAU,MAEV,GACV,GAAK,UAAY,GACjB,IACA,EAAK,MAAM,OAAQ,EAAM,KACzB,EAAK,cAIP,EAAK,aAAe,EAAM,MAGtB,EAAK,OAAQ,CACf,EAAK,MAAM,YAAa,EAAM,IAAK,+IAEnC,OAIF,AAAI,IAAW,aAAe,EAAM,MAClC,EAAK,WAAW,EAAM,KAAO,WAAW,EAAK,OAAO,KAAK,EAAM,GAAQ,GAEvE,GAAK,WAAW,EAAM,KAAO,UAAW,CAEtC,EAAK,OAAO,GAGZ,EAAK,oBAAoB,QAAS,EAAK,WAAW,EAAM,KAAM,KAEhE,EAAK,iBAAiB,QAAS,EAAK,WAAW,EAAM,KAAM,WAEtD,EAAP,CACA,EAAK,MAAM,YAAa,EAAM,IAAK,KAKvC,AAAI,EAAK,MAAQ,0FACf,GAAK,IAAM,EAAK,KAChB,EAAK,QAIP,GAAI,GAAsB,QAAU,OAAO,QAAY,CAAC,EAAK,YAAc,EAAO,WAAW,WAC7F,GAAI,EAAK,YAAc,GAAK,EAC1B,QACK,CACL,EAAK,UAAY,GAEjB,GAAI,GAAW,UAAW,CAExB,IAGA,EAAK,oBAAoB,EAAO,cAAe,EAAU,KAE3D,EAAK,iBAAiB,EAAO,cAAe,EAAU,IAGtD,EAAK,YAAY,EAAM,MAI3B,MAAO,GAAM,KAQf,MAAO,SAAS,EAAI,CAClB,GAAI,GAAO,KAGX,GAAI,EAAK,SAAW,UAAY,EAAK,UACnC,SAAK,OAAO,KAAK,CACf,MAAO,QACP,OAAQ,UAAW,CACjB,EAAK,MAAM,MAIR,EAMT,OAFI,GAAM,EAAK,aAAa,GAEnB,EAAE,EAAG,EAAE,EAAI,OAAQ,IAAK,CAE/B,EAAK,YAAY,EAAI,IAGrB,GAAI,GAAQ,EAAK,WAAW,EAAI,IAEhC,GAAI,GAAS,CAAC,EAAM,SAElB,GAAM,MAAQ,EAAK,KAAK,EAAI,IAC5B,EAAM,UAAY,EAClB,EAAM,QAAU,GAGhB,EAAK,UAAU,EAAI,IAEf,EAAM,OACR,GAAI,EAAK,UAAW,CAElB,GAAI,CAAC,EAAM,MAAM,aACf,SAGF,AAAI,MAAO,GAAM,MAAM,aAAa,MAAS,YAC3C,EAAM,MAAM,aAAa,QAAQ,GAEjC,EAAM,MAAM,aAAa,KAAK,GAIhC,EAAK,aAAa,EAAM,WACnB,AAAI,EAAC,MAAM,EAAM,MAAM,WAAa,EAAM,MAAM,WAAa,WAClE,EAAM,MAAM,QAMlB,AAAK,UAAU,IACb,EAAK,MAAM,QAAS,EAAQ,EAAM,IAAM,MAI5C,MAAO,IAST,KAAM,SAAS,EAAI,EAAU,CAC3B,GAAI,GAAO,KAGX,GAAI,EAAK,SAAW,UAAY,EAAK,UACnC,SAAK,OAAO,KAAK,CACf,MAAO,OACP,OAAQ,UAAW,CACjB,EAAK,KAAK,MAIP,EAMT,OAFI,GAAM,EAAK,aAAa,GAEnB,EAAE,EAAG,EAAE,EAAI,OAAQ,IAAK,CAE/B,EAAK,YAAY,EAAI,IAGrB,GAAI,GAAQ,EAAK,WAAW,EAAI,IAEhC,AAAI,GAEF,GAAM,MAAQ,EAAM,QAAU,EAC9B,EAAM,UAAY,EAClB,EAAM,QAAU,GAChB,EAAM,OAAS,GAGf,EAAK,UAAU,EAAI,IAEf,EAAM,OACR,CAAI,EAAK,UAEH,EAAM,MAAM,cACd,CAAI,MAAO,GAAM,MAAM,aAAa,MAAS,YAC3C,EAAM,MAAM,aAAa,QAAQ,GAEjC,EAAM,MAAM,aAAa,KAAK,GAIhC,EAAK,aAAa,EAAM,QAEjB,EAAC,MAAM,EAAM,MAAM,WAAa,EAAM,MAAM,WAAa,WAClE,GAAM,MAAM,YAAc,EAAM,QAAU,EAC1C,EAAM,MAAM,QAGR,EAAM,MAAM,WAAa,UAC3B,EAAK,YAAY,EAAM,SAKxB,GACH,EAAK,MAAM,OAAQ,EAAM,MAK/B,MAAO,IAST,KAAM,SAAS,EAAO,EAAI,CACxB,GAAI,GAAO,KAGX,GAAI,EAAK,SAAW,UAAW,EAAK,UAClC,SAAK,OAAO,KAAK,CACf,MAAO,OACP,OAAQ,UAAW,CACjB,EAAK,KAAK,EAAO,MAId,EAIT,GAAI,MAAO,IAAO,YAChB,GAAI,MAAO,IAAU,UACnB,EAAK,OAAS,MAEd,OAAO,GAAK,OAOhB,OAFI,GAAM,EAAK,aAAa,GAEnB,EAAE,EAAG,EAAE,EAAI,OAAQ,IAAK,CAE/B,GAAI,GAAQ,EAAK,WAAW,EAAI,IAEhC,AAAI,GACF,GAAM,OAAS,EAGX,EAAM,WACR,EAAK,UAAU,EAAM,KAGvB,AAAI,EAAK,WAAa,EAAM,MAC1B,EAAM,MAAM,KAAK,eAAe,EAAQ,EAAI,EAAM,QAAS,EAAO,IAAI,aAC7D,EAAM,OACf,GAAM,MAAM,MAAQ,EAAO,OAAS,GAAO,GAG7C,EAAK,MAAM,OAAQ,EAAM,MAI7B,MAAO,IAWT,OAAQ,UAAW,CACjB,GAAI,GAAO,KACP,EAAO,UACP,EAAK,EAGT,GAAI,EAAK,SAAW,EAElB,MAAO,GAAK,QACP,GAAI,EAAK,SAAW,GAAK,EAAK,SAAW,GAAK,MAAO,GAAK,IAAO,YAAa,CAEnF,GAAI,GAAM,EAAK,eACX,EAAQ,EAAI,QAAQ,EAAK,IAC7B,AAAI,GAAS,EACX,EAAK,SAAS,EAAK,GAAI,IAEvB,EAAM,WAAW,EAAK,QAEnB,AAAI,GAAK,QAAU,GACxB,GAAM,WAAW,EAAK,IACtB,EAAK,SAAS,EAAK,GAAI,KAIzB,GAAI,GACJ,GAAI,MAAO,IAAQ,aAAe,GAAO,GAAK,GAAO,EAAG,CAEtD,GAAI,EAAK,SAAW,UAAW,EAAK,UAClC,SAAK,OAAO,KAAK,CACf,MAAO,SACP,OAAQ,UAAW,CACjB,EAAK,OAAO,MAAM,EAAM,MAIrB,EAIT,AAAI,MAAO,IAAO,aAChB,GAAK,QAAU,GAIjB,EAAK,EAAK,aAAa,GACvB,OAAS,GAAE,EAAG,EAAE,EAAG,OAAQ,IAEzB,EAAQ,EAAK,WAAW,EAAG,IAEvB,GACF,GAAM,QAAU,EAGX,EAAK,IACR,EAAK,UAAU,EAAG,IAGpB,AAAI,EAAK,WAAa,EAAM,OAAS,CAAC,EAAM,OAC1C,EAAM,MAAM,KAAK,eAAe,EAAK,EAAO,IAAI,aACvC,EAAM,OAAS,CAAC,EAAM,QAC/B,GAAM,MAAM,OAAS,EAAM,EAAO,UAGpC,EAAK,MAAM,SAAU,EAAM,UAI/B,UAAQ,EAAK,EAAK,WAAW,GAAM,EAAK,QAAQ,GACzC,EAAQ,EAAM,QAAU,EAGjC,MAAO,IAWT,KAAM,SAAS,EAAM,EAAI,EAAK,EAAI,CAChC,GAAI,GAAO,KAGX,GAAI,EAAK,SAAW,UAAY,EAAK,UACnC,SAAK,OAAO,KAAK,CACf,MAAO,OACP,OAAQ,UAAW,CACjB,EAAK,KAAK,EAAM,EAAI,EAAK,MAItB,EAIT,EAAO,KAAK,IAAI,KAAK,IAAI,EAAG,WAAW,IAAQ,GAC/C,EAAK,KAAK,IAAI,KAAK,IAAI,EAAG,WAAW,IAAM,GAC3C,EAAM,WAAW,GAGjB,EAAK,OAAO,EAAM,GAIlB,OADI,GAAM,EAAK,aAAa,GACnB,EAAE,EAAG,EAAE,EAAI,OAAQ,IAAK,CAE/B,GAAI,GAAQ,EAAK,WAAW,EAAI,IAGhC,GAAI,EAAO,CAOT,GALK,GACH,EAAK,UAAU,EAAI,IAIjB,EAAK,WAAa,CAAC,EAAM,OAAQ,CACnC,GAAI,GAAc,EAAO,IAAI,YACzB,EAAM,EAAe,EAAM,IAC/B,EAAM,QAAU,EAChB,EAAM,MAAM,KAAK,eAAe,EAAM,GACtC,EAAM,MAAM,KAAK,wBAAwB,EAAI,GAG/C,EAAK,mBAAmB,EAAO,EAAM,EAAI,EAAK,EAAI,GAAI,MAAO,IAAO,cAIxE,MAAO,IAYT,mBAAoB,SAAS,EAAO,EAAM,EAAI,EAAK,EAAI,EAAS,CAC9D,GAAI,GAAO,KACP,EAAM,EACN,EAAO,EAAK,EACZ,EAAQ,KAAK,IAAI,EAAO,KACxB,EAAU,KAAK,IAAI,EAAI,EAAQ,EAAK,EAAM,EAAQ,GAClD,EAAW,KAAK,MAGpB,EAAM,QAAU,EAGhB,EAAM,UAAY,YAAY,UAAW,CAEvC,GAAI,GAAQ,MAAK,MAAQ,GAAY,EACrC,EAAW,KAAK,MAChB,GAAO,EAAO,EAGd,EAAM,KAAK,MAAM,EAAM,KAAO,IAG9B,AAAI,EAAO,EACT,EAAM,KAAK,IAAI,EAAI,GAEnB,EAAM,KAAK,IAAI,EAAI,GAIrB,AAAI,EAAK,UACP,EAAM,QAAU,EAEhB,EAAK,OAAO,EAAK,EAAM,IAAK,IAI1B,GACF,GAAK,QAAU,GAIZ,GAAK,GAAQ,GAAO,GAAQ,EAAK,GAAQ,GAAO,IACnD,eAAc,EAAM,WACpB,EAAM,UAAY,KAClB,EAAM,QAAU,KAChB,EAAK,OAAO,EAAI,EAAM,KACtB,EAAK,MAAM,OAAQ,EAAM,OAE1B,IASL,UAAW,SAAS,EAAI,CACtB,GAAI,GAAO,KACP,EAAQ,EAAK,WAAW,GAE5B,MAAI,IAAS,EAAM,WACb,GAAK,WACP,EAAM,MAAM,KAAK,sBAAsB,EAAO,IAAI,aAGpD,cAAc,EAAM,WACpB,EAAM,UAAY,KAClB,EAAK,OAAO,EAAM,QAAS,GAC3B,EAAM,QAAU,KAChB,EAAK,MAAM,OAAQ,IAGd,GAWT,KAAM,UAAW,CACf,GAAI,GAAO,KACP,EAAO,UACP,EAAM,EAAI,EAGd,GAAI,EAAK,SAAW,EAElB,MAAO,GAAK,MACP,GAAI,EAAK,SAAW,EACzB,GAAI,MAAO,GAAK,IAAO,UACrB,EAAO,EAAK,GACZ,EAAK,MAAQ,MAGb,UAAQ,EAAK,WAAW,SAAS,EAAK,GAAI,KACnC,EAAQ,EAAM,MAAQ,OAE1B,AAAI,GAAK,SAAW,GACzB,GAAO,EAAK,GACZ,EAAK,SAAS,EAAK,GAAI,KAKzB,OADI,GAAM,EAAK,aAAa,GACnB,EAAE,EAAG,EAAE,EAAI,OAAQ,IAC1B,EAAQ,EAAK,WAAW,EAAI,IAExB,GACF,GAAM,MAAQ,EACV,EAAK,WAAa,EAAM,OAAS,EAAM,MAAM,cAC/C,GAAM,MAAM,aAAa,KAAO,EAC5B,GACF,GAAM,MAAM,aAAa,UAAY,EAAM,QAAU,EACrD,EAAM,MAAM,aAAa,QAAU,EAAM,SAMjD,MAAO,IAWT,KAAM,UAAW,CACf,GAAI,GAAO,KACP,EAAO,UACP,EAAM,EAGV,GAAI,EAAK,SAAW,EAElB,EAAK,EAAK,QAAQ,GAAG,YACZ,EAAK,SAAW,EAAG,CAE5B,GAAI,GAAM,EAAK,eACX,EAAQ,EAAI,QAAQ,EAAK,IAC7B,AAAI,GAAS,EACX,EAAK,SAAS,EAAK,GAAI,IAEvB,EAAO,WAAW,EAAK,QAEpB,AAAI,GAAK,SAAW,GACzB,GAAO,WAAW,EAAK,IACvB,EAAK,SAAS,EAAK,GAAI,KAIzB,GAAI,GACJ,GAAI,MAAO,IAAS,SAAU,CAE5B,GAAI,EAAK,SAAW,UAAY,EAAK,UACnC,SAAK,OAAO,KAAK,CACf,MAAO,OACP,OAAQ,UAAW,CACjB,EAAK,KAAK,MAAM,EAAM,MAInB,EAIT,AAAI,MAAO,IAAO,aAChB,GAAK,MAAQ,GAIf,EAAK,EAAK,aAAa,GACvB,OAAS,GAAE,EAAG,EAAE,EAAG,OAAQ,IAIzB,GAFA,EAAQ,EAAK,WAAW,EAAG,IAEvB,EAAO,CAGT,AAAI,EAAK,QAAQ,EAAG,KAClB,GAAM,UAAY,EAAK,KAAK,EAAG,IAC/B,EAAM,WAAa,EAAK,UAAY,EAAO,IAAI,YAAc,EAAM,YAErE,EAAM,MAAQ,EAGd,AAAI,EAAK,WAAa,EAAM,OAAS,EAAM,MAAM,aAC/C,EAAM,MAAM,aAAa,aAAa,eAAe,EAAM,EAAO,IAAI,aAC7D,EAAM,OACf,GAAM,MAAM,aAAe,GAI7B,GAAI,GAAO,EAAK,KAAK,EAAG,IACpB,EAAa,GAAK,QAAQ,EAAM,SAAS,GAAK,EAAK,QAAQ,EAAM,SAAS,IAAM,IAAQ,EACxF,EAAW,EAAW,IAAQ,KAAK,IAAI,EAAM,OAGjD,AAAI,GAAK,WAAW,EAAG,KAAO,CAAC,EAAM,UACnC,GAAK,YAAY,EAAG,IACpB,EAAK,WAAW,EAAG,IAAM,WAAW,EAAK,OAAO,KAAK,EAAM,GAAQ,IAGrE,EAAK,MAAM,OAAQ,EAAM,UAI7B,UAAQ,EAAK,WAAW,GACjB,EAAQ,EAAM,MAAQ,EAAK,MAGpC,MAAO,IAWT,KAAM,UAAW,CACf,GAAI,GAAO,KACP,EAAO,UACP,EAAM,EAGV,GAAI,EAAK,SAAW,EAElB,EAAK,EAAK,QAAQ,GAAG,YACZ,EAAK,SAAW,EAAG,CAE5B,GAAI,GAAM,EAAK,eACX,EAAQ,EAAI,QAAQ,EAAK,IAC7B,AAAI,GAAS,EACX,EAAK,SAAS,EAAK,GAAI,IACd,EAAK,QAAQ,QACtB,GAAK,EAAK,QAAQ,GAAG,IACrB,EAAO,WAAW,EAAK,SAEpB,AAAI,GAAK,SAAW,GACzB,GAAO,WAAW,EAAK,IACvB,EAAK,SAAS,EAAK,GAAI,KAIzB,GAAI,MAAO,IAAO,YAChB,MAAO,GAIT,GAAI,MAAO,IAAS,UAAa,GAAK,SAAW,UAAY,EAAK,WAChE,SAAK,OAAO,KAAK,CACf,MAAO,OACP,OAAQ,UAAW,CACjB,EAAK,KAAK,MAAM,EAAM,MAInB,EAIT,GAAI,GAAQ,EAAK,WAAW,GAE5B,GAAI,EACF,GAAI,MAAO,IAAS,UAAY,GAAQ,EAAG,CAEzC,GAAI,GAAU,EAAK,QAAQ,GAC3B,AAAI,GACF,EAAK,MAAM,EAAI,IAIjB,EAAM,MAAQ,EACd,EAAM,OAAS,GACf,EAAK,YAAY,GAGb,CAAC,EAAK,WAAa,EAAM,OAAS,CAAC,MAAM,EAAM,MAAM,WACvD,GAAM,MAAM,YAAc,GAI5B,GAAI,GAAc,UAAW,CAC3B,EAAK,MAAM,OAAQ,GAGf,GACF,EAAK,KAAK,EAAI,KAKlB,GAAI,GAAW,CAAC,EAAK,UAAW,CAC9B,GAAI,GAAW,UAAW,CACxB,AAAK,EAAK,UAGR,WAAW,EAAU,GAFrB,KAKJ,WAAW,EAAU,OAErB,aAGE,EAAK,UAAW,CAClB,GAAI,GAAW,EAAK,QAAQ,GAAM,EAAO,IAAI,YAAc,EAAM,WAAa,EAC1E,EAAW,EAAM,UAAY,EAAM,UAAY,EAAM,MAAQ,EACjE,MAAO,GAAM,MAAS,GAAW,EAAW,KAAK,IAAI,EAAM,YAE3D,OAAO,GAAM,MAAM,YAKzB,MAAO,IAQT,QAAS,SAAS,EAAI,CACpB,GAAI,GAAO,KAGX,GAAI,MAAO,IAAO,SAAU,CAC1B,GAAI,GAAQ,EAAK,WAAW,GAC5B,MAAO,GAAQ,CAAC,EAAM,QAAU,GAIlC,OAAS,GAAE,EAAG,EAAE,EAAK,QAAQ,OAAQ,IACnC,GAAI,CAAC,EAAK,QAAQ,GAAG,QACnB,MAAO,GAIX,MAAO,IAQT,SAAU,SAAS,EAAI,CACrB,GAAI,GAAO,KACP,EAAW,EAAK,UAGhB,EAAQ,EAAK,WAAW,GAC5B,MAAI,IACF,GAAW,EAAK,QAAQ,EAAM,SAAS,GAAK,KAGvC,GAOT,MAAO,UAAW,CAChB,MAAO,MAAK,QAOd,OAAQ,UAAW,CAKjB,OAJI,GAAO,KAGP,EAAS,EAAK,QACT,EAAE,EAAG,EAAE,EAAO,OAAQ,IAE7B,AAAK,EAAO,GAAG,SACb,EAAK,KAAK,EAAO,GAAG,KAIjB,EAAK,WAER,GAAK,YAAY,EAAO,GAAG,OAG3B,EAAO,GAAG,MAAM,oBAAoB,QAAS,EAAO,GAAG,SAAU,IACjE,EAAO,GAAG,MAAM,oBAAoB,EAAO,cAAe,EAAO,GAAG,QAAS,IAC7E,EAAO,GAAG,MAAM,oBAAoB,QAAS,EAAO,GAAG,OAAQ,IAG/D,EAAO,mBAAmB,EAAO,GAAG,QAItC,MAAO,GAAO,GAAG,MAGjB,EAAK,YAAY,EAAO,GAAG,KAI7B,GAAI,GAAQ,EAAO,OAAO,QAAQ,GAClC,AAAI,GAAS,GACX,EAAO,OAAO,OAAO,EAAO,GAI9B,GAAI,GAAW,GACf,IAAK,EAAE,EAAG,EAAE,EAAO,OAAO,OAAQ,IAChC,GAAI,EAAO,OAAO,GAAG,OAAS,EAAK,MAAQ,EAAK,KAAK,QAAQ,EAAO,OAAO,GAAG,OAAS,EAAG,CACxF,EAAW,GACX,MAIJ,MAAI,IAAS,GACX,MAAO,GAAM,EAAK,MAIpB,EAAO,QAAU,GAGjB,EAAK,OAAS,WACd,EAAK,QAAU,GACf,EAAO,KAEA,MAWT,GAAI,SAAS,EAAO,EAAI,EAAI,EAAM,CAChC,GAAI,GAAO,KACP,EAAS,EAAK,MAAQ,GAE1B,MAAI,OAAO,IAAO,YAChB,EAAO,KAAK,EAAO,CAAC,GAAI,EAAI,GAAI,EAAI,KAAM,GAAQ,CAAC,GAAI,EAAI,GAAI,IAG1D,GAUT,IAAK,SAAS,EAAO,EAAI,EAAI,CAC3B,GAAI,GAAO,KACP,EAAS,EAAK,MAAQ,GACtB,EAAI,EAQR,GALI,MAAO,IAAO,UAChB,GAAK,EACL,EAAK,MAGH,GAAM,EAER,IAAK,EAAE,EAAG,EAAE,EAAO,OAAQ,IAAK,CAC9B,GAAI,GAAQ,IAAO,EAAO,GAAG,GAC7B,GAAI,IAAO,EAAO,GAAG,IAAM,GAAQ,CAAC,GAAM,EAAM,CAC9C,EAAO,OAAO,EAAG,GACjB,eAGK,EAET,EAAK,MAAQ,GAAS,OACjB,CAEL,GAAI,GAAO,OAAO,KAAK,GACvB,IAAK,EAAE,EAAG,EAAE,EAAK,OAAQ,IACvB,AAAK,EAAK,GAAG,QAAQ,SAAW,GAAM,MAAM,QAAQ,EAAK,EAAK,MAC5D,GAAK,EAAK,IAAM,IAKtB,MAAO,IAUT,KAAM,SAAS,EAAO,EAAI,EAAI,CAC5B,GAAI,GAAO,KAGX,SAAK,GAAG,EAAO,EAAI,EAAI,GAEhB,GAUT,MAAO,SAAS,EAAO,EAAI,EAAK,CAK9B,OAJI,GAAO,KACP,EAAS,EAAK,MAAQ,GAGjB,EAAE,EAAO,OAAO,EAAG,GAAG,EAAG,IAEhC,AAAI,EAAC,EAAO,GAAG,IAAM,EAAO,GAAG,KAAO,GAAM,IAAU,SACpD,YAAW,SAAS,EAAI,CACtB,EAAG,KAAK,KAAM,EAAI,IAClB,KAAK,EAAM,EAAO,GAAG,IAAK,GAGxB,EAAO,GAAG,MACZ,EAAK,IAAI,EAAO,EAAO,GAAG,GAAI,EAAO,GAAG,KAM9C,SAAK,WAAW,GAET,GAST,WAAY,SAAS,EAAO,CAC1B,GAAI,GAAO,KAEX,GAAI,EAAK,OAAO,OAAS,EAAG,CAC1B,GAAI,GAAO,EAAK,OAAO,GAGvB,AAAI,EAAK,QAAU,GACjB,GAAK,OAAO,QACZ,EAAK,cAIF,GACH,EAAK,SAIT,MAAO,IAQT,OAAQ,SAAS,EAAO,CACtB,GAAI,GAAO,KACP,EAAS,EAAM,QAKnB,GAAI,CAAC,EAAK,WAAa,EAAM,OAAS,CAAC,EAAM,MAAM,QAAU,CAAC,EAAM,MAAM,OAAS,EAAM,MAAM,YAAc,EAAM,MACjH,kBAAW,EAAK,OAAO,KAAK,EAAM,GAAQ,KACnC,EAIT,GAAI,GAAO,CAAC,CAAE,GAAM,OAAS,EAAK,QAAQ,GAAQ,IAWlD,GARA,EAAK,MAAM,MAAO,EAAM,KAGpB,CAAC,EAAK,WAAa,GACrB,EAAK,KAAK,EAAM,IAAK,IAAM,KAAK,EAAM,KAIpC,EAAK,WAAa,EAAM,CAC1B,EAAK,MAAM,OAAQ,EAAM,KACzB,EAAM,MAAQ,EAAM,QAAU,EAC9B,EAAM,UAAY,EAClB,EAAM,WAAa,EAAO,IAAI,YAE9B,GAAI,GAAY,GAAM,MAAQ,EAAM,QAAU,IAAQ,KAAK,IAAI,EAAM,OACrE,EAAK,WAAW,EAAM,KAAO,WAAW,EAAK,OAAO,KAAK,EAAM,GAAQ,GAIzE,MAAI,GAAK,WAAa,CAAC,GACrB,GAAM,QAAU,GAChB,EAAM,OAAS,GACf,EAAM,MAAQ,EAAM,QAAU,EAC9B,EAAM,UAAY,EAClB,EAAK,YAAY,EAAM,KAGvB,EAAK,aAAa,EAAM,OAGxB,EAAO,gBAIL,CAAC,EAAK,WAAa,CAAC,GACtB,EAAK,KAAK,EAAM,IAAK,IAGhB,GAQT,YAAa,SAAS,EAAI,CACxB,GAAI,GAAO,KAEX,GAAI,EAAK,WAAW,GAAK,CAEvB,GAAI,MAAO,GAAK,WAAW,IAAQ,WACjC,aAAa,EAAK,WAAW,QACxB,CACL,GAAI,GAAQ,EAAK,WAAW,GAC5B,AAAI,GAAS,EAAM,OACjB,EAAM,MAAM,oBAAoB,QAAS,EAAK,WAAW,GAAK,IAIlE,MAAO,GAAK,WAAW,GAGzB,MAAO,IAQT,WAAY,SAAS,EAAI,CAIvB,OAHI,GAAO,KAGF,EAAE,EAAG,EAAE,EAAK,QAAQ,OAAQ,IACnC,GAAI,IAAO,EAAK,QAAQ,GAAG,IACzB,MAAO,GAAK,QAAQ,GAIxB,MAAO,OAOT,eAAgB,UAAW,CACzB,GAAI,GAAO,KAEX,EAAK,SAGL,OAAS,GAAE,EAAG,EAAE,EAAK,QAAQ,OAAQ,IACnC,GAAI,EAAK,QAAQ,GAAG,OAClB,MAAO,GAAK,QAAQ,GAAG,QAK3B,MAAO,IAAI,GAAM,IAMnB,OAAQ,UAAW,CACjB,GAAI,GAAO,KACP,EAAQ,EAAK,MACb,EAAM,EACN,EAAI,EAGR,GAAI,IAAK,QAAQ,OAAS,GAK1B,KAAK,EAAE,EAAG,EAAE,EAAK,QAAQ,OAAQ,IAC/B,AAAI,EAAK,QAAQ,GAAG,QAClB,IAKJ,IAAK,EAAE,EAAK,QAAQ,OAAS,EAAG,GAAG,EAAG,IAAK,CACzC,GAAI,GAAO,EACT,OAGF,AAAI,EAAK,QAAQ,GAAG,QAEd,GAAK,WAAa,EAAK,QAAQ,GAAG,OACpC,EAAK,QAAQ,GAAG,MAAM,WAAW,GAInC,EAAK,QAAQ,OAAO,EAAG,GACvB,QAUN,aAAc,SAAS,EAAI,CACzB,GAAI,GAAO,KAEX,GAAI,MAAO,IAAO,YAAa,CAE7B,OADI,GAAM,GACD,EAAE,EAAG,EAAE,EAAK,QAAQ,OAAQ,IACnC,EAAI,KAAK,EAAK,QAAQ,GAAG,KAG3B,MAAO,OAEP,OAAO,CAAC,IASZ,eAAgB,SAAS,EAAO,CAC9B,GAAI,GAAO,KAGX,SAAM,MAAM,aAAe,EAAO,IAAI,qBACtC,EAAM,MAAM,aAAa,OAAS,EAAM,EAAK,MAG7C,AAAI,EAAM,QACR,EAAM,MAAM,aAAa,QAAQ,EAAM,SAEvC,EAAM,MAAM,aAAa,QAAQ,EAAM,OAIzC,EAAM,MAAM,aAAa,KAAO,EAAM,MAClC,EAAM,OACR,GAAM,MAAM,aAAa,UAAY,EAAM,QAAU,EACrD,EAAM,MAAM,aAAa,QAAU,EAAM,OAAS,GAEpD,EAAM,MAAM,aAAa,aAAa,eAAe,EAAM,MAAO,EAAO,IAAI,aAEtE,GAQT,aAAc,SAAS,EAAM,CAC3B,GAAI,GAAO,KACP,EAAQ,EAAO,YAAc,EAAO,WAAW,OAAO,QAAQ,UAAY,EAE9E,GAAI,EAAO,gBAAkB,EAAK,cAChC,GAAK,aAAa,QAAU,KAC5B,EAAK,aAAa,WAAW,GACzB,GACF,GAAI,CAAE,EAAK,aAAa,OAAS,EAAO,qBAAwB,EAAN,EAG9D,SAAK,aAAe,KAEb,GAOT,YAAa,SAAS,EAAM,CAC1B,GAAI,GAAU,kBAAkB,KAAK,EAAO,YAAc,EAAO,WAAW,WAC5E,AAAK,GACH,GAAK,IAAM,4FAYjB,GAAI,GAAQ,SAAS,EAAM,CACzB,KAAK,QAAU,EACf,KAAK,QAEP,EAAM,UAAY,CAKhB,KAAM,UAAW,CACf,GAAI,GAAO,KACP,EAAS,EAAK,QAGlB,SAAK,OAAS,EAAO,OACrB,EAAK,MAAQ,EAAO,MACpB,EAAK,QAAU,EAAO,QACtB,EAAK,MAAQ,EAAO,MACpB,EAAK,MAAQ,EACb,EAAK,QAAU,GACf,EAAK,OAAS,GACd,EAAK,QAAU,YAGf,EAAK,IAAM,EAAE,EAAO,SAGpB,EAAO,QAAQ,KAAK,GAGpB,EAAK,SAEE,GAOT,OAAQ,UAAW,CACjB,GAAI,GAAO,KACP,EAAS,EAAK,QACd,EAAU,EAAO,QAAU,EAAK,QAAU,EAAK,QAAQ,OAAU,EAAI,EAAK,QAE9E,MAAI,GAAO,UAET,GAAK,MAAS,MAAO,GAAO,IAAI,YAAe,YAAe,EAAO,IAAI,iBAAmB,EAAO,IAAI,aACvG,EAAK,MAAM,KAAK,eAAe,EAAQ,EAAO,IAAI,aAClD,EAAK,MAAM,OAAS,GACpB,EAAK,MAAM,QAAQ,EAAO,aAChB,EAAO,SAEjB,GAAK,MAAQ,EAAO,oBAGpB,EAAK,SAAW,EAAK,eAAe,KAAK,GACzC,EAAK,MAAM,iBAAiB,QAAS,EAAK,SAAU,IAGpD,EAAK,QAAU,EAAK,cAAc,KAAK,GACvC,EAAK,MAAM,iBAAiB,EAAO,cAAe,EAAK,QAAS,IAIhE,EAAK,OAAS,EAAK,aAAa,KAAK,GACrC,EAAK,MAAM,iBAAiB,QAAS,EAAK,OAAQ,IAGlD,EAAK,MAAM,IAAM,EAAO,KACxB,EAAK,MAAM,QAAU,EAAO,WAAa,GAAO,OAAS,EAAO,SAChE,EAAK,MAAM,OAAS,EAAS,EAAO,SAGpC,EAAK,MAAM,QAGN,GAOT,MAAO,UAAW,CAChB,GAAI,GAAO,KACP,EAAS,EAAK,QAGlB,SAAK,OAAS,EAAO,OACrB,EAAK,MAAQ,EAAO,MACpB,EAAK,QAAU,EAAO,QACtB,EAAK,MAAQ,EAAO,MACpB,EAAK,MAAQ,EACb,EAAK,UAAY,EACjB,EAAK,QAAU,GACf,EAAK,OAAS,GACd,EAAK,QAAU,YAGf,EAAK,IAAM,EAAE,EAAO,SAEb,GAMT,eAAgB,UAAW,CACzB,GAAI,GAAO,KAGX,EAAK,QAAQ,MAAM,YAAa,EAAK,IAAK,EAAK,MAAM,MAAQ,EAAK,MAAM,MAAM,KAAO,GAGrF,EAAK,MAAM,oBAAoB,QAAS,EAAK,SAAU,KAMzD,cAAe,UAAW,CACxB,GAAI,GAAO,KACP,EAAS,EAAK,QAGlB,EAAO,UAAY,KAAK,KAAK,EAAK,MAAM,SAAW,IAAM,GAGrD,OAAO,KAAK,EAAO,SAAS,SAAW,GACzC,GAAO,QAAU,CAAC,UAAW,CAAC,EAAG,EAAO,UAAY,OAGlD,EAAO,SAAW,UACpB,GAAO,OAAS,SAChB,EAAO,MAAM,QACb,EAAO,cAIT,EAAK,MAAM,oBAAoB,EAAO,cAAe,EAAK,QAAS,KAMrE,aAAc,UAAW,CACvB,GAAI,GAAO,KACP,EAAS,EAAK,QAGlB,AAAI,EAAO,YAAc,UAGvB,GAAO,UAAY,KAAK,KAAK,EAAK,MAAM,SAAW,IAAM,GAGrD,EAAO,QAAQ,UAAU,KAAO,UAClC,GAAO,QAAQ,UAAU,GAAK,EAAO,UAAY,KAInD,EAAO,OAAO,IAIhB,EAAK,MAAM,oBAAoB,QAAS,EAAK,OAAQ,MAOzD,GAAI,GAAQ,GAMR,EAAa,SAAS,EAAM,CAC9B,GAAI,GAAM,EAAK,KAGf,GAAI,EAAM,GAAM,CAEd,EAAK,UAAY,EAAM,GAAK,SAG5B,EAAU,GAEV,OAGF,GAAI,sBAAsB,KAAK,GAAM,CAInC,OAFI,GAAO,KAAK,EAAI,MAAM,KAAK,IAC3B,EAAW,GAAI,YAAW,EAAK,QAC1B,EAAE,EAAG,EAAE,EAAK,OAAQ,EAAE,EAC7B,EAAS,GAAK,EAAK,WAAW,GAGhC,EAAgB,EAAS,OAAQ,OAC5B,CAEL,GAAI,GAAM,GAAI,gBACd,EAAI,KAAK,EAAK,KAAK,OAAQ,EAAK,IAChC,EAAI,gBAAkB,EAAK,KAAK,gBAChC,EAAI,aAAe,cAGf,EAAK,KAAK,SACZ,OAAO,KAAK,EAAK,KAAK,SAAS,QAAQ,SAAS,EAAK,CACnD,EAAI,iBAAiB,EAAK,EAAK,KAAK,QAAQ,MAIhD,EAAI,OAAS,UAAW,CAEtB,GAAI,GAAQ,GAAI,OAAS,IAAI,GAC7B,GAAI,IAAS,KAAO,IAAS,KAAO,IAAS,IAAK,CAChD,EAAK,MAAM,YAAa,KAAM,0CAA4C,EAAI,OAAS,KACvF,OAGF,EAAgB,EAAI,SAAU,IAEhC,EAAI,QAAU,UAAW,CAEvB,AAAI,EAAK,WACP,GAAK,OAAS,GACd,EAAK,UAAY,GACjB,EAAK,QAAU,GACf,MAAO,GAAM,GACb,EAAK,SAGT,EAAY,KAQZ,EAAc,SAAS,EAAK,CAC9B,GAAI,CACF,EAAI,aACG,EAAP,CACA,EAAI,YASJ,EAAkB,SAAS,EAAa,EAAM,CAEhD,GAAI,GAAQ,UAAW,CACrB,EAAK,MAAM,YAAa,KAAM,gCAI5B,EAAU,SAAS,EAAQ,CAC7B,AAAI,GAAU,EAAK,QAAQ,OAAS,EAClC,GAAM,EAAK,MAAQ,EACnB,EAAU,EAAM,IAEhB,KAKJ,AAAI,MAAO,UAAY,aAAe,EAAO,IAAI,gBAAgB,SAAW,EAC1E,EAAO,IAAI,gBAAgB,GAAa,KAAK,GAAS,MAAM,GAE5D,EAAO,IAAI,gBAAgB,EAAa,EAAS,IASjD,EAAY,SAAS,EAAM,EAAQ,CAErC,AAAI,GAAU,CAAC,EAAK,WAClB,GAAK,UAAY,EAAO,UAItB,OAAO,KAAK,EAAK,SAAS,SAAW,GACvC,GAAK,QAAU,CAAC,UAAW,CAAC,EAAG,EAAK,UAAY,OAI9C,EAAK,SAAW,UAClB,GAAK,OAAS,SACd,EAAK,MAAM,QACX,EAAK,eAOL,EAAoB,UAAW,CAEjC,GAAI,EAAC,EAAO,cAKZ,IAAI,CACF,AAAI,MAAO,eAAiB,YAC1B,EAAO,IAAM,GAAI,cACZ,AAAI,MAAO,qBAAuB,YACvC,EAAO,IAAM,GAAI,oBAEjB,EAAO,cAAgB,SAEnB,EAAN,CACA,EAAO,cAAgB,GAIzB,AAAK,EAAO,KACV,GAAO,cAAgB,IAKzB,GAAI,GAAO,iBAAiB,KAAK,EAAO,YAAc,EAAO,WAAW,UACpE,EAAa,EAAO,YAAc,EAAO,WAAW,WAAW,MAAM,0BACrE,EAAU,EAAa,SAAS,EAAW,GAAI,IAAM,KACzD,GAAI,GAAO,GAAW,EAAU,EAAG,CACjC,GAAI,GAAS,SAAS,KAAK,EAAO,YAAc,EAAO,WAAW,UAAU,eAC5E,AAAI,EAAO,YAAc,CAAC,GACxB,GAAO,cAAgB,IAK3B,AAAI,EAAO,eACT,GAAO,WAAc,MAAO,GAAO,IAAI,YAAe,YAAe,EAAO,IAAI,iBAAmB,EAAO,IAAI,aAC9G,EAAO,WAAW,KAAK,eAAe,EAAO,OAAS,EAAI,EAAO,QAAS,EAAO,IAAI,aACrF,EAAO,WAAW,QAAQ,EAAO,IAAI,cAIvC,EAAO,WAIT,AAAI,MAAO,SAAW,YAAc,OAAO,KACzC,OAAO,GAAI,UAAW,CACpB,MAAO,CACL,OAAQ,EACR,KAAM,KAMR,MAAO,KAAY,aACrB,IAAQ,OAAS,EACjB,GAAQ,KAAO,GAIjB,AAAI,MAAO,SAAW,YACpB,QAAO,aAAe,EACtB,OAAO,OAAS,EAChB,OAAO,KAAO,EACd,OAAO,MAAQ,GACN,MAAO,SAAW,aAC3B,QAAO,aAAe,EACtB,OAAO,OAAS,EAChB,OAAO,KAAO,EACd,OAAO,MAAQ,OAKnB,AAYA,AAAC,WAAW,CAEV,aAGA,aAAa,UAAU,KAAO,CAAC,EAAG,EAAG,GACrC,aAAa,UAAU,aAAe,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAWvD,aAAa,UAAU,OAAS,SAAS,EAAK,CAC5C,GAAI,GAAO,KAGX,GAAI,CAAC,EAAK,KAAO,CAAC,EAAK,IAAI,SACzB,MAAO,GAIT,OAAS,GAAE,EAAK,OAAO,OAAO,EAAG,GAAG,EAAG,IACrC,EAAK,OAAO,GAAG,OAAO,GAGxB,MAAO,IAWT,aAAa,UAAU,IAAM,SAAS,EAAG,EAAG,EAAG,CAC7C,GAAI,GAAO,KAGX,GAAI,CAAC,EAAK,KAAO,CAAC,EAAK,IAAI,SACzB,MAAO,GAOT,GAHA,EAAK,MAAO,IAAM,SAAY,EAAK,KAAK,GAAK,EAC7C,EAAK,MAAO,IAAM,SAAY,EAAK,KAAK,GAAK,EAEzC,MAAO,IAAM,SACf,EAAK,KAAO,CAAC,EAAG,EAAG,GAEnB,AAAI,MAAO,GAAK,IAAI,SAAS,WAAc,YACzC,GAAK,IAAI,SAAS,UAAU,gBAAgB,EAAK,KAAK,GAAI,OAAO,IAAI,YAAa,IAClF,EAAK,IAAI,SAAS,UAAU,gBAAgB,EAAK,KAAK,GAAI,OAAO,IAAI,YAAa,IAClF,EAAK,IAAI,SAAS,UAAU,gBAAgB,EAAK,KAAK,GAAI,OAAO,IAAI,YAAa,KAElF,EAAK,IAAI,SAAS,YAAY,EAAK,KAAK,GAAI,EAAK,KAAK,GAAI,EAAK,KAAK,QAGtE,OAAO,GAAK,KAGd,MAAO,IAiBT,aAAa,UAAU,YAAc,SAAS,EAAG,EAAG,EAAG,EAAK,EAAK,EAAK,CACpE,GAAI,GAAO,KAGX,GAAI,CAAC,EAAK,KAAO,CAAC,EAAK,IAAI,SACzB,MAAO,GAIT,GAAI,GAAK,EAAK,aAOd,GANA,EAAK,MAAO,IAAM,SAAY,EAAG,GAAK,EACtC,EAAK,MAAO,IAAM,SAAY,EAAG,GAAK,EACtC,EAAO,MAAO,IAAQ,SAAY,EAAG,GAAK,EAC1C,EAAO,MAAO,IAAQ,SAAY,EAAG,GAAK,EAC1C,EAAO,MAAO,IAAQ,SAAY,EAAG,GAAK,EAEtC,MAAO,IAAM,SACf,EAAK,aAAe,CAAC,EAAG,EAAG,EAAG,EAAK,EAAK,GAExC,AAAI,MAAO,GAAK,IAAI,SAAS,UAAa,YACxC,GAAK,IAAI,SAAS,SAAS,gBAAgB,EAAG,OAAO,IAAI,YAAa,IACtE,EAAK,IAAI,SAAS,SAAS,gBAAgB,EAAG,OAAO,IAAI,YAAa,IACtE,EAAK,IAAI,SAAS,SAAS,gBAAgB,EAAG,OAAO,IAAI,YAAa,IACtE,EAAK,IAAI,SAAS,IAAI,gBAAgB,EAAK,OAAO,IAAI,YAAa,IACnE,EAAK,IAAI,SAAS,IAAI,gBAAgB,EAAK,OAAO,IAAI,YAAa,IACnE,EAAK,IAAI,SAAS,IAAI,gBAAgB,EAAK,OAAO,IAAI,YAAa,KAEnE,EAAK,IAAI,SAAS,eAAe,EAAG,EAAG,EAAG,EAAK,EAAK,OAGtD,OAAO,GAGT,MAAO,IAWT,KAAK,UAAU,KAAQ,SAAS,EAAQ,CACtC,MAAO,UAAS,EAAG,CACjB,GAAI,GAAO,KAGX,SAAK,aAAe,EAAE,aAAe,CAAC,EAAG,EAAG,GAC5C,EAAK,QAAU,EAAE,QAAU,KAC3B,EAAK,KAAO,EAAE,KAAO,KACrB,EAAK,YAAc,CACjB,eAAgB,MAAO,GAAE,gBAAmB,YAAc,EAAE,eAAiB,IAC7E,eAAgB,MAAO,GAAE,gBAAmB,YAAc,EAAE,eAAiB,IAC7E,cAAe,MAAO,GAAE,eAAkB,YAAc,EAAE,cAAgB,EAC1E,cAAe,MAAO,GAAE,eAAkB,YAAc,EAAE,cAAgB,UAC1E,YAAa,MAAO,GAAE,aAAgB,YAAc,EAAE,YAAc,IACpE,aAAc,MAAO,GAAE,cAAiB,YAAc,EAAE,aAAe,OACvE,YAAa,MAAO,GAAE,aAAgB,YAAc,EAAE,YAAc,EACpE,cAAe,MAAO,GAAE,eAAkB,YAAc,EAAE,cAAgB,GAI5E,EAAK,UAAY,EAAE,SAAW,CAAC,CAAC,GAAI,EAAE,WAAa,GACnD,EAAK,OAAS,EAAE,MAAQ,CAAC,CAAC,GAAI,EAAE,QAAU,GAC1C,EAAK,eAAiB,EAAE,cAAgB,CAAC,CAAC,GAAI,EAAE,gBAAkB,GAG3D,EAAO,KAAK,KAAM,KAE1B,KAAK,UAAU,MAQlB,KAAK,UAAU,OAAS,SAAS,EAAK,EAAI,CACxC,GAAI,GAAO,KAGX,GAAI,CAAC,EAAK,UACR,MAAO,GAIT,GAAI,EAAK,SAAW,SAClB,SAAK,OAAO,KAAK,CACf,MAAO,SACP,OAAQ,UAAW,CACjB,EAAK,OAAO,EAAK,MAId,EAIT,GAAI,GAAc,MAAO,QAAO,IAAI,oBAAuB,YAAe,UAAY,SAGtF,GAAI,MAAO,IAAO,YAEhB,GAAI,MAAO,IAAQ,SACjB,EAAK,QAAU,EACf,EAAK,KAAO,CAAC,EAAK,EAAG,OAErB,OAAO,GAAK,QAMhB,OADI,GAAM,EAAK,aAAa,GACnB,EAAE,EAAG,EAAE,EAAI,OAAQ,IAAK,CAE/B,GAAI,GAAQ,EAAK,WAAW,EAAI,IAEhC,GAAI,EACF,GAAI,MAAO,IAAQ,SACjB,EAAM,QAAU,EAChB,EAAM,KAAO,CAAC,EAAK,EAAG,GAElB,EAAM,OAER,GAAM,YAAY,aAAe,aAG7B,EAAC,EAAM,SAAW,CAAC,EAAM,QAAQ,MACnC,EAAY,EAAO,GAGrB,AAAI,IAAe,UACjB,AAAI,MAAO,GAAM,QAAQ,WAAc,YACrC,GAAM,QAAQ,UAAU,eAAe,EAAK,OAAO,IAAI,aACvD,EAAM,QAAQ,UAAU,eAAe,EAAG,OAAO,IAAI,aACrD,EAAM,QAAQ,UAAU,eAAe,EAAG,OAAO,IAAI,cAErD,EAAM,QAAQ,YAAY,EAAK,EAAG,GAGpC,EAAM,QAAQ,IAAI,eAAe,EAAK,OAAO,IAAI,cAIrD,EAAK,MAAM,SAAU,EAAM,SAE3B,OAAO,GAAM,QAKnB,MAAO,IAWT,KAAK,UAAU,IAAM,SAAS,EAAG,EAAG,EAAG,EAAI,CACzC,GAAI,GAAO,KAGX,GAAI,CAAC,EAAK,UACR,MAAO,GAIT,GAAI,EAAK,SAAW,SAClB,SAAK,OAAO,KAAK,CACf,MAAO,MACP,OAAQ,UAAW,CACjB,EAAK,IAAI,EAAG,EAAG,EAAG,MAIf,EAQT,GAJA,EAAK,MAAO,IAAM,SAAY,EAAI,EAClC,EAAK,MAAO,IAAM,SAAY,IAAO,EAGjC,MAAO,IAAO,YAEhB,GAAI,MAAO,IAAM,SACf,EAAK,KAAO,CAAC,EAAG,EAAG,OAEnB,OAAO,GAAK,KAMhB,OADI,GAAM,EAAK,aAAa,GACnB,EAAE,EAAG,EAAE,EAAI,OAAQ,IAAK,CAE/B,GAAI,GAAQ,EAAK,WAAW,EAAI,IAEhC,GAAI,EACF,GAAI,MAAO,IAAM,SACf,EAAM,KAAO,CAAC,EAAG,EAAG,GAEhB,EAAM,OAEJ,GAAC,EAAM,SAAW,EAAM,QAAQ,MAClC,EAAY,EAAO,WAGrB,AAAI,MAAO,GAAM,QAAQ,WAAc,YACrC,GAAM,QAAQ,UAAU,eAAe,EAAG,OAAO,IAAI,aACrD,EAAM,QAAQ,UAAU,eAAe,EAAG,OAAO,IAAI,aACrD,EAAM,QAAQ,UAAU,eAAe,EAAG,OAAO,IAAI,cAErD,EAAM,QAAQ,YAAY,EAAG,EAAG,IAIpC,EAAK,MAAM,MAAO,EAAM,SAExB,OAAO,GAAM,KAKnB,MAAO,IAaT,KAAK,UAAU,YAAc,SAAS,EAAG,EAAG,EAAG,EAAI,CACjD,GAAI,GAAO,KAGX,GAAI,CAAC,EAAK,UACR,MAAO,GAIT,GAAI,EAAK,SAAW,SAClB,SAAK,OAAO,KAAK,CACf,MAAO,cACP,OAAQ,UAAW,CACjB,EAAK,YAAY,EAAG,EAAG,EAAG,MAIvB,EAQT,GAJA,EAAK,MAAO,IAAM,SAAY,EAAK,aAAa,GAAK,EACrD,EAAK,MAAO,IAAM,SAAY,EAAK,aAAa,GAAK,EAGjD,MAAO,IAAO,YAEhB,GAAI,MAAO,IAAM,SACf,EAAK,aAAe,CAAC,EAAG,EAAG,OAE3B,OAAO,GAAK,aAMhB,OADI,GAAM,EAAK,aAAa,GACnB,EAAE,EAAG,EAAE,EAAI,OAAQ,IAAK,CAE/B,GAAI,GAAQ,EAAK,WAAW,EAAI,IAEhC,GAAI,EACF,GAAI,MAAO,IAAM,SACf,EAAM,aAAe,CAAC,EAAG,EAAG,GAExB,EAAM,OAEH,GAAM,SAEJ,GAAM,MACT,GAAM,KAAO,EAAK,MAAQ,CAAC,EAAG,EAAG,MAGnC,EAAY,EAAO,YAGrB,AAAI,MAAO,GAAM,QAAQ,cAAiB,YACxC,GAAM,QAAQ,aAAa,eAAe,EAAG,OAAO,IAAI,aACxD,EAAM,QAAQ,aAAa,eAAe,EAAG,OAAO,IAAI,aACxD,EAAM,QAAQ,aAAa,eAAe,EAAG,OAAO,IAAI,cAExD,EAAM,QAAQ,eAAe,EAAG,EAAG,IAIvC,EAAK,MAAM,cAAe,EAAM,SAEhC,OAAO,GAAM,aAKnB,MAAO,IAiCT,KAAK,UAAU,WAAa,UAAW,CACrC,GAAI,GAAO,KACP,EAAO,UACP,EAAG,EAAI,EAGX,GAAI,CAAC,EAAK,UACR,MAAO,GAIT,GAAI,EAAK,SAAW,EAElB,MAAO,GAAK,YACP,GAAI,EAAK,SAAW,EACzB,GAAI,MAAO,GAAK,IAAO,SACrB,EAAI,EAAK,GAGL,MAAO,IAAO,aACX,GAAE,YACL,GAAE,WAAa,CACb,eAAgB,EAAE,eAClB,eAAgB,EAAE,eAClB,cAAe,EAAE,cACjB,cAAe,EAAE,cACjB,YAAa,EAAE,YACf,YAAa,EAAE,YACf,cAAe,EAAE,cACjB,aAAc,EAAE,eAIpB,EAAK,YAAc,CACjB,eAAgB,MAAO,GAAE,WAAW,gBAAmB,YAAc,EAAE,WAAW,eAAiB,EAAK,gBACxG,eAAgB,MAAO,GAAE,WAAW,gBAAmB,YAAc,EAAE,WAAW,eAAiB,EAAK,gBACxG,cAAe,MAAO,GAAE,WAAW,eAAkB,YAAc,EAAE,WAAW,cAAgB,EAAK,eACrG,cAAe,MAAO,GAAE,WAAW,eAAkB,YAAc,EAAE,WAAW,cAAgB,EAAK,eACrG,YAAa,MAAO,GAAE,WAAW,aAAgB,YAAc,EAAE,WAAW,YAAc,EAAK,aAC/F,YAAa,MAAO,GAAE,WAAW,aAAgB,YAAc,EAAE,WAAW,YAAc,EAAK,aAC/F,cAAe,MAAO,GAAE,WAAW,eAAkB,YAAc,EAAE,WAAW,cAAgB,EAAK,eACrG,aAAc,MAAO,GAAE,WAAW,cAAiB,YAAc,EAAE,WAAW,aAAe,EAAK,oBAKtG,UAAQ,EAAK,WAAW,SAAS,EAAK,GAAI,KACnC,EAAQ,EAAM,YAAc,EAAK,gBAErC,AAAI,GAAK,SAAW,GACzB,GAAI,EAAK,GACT,EAAK,SAAS,EAAK,GAAI,KAKzB,OADI,GAAM,EAAK,aAAa,GACnB,EAAE,EAAG,EAAE,EAAI,OAAQ,IAG1B,GAFA,EAAQ,EAAK,WAAW,EAAI,IAExB,EAAO,CAET,GAAI,GAAK,EAAM,YACf,EAAK,CACH,eAAgB,MAAO,GAAE,gBAAmB,YAAc,EAAE,eAAiB,EAAG,eAChF,eAAgB,MAAO,GAAE,gBAAmB,YAAc,EAAE,eAAiB,EAAG,eAChF,cAAe,MAAO,GAAE,eAAkB,YAAc,EAAE,cAAgB,EAAG,cAC7E,cAAe,MAAO,GAAE,eAAkB,YAAc,EAAE,cAAgB,EAAG,cAC7E,YAAa,MAAO,GAAE,aAAgB,YAAc,EAAE,YAAc,EAAG,YACvE,YAAa,MAAO,GAAE,aAAgB,YAAc,EAAE,YAAc,EAAG,YACvE,cAAe,MAAO,GAAE,eAAkB,YAAc,EAAE,cAAgB,EAAG,cAC7E,aAAc,MAAO,GAAE,cAAiB,YAAc,EAAE,aAAe,EAAG,cAI5E,GAAI,GAAS,EAAM,QACnB,AAAI,EACF,GAAO,eAAiB,EAAG,eAC3B,EAAO,eAAiB,EAAG,eAC3B,EAAO,cAAgB,EAAG,cAC1B,EAAO,cAAgB,EAAG,cAC1B,EAAO,YAAc,EAAG,YACxB,EAAO,YAAc,EAAG,YACxB,EAAO,cAAgB,EAAG,cAC1B,EAAO,aAAe,EAAG,cAGpB,GAAM,MACT,GAAM,KAAO,EAAK,MAAQ,CAAC,EAAG,EAAG,MAInC,EAAY,EAAO,YAKzB,MAAO,IAWT,MAAM,UAAU,KAAQ,SAAS,EAAQ,CACvC,MAAO,WAAW,CAChB,GAAI,GAAO,KACP,EAAS,EAAK,QAGlB,EAAK,aAAe,EAAO,aAC3B,EAAK,QAAU,EAAO,QACtB,EAAK,KAAO,EAAO,KACnB,EAAK,YAAc,EAAO,YAG1B,EAAO,KAAK,MAGZ,AAAI,EAAK,QACP,EAAO,OAAO,EAAK,SACV,EAAK,MACd,EAAO,IAAI,EAAK,KAAK,GAAI,EAAK,KAAK,GAAI,EAAK,KAAK,GAAI,EAAK,OAG7D,MAAM,UAAU,MAOnB,MAAM,UAAU,MAAS,SAAS,EAAQ,CACxC,MAAO,WAAW,CAChB,GAAI,GAAO,KACP,EAAS,EAAK,QAGlB,SAAK,aAAe,EAAO,aAC3B,EAAK,QAAU,EAAO,QACtB,EAAK,KAAO,EAAO,KACnB,EAAK,YAAc,EAAO,YAG1B,AAAI,EAAK,QACP,EAAO,OAAO,EAAK,SACd,AAAI,EAAK,KACd,EAAO,IAAI,EAAK,KAAK,GAAI,EAAK,KAAK,GAAI,EAAK,KAAK,GAAI,EAAK,KACjD,EAAK,SAEd,GAAK,QAAQ,WAAW,GACxB,EAAK,QAAU,OACf,EAAO,eAAe,IAIjB,EAAO,KAAK,QAEpB,MAAM,UAAU,OAUnB,GAAI,GAAc,SAAS,EAAO,EAAM,CACtC,EAAO,GAAQ,UAGf,AAAI,IAAS,UACX,GAAM,QAAU,OAAO,IAAI,eAC3B,EAAM,QAAQ,eAAiB,EAAM,YAAY,eACjD,EAAM,QAAQ,eAAiB,EAAM,YAAY,eACjD,EAAM,QAAQ,cAAgB,EAAM,YAAY,cAChD,EAAM,QAAQ,cAAgB,EAAM,YAAY,cAChD,EAAM,QAAQ,YAAc,EAAM,YAAY,YAC9C,EAAM,QAAQ,YAAc,EAAM,YAAY,YAC9C,EAAM,QAAQ,cAAgB,EAAM,YAAY,cAChD,EAAM,QAAQ,aAAe,EAAM,YAAY,aAE/C,AAAI,MAAO,GAAM,QAAQ,WAAc,YACrC,GAAM,QAAQ,UAAU,eAAe,EAAM,KAAK,GAAI,OAAO,IAAI,aACjE,EAAM,QAAQ,UAAU,eAAe,EAAM,KAAK,GAAI,OAAO,IAAI,aACjE,EAAM,QAAQ,UAAU,eAAe,EAAM,KAAK,GAAI,OAAO,IAAI,cAEjE,EAAM,QAAQ,YAAY,EAAM,KAAK,GAAI,EAAM,KAAK,GAAI,EAAM,KAAK,IAGrE,AAAI,MAAO,GAAM,QAAQ,cAAiB,YACxC,GAAM,QAAQ,aAAa,eAAe,EAAM,aAAa,GAAI,OAAO,IAAI,aAC5E,EAAM,QAAQ,aAAa,eAAe,EAAM,aAAa,GAAI,OAAO,IAAI,aAC5E,EAAM,QAAQ,aAAa,eAAe,EAAM,aAAa,GAAI,OAAO,IAAI,cAE5E,EAAM,QAAQ,eAAe,EAAM,aAAa,GAAI,EAAM,aAAa,GAAI,EAAM,aAAa,KAGhG,GAAM,QAAU,OAAO,IAAI,qBAC3B,EAAM,QAAQ,IAAI,eAAe,EAAM,QAAS,OAAO,IAAI,cAG7D,EAAM,QAAQ,QAAQ,EAAM,OAGvB,EAAM,SACT,EAAM,QAAQ,MAAM,EAAM,IAAK,IAAM,KAAK,EAAM,IAAK,WCrpG3D,8BAAO,QAQP,GAAG,kBAAkB,wBAAyB,CAE5C,QAAS,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,KACtC,CACD,KAAM,UAAW,CACf,KAAK,OAAS,GAAI,cAAa,GAC/B,KAAK,IAAM,GAAI,cAAa,GAC5B,KAAK,GAAK,GAAI,cAAa,IAE7B,OAAQ,UAAW,CACjB,AAAG,CAAC,KAAK,SACT,MAAK,OAAO,oBAAoB,KAAK,QACrC,KAAK,OAAO,WAAW,KAAK,KAC5B,KAAK,OAAO,MAAM,KAAK,IAEvB,OAAO,IAAI,KAAK,OAAO,GAAI,KAAK,OAAO,GAAI,KAAK,OAAO,IACvD,OAAO,YAAY,KAAK,IAAI,GAAI,KAAK,IAAI,GAAI,KAAK,IAAI,GACpD,KAAK,GAAG,GAAI,KAAK,GAAG,GAAI,KAAK,GAAG,UCzBtC,8BAAmB,QAYnB,GAAG,kBAAkB,sBAAuB,CAE1C,OAAQ,CAAC,KAAM,GAAG,KAAK,MAAO,QAAS,GAEvC,QAAS,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,IAEvC,KAAM,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,IAEpC,SAAU,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,IAExC,IAAK,CAAC,KAAM,GAAG,KAAK,OAAQ,QAAS,KACpC,CACD,MAAO,UAAW,CAChB,KAAK,MAAQ,GAAI,SAAK,CACpB,IAAK,CAAC,KAAK,KACX,KAAM,KAAK,KACX,OAAQ,KAAK,OACb,SAAU,KAAK,WAGjB,KAAK,kBAAoB,KACzB,KAAK,OAAS,GAAI,cAAa,GAC/B,KAAK,WAAa,GAAI,cAAa,GAEhC,KAAK,SAAW,KAAK,UACtB,MAAK,iBACL,KAAK,QAIP,GAAM,GAAW,IAAM,CACnB,KAAK,OACL,GAAM,GAAM,GAAG,cAAc,QAAQ,GACrC,AAAG,GAAO,GAAG,GAAG,cAAc,OAAO,EAAK,IAE9C,GAAG,cAAc,KAAK,IAGxB,OAAQ,UAAW,CACjB,AAAG,CAAC,KAAK,SAAW,CAAC,KAAK,mBAE1B,MAAK,OAAO,oBAAoB,KAAK,QAKlC,MAAK,IAAI,KAAK,WAAW,GAAK,KAAK,OAAO,IAAM,MAChD,KAAK,IAAI,KAAK,WAAW,GAAK,KAAK,OAAO,IAAM,MAChD,KAAK,IAAI,KAAK,WAAW,GAAK,KAAK,OAAO,IAAM,OAEjD,KAAK,mBAIT,eAAgB,UAAW,CACvB,KAAK,MAAM,IAAI,KAAK,OAAO,GAAI,KAAK,OAAO,GAAI,KAAK,OAAO,GACzD,KAAK,mBACP,KAAK,WAAW,IAAI,KAAK,SAG7B,KAAM,UAAW,CACf,AAAG,KAAK,mBAAmB,KAAK,MAAM,KAAK,KAAK,mBAChD,KAAK,kBAAoB,KAAK,MAAM,OACjC,KAAK,SAAS,KAAK,kBAGxB,KAAM,UAAW,CACf,AAAG,CAAC,KAAK,mBACT,MAAK,MAAM,KAAK,KAAK,mBACrB,KAAK,kBAAoB,WCjF7B,cAUA,GAAG,kBAAkB,gBAAiB,CAElC,IAAK,CAAC,KAAM,GAAG,KAAK,OAAQ,QAAS,IAErC,UAAW,CAAC,KAAM,GAAG,KAAK,IAAK,QAAS,IACzC,CACC,KAAM,UAAW,CACb,GAAI,GAAM,KAAK,OACf,GAAG,SAAS,KAAK,KAAK,IAAK,aACtB,KAAK,SAAS,EAAS,CACpB,GAAM,GAAM,EAAI,aAAa,OAAQ,KAAK,WAAW,SACrD,AAAG,EAAI,QAAU,uBACb,EAAI,YAAc,EACf,AAAG,EAAI,QAAU,wBACpB,EAAI,eAAiB,EAErB,QAAQ,MAAM,SAAU,EAAI,OAAQ,oCAEzC,MAAM,QAAQ,UC5B7B,8BAAmB,QAOnB,GAAG,kBAAkB,aAAc,CAE/B,UAAW,CAAC,KAAM,GAAG,KAAK,MAAO,QAAS,KAG1C,iBAAkB,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,IAGhD,iBAAkB,CAAC,KAAM,GAAG,KAAK,IAAK,QAAS,IAChD,CACC,KAAM,UAAW,CACb,KAAK,iBAAmB,EACxB,KAAK,iBAAmB,EACxB,KAAK,OAAS,GAAI,cAAa,GAC/B,KAAK,aAAe,GAAI,cAAa,GACrC,SAAS,iBAAiB,YAAa,SAAS,EAAG,CAC/C,AAAG,KAAK,QAAW,MAAK,WAAa,CAAC,KAAK,mBACvC,MAAK,UAAY,CAAC,KAAK,UAAU,EAAE,UAAU,IAC7C,KAAK,UAAY,CAAC,KAAK,UAAU,EAAE,UAAU,IAE7C,KAAK,kBAAoB,KAAK,UAC9B,KAAK,kBAAoB,KAAK,UAG9B,KAAK,iBAAmB,KAAK,IAAI,MAAO,KAAK,kBAC7C,KAAK,iBAAmB,KAAK,IAAI,OAAQ,KAAK,kBAE9C,KAAK,OAAO,oBAAoB,KAAK,QACrC,KAAK,OAAO,OAAO,oBAAoB,KAAK,cAC5C,QAAK,IAAI,KAAK,OAAQ,KAAK,OAAQ,KAAK,cAExC,KAAK,OAAO,2BACZ,KAAK,OAAO,mBAAmB,CAAC,EAAG,EAAG,GAAI,KAAK,kBAC/C,KAAK,OAAO,mBAAmB,CAAC,EAAG,EAAG,GAAI,KAAK,kBAC/C,KAAK,OAAO,UAAU,KAAK,UAEjC,KAAK,OAEJ,KAAK,kBACD,MAAK,kBAAoB,GACxB,GAAG,OAAO,iBAAiB,cAAe,SAAS,EAAG,CAClD,EAAE,kBACH,IAEP,GAAG,OAAO,iBAAiB,YAAa,SAAS,EAAG,CAChD,GAAG,EAAE,QAAU,KAAK,kBAChB,MAAK,UAAY,GACjB,SAAS,KAAK,MAAM,OAAS,WAC1B,EAAE,QAAU,GACX,SAAE,iBAEK,IAGjB,KAAK,OACP,GAAG,OAAO,iBAAiB,UAAW,SAAS,EAAG,CAC9C,AAAG,EAAE,QAAU,KAAK,kBAChB,MAAK,UAAY,GACjB,SAAS,KAAK,MAAM,OAAS,YAEnC,KAAK,SAGf,MAAO,UAAW,CACd,KAAK,UAAY,EACjB,KAAK,UAAY,OCxEzB,cAgBA,GAAG,kBAAkB,mBAAoB,CACrC,UAAW,CAAC,KAAM,GAAG,KAAK,MAAO,QAAS,KAC3C,CACC,MAAO,UAAW,CACd,AAAG,GAAG,UACF,KAAK,mBAAmB,GAAG,WAE3B,GAAG,iBAAiB,KAAK,KAAK,mBAAmB,KAAK,QAI9D,mBAAoB,SAAS,EAAG,CAC5B,GAAG,EAAE,qBAAuB,EAAE,sBAAuB,CACjD,GAAM,GAAI,GAAG,UAAU,oBACvB,EAAE,KAAK,CAAC,EAAG,IAAM,KAAK,IAAI,EAAI,KAAK,WAAa,KAAK,IAAI,EAAI,KAAK,YAClE,GAAG,UAAU,sBAAsB,EAAE,UC/BjD,8BAAyB,QAMzB,GAAG,kBAAkB,WAAY,CAE7B,4BAA6B,CAAE,KAAM,GAAG,KAAK,QAE7C,QAAS,CAAE,KAAM,GAAG,KAAK,QAEzB,IAAK,CAAE,KAAM,GAAG,KAAK,QAErB,QAAS,CAAE,KAAM,GAAG,KAAK,QAEzB,SAAU,CAAE,KAAM,GAAG,KAAK,QAE1B,WAAY,CAAC,KAAM,GAAG,KAAK,KAAM,OAAQ,CAAC,kBAAmB,OAAQ,QAAS,QAAS,QAAS,mBAEhG,WAAY,CAAE,KAAM,GAAG,KAAK,IAAK,QAAS,GAE1C,+BAAgC,CAAE,KAAM,GAAG,KAAK,MAAO,QAAS,KAEhE,iCAAkC,CAAE,KAAM,GAAG,KAAK,MAAO,QAAS,IAElE,iBAAkB,CAAE,KAAM,GAAG,KAAK,MAAO,QAAS,KAGlD,YAAa,CAAC,KAAM,GAAG,KAAK,KAAM,OAAQ,CAAC,YAAa,SAAU,QAAS,aAE3E,YAAa,CAAE,KAAM,GAAG,KAAK,MAAO,QAAS,MAC9C,CACC,KAAM,UAAW,CAOb,GANA,KAAK,oBAAsB,GAAI,cAAa,GAC5C,KAAK,SAAW,GAAI,cAAa,GACjC,KAAK,UAAY,GAAI,cAAa,GAClC,KAAK,0BAA4B,EAEjC,KAAK,MAAQ,KAAK,OAAO,aAAa,SACnC,CAAC,KAAK,MAAO,CACZ,QAAQ,MAAM,KAAK,OAAO,KAAM,4EAChC,OAEJ,GAAG,CAAC,KAAK,4BAA6B,CAClC,QAAQ,MAAM,KAAK,OAAO,KAAM,qEAChC,OAEJ,GAAG,CAAC,KAAK,QAAS,CACd,QAAQ,MAAM,KAAK,OAAO,KAAM,kDAChC,OAEJ,KAAK,aAAe,GAEjB,KAAK,KACJ,MAAK,kBAAoB,GACzB,GAAG,OAAO,iBAAiB,YAAa,KAAK,YAAY,KAAK,OAC9D,GAAG,OAAO,iBAAiB,UAAW,KAAK,UAAU,KAAK,QAG9D,KAAK,gBAAkB,GACvB,KAAK,QAAU,GAAI,cAAa,GAChC,KAAK,QAAU,GAEf,KAAK,eAAiB,EACtB,KAAK,kBAAoB,GAAI,cAAa,IAG9C,MAAO,UAAW,CACd,GAAG,KAAK,YAAc,EAAG,CACrB,GAAM,GAAY,KAAK,OAAO,aAAa,SAC3C,AAAI,EAKA,MAAK,WAAa,EAAU,WAC5B,KAAK,MAAQ,GALb,QAAQ,KAAK,+BAAgC,KAAK,OAAO,KACrD,4FAOR,MAAK,WAAa,CAAC,OAAQ,SAAS,KAAK,WAAa,GAG1D,GAAG,iBAAiB,KAAK,KAAK,cAAc,KAAK,OACjD,KAAK,4BAA4B,OAAS,IAI9C,gBAAiB,UAAW,CACxB,YAAK,QAAQ,WAAW,KAAK,UAC7B,KAAK,SAAS,GAAK,EACnB,QAAK,UAAU,KAAK,SAAU,KAAK,UAC5B,KAAK,MAAM,KAAK,SAAS,GAAI,KAAK,SAAS,KAGtD,OAAQ,UAAW,CACf,GAAI,GAAc,EAkBlB,GAjBG,KAAK,SAAW,KAAK,QAAQ,MAC5B,MAAK,kBAAkB,GAAK,KAAK,QAAQ,KAAK,GAC9C,KAAK,kBAAkB,GAAK,KAAK,QAAQ,KAAK,GAC9C,EAAc,KAAK,IAAI,KAAK,kBAAkB,IAAM,KAAK,IAAI,KAAK,kBAAkB,KAGxF,AAAG,CAAC,KAAK,cAAgB,KAAK,oBAAoB,IAAM,KAAK,gCAAkC,KAAK,kBAAkB,GAAK,KAAK,+BAC5H,KAAK,aAAe,GACd,KAAK,cAAgB,EAAc,KAAK,kCAC9C,MAAK,aAAe,GACpB,KAAK,4BAA4B,OAAS,GAEvC,KAAK,SACJ,KAAK,gBAAgB,KAAK,QAAS,KAAK,iBAI7C,KAAK,cAAgB,KAAK,6BAA+B,KAAK,MAAO,CACpE,GAAM,GAAS,KAAK,UACpB,SAAM,eAAe,EAAQ,KAAK,OAAO,gBAEzC,GAAM,GAAY,KAAK,OAAO,WAAW,KAAK,UAC1C,EAAS,KAAK,OAAU,KAAK,aAAe,EAC5C,GAAG,MAAM,QAAQ,EAAQ,EAAW,GAAK,KAAK,YAC9C,GAAG,QAAQ,QAAQ,EAAQ,EAAW,GAAK,KAAK,WAAY,KAAK,aACrE,AAAG,EAAO,SAAW,EACjB,MAAK,gBAAkB,GAEvB,KAAK,eAAiB,KAAK,GAAK,KAAK,MAAM,KAAK,kBAAkB,GAAI,KAAK,kBAAkB,IAC7F,KAAK,0BAA4B,KAAK,kBAAqB,MAAK,eAAiB,KAAK,IACtF,KAAK,4BAA4B,2BACjC,KAAK,4BAA4B,mBAAmB,CAAC,EAAG,EAAG,GAAI,KAAK,2BAEpE,KAAK,4BAA4B,UAAU,EAAO,UAAU,IAC5D,KAAK,4BAA4B,UAAU,CAAC,EAAK,KAAK,iBAAkB,IACxE,KAAK,4BAA4B,OAAS,GAE1C,KAAK,QAAQ,IAAI,EAAO,UAAU,IAClC,KAAK,QAAU,IAEX,MAAK,iBACL,MAAK,4BAA4B,OAAS,GAC1C,KAAK,gBAAkB,IAE3B,KAAK,QAAU,QAEhB,AAAG,MAAK,6BAA+B,KAAK,mBAC/C,KAAK,iBAGT,KAAK,oBAAoB,IAAI,KAAK,oBAEtC,cAAe,SAAS,EAAG,CAUvB,GARA,KAAK,QAAU,EACf,EAAE,iBAAiB,MAAO,UAAW,CAGjC,KAAK,QAAU,KACf,KAAK,QAAU,MACjB,KAAK,OAEJ,EAAE,cAAgB,EAAE,aAAa,OAChC,OAAQ,GAAI,EAAG,EAAI,EAAE,aAAa,OAAQ,IAAK,CAC3C,GAAI,GAAc,EAAE,aAAa,GAEjC,AAAG,EAAY,YAAc,KAAK,YAC9B,MAAK,QAAU,EAAY,SAKvC,EAAE,iBAAiB,qBAAsB,SAAS,EAAG,CACjD,GAAG,EAAE,OAAS,EAAE,MAAM,OAClB,OAAQ,GAAI,EAAG,EAAI,EAAE,MAAM,OAAQ,IAAK,CACpC,GAAI,GAAc,EAAE,MAAM,GAC1B,AAAG,EAAY,YAAc,KAAK,YAC9B,MAAK,QAAU,EAAY,WAIzC,KAAK,QAEX,YAAa,UAAW,CACpB,KAAK,kBAAoB,IAE7B,UAAW,UAAW,CAClB,KAAK,kBAAoB,GACzB,KAAK,4BAA4B,OAAS,GACvC,KAAK,SACJ,KAAK,gBAAgB,KAAK,QAAS,IAG3C,eAAgB,UAAW,CACvB,GAAI,GAAS,CAAC,EAAG,EAAG,GACpB,SAAM,eAAe,EAAQ,KAAK,IAAI,gBAEtC,GAAM,GAAY,KAAK,IAAI,WAAW,KAAK,UACvC,EAAS,KAAK,OAAU,KAAK,aAAe,EAC5C,GAAG,MAAM,QAAQ,EAAQ,EAAW,GAAK,KAAK,YAC9C,GAAG,QAAQ,QAAQ,EAAQ,EAAW,GAAK,KAAK,WAAY,KAAK,aACrE,AAAG,EAAO,SAAW,EACjB,MAAK,gBAAkB,GAEvB,EAAU,GAAK,EACf,QAAK,UAAU,EAAW,GAE1B,KAAK,0BAA4B,CAAC,KAAK,KAAK,EAAU,IAAI,KAAK,KAAK,EAAU,IAAM,KAAK,GAAG,GAE5F,KAAK,4BAA4B,2BACjC,KAAK,4BAA4B,mBAAmB,CAAC,EAAG,EAAG,GAAI,KAAK,2BACpE,KAAK,4BAA4B,UAAU,EAAO,UAAU,IAC5D,KAAK,4BAA4B,OAAS,GAE1C,KAAK,QAAU,EAAO,UAAU,GAChC,KAAK,QAAU,IAEX,MAAK,iBACL,MAAK,4BAA4B,OAAS,GAC1C,KAAK,gBAAkB,IAE3B,KAAK,QAAU,KAIvB,gBAAiB,SAAS,EAAa,EAAe,CAClD,KAAK,QAAQ,mBAAmB,CAAC,EAAG,EAAG,GAAI,GAE3C,GAAM,GAAI,KAAK,SACT,EAAK,KAAK,UAEhB,AAAG,KAAK,QACJ,MAAK,QAAQ,oBAAoB,GACjC,KAAK,SAAS,oBAAoB,GAElC,QAAK,IAAI,EAAG,EAAG,GACf,QAAK,MAAM,EAAG,EAAG,KAEjB,KAAK,IAAI,oBAAoB,GAGjC,KAAK,QAAQ,oBAAoB,GACjC,QAAK,IAAI,EAAG,EAAI,GAChB,EAAE,IAAM,EAAY,GACpB,EAAE,GAAK,EAAY,GACnB,EAAE,IAAM,EAAY,GAEpB,KAAK,QAAQ,oBAAoB,MAIzC,GAAG,kBAAkB,gBAAiB,CAClC,OAAQ,CAAE,KAAM,GAAG,KAAK,MAAO,QAAS,OACzC,CACC,KAAM,UAAW,CACb,GAAG,iBAAiB,KAAK,KAAK,iBAAiB,KAAK,OACpD,GAAG,eAAe,KAAK,KAAK,eAAe,KAAK,QAGpD,MAAO,UAAW,CACd,KAAK,OAAO,2BACZ,KAAK,OAAO,UAAU,CAAC,EAAK,KAAK,OAAQ,KAG7C,iBAAkB,UAAW,CACzB,AAAI,CAAC,QAAS,UAAU,SAAS,MAAM,WACnC,KAAK,OAAO,4BAIpB,eAAgB,UAAW,CACvB,AAAI,CAAC,QAAS,UAAU,SAAS,MAAM,WACnC,MAAK,OAAO,2BACZ,KAAK,OAAO,UAAU,CAAC,EAAK,KAAK,OAAQ,UC9QrD,gBAOM,GAPN,YAAyB,QAEzB,KAAK,MAAQ,SAAS,EAAG,EAAG,EAAG,CAC3B,MAAO,MAAK,IAAI,EAAG,KAAK,IAAI,EAAG,KAInC,AAAM,GAAc,UAAW,CAC3B,GAAI,GAAK,GAAI,cAAa,GACtB,EAAK,GAAI,cAAa,GACtB,EAAK,GAAI,cAAa,GACtB,EAAK,GAAI,cAAa,GACtB,EAAK,GAAI,cAAa,GAEtB,EAAQ,GAAI,cAAa,GACzB,EAAQ,GAAI,cAAa,GAEzB,EAAO,GAAI,cAAa,GAExB,EAAK,GAAI,cAAa,GACtB,EAAK,GAAI,cAAa,GACtB,EAAK,GAAI,cAAa,GAE1B,MAAO,UAAS,EAAM,EAAM,EAAG,EAAG,EAAG,EAAG,EAAK,EAAM,EAAM,EAAQ,CAC7D,OAAK,IAAI,EAAI,EAAG,GAChB,GAAM,GAAM,OAAK,OAAO,GACxB,OAAK,IAAI,EAAI,EAAG,GAChB,GAAM,GAAM,OAAK,OAAO,GACxB,OAAK,IAAI,EAAI,EAAG,GAChB,GAAM,GAAM,KAAK,MAAM,OAAK,OAAO,GAAK,EAAK,EAAM,EAAM,GAEzD,OAAK,IAAI,EAAI,EAAG,GAChB,OAAK,IAAI,EAAI,EAAG,GAChB,OAAK,IAAI,EAAI,EAAG,GAEhB,OAAK,UAAU,EAAI,GACnB,OAAK,UAAU,EAAI,GACnB,OAAK,UAAU,EAAI,GACnB,OAAK,UAAU,EAAI,GACnB,OAAK,UAAU,EAAI,GAEnB,GAAM,GAAU,KAAK,KAAK,KAAK,MAAM,OAAK,IAAI,EAAI,GAAK,GAAI,IACrD,EAAU,KAAK,KAAK,KAAK,MAAM,OAAK,IAAI,EAAI,GAAK,GAAI,IACrD,EAAU,KAAK,KAAK,KAAK,MAAM,OAAK,IAAI,EAAI,GAAK,GAAI,IAErD,EAAU,KAAK,KAAK,KAAK,MAAO,GAAI,EAAI,EAAI,EAAI,EAAI,GAAQ,IAAG,EAAI,GAAM,GAAI,IAC7E,EAAU,KAAK,KAAK,KAAK,MAAO,GAAI,EAAI,EAAI,EAAI,EAAI,GAAQ,IAAG,EAAI,GAAM,GAAI,IAEnF,OAAK,IAAI,EAAI,EAAG,GAChB,OAAK,IAAI,EAAI,EAAG,GAChB,OAAK,IAAI,EAAI,EAAG,GAEhB,OAAK,MAAM,EAAO,EAAI,GACtB,OAAK,MAAM,EAAO,EAAI,GAEtB,AAAG,EACC,QAAK,IAAI,EAAI,EAAQ,GACrB,OAAK,cAAc,EAAI,CAAC,EAAG,EAAG,IAAK,IAEnC,OAAK,IAAI,EAAI,EAAG,GAGpB,GAAM,GAAI,OAAK,OAAO,GACtB,AAAG,GAAK,EACJ,EAAM,IAAI,CAAC,EAAG,EAAG,IAEjB,OAAK,MAAM,EAAO,EAAO,EAAE,GAE/B,OAAK,UAAU,EAAO,GAEtB,OAAK,UAAU,EAAM,GACrB,OAAK,aAAa,EAAI,OAAK,cAAc,EAAM,EAAO,GAAQ,EAAU,GACxE,OAAK,aAAa,EAAI,OAAK,cAAc,EAAM,EAAO,GAAQ,GAC9D,OAAK,IAAI,EAAM,EAAM,OAAK,IAAI,EAAM,EAAI,IACxC,OAAK,UAAU,EAAM,GAErB,OAAK,UAAU,EAAM,GACrB,OAAK,aAAa,EAAI,OAAK,cAAc,EAAM,EAAO,GAAQ,EAAU,GACxE,OAAK,IAAI,EAAM,EAAM,GACrB,OAAK,UAAU,EAAM,OAO7B,GAAG,kBAAkB,sBAAuB,CAExC,KAAM,CAAC,KAAM,GAAG,KAAK,QAErB,OAAQ,CAAC,KAAM,GAAG,KAAK,QAEvB,IAAK,CAAC,KAAM,GAAG,KAAK,QAEpB,OAAQ,CAAC,KAAM,GAAG,KAAK,QAEvB,OAAQ,CAAC,KAAM,GAAG,KAAK,SACxB,CACC,KAAM,UAAW,CACb,KAAK,IAAM,GAAI,cAAa,EAAE,GAC9B,KAAK,EAAI,CACL,KAAK,IAAI,SAAS,EAAG,GACrB,KAAK,IAAI,SAAS,EAAG,GACrB,KAAK,IAAI,SAAS,EAAG,GACrB,KAAK,IAAI,SAAS,EAAG,IACrB,KAAK,IAAI,SAAS,GAAI,IACtB,KAAK,IAAI,SAAS,GAAI,IACtB,KAAK,IAAI,SAAS,GAAI,MAE9B,OAAQ,UAAW,CACf,GAAM,GAAI,KAAK,EACf,KAAK,KAAK,oBAAoB,EAAE,IAChC,KAAK,OAAO,oBAAoB,EAAE,IAClC,KAAK,IAAI,oBAAoB,EAAE,IAC/B,KAAK,OAAO,oBAAoB,EAAE,IAClC,GAAM,GAAM,EAAE,GACR,EAAM,EAAE,GACd,KAAK,KAAK,oBAAoB,GAC9B,KAAK,OAAO,oBAAoB,GAC7B,KAAK,QAAQ,KAAK,OAAO,oBAAoB,EAAE,IAElD,GAAW,KAAK,KAAK,eAAgB,KAAK,OAAO,eAC7C,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,IACxB,KAAK,KAAK,eAAe,SAAS,EAAG,GACrC,KAAK,OAAO,eAAe,SAAS,EAAG,GACvC,KAAK,OAAS,EAAE,GAAK,MAGzB,KAAK,KAAK,oBAAoB,GAC9B,KAAK,OAAO,oBAAoB,GAEhC,KAAK,KAAK,WACV,KAAK,OAAO,gBCpIpB,cAaA,GAAG,kBAAkB,gBAAiB,CAElC,IAAK,CAAC,KAAM,GAAG,KAAK,OAAQ,QAAS,IAErC,SAAU,CAAC,KAAM,GAAG,KAAK,UAEzB,KAAM,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,IAEpC,SAAU,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,IAExC,MAAO,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,KACtC,CACC,KAAM,UAAW,CACb,GAAG,CAAC,KAAK,SAAU,CACf,QAAQ,MAAM,4CACd,OAEJ,KAAK,OAAS,GACd,KAAK,qBAAuB,GAE5B,KAAK,MAAQ,SAAS,cAAc,SACpC,KAAK,MAAM,IAAM,KAAK,IACtB,KAAK,MAAM,YAAc,YACzB,KAAK,MAAM,SAAW,KAAK,SAC3B,KAAK,MAAM,KAAO,KAAK,KACvB,KAAK,MAAM,MAAQ,KAAK,MACxB,KAAK,MAAM,iBAAiB,UAAW,UAAW,CAAE,KAAK,OAAS,IAAQ,KAAK,OAC/E,KAAK,MAAM,QAGf,aAAc,UAAW,CACrB,GAAM,GAAM,KAAK,SACjB,KAAK,QAAU,GAAI,IAAG,QAAQ,KAAK,OACnC,AAAG,EAAI,QAAU,uBACb,EAAI,YAAc,KAAK,QACpB,AAAG,EAAI,QAAU,wBACpB,EAAI,eAAiB,KAAK,QAE1B,QAAQ,MAAM,SAAU,EAAI,OAAQ,kCAGxC,AAAG,6BAA+B,MAAK,MACnC,KAAK,MAAM,0BAA0B,KAAK,YAAY,KAAK,OAE3D,KAAK,MAAM,iBAAiB,aAAc,UAAW,CAAE,KAAK,qBAAuB,IAAQ,KAAK,QAIxG,OAAQ,SAAS,EAAI,CACjB,AAAG,KAAK,QAAU,KAAK,sBACnB,CAAG,KAAK,QACJ,KAAK,QAAQ,SAGb,KAAK,eAET,KAAK,qBAAuB,KAIpC,YAAa,UAAW,CACpB,KAAK,qBAAuB,GAC5B,KAAK,MAAM,0BAA0B,KAAK,YAAY,KAAK,YC3EnE,cAMA,GAAG,kBAAkB,wBAAyB,CAE1C,mBAAoB,CAAC,KAAM,GAAG,KAAK,KAAM,OAAQ,CAAC,QAAS,aAAc,QAAS,SAElF,eAAgB,CAAC,KAAM,GAAG,KAAK,KAAM,QAAS,KAC/C,CACC,MAAO,UAAW,CACd,KAAK,WAAa,GAClB,KAAK,cAAc,KAAK,QAGxB,KAAK,iBAEL,GAAG,iBAAiB,KAAK,KAAK,iBAAiB,KAAK,OACpD,GAAG,eAAe,KAAK,KAAK,eAAe,KAAK,QAGpD,cAAe,SAAS,EAAK,CACzB,GAAM,GAAQ,EAAI,gBAAgB,OAAO,GAAK,EAAE,MAAQ,yBAGxD,GAFA,KAAK,WAAa,KAAK,WAAW,OAAO,GAEtC,KAAK,eAAgB,CACpB,GAAI,GAAW,EAAI,SACnB,OAAQ,GAAI,EAAG,EAAI,EAAS,OAAQ,EAAE,EAClC,KAAK,cAAc,EAAS,MAKxC,oBAAqB,SAAS,EAAQ,CAClC,GAAM,GAAQ,KAAK,WACnB,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAE,EAChC,EAAM,GAAG,OAAS,GAI1B,iBAAkB,UAAW,CACzB,AAAG,CAAC,KAAK,QACT,KAAK,oBAAoB,KAAK,oBAAsB,IAGxD,eAAgB,UAAW,CACvB,AAAG,CAAC,KAAK,QACT,KAAK,oBAAoB,KAAK,oBAAsB,QCjD5D,8BAAmB,QAInB,GAAG,kBAAkB,gBAAiB,CAElC,MAAO,CAAE,KAAM,GAAG,KAAK,MAAO,QAAS,IAEvC,WAAY,CAAE,KAAM,GAAG,KAAK,SAC7B,CACC,KAAM,UAAW,CACb,KAAK,GAAK,GACV,KAAK,MAAQ,GACb,KAAK,KAAO,GACZ,KAAK,KAAO,GAEZ,OAAO,iBAAiB,UAAW,KAAK,MAAM,KAAK,OACnD,OAAO,iBAAiB,QAAS,KAAK,QAAQ,KAAK,QAGvD,MAAO,UAAW,CACd,KAAK,WAAa,KAAK,YAAc,KAAK,QAG9C,OAAQ,UAAW,CACf,GAAI,GAAY,CAAC,EAAG,EAAG,GAEvB,AAAI,KAAK,IAAI,GAAU,IAAM,GACzB,KAAK,MAAM,GAAU,IAAM,GAC3B,KAAK,MAAM,GAAU,IAAM,GAC3B,KAAK,OAAO,GAAU,IAAM,GAEhC,QAAK,UAAU,EAAW,GAC1B,EAAU,IAAM,KAAK,MACrB,EAAU,IAAM,KAAK,MACrB,QAAK,cAAc,EAAW,EAAW,KAAK,WAAW,gBACzD,KAAK,OAAO,UAAU,IAG1B,MAAO,SAAS,EAAG,CACf,AAAI,EAAE,UAAY,IAAe,EAAE,UAAY,IAAc,EAAE,UAAY,GACvE,KAAK,GAAK,GACP,AAAI,EAAE,UAAY,IAAkB,EAAE,UAAY,GACrD,KAAK,MAAQ,GACV,AAAI,EAAE,UAAY,IAAiB,EAAE,UAAY,GACpD,KAAK,KAAO,GACL,GAAE,UAAY,IAAiB,EAAE,UAAY,IAAc,EAAE,UAAY,KAChF,MAAK,KAAO,KAIpB,QAAS,SAAS,EAAG,CACjB,AAAI,EAAE,UAAY,IAAe,EAAE,UAAY,IAAc,EAAE,UAAY,GACvE,KAAK,GAAK,GACP,AAAI,EAAE,UAAY,IAAkB,EAAE,UAAY,GACrD,KAAK,MAAQ,GACV,AAAI,EAAE,UAAY,IAAiB,EAAE,UAAY,GACpD,KAAK,KAAO,GACL,GAAE,UAAY,IAAiB,EAAE,UAAY,IAAc,EAAE,UAAY,KAChF,MAAK,KAAO,SC3DxB,8BAAyB,QASzB,GAAG,kBAAkB,gBAAiB,CAElC,KAAM,CAAC,KAAM,GAAG,KAAK,OAAQ,QAAS,wCAEtC,KAAM,CAAC,KAAM,GAAG,KAAK,SACtB,CACC,KAAM,UAAW,CAQb,KAAK,KAAO,KAAK,OAAO,aAAa,OAAQ,GAE7C,KAAK,UAAY,KAAK,OAAO,aAAa,aAC1C,KAAK,UAAU,SAAW,GAAG,SAAS,IACtC,KAAK,UAAU,MAAQ,EAEvB,KAAK,aAAe,KAAK,OAAO,aAAa,iBAE7C,KAAK,sBAAwB,EAC7B,KAAK,gBAAkB,EAGvB,KAAK,kBAAoB,IAE7B,MAAO,UAAW,CACd,WAAW,QAAQ,KAAK,MAAM,KAAK,SAAS,EAAI,CAC5C,KAAK,GAAK,EACV,GAAG,SAAS,KAAK,EAAG,MAAO,IACtB,KAAK,SAAS,EAAS,CACpB,GAAM,GAAQ,GAAG,QAAQ,EAAQ,aAEjC,KAAK,UAAU,QAAU,CAAC,EAAM,MAAM,EAAM,OAAQ,EAAK,IACzD,KAAK,OAAO,MAAM,CAAC,EAAM,MAAM,EAAM,OAAQ,EAAK,IAClD,AAAG,KAAK,KAAK,SAAS,QAAU,iBAC5B,KAAK,KAAK,SAAS,eAAiB,EAEpC,KAAK,KAAK,SAAS,YAAc,GAEvC,KAAK,OACN,MAAM,QAAQ,MACrB,KAAK,OAEP,KAAK,aAAa,iBAAiB,KAAK,MAAM,KAAK,QAEvD,OAAQ,SAAS,EAAI,CAIjB,GAHA,KAAK,uBAAyB,EAG3B,KAAK,sBAAwB,GAAK,CACjC,GAAM,GAAY,KAAK,YAEvB,AAAG,GACC,MAAK,iBAAmB,KAAK,uBAEjC,KAAK,sBAAwB,EAEzB,EAAC,GAAa,KAAK,gBAAkB,GACrC,KAAK,gBAAkB,KAAK,oBAE5B,YAAW,WAAW,OAAQ,KAAK,gBAAiB,KAAK,GAAG,KAAM,KAAK,GAAG,MAC1E,KAAK,gBAAkB,KAKnC,UAAW,UAAW,CAElB,GAAM,GAAO,GAAG,MAAM,YAAY,GAClC,GAAG,CAAC,GAAQ,CAAC,EAAK,OACd,eAAQ,KAAK,6DACN,GAGX,GAAM,GAAY,EAAK,OAAO,eACxB,EAAY,CAAC,EAAG,EAAG,GACzB,SAAM,eAAe,EAAW,GAChC,GAAM,GAAS,CAAC,EAAG,EAAG,IACtB,QAAK,cAAc,EAAQ,EAAQ,GAEnC,GAAI,GAAO,GAAG,MAAM,QAAQ,EAAW,EAAQ,GAC/C,OAAQ,GAAI,EAAG,EAAI,EAAK,SAAU,EAAE,EAEhC,GAAG,AADS,EAAK,QAAQ,GAClB,UAAY,KAAK,OAAO,SAC3B,MAAO,GAIf,MAAO,IAGX,MAAO,UAAW,CAEd,GAAM,GAAI,OAAO,cACjB,GAAG,EAAG,CAGF,EAAE,MAAM,KAAK,KAAK,MAAM,KAAK,OAC7B,OAGJ,WAAW,WAAW,QAAS,EAAG,KAAK,GAAG,KAAM,KAAK,GAAG,MACrD,KAAK,GAAG,KACP,OAAO,KAAK,KAAK,GAAG,IAAK,eClHrC,OAAO,SAAW,KAElB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA;;;;;;;;;;;;;;;;;;;;;;ACpjtLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdttjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjnzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrhhtzfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACphlijpntxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnvhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbztGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACflDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACztTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChlhMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrlxtjlprhlDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACljhjlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChrMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACltFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjzzjXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClphxypQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChhtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACthMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrjrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACr
    "names": []
}